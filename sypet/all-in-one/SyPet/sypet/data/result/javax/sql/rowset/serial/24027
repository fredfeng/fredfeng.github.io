{"id":24027,"className":"javax.sql.rowset.serial.SerialClob","methodName":"setString","signature":"\u003cjavax.sql.rowset.serial.SerialClob: int setString(long,java.lang.String,int,int)\u003e","javadoc":"/** \n * Writes \u003ccode\u003elen\u003c/code\u003e characters of \u003ccode\u003estr\u003c/code\u003e, starting at character \u003ccode\u003eoffset\u003c/code\u003e, to the \u003ccode\u003eCLOB\u003c/code\u003e value that this \u003ccode\u003eClob\u003c/code\u003e represents.\n * @param pos the position at which to start writing to the \u003ccode\u003eCLOB\u003c/code\u003evalue that this \u003ccode\u003eSerialClob\u003c/code\u003e object represents; the first position is \u003ccode\u003e1\u003c/code\u003e; must not be less than \u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \u003ccode\u003eSerialClob\u003c/code\u003e object\n * @param str the string to be written to the \u003ccode\u003eCLOB\u003c/code\u003evalue that this \u003ccode\u003eClob\u003c/code\u003e object represents\n * @param offset the offset into \u003ccode\u003estr\u003c/code\u003e to start readingthe characters to be written\n * @param length the number of characters to be written\n * @return the number of characters written\n * @throws SerialException if there is an error accessing the\u003ccode\u003eCLOB\u003c/code\u003e value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the \u003ccode\u003eSerialClob\u003c/code\u003e length; or the combined values of the length and offset is greater than the Clob buffer\n */\n","tf":{"freq":{"greater":3,"clob":6,"object":3,"must":1,"pos":1,"buffer":1,"readingth":1,"invalid":2,"written":5,"combin":1,"write":2,"length":4,"valu":6,"offset":5,"less":1,"except":1,"error":1,"repres":3,"charact":5,"number":3,"len":1,"access":1,"str":3,"start":3,"string":2,"posit":3,"serial":4,"first":1},"maxFreq":6,"totalTerms":73},"loc":30}