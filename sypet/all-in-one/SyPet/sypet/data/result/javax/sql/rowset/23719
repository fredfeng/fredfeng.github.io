{"id":23719,"className":"javax.sql.rowset.CachedRowSet","methodName":"setShowDeleted","signature":"\u003cjavax.sql.rowset.CachedRowSet: void setShowDeleted(boolean)\u003e","javadoc":"/** \n * Sets the property \u003ccode\u003eshowDeleted\u003c/code\u003e to the given \u003ccode\u003eboolean\u003c/code\u003e value, which determines whether rows marked for deletion appear in the set of current rows. If the value is set to \u003ccode\u003etrue\u003c/code\u003e, deleted rows are immediately visible with the set of current rows. If the value is set to \u003ccode\u003efalse\u003c/code\u003e, the deleted rows are set as invisible with the current set of rows. \u003cP\u003e Standard rowset implementations may choose to restrict this behavior due to security considerations or to better fit certain deployment scenarios. This is left as implementations defined and does not represent standard behavior.\n * @param b \u003ccode\u003etrue\u003c/code\u003e if deleted rows should be shown;\u003ccode\u003efalse\u003c/code\u003e otherwise\n * @exception SQLException if a rowset implementation is unable toto reset whether deleted rows should be visible\n * @see #getShowDeleted\n */\n","tf":{"freq":{"otherwis":1,"fals":2,"defin":1,"appear":1,"delet":8,"visibl":2,"behavior":2,"lexcept":1,"deploy":1,"show":3,"whether":2,"fit":1,"toto":1,"given":1,"consider":1,"current":3,"reset":1,"choos":1,"left":1,"valu":3,"immedi":1,"except":1,"may":1,"standard":2,"repres":1,"invis":1,"rowset":2,"shown":1,"true":2,"mark":1,"row":8,"restrict":1,"unabl":1,"scenario":1,"secur":1,"better":1,"determin":1,"due":1,"certain":1,"properti":1},"maxFreq":8,"totalTerms":67},"loc":0}