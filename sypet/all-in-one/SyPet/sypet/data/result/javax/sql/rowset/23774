{"id":23774,"className":"javax.sql.rowset.BaseRowSet","methodName":"getTypeMap","signature":"\u003cjavax.sql.rowset.BaseRowSet: java.util.Map\u003cjava.lang.String,java.lang.Class\u003c?\u003e\u003e getTypeMap()\u003e","javadoc":"/** \n * Retrieves the type map associated with the \u003ccode\u003eConnection\u003c/code\u003e object for this \u003ccode\u003eRowSet\u003c/code\u003e object. \u003cP\u003e Drivers that support the JDBC 3.0 API will create \u003ccode\u003eConnection\u003c/code\u003e objects with an associated type map. This type map, which is initially empty, can contain one or more fully-qualified SQL names and \u003ccode\u003eClass\u003c/code\u003e objects indicating the class to which the named SQL value will be mapped. The type mapping specified in the connection\u0027s type map is used for custom type mapping when no other type map supersedes it. \u003cp\u003e If a type map is explicitly supplied to a method that can perform custom mapping, that type map supersedes the connection\u0027s type map.\n * @return the \u003ccode\u003ejava.util.Map\u003c/code\u003e object that is the type mapfor this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s connection\n */\n","tf":{"freq":{"connect":5,"one":1,"supersed":2,"use":1,"perform":1,"object":6,"type":12,"specifi":1,"mapfor":1,"indic":1,"associ":2,"name":2,"map":14,"driver":1,"valu":1,"initi":1,"custom":2,"support":1,"creat":1,"suppli":1,"fulli":1,"row":2,"empti":1,"explicit":1,"retriev":1,"contain":1,"will":2,"java":1,"method":1,"util":1,"qualifi":1},"maxFreq":14,"totalTerms":70},"loc":3}