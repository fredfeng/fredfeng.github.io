{"id":23692,"className":"javax.sql.rowset.CachedRowSet","methodName":"restoreOriginal","signature":"\u003cjavax.sql.rowset.CachedRowSet: void restoreOriginal()\u003e","javadoc":"/** \n * Restores this \u003ccode\u003eCachedRowSet\u003c/code\u003e object to its original value, that is, its value before the last set of changes. If there have been no changes to the rowset or only one set of changes, the original value is the value with which this \u003ccode\u003eCachedRowSet\u003c/code\u003e object was populated; otherwise, the original value is the value it had immediately before its current value. \u003cP\u003e When this method is called, a \u003ccode\u003eCachedRowSet\u003c/code\u003e implementation must ensure that all updates, inserts, and deletes to the current rowset instance are replaced by the previous values. In addition, the cursor should be reset to the first row and a \u003ccode\u003erowSetChanged\u003c/code\u003e event should be fired to notify all registered listeners.\n * @throws SQLException if an error occurs rolling back the current value ofthis \u003ccode\u003eCachedRowSet\u003c/code\u003e object to its previous value\n * @see javax.sql.RowSetListener#rowSetChanged\n */\n","tf":{"freq":{"otherwis":1,"call":1,"cursor":1,"last":1,"delet":1,"one":1,"lexcept":1,"object":3,"must":1,"ensur":1,"roll":1,"popul":1,"javax":1,"event":1,"current":3,"regist":1,"reset":1,"valu":10,"immedi":1,"listen":2,"notifi":1,"addit":1,"error":1,"previous":2,"rowset":2,"origin":4,"back":1,"cach":4,"fire":1,"row":8,"instanc":1,"ofthi":1,"sql":1,"updat":1,"replac":1,"restor":2,"method":1,"chang":5,"insert":1,"first":1,"occur":1},"maxFreq":10,"totalTerms":75},"loc":0}