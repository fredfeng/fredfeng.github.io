{"id":23667,"className":"javax.sql.rowset.Joinable","methodName":"unsetMatchColumn","signature":"\u003cjavax.sql.rowset.Joinable: void unsetMatchColumn(int)\u003e","javadoc":"/** \n * Unsets the designated column as the match column for this \u003ccode\u003eRowSet\u003c/code\u003e object. \u003cP\u003e \u003ccode\u003eRowSet\u003c/code\u003e objects that implement the \u003ccode\u003eJoinable\u003c/code\u003e interface must ensure that a key-like constraint continues to be enforced until the method \u003ccode\u003eCachedRowSet.unsetKeyColumns\u003c/code\u003e has been called on the designated column.\n * @param columnIdx an \u003ccode\u003eint\u003c/code\u003e that identifies the index of the columnthat is to be unset as a match column\n * @throws SQLException if an invalid column index is designated or ifthe designated column was not previously set as a match column\n * @see #setMatchColumn\n */\n","tf":{"freq":{"call":1,"lexcept":1,"constraint":1,"identifi":1,"object":2,"must":1,"ensur":1,"invalid":1,"key":2,"index":2,"idx":1,"previous":1,"ifth":1,"enforc":1,"cach":1,"like":1,"row":3,"continu":1,"joinabl":1,"columnthat":1,"unset":4,"column":11,"method":1,"match":5,"design":4},"maxFreq":11,"totalTerms":50},"loc":0}