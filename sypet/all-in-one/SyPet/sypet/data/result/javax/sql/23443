{"id":23443,"className":"javax.sql.RowSetReader","methodName":"readData","signature":"\u003cjavax.sql.RowSetReader: void readData(javax.sql.RowSetInternal)\u003e","javadoc":"/** \n * Reads the new contents of the calling \u003ccode\u003eRowSet\u003c/code\u003e object. In order to call this method, a \u003ccode\u003eRowSet\u003c/code\u003e object must have implemented the \u003ccode\u003eRowSetInternal\u003c/code\u003e interface and registered this \u003ccode\u003eRowSetReader\u003c/code\u003e object as its reader. The \u003ccode\u003ereadData\u003c/code\u003e  method is invoked internally by the \u003ccode\u003eRowSet.execute\u003c/code\u003e method for rowsets that support the reader/writer paradigm. \u003cP\u003eThe \u003ccode\u003ereadData\u003c/code\u003e method adds rows to the caller. It can be implemented in a wide variety of ways and can even populate the caller with rows from a nonrelational data source. In general, a reader may invoke any of the rowset\u0027s methods, with one exception. Calling the method \u003ccode\u003eexecute\u003c/code\u003e will cause an \u003ccode\u003eSQLException\u003c/code\u003e to be thrown because \u003ccode\u003eexecute\u003c/code\u003e may not be called recursively.  Also, when a reader invokes \u003ccode\u003eRowSet\u003c/code\u003e methods, no listeners are notified; that is, no \u003ccode\u003eRowSetEvent\u003c/code\u003e objects are generated and no \u003ccode\u003eRowSetListener\u003c/code\u003e methods are invoked. This is true because listeners are already being notified by the method \u003ccode\u003eexecute\u003c/code\u003e.\n * @param caller the \u003ccode\u003eRowSet\u003c/code\u003e object (1) that has implemented the\u003ccode\u003eRowSetInternal\u003c/code\u003e interface, (2) with which this reader is registered, and (3) whose \u003ccode\u003eexecute\u003c/code\u003e method called this reader\n * @exception SQLException if a database access error occurs or this methodinvokes the \u003ccode\u003eRowSet.execute\u003c/code\u003e method\n */\n","tf":{"freq":{"paradigm":1,"lexcept":2,"must":1,"event":1,"varieti":1,"writer":1,"notifi":2,"except":2,"thrown":1,"support":1,"whose":1,"invok":4,"rowset":2,"wide":1,"row":13,"databas":1,"content":1,"reader":7,"will":1,"even":1,"sourc":1,"execut":6,"recurs":1,"caller":3,"call":5,"one":1,"data":4,"way":1,"nonrel":1,"object":5,"add":1,"popul":1,"order":1,"read":4,"regist":2,"methodinvok":1,"listen":3,"may":2,"error":1,"true":1,"access":1,"general":1,"caus":1,"generat":1,"intern":3,"method":11,"alreadi":1,"also":1,"occur":1},"maxFreq":13,"totalTerms":111},"loc":0}