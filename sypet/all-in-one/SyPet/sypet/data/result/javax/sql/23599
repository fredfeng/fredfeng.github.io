{"id":23599,"className":"javax.sql.RowSetWriter","methodName":"writeData","signature":"\u003cjavax.sql.RowSetWriter: boolean writeData(javax.sql.RowSetInternal)\u003e","javadoc":"/** \n * Writes the changes in this \u003ccode\u003eRowSetWriter\u003c/code\u003e object\u0027s rowset back to the data source from which it got its data.\n * @param caller the \u003ccode\u003eRowSet\u003c/code\u003e object (1) that has implemented the\u003ccode\u003eRowSetInternal\u003c/code\u003e interface, (2) with which this writer is registered, and (3) that called this method internally\n * @return \u003ccode\u003etrue\u003c/code\u003e if the modified data was written; \u003ccode\u003efalse\u003c/code\u003eif not, which will be the case if there is a conflict\n * @exception SQLException if a database access error occurs\n */\n","tf":{"freq":{"fals":1,"caller":1,"call":1,"except":1,"error":1,"lexcept":1,"data":4,"rowset":1,"true":1,"back":1,"object":2,"access":1,"databas":1,"row":3,"written":1,"will":1,"modifi":1,"write":2,"intern":2,"regist":1,"conflict":1,"method":1,"sourc":1,"chang":1,"writer":2,"got":1,"occur":1},"maxFreq":4,"totalTerms":36},"loc":0}