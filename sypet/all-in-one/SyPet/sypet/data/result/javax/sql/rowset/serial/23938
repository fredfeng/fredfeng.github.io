{"id":23938,"className":"javax.sql.rowset.serial.SerialStruct","methodName":"SerialStruct","signature":"\u003cjavax.sql.rowset.serial.SerialStruct: void SerialStruct(java.sql.SQLData,java.util.Map)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eSerialStruct\u003c/code\u003e object from the given \u003ccode\u003eSQLData\u003c/code\u003e object, using the given type map to custom map it to a class in the Java programming language.  The type map gives the SQL type and the class to which it is mapped.  The \u003ccode\u003eSQLData\u003c/code\u003e object defines the class to which the SQL type will be mapped.\n * @param in an instance of the \u003ccode\u003eSQLData\u003c/code\u003e classthat defines the mapping of the SQL structured type to one or more objects in the Java programming language\n * @param map a \u003ccode\u003ejava.util.Map\u003c/code\u003e object in whicheach entry consists of 1) a \u003ccode\u003eString\u003c/code\u003e object giving the fully qualified name of a UDT and 2) the \u003ccode\u003eClass\u003c/code\u003e object for the \u003ccode\u003eSQLData\u003c/code\u003e implementation that defines how the UDT is to be mapped\n * @throws SerialException if an error occurs\n */\n","tf":{"freq":{"defin":3,"give":2,"structur":1,"one":1,"use":1,"languag":2,"object":7,"type":5,"ldata":4,"given":2,"struct":2,"name":1,"map":9,"custom":1,"except":1,"error":1,"consist":1,"entri":1,"fulli":1,"instanc":1,"program":2,"string":1,"will":1,"java":3,"whicheach":1,"construct":1,"serial":3,"classthat":1,"qualifi":1,"util":1,"occur":1},"maxFreq":9,"totalTerms":63},"loc":15}