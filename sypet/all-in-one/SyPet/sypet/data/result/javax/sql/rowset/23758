{"id":23758,"className":"javax.sql.rowset.BaseRowSet","methodName":"setCommand","signature":"\u003cjavax.sql.rowset.BaseRowSet: void setCommand(java.lang.String)\u003e","javadoc":"/** \n * Sets this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s \u003ccode\u003ecommand\u003c/code\u003e property to the given \u003ccode\u003eString\u003c/code\u003e object and clears the parameters, if any, that were set for the previous command. \u003cP\u003e The \u003ccode\u003ecommand\u003c/code\u003e property may not be needed if the \u003ccode\u003eRowSet\u003c/code\u003e object gets its data from a source that does not support commands, such as a spreadsheet or other tabular file. Thus, this property is optional and may be \u003ccode\u003enull\u003c/code\u003e.\n * @param cmd a \u003ccode\u003eString\u003c/code\u003e object containing an SQL querythat will be set as this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s command property; may be \u003ccode\u003enull\u003c/code\u003e but may not be an empty string\n * @throws SQLException if an empty string is provided as the command value\n * @see #getCommand\n */\n","tf":{"freq":{"need":1,"lexcept":1,"data":1,"object":5,"clear":1,"tabular":1,"given":1,"file":1,"command":8,"valu":1,"option":1,"may":4,"querythat":1,"support":1,"previous":1,"thus":1,"paramet":1,"spreadsheet":1,"provid":1,"row":3,"empti":2,"cmd":1,"string":4,"contain":1,"will":1,"sourc":1,"properti":4},"maxFreq":8,"totalTerms":50},"loc":20}