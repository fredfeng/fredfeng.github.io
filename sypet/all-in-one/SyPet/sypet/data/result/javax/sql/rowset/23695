{"id":23695,"className":"javax.sql.rowset.CachedRowSet","methodName":"undoInsert","signature":"\u003cjavax.sql.rowset.CachedRowSet: void undoInsert()\u003e","javadoc":"/** \n * Immediately removes the current row from this \u003ccode\u003eCachedRowSet\u003c/code\u003e object if the row has been inserted, and also notifies listeners that a row has changed. This method can be called at any time during the lifetime of a rowset and assuming the current row is within the exception limitations (see below), it cancels the row insertion of the current row. \u003cP\u003e In addition, multiple cancellations of row insertions can be made by adjusting the position of the cursor using any of the cursor position control methods such as: \u003cul\u003e \u003cli\u003e\u003ccode\u003eCachedRowSet.absolute\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCachedRowSet.first\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCachedRowSet.last\u003c/code\u003e \u003c/ul\u003e\n * @throws SQLException if (1) the current row has not been inserted or (2)the cursor is before the first row, after the last row, or on the insert row\n * @see javax.sql.rowset.CachedRowSet#undoDelete\n * @see java.sql.ResultSet#cancelRowUpdates\n */\n","tf":{"freq":{"lifetim":1,"result":1,"call":1,"cursor":3,"last":2,"delet":1,"undo":2,"lexcept":1,"made":1,"use":1,"cancel":3,"object":1,"time":1,"javax":1,"adjust":1,"current":4,"immedi":1,"listen":1,"notifi":1,"limit":1,"control":1,"addit":1,"except":1,"assum":1,"multipl":1,"remov":1,"rowset":2,"absolut":1,"cach":5,"row":17,"sql":2,"updat":1,"java":1,"method":2,"chang":1,"within":1,"insert":6,"first":2,"posit":2,"also":1},"maxFreq":17,"totalTerms":79},"loc":0}