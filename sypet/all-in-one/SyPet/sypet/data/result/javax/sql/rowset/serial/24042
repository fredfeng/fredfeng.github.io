{"id":24042,"className":"javax.sql.rowset.serial.SerialArray","methodName":"getResultSet","signature":"\u003cjavax.sql.rowset.serial.SerialArray: java.sql.ResultSet getResultSet(long,int)\u003e","javadoc":"/** \n * Retrieves a \u003ccode\u003eResultSet\u003c/code\u003e object holding the elements of the subarray that starts at index \u003ci\u003eindex\u003c/i\u003e and contains up to \u003ci\u003ecount\u003c/i\u003e successive elements. This method uses the connection\u0027s type map to map the elements of the array if the map contains an entry for the base type. Otherwise, the standard mapping is used.\n * @param index the index into this \u003ccode\u003eSerialArray\u003c/code\u003e objectof the first element to be copied; the index of the first element in the array is \u003ccode\u003e0\u003c/code\u003e\n * @param count the number of consecutive elements to be copied, startingat the given index\n * @return a \u003ccode\u003eResultSet\u003c/code\u003e object containing the designatedelements in this \u003ccode\u003eSerialArray\u003c/code\u003e object, with a separate row for each element\n * @throws SerialException , which in turn throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e, if this method is called\n */\n","tf":{"freq":{"otherwis":1,"call":1,"result":3,"unsupport":1,"count":2,"connect":1,"use":2,"object":3,"type":2,"copi":2,"given":1,"oper":1,"startingat":1,"map":4,"turn":1,"element":7,"except":2,"index":6,"standard":1,"entri":1,"hold":1,"number":1,"subarray":1,"row":1,"consecut":1,"objectof":1,"designatedel":1,"separ":1,"start":1,"retriev":1,"contain":3,"base":1,"method":2,"success":1,"serial":3,"first":2,"array":4},"maxFreq":7,"totalTerms":69},"loc":3}