{"id":23706,"className":"javax.sql.rowset.CachedRowSet","methodName":"getOriginal","signature":"\u003cjavax.sql.rowset.CachedRowSet: java.sql.ResultSet getOriginal()\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eResultSet\u003c/code\u003e object containing the original value of this \u003ccode\u003eCachedRowSet\u003c/code\u003e object. \u003cP\u003e The cursor for the \u003ccode\u003eResultSet\u003c/code\u003e object should be positioned before the first row. In addition, the returned \u003ccode\u003eResultSet\u003c/code\u003e object should have the following properties: \u003cUL\u003e \u003cLI\u003eResultSet.TYPE_SCROLL_INSENSITIVE \u003cLI\u003eResultSet.CONCUR_UPDATABLE \u003c/UL\u003e \u003cP\u003e The original value for a \u003ccode\u003eRowSet\u003c/code\u003e object is the value it had before the last synchronization with the underlying data source.  If there have been no synchronizations, the original value will be the value with which the \u003ccode\u003eRowSet\u003c/code\u003e object was populated.  This method is called internally when an aplication calls the method \u003ccode\u003eacceptChanges\u003c/code\u003e and the \u003ccode\u003eSyncProvider\u003c/code\u003e object has been implemented to check for conflicts. If this is the case, the writer compares the original value with the value currently in the data source to check for conflicts.\n * @return a \u003ccode\u003eResultSet\u003c/code\u003e object that contains the original value forthis \u003ccode\u003eCachedRowSet\u003c/code\u003e object\n * @throws SQLException if an error occurs producing the\u003ccode\u003eResultSet\u003c/code\u003e object\n */\n","tf":{"freq":{"result":7,"call":2,"cursor":1,"last":1,"accept":1,"lexcept":1,"data":2,"object":10,"popul":1,"forthi":1,"sync":1,"current":1,"valu":8,"writer":1,"follow":1,"addit":1,"error":1,"check":2,"origin":6,"produc":1,"cach":2,"provid":1,"row":5,"contain":2,"will":1,"intern":1,"conflict":2,"sourc":2,"method":2,"properti":1,"chang":1,"compar":1,"first":1,"posit":1,"occur":1,"aplic":1},"maxFreq":10,"totalTerms":75},"loc":0}