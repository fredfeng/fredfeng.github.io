{"id":23714,"className":"javax.sql.rowset.CachedRowSet","methodName":"createCopy","signature":"\u003cjavax.sql.rowset.CachedRowSet: javax.sql.rowset.CachedRowSet createCopy()\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eRowSet\u003c/code\u003e object that is a deep copy of the data in this \u003ccode\u003eCachedRowSet\u003c/code\u003e object. In contrast to the \u003ccode\u003eRowSet\u003c/code\u003e object generated from a \u003ccode\u003ecreateShared\u003c/code\u003e call, updates made to the copy of the original \u003ccode\u003eRowSet\u003c/code\u003e object must not be visible to the original \u003ccode\u003eRowSet\u003c/code\u003e object. Also, any event listeners that are registered with the original \u003ccode\u003eRowSet\u003c/code\u003e must not have scope over the new \u003ccode\u003eRowSet\u003c/code\u003e copies. In addition, any constraint restrictions established must be maintained.\n * @return a new \u003ccode\u003eRowSet\u003c/code\u003e object that is a deep copyof this \u003ccode\u003eCachedRowSet\u003c/code\u003e object and is completely independent of this \u003ccode\u003eCachedRowSet\u003c/code\u003e object\n * @throws SQLException if an error occurs in generating the copy ofthe of this \u003ccode\u003eCachedRowSet\u003c/code\u003e object\n * @see #createShared\n * @see #createCopySchema\n * @see #createCopyNoConstraints\n * @see javax.sql.RowSetEvent\n * @see javax.sql.RowSetListener\n */\n","tf":{"freq":{"call":1,"scope":1,"visibl":1,"maintain":1,"lexcept":1,"data":1,"made":1,"copyof":1,"constraint":2,"object":9,"copi":7,"must":3,"schema":1,"contrast":1,"independ":1,"share":2,"javax":2,"event":2,"ofth":1,"regist":1,"deep":2,"listen":2,"complet":1,"addit":1,"error":1,"creat":6,"establish":1,"origin":3,"cach":4,"row":13,"restrict":1,"sql":2,"updat":1,"generat":2,"also":1,"occur":1},"maxFreq":13,"totalTerms":82},"loc":0}