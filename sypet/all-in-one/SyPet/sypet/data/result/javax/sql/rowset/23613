{"id":23613,"className":"javax.sql.rowset.JdbcRowSet","methodName":"getShowDeleted","signature":"\u003cjavax.sql.rowset.JdbcRowSet: boolean getShowDeleted()\u003e","javadoc":"/** \n * Retrieves a \u003ccode\u003eboolean\u003c/code\u003e indicating whether rows marked for deletion appear in the set of current rows. If \u003ccode\u003etrue\u003c/code\u003e is returned, deleted rows are visible with the current rows. If \u003ccode\u003efalse\u003c/code\u003e is returned, rows are not visible with the set of current rows. The default value is \u003ccode\u003efalse\u003c/code\u003e. \u003cP\u003e Standard rowset implementations may choose to restrict this behavior for security considerations or for certain deployment scenarios. The visibility of deleted rows is implementation-defined and does not represent standard behavior. \u003cP\u003e Note: Allowing deleted rows to remain visible complicates the behavior of some standard JDBC \u003ccode\u003eRowSet\u003c/code\u003e implementations methods. However, most rowset users can simply ignore this extra detail because only very specialized applications will likely want to take advantage of this feature.\n * @return \u003ccode\u003etrue\u003c/code\u003e if deleted rows are visible;\u003ccode\u003efalse\u003c/code\u003e otherwise\n * @exception SQLException if a rowset implementation is unable toto determine whether rows marked for deletion remain visible\n * @see #setShowDeleted\n */\n","tf":{"freq":{"fals":3,"detail":1,"appear":1,"lexcept":1,"show":2,"whether":2,"toto":1,"howev":1,"ignor":1,"except":1,"extra":1,"advantag":1,"rowset":3,"mark":2,"like":1,"restrict":1,"row":11,"scenario":1,"determin":1,"will":1,"otherwis":1,"defin":1,"simpli":1,"allow":1,"delet":8,"behavior":3,"visibl":6,"deploy":1,"applic":1,"indic":1,"consider":1,"current":3,"choos":1,"valu":1,"note":1,"want":1,"may":1,"standard":3,"repres":1,"true":2,"unabl":1,"secur":1,"remain":2,"retriev":1,"take":1,"featur":1,"method":1,"special":1,"certain":1,"complic":1,"user":1},"maxFreq":11,"totalTerms":88},"loc":0}