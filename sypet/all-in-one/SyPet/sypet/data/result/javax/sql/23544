{"id":23544,"className":"javax.sql.RowSet","methodName":"setTimestamp","signature":"\u003cjavax.sql.RowSet: void setTimestamp(java.lang.String,java.sql.Timestamp,java.util.Calendar)\u003e","javadoc":"/** \n * Sets the designated parameter to the given \u003ccode\u003ejava.sql.Timestamp\u003c/code\u003e value, using the given \u003ccode\u003eCalendar\u003c/code\u003e object.  The driver uses the \u003ccode\u003eCalendar\u003c/code\u003e object to construct an SQL \u003ccode\u003eTIMESTAMP\u003c/code\u003e value, which the driver then sends to the database.  With a a \u003ccode\u003eCalendar\u003c/code\u003e object, the driver can calculate the timestamp taking into account a custom timezone.  If no \u003ccode\u003eCalendar\u003c/code\u003e object is specified, the driver uses the default timezone, which is that of the virtual machine running the application.\n * @param parameterName the name of the parameter\n * @param x the parameter value\n * @param cal the \u003ccode\u003eCalendar\u003c/code\u003e object the driver will useto construct the timestamp\n * @exception SQLException if a database access error occurs orthis method is called on a closed \u003ccode\u003eCallableStatement\u003c/code\u003e\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @see #getTimestamp\n * @since 1.4\n */\n","tf":{"freq":{"virtual":1,"call":1,"send":1,"lexcept":1,"use":3,"timezon":2,"object":5,"useto":1,"run":1,"applic":1,"close":1,"specifi":1,"timestamp":5,"given":2,"callabl":1,"name":2,"driver":6,"valu":3,"cal":1,"calendar":5,"custom":1,"except":3,"support":1,"error":1,"calcul":1,"paramet":4,"supportthi":1,"orthi":1,"access":1,"databas":2,"lfeatur":1,"statement":1,"machin":1,"sql":1,"take":1,"will":1,"account":1,"method":2,"java":1,"construct":2,"design":1,"occur":1},"maxFreq":6,"totalTerms":74},"loc":0}