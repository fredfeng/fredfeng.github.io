{"id":24019,"className":"javax.sql.rowset.serial.SerialClob","methodName":"SerialClob","signature":"\u003cjavax.sql.rowset.serial.SerialClob: void SerialClob(java.sql.Clob)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eSerialClob\u003c/code\u003e object that is a serialized version of the given \u003ccode\u003eClob\u003c/code\u003e object. \u003cP\u003e The new \u003ccode\u003eSerialClob\u003c/code\u003e object is initialized with the data from the \u003ccode\u003eClob\u003c/code\u003e object; therefore, the \u003ccode\u003eClob\u003c/code\u003e object should have previously brought the SQL \u003ccode\u003eCLOB\u003c/code\u003e value\u0027s data over to the client from the database. Otherwise, the new \u003ccode\u003eSerialClob\u003c/code\u003e object object will contain no data. \u003cp\u003e Note: The \u003ccode\u003eClob\u003c/code\u003e object supplied to this constructor must return non-null for both the \u003ccode\u003eClob.getCharacterStream()\u003c/code\u003e and \u003ccode\u003eClob.getAsciiStream\u003c/code\u003e methods. This \u003ccode\u003eSerialClob\u003c/code\u003e constructor cannot serialize a \u003ccode\u003eClob\u003c/code\u003e object in this instance and will throw an \u003ccode\u003eSQLException\u003c/code\u003e object.\n * @param clob the \u003ccode\u003eClob\u003c/code\u003e object from which this\u003ccode\u003eSerialClob\u003c/code\u003e object is to be constructed; cannot be null\n * @throws SerialException if an error occurs during serialization\n * @throws SQLException if a SQL error occurs in capturing the CLOB;if the \u003ccode\u003eClob\u003c/code\u003e object is a null; or if either of the \u003ccode\u003eClob.getCharacterStream()\u003c/code\u003e and \u003ccode\u003eClob.getAsciiStream()\u003c/code\u003e methods on the \u003ccode\u003eClob\u003c/code\u003e returns a null\n * @see java.sql.Clob\n */\n","tf":{"freq":{"otherwis":1,"stream":4,"client":1,"clob":20,"lexcept":2,"data":3,"brought":1,"therefor":1,"object":13,"must":1,"version":1,"ascii":2,"given":1,"valu":1,"initi":1,"captur":1,"note":1,"constructor":2,"except":1,"error":2,"previous":1,"charact":2,"suppli":1,"databas":1,"instanc":1,"non":1,"either":1,"sql":1,"contain":1,"will":2,"java":1,"method":2,"construct":2,"serial":10,"occur":2},"maxFreq":20,"totalTerms":89},"loc":39}