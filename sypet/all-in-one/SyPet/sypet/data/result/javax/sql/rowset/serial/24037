{"id":24037,"className":"javax.sql.rowset.serial.SerialArray","methodName":"getArray","signature":"\u003cjavax.sql.rowset.serial.SerialArray: java.lang.Object getArray(java.util.Map)\u003e","javadoc":"/** \n * Returns a new array that is a copy of this \u003ccode\u003eSerialArray\u003c/code\u003e object, using the given type map for the custom mapping of each element when the elements are SQL UDTs. \u003cP\u003e This method does custom mapping if the array elements are a UDT and the given type map has an entry for that UDT. Custom mapping is recursive, meaning that if, for instance, an element of an SQL structured type is an SQL structured type that itself has an element that is an SQL structured type, each structured type that has a custom mapping will be mapped according to the given type map.\n * @param map a \u003ccode\u003ejava.util.Map\u003c/code\u003e object in whicheach entry consists of 1) a \u003ccode\u003eString\u003c/code\u003e object giving the fully qualified name of a UDT and 2) the \u003ccode\u003eClass\u003c/code\u003e object for the \u003ccode\u003eSQLData\u003c/code\u003e implementation that defines how the UDT is to be mapped\n * @return a copy of this \u003ccode\u003eSerialArray\u003c/code\u003e object as an\u003ccode\u003eObject\u003c/code\u003e in the Java programming language\n * @throws SerialException if an error occurs\n */\n","tf":{"freq":{"defin":1,"structur":4,"give":1,"use":1,"languag":1,"object":6,"type":7,"ldata":1,"copi":2,"given":3,"name":1,"map":11,"mean":1,"custom":4,"element":5,"except":1,"error":1,"consist":1,"entri":2,"fulli":1,"accord":1,"instanc":1,"program":1,"string":1,"will":1,"method":1,"java":2,"whicheach":1,"serial":3,"qualifi":1,"recurs":1,"util":1,"occur":1,"array":5},"maxFreq":11,"totalTerms":76},"loc":5}