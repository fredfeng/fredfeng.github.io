{"id":23683,"className":"javax.sql.rowset.RowSetProvider","methodName":"newFactory","signature":"\u003cjavax.sql.rowset.RowSetProvider: javax.sql.rowset.RowSetFactory newFactory(java.lang.String,java.lang.ClassLoader)\u003e","javadoc":"/** \n * \u003cp\u003eCreates  a new instance of a \u003ccode\u003eRowSetFactory\u003c/code\u003e from the specified factory class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.\u003c/p\u003e \u003cp\u003eOnce an application has obtained a reference to a \u003ccode\u003eRowSetFactory\u003c/code\u003e it can use the factory to obtain RowSet instances.\u003c/p\u003e\n * @param factoryClassName fully qualified factory class name thatprovides  an implementation of \u003ccode\u003ejavax.sql.rowset.RowSetFactory\u003c/code\u003e.\n * @param cl \u003ccode\u003eClassLoader\u003c/code\u003e used to load the factoryclass. If \u003ccode\u003enull\u003c/code\u003e current \u003ccode\u003eThread\u003c/code\u003e\u0027s context classLoader is used to load the factory class.\n * @return New instance of a \u003ccode\u003eRowSetFactory\u003c/code\u003e\n * @throws SQLException if \u003ccode\u003efactoryClassName\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e, or the factory class cannot be loaded, instantiated.\n * @see #newFactory()\n * @since 1.7\n */\n","tf":{"freq":{"give":1,"instanti":1,"lexcept":1,"use":4,"applic":2,"function":1,"specifi":2,"refer":1,"factori":13,"javax":1,"thread":1,"name":4,"current":1,"control":1,"factoryclass":1,"multipl":1,"creat":1,"loader":2,"rowset":1,"fulli":1,"provid":2,"classpath":1,"row":5,"instanc":3,"obtain":2,"sql":1,"context":1,"load":4,"thatprovid":1,"qualifi":1},"maxFreq":13,"totalTerms":62},"loc":20}