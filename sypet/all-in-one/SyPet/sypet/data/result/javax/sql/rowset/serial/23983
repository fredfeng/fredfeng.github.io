{"id":23983,"className":"javax.sql.rowset.serial.SerialBlob","methodName":"setBytes","signature":"\u003cjavax.sql.rowset.serial.SerialBlob: int setBytes(long,byte[],int,int)\u003e","javadoc":"/** \n * Writes all or part of the given \u003ccode\u003ebyte\u003c/code\u003e array to the \u003ccode\u003eBLOB\u003c/code\u003e value that this \u003ccode\u003eBlob\u003c/code\u003e object represents and returns the number of bytes written. Writing starts at position \u003ccode\u003epos\u003c/code\u003e in the \u003ccode\u003eBLOB\u003c/code\u003e value; \u003ci\u003elen\u003c/i\u003e bytes from the given byte array are written.\n * @param pos the position in the \u003ccode\u003eBLOB\u003c/code\u003e object at whichto start writing. The first position is \u003ccode\u003e1\u003c/code\u003e; must not be less than \u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \u003ccode\u003eSerialBlob\u003c/code\u003e object.\n * @param bytes the array of bytes to be written to the \u003ccode\u003eBLOB\u003c/code\u003evalue\n * @param offset the offset in the \u003ccode\u003ebyte\u003c/code\u003e array at whichto start reading the bytes. The first offset position is \u003ccode\u003e0\u003c/code\u003e; must not be less than \u003ccode\u003e0\u003c/code\u003e nor greater than the length of the \u003ccode\u003ebyte\u003c/code\u003e array\n * @param length the number of bytes to be written to the\u003ccode\u003eBLOB\u003c/code\u003e value from the array of bytes \u003ci\u003ebytes\u003c/i\u003e.\n * @return the number of bytes written\n * @throws SerialException if there is an error accessing the\u003ccode\u003eBLOB\u003c/code\u003e value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the \u003ccode\u003eSerialBlob\u003c/code\u003e length; or the combined values of the length and offset is greater than the Blob buffer\n * @throws SQLException if there is an error accessing the \u003ccode\u003eBLOB\u003c/code\u003evalue from the database.\n * @see #getBytes\n */\n","tf":{"freq":{"greater":4,"lexcept":1,"object":3,"must":2,"pos":2,"buffer":1,"invalid":2,"given":2,"written":6,"combin":1,"write":3,"length":5,"read":1,"valu":8,"offset":5,"less":2,"except":1,"error":2,"repres":1,"whichto":2,"number":4,"len":1,"access":2,"databas":1,"blob":4,"start":3,"part":1,"posit":5,"first":2,"serial":3,"array":6},"maxFreq":8,"totalTerms":86},"loc":27}