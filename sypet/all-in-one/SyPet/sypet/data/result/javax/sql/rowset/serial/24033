{"id":24033,"className":"javax.sql.rowset.serial.SerialArray","methodName":"SerialArray","signature":"\u003cjavax.sql.rowset.serial.SerialArray: void SerialArray(java.sql.Array,java.util.Map)\u003e","javadoc":"/** \n * Constructs a new \u003ccode\u003eSerialArray\u003c/code\u003e object from the given \u003ccode\u003eArray\u003c/code\u003e object, using the given type map for the custom mapping of each element when the elements are SQL UDTs. \u003cP\u003e This method does custom mapping if the array elements are a UDT and the given type map has an entry for that UDT. Custom mapping is recursive, meaning that if, for instance, an element of an SQL structured type is an SQL structured type that itself has an element that is an SQL structured type, each structured type that has a custom mapping will be mapped according to the given type map. \u003cP\u003e The new \u003ccode\u003eSerialArray\u003c/code\u003e object contains the same elements as the \u003ccode\u003eArray\u003c/code\u003e object from which it is built, except when the base type is the SQL type \u003ccode\u003eSTRUCT\u003c/code\u003e, \u003ccode\u003eARRAY\u003c/code\u003e, \u003ccode\u003eBLOB\u003c/code\u003e, \u003ccode\u003eCLOB\u003c/code\u003e, \u003ccode\u003eDATALINK\u003c/code\u003e or \u003ccode\u003eJAVA_OBJECT\u003c/code\u003e. In this case, each element in the new \u003ccode\u003eSerialArray\u003c/code\u003e object is the appropriate serialized form, that is, a \u003ccode\u003eSerialStruct\u003c/code\u003e, \u003ccode\u003eSerialArray\u003c/code\u003e, \u003ccode\u003eSerialBlob\u003c/code\u003e, \u003ccode\u003eSerialClob\u003c/code\u003e, \u003ccode\u003eSerialDatalink\u003c/code\u003e, or \u003ccode\u003eSerialJavaObject\u003c/code\u003e object. \u003cP\u003e Note: (1) The \u003ccode\u003eArray\u003c/code\u003e object from which a \u003ccode\u003eSerialArray\u003c/code\u003e object is created must have materialized the SQL \u003ccode\u003eARRAY\u003c/code\u003e value\u0027s data on the client before it is passed to the constructor.  Otherwise, the new \u003ccode\u003eSerialArray\u003c/code\u003e object will contain no data. \u003cp\u003e Note: (2) If the \u003ccode\u003eArray\u003c/code\u003e contains \u003ccode\u003ejava.sql.Types.JAVA_OBJECT\u003c/code\u003e types, the \u003ccode\u003eSerialJavaObject\u003c/code\u003e constructor is called where checks are made to ensure this object is serializable. \u003cp\u003e Note: (3) The \u003ccode\u003eArray\u003c/code\u003e object supplied to this constructor cannot return \u003ccode\u003enull\u003c/code\u003e for any \u003ccode\u003eArray.getArray()\u003c/code\u003e methods. \u003ccode\u003eSerialArray\u003c/code\u003e cannot serialize null array values.\n * @param array the \u003ccode\u003eArray\u003c/code\u003e object to be serialized\n * @param map a \u003ccode\u003ejava.util.Map\u003c/code\u003e object in whicheach entry consists of 1) a \u003ccode\u003eString\u003c/code\u003e object giving the fully qualified name of a UDT (an SQL structured type or distinct type) and 2) the \u003ccode\u003eClass\u003c/code\u003e object for the \u003ccode\u003eSQLData\u003c/code\u003e implementation that defines how the UDT is to be mapped. The \u003ci\u003emap\u003c/i\u003e parameter does not have any effect for \u003ccode\u003eBlob\u003c/code\u003e, \u003ccode\u003eClob\u003c/code\u003e, \u003ccode\u003eDATALINK\u003c/code\u003e, or \u003ccode\u003eJAVA_OBJECT\u003c/code\u003e types.\n * @throws SerialException if an error occurs serializing the\u003ccode\u003eArray\u003c/code\u003e object\n * @throws SQLException if a database access error occurs or if the\u003ci\u003earray\u003c/i\u003e or the \u003ci\u003emap\u003c/i\u003e values are \u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"client":1,"lexcept":1,"type":14,"ldata":1,"must":1,"distinct":1,"given":4,"datalink":1,"custom":4,"element":7,"except":2,"form":1,"consist":1,"creat":1,"databas":1,"instanc":1,"materi":1,"contain":3,"will":2,"recurs":1,"util":1,"array":21,"otherwis":1,"defin":1,"call":1,"give":1,"structur":5,"clob":2,"serializ":1,"data":2,"made":1,"use":1,"object":18,"ensur":1,"struct":1,"name":1,"map":13,"mean":1,"valu":3,"built":1,"note":3,"constructor":3,"error":2,"check":1,"entri":2,"paramet":1,"fulli":1,"suppli":1,"accord":1,"access":1,"pass":1,"blob":2,"sql":1,"effect":1,"appropri":1,"string":1,"base":1,"method":2,"java":4,"whicheach":1,"construct":1,"serial":19,"qualifi":1,"occur":2},"maxFreq":21,"totalTerms":180},"loc":56}