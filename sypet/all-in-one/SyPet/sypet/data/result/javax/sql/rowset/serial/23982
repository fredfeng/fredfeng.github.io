{"id":23982,"className":"javax.sql.rowset.serial.SerialBlob","methodName":"setBytes","signature":"\u003cjavax.sql.rowset.serial.SerialBlob: int setBytes(long,byte[])\u003e","javadoc":"/** \n * Writes the given array of bytes to the \u003ccode\u003eBLOB\u003c/code\u003e value that this \u003ccode\u003eBlob\u003c/code\u003e object represents, starting at position \u003ccode\u003epos\u003c/code\u003e, and returns the number of bytes written.\n * @param pos the position in the SQL \u003ccode\u003eBLOB\u003c/code\u003e value at whichto start writing. The first position is \u003ccode\u003e1\u003c/code\u003e; must not be less than \u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \u003ccode\u003eSerialBlob\u003c/code\u003e object.\n * @param bytes the array of bytes to be written to the \u003ccode\u003eBLOB\u003c/code\u003evalue that this \u003ccode\u003eBlob\u003c/code\u003e object represents\n * @return the number of bytes written\n * @throws SerialException if there is an error accessing the\u003ccode\u003eBLOB\u003c/code\u003e value; or if an invalid position is set; if an invalid offset value is set\n * @throws SQLException if there is an error accessing the \u003ccode\u003eBLOB\u003c/code\u003evalue from the database\n * @see #getBytes\n */\n","tf":{"freq":{"greater":1,"lexcept":1,"object":3,"must":1,"pos":2,"given":1,"invalid":2,"written":3,"write":2,"length":1,"valu":6,"offset":1,"less":1,"except":1,"error":2,"repres":2,"whichto":1,"number":2,"access":2,"databas":1,"blob":3,"start":2,"posit":4,"first":1,"serial":2,"array":2},"maxFreq":6,"totalTerms":50},"loc":3}