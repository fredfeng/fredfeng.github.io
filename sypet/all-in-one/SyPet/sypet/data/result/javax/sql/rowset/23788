{"id":23788,"className":"javax.sql.rowset.BaseRowSet","methodName":"setFetchSize","signature":"\u003cjavax.sql.rowset.BaseRowSet: void setFetchSize(int)\u003e","javadoc":"/** \n * Sets the fetch size for this \u003ccode\u003eRowSet\u003c/code\u003e object to the given number of rows.  The fetch size gives a JDBC technology-enabled driver (\"JDBC driver\") a hint as to the number of rows that should be fetched from the database when more rows are needed for this \u003ccode\u003eRowSet\u003c/code\u003e object. If the fetch size specified is zero, the driver ignores the value and is free to make its own best guess as to what the fetch size should be. \u003cP\u003e A \u003ccode\u003eRowSet\u003c/code\u003e object inherits the default properties of the \u003ccode\u003eResultSet\u003c/code\u003e object from which it got its data.  That \u003ccode\u003eResultSet\u003c/code\u003e object\u0027s default fetch size is set by the \u003ccode\u003eStatement\u003c/code\u003e object that created it. \u003cP\u003e This method applies to a \u003ccode\u003eRowSet\u003c/code\u003e object only while it is connected to a database using a JDBC driver. For connected \u003ccode\u003eRowSet\u003c/code\u003e implementations such as \u003ccode\u003eJdbcRowSet\u003c/code\u003e, this method has a direct and immediate effect on the underlying JDBC driver. \u003cP\u003e A \u003ccode\u003eRowSet\u003c/code\u003e object may use this method at any time to change its setting for the fetch size. \u003cp\u003e For \u003ccode\u003eRowSet\u003c/code\u003e implementations such as \u003ccode\u003eCachedRowSet\u003c/code\u003e, which operate in a disconnected environment, the \u003ccode\u003eSyncProvider\u003c/code\u003e object being used may leverage the fetch size to poll the data source and retrieve a number of rows that do not exceed the fetch size and that may form a subset of the actual rows returned by the original query. This is an implementation variance determined by the specific \u003ccode\u003eSyncProvider\u003c/code\u003e object employed by the disconnected \u003ccode\u003eRowSet\u003c/code\u003e object. \u003cP\u003e\n * @param rows the number of rows to fetch; \u003ccode\u003e0\u003c/code\u003e to let thedriver decide what the best fetch size is; must not be less than \u003ccode\u003e0\u003c/code\u003e or more than the maximum number of rows allowed for this \u003ccode\u003eRowSet\u003c/code\u003e object (the number returned by a call to the method  {@link #getMaxRows})\n * @throws SQLException if the specified fetch size is less than \u003ccode\u003e0\u003c/code\u003eor more than the limit for the maximum number of rows\n * @see #getFetchSize\n */\n","tf":{"freq":{"need":1,"lexcept":1,"zero":1,"must":1,"specifi":2,"free":1,"time":1,"poll":1,"given":1,"oper":1,"jdbc":1,"limit":1,"fetch":14,"ignor":1,"form":1,"creat":1,"enabl":1,"environ":1,"number":7,"provid":2,"row":21,"databas":2,"size":12,"statement":1,"queri":1,"varianc":1,"appli":1,"maximum":2,"determin":1,"sourc":1,"properti":1,"got":1,"make":1,"call":1,"result":2,"allow":1,"connect":2,"give":1,"link":1,"data":2,"use":3,"object":12,"subset":1,"sync":2,"best":2,"valu":1,"driver":5,"immedi":1,"leverag":1,"less":2,"direct":1,"may":3,"max":1,"origin":1,"exceed":1,"hint":1,"cach":1,"technolog":1,"employ":1,"specif":1,"decid":1,"effect":1,"guess":1,"retriev":1,"actual":1,"method":4,"disconnect":2,"chang":1,"thedriv":1},"maxFreq":21,"totalTerms":152},"loc":14}