{"id":23810,"className":"javax.sql.rowset.BaseRowSet","methodName":"setUnicodeStream","signature":"\u003cjavax.sql.rowset.BaseRowSet: void setUnicodeStream(int,java.io.InputStream,int)\u003e","javadoc":"/** \n * Sets the designated parameter to the given \u003ccode\u003ejava.io.InputStream\u003c/code\u003e object, which will have the specified number of bytes. The contents of the stream will be read and sent to the database. This method throws an \u003ccode\u003eSQLException\u003c/code\u003e if the number of bytes read and sent to the database is not equal to \u003ci\u003elength\u003c/i\u003e. \u003cP\u003e When a very large Unicode value is input to a \u003ccode\u003eLONGVARCHAR\u003c/code\u003e parameter, it may be more practical to send it via a \u003ccode\u003ejava.io.InputStream\u003c/code\u003e object. A JDBC technology-enabled driver will read the data from the stream as needed, until it reaches end-of-file. The driver will do any necessary conversion from Unicode to the database \u003ccode\u003eCHAR\u003c/code\u003e format. The byte format of the Unicode stream must be Java UTF-8, as defined in the Java Virtual Machine Specification. \u003cP\u003e\u003cB\u003eNote:\u003c/B\u003e This stream object can be either a standard Java stream object or your own subclass that implements the standard interface. \u003cP\u003e This method is deprecated; the method \u003ccode\u003egetCharacterStream\u003c/code\u003e should be used in its place. \u003cP\u003e The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s command when the method \u003ccode\u003eexecute\u003c/code\u003e is called. Calls made to the method \u003ccode\u003egetParams\u003c/code\u003e after \u003ccode\u003esetUnicodeStream\u003c/code\u003e has been called will return an array containing the parameter values that have been set.  In that array, the element that represents the values set with this method will itself be an array. The first element of that array is the given \u003ccode\u003ejava.io.InputStream\u003c/code\u003e object. The second element is the value set for \u003ci\u003elength\u003c/i\u003e. The third element is an internal \u003ccode\u003eBaseRowSet\u003c/code\u003e constant specifying that the stream passed to this method is a Unicode stream. The parameter number is indicated by an element\u0027s position in the array returned by the method \u003ccode\u003egetParams\u003c/code\u003e, with the first element being the value for the first placeholder parameter, the second element being the value for the second placeholder parameter, and so on. In other words, if the input stream being set is the value for the second placeholder parameter, the array containing it will be the second element in the array returned by \u003ccode\u003egetParams\u003c/code\u003e. \u003cP\u003e Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number \u003ci\u003eparameterIndex\u003c/i\u003e is element number \u003ci\u003eparameterIndex\u003c/i\u003e -1.\n * @param parameterIndex the ordinal number of the placeholder parameterin this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s command that is to be set. The first parameter is 1, the second is 2, and so on; must be \u003ccode\u003e1\u003c/code\u003e or greater\n * @param x the \u003ccode\u003ejava.io.InputStream\u003c/code\u003e object that contains theUNICODE parameter value\n * @param length the number of bytes in the input stream\n * @throws SQLException if an error occurs, the parameter index is out of bounds,or the number of bytes the driver reads and sends to the database is not equal to the number of bytes specified in \u003ci\u003elength\u003c/i\u003e\n * @deprecated getCharacterStream should be used in its place\n * @see #getParams\n */\n","tf":{"freq":{"need":1,"deprec":2,"greater":1,"send":2,"via":1,"second":6,"store":1,"lexcept":2,"zero":1,"necessari":1,"must":2,"specifi":3,"sent":2,"given":2,"file":1,"place":2,"element":11,"index":4,"charact":2,"enabl":1,"number":10,"format":2,"third":1,"row":3,"databas":4,"content":1,"input":7,"machin":1,"start":1,"contain":3,"will":8,"subclass":1,"word":1,"parameterin":1,"execut":1,"posit":1,"array":9,"virtual":1,"call":3,"defin":1,"stream":17,"correspond":1,"made":1,"data":1,"convers":1,"use":2,"object":8,"reach":1,"indic":1,"ordin":1,"command":2,"practic":1,"length":4,"read":4,"valu":9,"driver":3,"end":1,"note":2,"may":1,"constant":1,"error":1,"standard":2,"repres":1,"paramet":16,"suppli":1,"equal":2,"technolog":1,"pass":1,"specif":1,"either":1,"placehold":5,"appropri":1,"larg":1,"base":1,"intern":2,"unicod":6,"method":9,"java":7,"first":4,"bound":1,"design":1,"occur":1},"maxFreq":17,"totalTerms":236},"loc":13}