{"id":24005,"className":"javax.sql.rowset.serial.SQLOutputImpl","methodName":"writeObject","signature":"\u003cjavax.sql.rowset.serial.SQLOutputImpl: void writeObject(java.sql.SQLData)\u003e","javadoc":"/** \n * Writes to the stream the data contained in the given \u003ccode\u003eSQLData\u003c/code\u003e object. When the \u003ccode\u003eSQLData\u003c/code\u003e object is \u003ccode\u003enull\u003c/code\u003e, this method writes an SQL \u003ccode\u003eNULL\u003c/code\u003e to the stream. Otherwise, it calls the \u003ccode\u003eSQLData.writeSQL\u003c/code\u003e method of the given object, which writes the object\u0027s attributes to the stream. \u003cP\u003e The implementation of the method \u003ccode\u003eSQLData.writeSQ\u003c/code\u003e calls the appropriate \u003ccode\u003eSQLOutputImpl.writeXXX\u003c/code\u003e method(s) for writing each of the object\u0027s attributes in order. The attributes must be read from an \u003ccode\u003eSQLInput\u003c/code\u003e input stream and written to an \u003ccode\u003eSQLOutputImpl\u003c/code\u003e output stream in the same order in which they were listed in the SQL definition of the user-defined type.\n * @param x the object representing data of an SQL structured ordistinct type\n * @throws SQLException if the \u003ccode\u003eSQLOutputImpl\u003c/code\u003e object is inuse by a \u003ccode\u003eSQLData\u003c/code\u003e object attempting to write the attribute values of a UDT to the database.\n */\n","tf":{"freq":{"attempt":1,"otherwis":1,"defin":1,"call":2,"stream":5,"inus":1,"structur":1,"lexcept":1,"data":2,"object":9,"type":2,"ldata":5,"must":1,"attribut":4,"given":2,"order":2,"written":1,"write":9,"read":1,"valu":1,"impl":3,"repres":1,"loutput":3,"list":1,"databas":1,"linput":1,"input":1,"ordistinct":1,"appropri":1,"contain":1,"definit":1,"method":4,"output":1,"user":1},"maxFreq":9,"totalTerms":73},"loc":22}