{"id":23984,"className":"javax.sql.rowset.serial.SerialBlob","methodName":"setBinaryStream","signature":"\u003cjavax.sql.rowset.serial.SerialBlob: java.io.OutputStream setBinaryStream(long)\u003e","javadoc":"/** \n * Retrieves a stream that can be used to write to the \u003ccode\u003eBLOB\u003c/code\u003e value that this \u003ccode\u003eBlob\u003c/code\u003e object represents.  The stream begins at position \u003ccode\u003epos\u003c/code\u003e. This method forwards the \u003ccode\u003esetBinaryStream()\u003c/code\u003e call to the underlying \u003ccode\u003eBlob\u003c/code\u003e in the event that this \u003ccode\u003eSerialBlob\u003c/code\u003e object is instantiated with a \u003ccode\u003eBlob\u003c/code\u003e. If this \u003ccode\u003eSerialBlob\u003c/code\u003e is instantiated with a \u003ccode\u003ebyte\u003c/code\u003e array, a \u003ccode\u003eSerialException\u003c/code\u003e is thrown.\n * @param pos the position in the \u003ccode\u003eBLOB\u003c/code\u003e value at whichto start writing\n * @return a \u003ccode\u003ejava.io.OutputStream\u003c/code\u003e object to which data canbe written\n * @throws SQLException if there is an error accessing the\u003ccode\u003eBLOB\u003c/code\u003e value\n * @throws SerialException if the SerialBlob in not instantiated with a\u003ccode\u003eBlob\u003c/code\u003e object that supports \u003ccode\u003esetBinaryStream()\u003c/code\u003e\n * @see #getBinaryStream\n */\n","tf":{"freq":{"canb":1,"call":1,"stream":7,"binari":4,"instanti":3,"lexcept":1,"data":1,"use":1,"object":4,"pos":2,"forward":1,"event":1,"written":1,"write":2,"valu":3,"except":2,"thrown":1,"support":1,"error":1,"repres":1,"whichto":1,"access":1,"begin":1,"blob":7,"start":1,"retriev":1,"method":1,"java":1,"output":1,"posit":2,"serial":5,"array":1},"maxFreq":7,"totalTerms":62},"loc":9}