{"id":23780,"className":"javax.sql.rowset.BaseRowSet","methodName":"setEscapeProcessing","signature":"\u003cjavax.sql.rowset.BaseRowSet: void setEscapeProcessing(boolean)\u003e","javadoc":"/** \n * Sets to the given \u003ccode\u003eboolean\u003c/code\u003e whether or not the driver will scan for escape syntax and do escape substitution before sending SQL statements to the database. The default is for the driver to do escape processing. \u003cP\u003e Note: Since \u003ccode\u003ePreparedStatement\u003c/code\u003e objects have usually been parsed prior to making this call, disabling escape processing for prepared statements will likely have no effect.\n * @param enable \u003ccode\u003etrue\u003c/code\u003e to enable escape processing;\u003ccode\u003efalse\u003c/code\u003e to disable it\n * @throws SQLException if an error occurs setting the underlying JDBCtechnology-enabled driver to process the escape syntax\n */\n","tf":{"freq":{"fals":1,"call":1,"send":1,"bctechnolog":1,"lexcept":1,"object":1,"substitut":1,"whether":1,"escap":7,"prior":1,"given":1,"driver":3,"note":1,"usual":1,"error":1,"enabl":3,"true":1,"like":1,"databas":1,"prepar":2,"statement":3,"process":5,"syntax":2,"disabl":2,"effect":1,"will":2,"scan":1,"pars":1,"make":1,"occur":1},"maxFreq":7,"totalTerms":50},"loc":3}