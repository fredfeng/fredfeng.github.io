{"id":23823,"className":"javax.sql.rowset.BaseRowSet","methodName":"clearParameters","signature":"\u003cjavax.sql.rowset.BaseRowSet: void clearParameters()\u003e","javadoc":"/** \n * Clears all of the current parameter values in this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s internal representation of the parameters to be set in this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s command when it is executed. \u003cP\u003e In general, parameter values remain in force for repeated use in this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s command. Setting a parameter value with the setter methods automatically clears the value of the designated parameter and replaces it with the new specified value. \u003cP\u003e This method is called internally by the \u003ccode\u003esetCommand\u003c/code\u003e method to clear all of the parameters set for the previous command. \u003cP\u003e Furthermore, this method differs from the \u003ccode\u003einitParams\u003c/code\u003e method in that it maintains the schema of the \u003ccode\u003eRowSet\u003c/code\u003e object.\n * @throws SQLException if an error occurs clearing the parameters\n */\n","tf":{"freq":{"call":1,"furthermor":1,"maintain":1,"lexcept":1,"use":1,"object":4,"repeat":1,"automat":1,"specifi":1,"schema":1,"clear":5,"command":4,"current":1,"setter":1,"valu":5,"forc":1,"error":1,"previous":1,"paramet":8,"init":1,"general":1,"row":4,"represent":1,"differ":1,"remain":1,"replac":1,"intern":2,"method":5,"execut":1,"design":1,"occur":1},"maxFreq":8,"totalTerms":60},"loc":3}