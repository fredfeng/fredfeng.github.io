{"id":24018,"className":"javax.sql.rowset.serial.SerialClob","methodName":"SerialClob","signature":"\u003cjavax.sql.rowset.serial.SerialClob: void SerialClob(char[])\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eSerialClob\u003c/code\u003e object that is a serialized version of the given \u003ccode\u003echar\u003c/code\u003e array. \u003cp\u003e The new \u003ccode\u003eSerialClob\u003c/code\u003e object is initialized with the data from the \u003ccode\u003echar\u003c/code\u003e array, thus allowing disconnected \u003ccode\u003eRowSet\u003c/code\u003e objects to establish a serialized \u003ccode\u003eClob\u003c/code\u003e object without touching the data source.\n * @param ch the char array representing the \u003ccode\u003eClob\u003c/code\u003e object to beserialized\n * @throws SerialException if an error occurs during serialization\n * @throws SQLException if a SQL error occurs\n */\n","tf":{"freq":{"except":1,"error":2,"allow":1,"repres":1,"thus":1,"clob":5,"lexcept":1,"establish":1,"data":2,"object":5,"beseri":1,"without":1,"row":1,"version":1,"touch":1,"given":1,"sourc":1,"disconnect":1,"construct":1,"initi":1,"serial":7,"occur":2,"array":3},"maxFreq":7,"totalTerms":42},"loc":14}