{"id":23772,"className":"javax.sql.rowset.BaseRowSet","methodName":"getTransactionIsolation","signature":"\u003cjavax.sql.rowset.BaseRowSet: int getTransactionIsolation()\u003e","javadoc":"/** \n * Returns the transaction isolation property for this \u003ccode\u003eRowSet\u003c/code\u003e object\u0027s connection. This property represents the transaction isolation level requested for use in transactions. \u003cP\u003e For \u003ccode\u003eRowSet\u003c/code\u003e implementations such as the \u003ccode\u003eCachedRowSet\u003c/code\u003e that operate in a disconnected environment, the \u003ccode\u003eSyncProvider\u003c/code\u003e object offers complementary locking and data integrity options. The options described below are pertinent only to connected \u003ccode\u003eRowSet\u003c/code\u003e objects (\u003ccode\u003eJdbcRowSet\u003c/code\u003e objects).\n * @return one of the following constants:\u003ccode\u003eConnection.TRANSACTION_NONE\u003c/code\u003e, \u003ccode\u003eConnection.TRANSACTION_READ_UNCOMMITTED\u003c/code\u003e, \u003ccode\u003eConnection.TRANSACTION_READ_COMMITTED\u003c/code\u003e, \u003ccode\u003eConnection.TRANSACTION_REPEATABLE_READ\u003c/code\u003e, or \u003ccode\u003eConnection.TRANSACTION_SERIALIZABLE\u003c/code\u003e\n * @see javax.sql.rowset.spi.SyncFactory\n * @see javax.sql.rowset.spi.SyncProvider\n * @see #setTransactionIsolation\n */\n","tf":{"freq":{"integr":1,"connect":7,"one":1,"data":1,"use":1,"object":4,"pertin":1,"level":1,"oper":1,"sync":3,"factori":1,"javax":2,"spi":2,"request":1,"isol":4,"jdbc":1,"option":2,"follow":1,"constant":1,"repres":1,"rowset":2,"environ":1,"lock":1,"complementari":1,"describ":1,"cach":1,"offer":1,"provid":2,"row":5,"sql":2,"transact":5,"disconnect":1,"properti":2},"maxFreq":7,"totalTerms":62},"loc":3}