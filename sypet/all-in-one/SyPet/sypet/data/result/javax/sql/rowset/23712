{"id":23712,"className":"javax.sql.rowset.CachedRowSet","methodName":"setKeyColumns","signature":"\u003cjavax.sql.rowset.CachedRowSet: void setKeyColumns(int[])\u003e","javadoc":"/** \n * Sets this \u003ccode\u003eCachedRowSet\u003c/code\u003e object\u0027s \u003ccode\u003ekeyCols\u003c/code\u003e field with the given array of column numbers, which forms a key for uniquely identifying a row in this \u003ccode\u003eCachedRowSet\u003c/code\u003e object. \u003cp\u003e If a \u003ccode\u003eCachedRowSet\u003c/code\u003e object becomes part of a \u003ccode\u003eJoinRowSet\u003c/code\u003e object, the keys defined by this method and the resulting constraints are maintained if the columns designated as key columns also become match columns.\n * @param keys an array of \u003ccode\u003eint\u003c/code\u003e indicating the columns that forma primary key for this \u003ccode\u003eCachedRowSet\u003c/code\u003e object; every element in the array must be greater than \u003ccode\u003e0\u003c/code\u003e and less than or equal to the number of columns in this rowset\n * @throws SQLException if any of the numbers in the given arrayare not valid for this rowset\n * @see #getKeyColumns\n * @see Joinable#setMatchColumn(String)\n * @see Joinable#setMatchColumn(int)\n */\n","tf":{"freq":{"valid":1,"defin":1,"result":1,"col":1,"greater":1,"maintain":1,"lexcept":1,"constraint":1,"identifi":1,"object":5,"must":1,"uniqu":1,"becom":2,"indic":1,"given":2,"everi":1,"less":1,"key":8,"primari":1,"element":1,"form":1,"rowset":2,"equal":1,"number":3,"cach":4,"join":1,"row":6,"forma":1,"field":1,"arrayar":1,"joinabl":2,"string":1,"column":10,"method":1,"match":3,"part":1,"also":1,"design":1,"array":3},"maxFreq":10,"totalTerms":77},"loc":0}