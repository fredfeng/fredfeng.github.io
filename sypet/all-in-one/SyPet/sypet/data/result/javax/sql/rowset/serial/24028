{"id":24028,"className":"javax.sql.rowset.serial.SerialClob","methodName":"setAsciiStream","signature":"\u003cjavax.sql.rowset.serial.SerialClob: java.io.OutputStream setAsciiStream(long)\u003e","javadoc":"/** \n * Retrieves a stream to be used to write Ascii characters to the \u003ccode\u003eCLOB\u003c/code\u003e value that this \u003ccode\u003eSerialClob\u003c/code\u003e object represents, starting at position \u003ccode\u003epos\u003c/code\u003e. This method forwards the \u003ccode\u003esetAsciiStream()\u003c/code\u003e call to the underlying \u003ccode\u003eClob\u003c/code\u003e object in the event that this \u003ccode\u003eSerialClob\u003c/code\u003e object is instantiated with a \u003ccode\u003eClob\u003c/code\u003e object. If this \u003ccode\u003eSerialClob\u003c/code\u003e object is instantiated with a \u003ccode\u003echar\u003c/code\u003e array, a \u003ccode\u003eSerialException\u003c/code\u003e object is thrown.\n * @param pos the position at which to start writing to the\u003ccode\u003eCLOB\u003c/code\u003e object\n * @return the stream to which ASCII encoded characters can be written\n * @throws SerialException if SerialClob is not instantiated with aClob object that supports \u003ccode\u003esetAsciiStream\u003c/code\u003e\n * @throws SQLException if there is an error accessing the\u003ccode\u003eCLOB\u003c/code\u003e value\n * @see #getAsciiStream\n */\n","tf":{"freq":{"call":1,"thrown":1,"except":2,"stream":6,"support":1,"error":1,"charact":2,"repres":1,"instanti":3,"clob":7,"lexcept":1,"use":1,"object":8,"access":1,"pos":2,"ascii":5,"encod":1,"forward":1,"start":2,"event":1,"retriev":1,"written":1,"write":2,"method":1,"valu":2,"posit":2,"serial":6,"array":1},"maxFreq":8,"totalTerms":64},"loc":9}