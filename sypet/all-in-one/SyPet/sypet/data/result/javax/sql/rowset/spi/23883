{"id":23883,"className":"javax.sql.rowset.spi.SyncProviderException","methodName":"getSyncResolver","signature":"\u003cjavax.sql.rowset.spi.SyncProviderException: javax.sql.rowset.spi.SyncResolver getSyncResolver()\u003e","javadoc":"/** \n * Retrieves the \u003ccode\u003eSyncResolver\u003c/code\u003e object that has been set for this \u003ccode\u003eSyncProviderException\u003c/code\u003e object, or if none has been set, an instance of the default \u003ccode\u003eSyncResolver\u003c/code\u003e implementation included in the reference implementation. \u003cP\u003e If a \u003ccode\u003eSyncProviderException\u003c/code\u003e object is thrown, an application may use this method to generate a \u003ccode\u003eSyncResolver\u003c/code\u003e object with which to resolve the conflict or conflicts that caused the exception to be thrown.\n * @return the \u003ccode\u003eSyncResolver\u003c/code\u003e object set for this\u003ccode\u003eSyncProviderException\u003c/code\u003e object or, if none has been set, an instance of the default \u003ccode\u003eSyncResolver\u003c/code\u003e implementation. In addition, the default \u003ccode\u003eSyncResolver\u003c/code\u003e implementation is also returned if the \u003ccode\u003eSyncResolver()\u003c/code\u003e or \u003ccode\u003eSyncResolver(String)\u003c/code\u003e constructors are used to instantiate the \u003ccode\u003eSyncResolver\u003c/code\u003e instance.\n */\n","tf":{"freq":{"addit":1,"may":1,"except":4,"thrown":2,"includ":1,"instanti":1,"use":2,"resolv":11,"object":6,"provid":3,"applic":1,"instanc":3,"caus":1,"sync":13,"refer":1,"retriev":1,"string":1,"generat":1,"none":2,"conflict":2,"method":1,"also":1,"constructor":1},"maxFreq":13,"totalTerms":61},"loc":11}