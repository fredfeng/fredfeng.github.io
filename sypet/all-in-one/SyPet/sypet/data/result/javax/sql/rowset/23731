{"id":23731,"className":"javax.sql.rowset.Predicate","methodName":"evaluate","signature":"\u003cjavax.sql.rowset.Predicate: boolean evaluate(java.lang.Object,java.lang.String)\u003e","javadoc":"/** \n * This method is called by the \u003ccode\u003eFilteredRowSet\u003c/code\u003e object to check whether the value lies between the filtering criteria set using the setFilter method. \u003cP\u003e The \u003ccode\u003eFilteredRowSet\u003c/code\u003e object will use this method internally while inserting new rows to a \u003ccode\u003eFilteredRowSet\u003c/code\u003e instance.\n * @param value An \u003ccode\u003eObject\u003c/code\u003e value which needs to be checked,whether it can be part of this \u003ccode\u003eFilterRowSet\u003c/code\u003e.\n * @param columnName a \u003ccode\u003eString\u003c/code\u003e object that must match theSQL name of a column in this \u003ccode\u003eRowSet\u003c/code\u003e, ignoring case. This must have been passed to \u003ccode\u003ePredicate\u003c/code\u003e as one of the columns for filtering while initializing a \u003ccode\u003ePredicate\u003c/code\u003e\n * @return \u003ccode\u003etrue\u003c/code\u003e if value lies within the filter; \u003ccode\u003efalse\u003c/code\u003e otherwise\n * @throws SQLException if the column is not part of filtering criteria\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"need":1,"call":1,"one":1,"lexcept":1,"use":2,"object":4,"whether":2,"must":2,"name":2,"valu":4,"initi":1,"ignor":1,"criteria":2,"check":2,"true":1,"predic":2,"evalu":1,"row":6,"pass":1,"instanc":1,"string":1,"will":1,"intern":1,"column":4,"method":3,"within":1,"match":1,"insert":1,"part":2,"lie":2,"filter":9},"maxFreq":9,"totalTerms":66},"loc":0}