{"id":23884,"className":"javax.sql.rowset.spi.SyncProviderException","methodName":"setSyncResolver","signature":"\u003cjavax.sql.rowset.spi.SyncProviderException: void setSyncResolver(javax.sql.rowset.spi.SyncResolver)\u003e","javadoc":"/** \n * Sets the \u003ccode\u003eSyncResolver\u003c/code\u003e object for this \u003ccode\u003eSyncProviderException\u003c/code\u003e object to the one supplied. If the argument supplied is \u003ccode\u003enull\u003c/code\u003e, a call to the method \u003ccode\u003egetSyncResolver\u003c/code\u003e will return the default reference implementation of the \u003ccode\u003eSyncResolver\u003c/code\u003e interface.\n * @param syncResolver the \u003ccode\u003eSyncResolver\u003c/code\u003e object to be set;cannot be \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if the \u003ccode\u003eSyncResolver\u003c/code\u003e objectis \u003ccode\u003enull\u003c/code\u003e.\n * @see #getSyncResolver\n */\n","tf":{"freq":{"argument":2,"call":1,"objecti":1,"except":2,"one":1,"resolv":8,"suppli":2,"object":3,"illeg":1,"provid":1,"sync":9,"refer":1,"will":1,"method":1},"maxFreq":9,"totalTerms":34},"loc":8}