{"id":23975,"className":"javax.sql.rowset.serial.SerialBlob","methodName":"SerialBlob","signature":"\u003cjavax.sql.rowset.serial.SerialBlob: void SerialBlob(byte[])\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eSerialBlob\u003c/code\u003e object that is a serialized version of the given \u003ccode\u003ebyte\u003c/code\u003e array. \u003cp\u003e The new \u003ccode\u003eSerialBlob\u003c/code\u003e object is initialized with the data from the \u003ccode\u003ebyte\u003c/code\u003e array, thus allowing disconnected \u003ccode\u003eRowSet\u003c/code\u003e objects to establish serialized \u003ccode\u003eBlob\u003c/code\u003e objects without touching the data source.\n * @param b the \u003ccode\u003ebyte\u003c/code\u003e array containing the data for the\u003ccode\u003eBlob\u003c/code\u003e object to be serialized\n * @throws SerialException if an error occurs during serialization\n * @throws SQLException if a SQL errors occurs\n */\n","tf":{"freq":{"except":1,"error":2,"allow":1,"thus":1,"lexcept":1,"establish":1,"data":3,"object":5,"without":1,"row":1,"version":1,"blob":5,"touch":1,"given":1,"contain":1,"sourc":1,"disconnect":1,"construct":1,"initi":1,"serial":8,"occur":2,"array":3},"maxFreq":8,"totalTerms":43},"loc":9}