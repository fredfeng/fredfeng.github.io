{"id":23663,"className":"javax.sql.rowset.Joinable","methodName":"setMatchColumn","signature":"\u003cjavax.sql.rowset.Joinable: void setMatchColumn(java.lang.String)\u003e","javadoc":"/** \n * Sets the designated column as the match column for this \u003ccode\u003eRowSet\u003c/code\u003e object. A \u003ccode\u003eJoinRowSet\u003c/code\u003e object can now add this \u003ccode\u003eRowSet\u003c/code\u003e object based on the match column. \u003cp\u003e Subinterfaces such as the \u003ccode\u003eCachedRowSet\u003c/code\u003e interface define the method \u003ccode\u003eCachedRowSet.setKeyColumns\u003c/code\u003e, which allows primary key semantics to be enforced on specific columns. Implementations of the \u003ccode\u003esetMatchColumn(String columnIdx)\u003c/code\u003e method should ensure that the constraints on the key columns are maintained when a \u003ccode\u003eCachedRowSet\u003c/code\u003e object sets a primary key column as a match column.\n * @param columnName a \u003ccode\u003eString\u003c/code\u003e object giving the name of the columnto be set as the match column\n * @throws SQLException if an invalid column name is set, the column nameis a null, or the column name is an empty string\n * @see #unsetMatchColumn\n * @see #setMatchColumn(int[])\n */\n","tf":{"freq":{"defin":1,"allow":1,"give":1,"namei":1,"maintain":1,"lexcept":1,"constraint":1,"columnto":1,"object":5,"add":1,"ensur":1,"invalid":1,"name":4,"semant":1,"key":4,"primari":2,"idx":1,"enforc":1,"cach":3,"subinterfac":1,"join":1,"row":6,"empti":1,"specif":1,"now":1,"unset":1,"string":3,"base":1,"column":18,"method":2,"match":8,"design":1},"maxFreq":18,"totalTerms":77},"loc":0}