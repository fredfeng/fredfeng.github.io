{"id":25069,"className":"javax.imageio.ImageWriter","methodName":"replaceStreamMetadata","signature":"\u003cjavax.imageio.ImageWriter: void replaceStreamMetadata(javax.imageio.metadata.IIOMetadata)\u003e","javadoc":"/** \n * Replaces the stream metadata in the output with new information.  If the output is an \u003ccode\u003eImageOutputStream\u003c/code\u003e, the prior contents of the stream are examined and possibly edited to make room for the new data.  All of the prior contents of the output must be available for reading and writing. \u003cp\u003e If \u003ccode\u003ecanReplaceStreamMetadata\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e, an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e will be thrown. \u003cp\u003e The default implementation throws an \u003ccode\u003eIllegalStateException\u003c/code\u003e if the output is \u003ccode\u003enull\u003c/code\u003e, and otherwise throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @param streamMetadata an \u003ccode\u003eIIOMetadata\u003c/code\u003e object representingstream metadata, or \u003ccode\u003enull\u003c/code\u003e to use default values.\n * @exception IllegalStateException if the output has notbeen set.\n * @exception UnsupportedOperationException if the\u003ccode\u003ecanReplaceStreamMetadata\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e.  modes do not include\n * @exception IOException if an error occurs during writing.\n */\n","tf":{"freq":{"otherwis":1,"fals":2,"stream":7,"unsupport":3,"state":2,"data":1,"use":1,"possibl":1,"object":1,"must":1,"mode":1,"prior":2,"oper":3,"write":2,"read":1,"valu":1,"examin":1,"metadata":6,"except":9,"thrown":1,"includ":1,"error":1,"edit":1,"avail":1,"imag":1,"illeg":2,"content":2,"inform":1,"ometadata":1,"replac":4,"will":1,"notbeen":1,"output":6,"representingstream":1,"make":1,"occur":1,"room":1},"maxFreq":9,"totalTerms":74},"loc":3}