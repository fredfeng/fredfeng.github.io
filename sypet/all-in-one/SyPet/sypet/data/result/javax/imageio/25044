{"id":25044,"className":"javax.imageio.ImageTypeSpecifier","methodName":"createBufferedImage","signature":"\u003cjavax.imageio.ImageTypeSpecifier: java.awt.image.BufferedImage createBufferedImage(int,int)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eBufferedImage\u003c/code\u003e with a given width and height according to the specification embodied in this object.\n * @param width the desired width of the returned\u003ccode\u003eBufferedImage\u003c/code\u003e.\n * @param height the desired height of the returned\u003ccode\u003eBufferedImage\u003c/code\u003e.\n * @return a new \u003ccode\u003eBufferedImage\u003c/code\u003e\n * @exception IllegalArgumentException if either \u003ccode\u003ewidth\u003c/code\u003e or\u003ccode\u003eheight\u003c/code\u003e are negative or zero.\n * @exception IllegalArgumentException if the product of\u003ccode\u003ewidth\u003c/code\u003e and \u003ccode\u003eheight\u003c/code\u003e is greater than \u003ccode\u003eInteger.MAX_VALUE\u003c/code\u003e, or if the number of array elements needed to store the image is greater than \u003ccode\u003eInteger.MAX_VALUE\u003c/code\u003e.\n */\n","tf":{"freq":{"need":1,"argument":2,"element":1,"except":4,"greater":2,"store":1,"creat":2,"width":5,"number":1,"accord":1,"object":1,"zero":1,"imag":6,"desir":2,"illeg":2,"product":1,"buffer":5,"either":1,"specif":1,"height":5,"given":1,"negat":1,"integ":2,"embodi":1,"array":1},"maxFreq":6,"totalTerms":51},"loc":15}