{"id":25048,"className":"javax.imageio.ImageWriter","methodName":"setOutput","signature":"\u003cjavax.imageio.ImageWriter: void setOutput(java.lang.Object)\u003e","javadoc":"/** \n * Sets the destination to the given \u003ccode\u003eImageOutputStream\u003c/code\u003e or other \u003ccode\u003eObject\u003c/code\u003e. The destination is assumed to be ready to accept data, and will not be closed at the end of each write. This allows distributed imaging applications to transmit a series of images over a single network connection.  If \u003ccode\u003eoutput\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, any currently set output will be removed. \u003cp\u003e If \u003ccode\u003eoutput\u003c/code\u003e is an \u003ccode\u003eImageOutputStream\u003c/code\u003e, calls to the \u003ccode\u003ewrite\u003c/code\u003e, \u003ccode\u003ewriteToSequence\u003c/code\u003e, and \u003ccode\u003eprepareWriteEmpty\u003c/code\u003e/\u003ccode\u003eendWriteEmpty\u003c/code\u003e methods will preserve the existing contents of the stream. Other write methods, such as \u003ccode\u003ewriteInsert\u003c/code\u003e, \u003ccode\u003ereplaceStreamMetadata\u003c/code\u003e, \u003ccode\u003ereplaceImageMetadata\u003c/code\u003e, \u003ccode\u003ereplacePixels\u003c/code\u003e, \u003ccode\u003eprepareInsertEmpty\u003c/code\u003e/\u003ccode\u003eendInsertEmpty\u003c/code\u003e, and \u003ccode\u003eendWriteSequence\u003c/code\u003e, require the full contents of the stream to be readable and writable, and may alter any portion of the stream. \u003cp\u003e Use of a general \u003ccode\u003eObject\u003c/code\u003e other than an \u003ccode\u003eImageOutputStream\u003c/code\u003e is intended for writers that interact directly with an output device or imaging protocol. The set of legal classes is advertised by the writer\u0027s service provider\u0027s \u003ccode\u003egetOutputTypes\u003c/code\u003e method; most writers will return a single-element array containing only \u003ccode\u003eImageOutputStream.class\u003c/code\u003e to indicate that they accept only an \u003ccode\u003eImageOutputStream\u003c/code\u003e. \u003cp\u003e The default implementation sets the \u003ccode\u003eoutput\u003c/code\u003e instance variable to the value of \u003ccode\u003eoutput\u003c/code\u003e after checking \u003ccode\u003eoutput\u003c/code\u003e against the set of classes advertised by the originating provider, if there is one.\n * @param output the \u003ccode\u003eImageOutputStream\u003c/code\u003e or other\u003ccode\u003eObject\u003c/code\u003e to use for future writing.\n * @exception IllegalArgumentException if \u003ccode\u003eoutput\u003c/code\u003e isnot an instance of one of the classes returned by the originating service provider\u0027s \u003ccode\u003egetOutputTypes\u003c/code\u003e method.\n * @see #getOutput\n */\n","tf":{"freq":{"singl":2,"accept":2,"variabl":1,"servic":2,"distribut":1,"type":2,"close":1,"requir":1,"given":1,"sequenc":2,"writer":3,"metadata":2,"argument":1,"element":1,"except":2,"remov":1,"preserv":1,"writabl":1,"imag":10,"provid":3,"prepar":2,"instanc":2,"content":2,"contain":1,"will":4,"output":19,"readi":1,"array":1,"legal":1,"call":1,"stream":10,"connect":1,"seri":1,"allow":1,"pixel":1,"one":2,"readabl":1,"data":1,"use":2,"object":3,"network":1,"applic":1,"isnot":1,"indic":1,"full":1,"current":1,"write":9,"valu":1,"exist":1,"end":4,"portion":1,"direct":1,"transmit":1,"protocol":1,"may":1,"futur":1,"assum":1,"check":1,"advertis":2,"origin":2,"illeg":1,"alter":1,"general":1,"empti":4,"replac":3,"method":4,"interact":1,"devic":1,"insert":3,"intend":1,"destin":2},"maxFreq":19,"totalTerms":152},"loc":20}