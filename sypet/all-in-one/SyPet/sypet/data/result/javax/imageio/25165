{"id":25165,"className":"javax.imageio.ImageIO","methodName":"getImageWritersByFormatName","signature":"\u003cjavax.imageio.ImageIO: java.util.Iterator\u003cjavax.imageio.ImageWriter\u003e getImageWritersByFormatName(java.lang.String)\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eIterator\u003c/code\u003e containing all currently registered \u003ccode\u003eImageWriter\u003c/code\u003es that claim to be able to encode the named format.\n * @param formatName a \u003ccode\u003eString\u003c/code\u003e containing the informalname of a format (\u003ci\u003ee.g.\u003c/i\u003e, \"jpeg\" or \"tiff\".\n * @return an \u003ccode\u003eIterator\u003c/code\u003e containing\u003ccode\u003eImageWriter\u003c/code\u003es.\n * @exception IllegalArgumentException if \u003ccode\u003eformatName\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @see javax.imageio.spi.ImageWriterSpi#getFormatNames\n */\n","tf":{"freq":{"argument":1,"except":2,"jpeg":1,"format":6,"abl":1,"informalnam":1,"imag":4,"illeg":1,"encod":1,"javax":1,"spi":2,"name":5,"contain":3,"string":1,"current":1,"regist":1,"claim":1,"writer":4,"iter":2,"imageio":1,"tiff":1},"maxFreq":6,"totalTerms":41},"loc":16}