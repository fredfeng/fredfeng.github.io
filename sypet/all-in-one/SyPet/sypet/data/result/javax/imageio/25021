{"id":25021,"className":"javax.imageio.ImageTypeSpecifier","methodName":"createPacked","signature":"\u003cjavax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createPacked(java.awt.color.ColorSpace,int,int,int,int,int,boolean)\u003e","javadoc":"/** \n * Returns a specifier for a packed image format that will use a \u003ccode\u003eDirectColorModel\u003c/code\u003e and a packed \u003ccode\u003eSampleModel\u003c/code\u003e to store each pixel packed into in a single byte, short, or int.\n * @param colorSpace the desired \u003ccode\u003eColorSpace\u003c/code\u003e.\n * @param redMask a contiguous mask indicated the position of thered channel.\n * @param greenMask a contiguous mask indicated the position of thegreen channel.\n * @param blueMask a contiguous mask indicated the position of theblue channel.\n * @param alphaMask a contiguous mask indicated the position of thealpha channel.\n * @param transferType the desired \u003ccode\u003eSampleModel\u003c/code\u003e transfer type.\n * @param isAlphaPremultiplied \u003ccode\u003etrue\u003c/code\u003e if the color channelswill be premultipled by the alpha channel.\n * @return an \u003ccode\u003eImageTypeSpecifier\u003c/code\u003e with the desiredcharacteristics.\n * @exception IllegalArgumentException if \u003ccode\u003ecolorSpace\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003ecolorSpace\u003c/code\u003eis not of type \u003ccode\u003eTYPE_RGB\u003c/code\u003e.\n * @exception IllegalArgumentException if no mask has at least 1bit set.\n * @exception IllegalArgumentException if\u003ccode\u003etransferType\u003c/code\u003e if not one of \u003ccode\u003eDataBuffer.TYPE_BYTE\u003c/code\u003e, \u003ccode\u003eDataBuffer.TYPE_USHORT\u003c/code\u003e, or \u003ccode\u003eDataBuffer.TYPE_INT\u003c/code\u003e.\n */\n","tf":{"freq":{"desiredcharacterist":1,"model":3,"store":1,"pixel":1,"singl":1,"least":1,"one":1,"data":3,"use":1,"mask":9,"pack":4,"type":5,"space":4,"desir":2,"specifi":2,"buffer":3,"premultipli":1,"thealpha":1,"indic":4,"alpha":3,"premultipl":1,"argument":4,"direct":1,"except":8,"transfer":3,"creat":1,"green":1,"theblu":1,"true":1,"format":1,"contigu":4,"imag":2,"illeg":4,"channelswil":1,"bit":1,"red":1,"blue":1,"color":6,"thegreen":1,"will":1,"posit":4,"channel":5,"sampl":2},"maxFreq":9,"totalTerms":106},"loc":9}