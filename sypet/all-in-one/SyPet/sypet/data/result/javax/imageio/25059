{"id":25059,"className":"javax.imageio.ImageWriter","methodName":"getPreferredThumbnailSizes","signature":"\u003cjavax.imageio.ImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)\u003e","javadoc":"/** \n * Returns an array of \u003ccode\u003eDimension\u003c/code\u003es indicating the legal size ranges for thumbnail images as they will be encoded in the output file or stream.  This information is merely advisory; the writer will resize any supplied thumbnails as necessary. \u003cp\u003e The information is returned as a set of pairs; the first element of a pair contains an (inclusive) minimum width and height, and the second element contains an (inclusive) maximum width and height.  Together, each pair defines a valid range of sizes.  To specify a fixed size, the same width and height will appear for both elements.  A return value of \u003ccode\u003enull\u003c/code\u003e indicates that the size is arbitrary or unknown. \u003cp\u003e An \u003ccode\u003eImageWriteParam\u003c/code\u003e may optionally be supplied for cases where it may affect thumbnail handling. \u003cp\u003e If the supplied \u003ccode\u003eImageWriteParam\u003c/code\u003e contains optional setting values not supported by this writer (\u003ci\u003ee.g.\u003c/i\u003e progressive encoding or any format-specific settings), they will be ignored. \u003cp\u003e The default implementation returns \u003ccode\u003enull\u003c/code\u003e.\n * @param imageType an \u003ccode\u003eImageTypeSpecifier\u003c/code\u003e indicating thetype of image to be written, or \u003ccode\u003enull\u003c/code\u003e.\n * @param param the \u003ccode\u003eImageWriteParam\u003c/code\u003e that will be used forwriting, or \u003ccode\u003enull\u003c/code\u003e.\n * @param streamMetadata an \u003ccode\u003eIIOMetadata\u003c/code\u003e object that willbe used for writing, or \u003ccode\u003enull\u003c/code\u003e.\n * @param imageMetadata an \u003ccode\u003eIIOMetadata\u003c/code\u003e object that willbe used for writing, or \u003ccode\u003enull\u003c/code\u003e.\n * @return an array of \u003ccode\u003eDimension\u003c/code\u003es with an even lengthof at least two, or \u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"progress":1,"appear":1,"advisori":1,"second":1,"least":1,"willb":2,"type":2,"necessari":1,"resiz":1,"specifi":2,"arbitrari":1,"height":3,"file":1,"rang":2,"writer":2,"option":2,"metadata":2,"element":3,"ignor":1,"support":1,"width":3,"format":1,"imag":8,"togeth":1,"size":5,"inform":2,"encod":2,"ometadata":2,"thumbnail":4,"maximum":1,"contain":3,"will":5,"even":1,"mere":1,"prefer":1,"output":1,"array":2,"legal":1,"defin":1,"valid":1,"stream":2,"thetyp":1,"pair":3,"minimum":1,"use":3,"object":2,"affect":1,"inclus":2,"indic":3,"fix":1,"written":1,"write":5,"valu":2,"may":2,"forwrit":1,"suppli":3,"unknown":1,"dimens":2,"handl":1,"two":1,"specif":1,"first":1,"lengthof":1},"maxFreq":8,"totalTerms":118},"loc":3}