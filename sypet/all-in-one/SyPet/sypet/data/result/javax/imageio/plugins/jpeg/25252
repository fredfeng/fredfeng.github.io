{"id":25252,"className":"javax.imageio.plugins.jpeg.JPEGImageReadParam","methodName":"setDecodeTables","signature":"\u003cjavax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])\u003e","javadoc":"/** \n * Sets the quantization and Huffman tables to use in decoding abbreviated streams.  There may be a maximum of 4 tables of each type.  These tables are ignored once tables are encountered in the stream.  All arguments must be non-\u003ccode\u003enull\u003c/code\u003e.  The two arrays of Huffman tables must have the same number of elements.  The table specifiers in the frame and scan headers in the stream are assumed to be equivalent to indices into these arrays.  The argument arrays are copied by this method.\n * @param qTables an array of quantization table objects.\n * @param DCHuffmanTables an array of Huffman table objects.\n * @param ACHuffmanTables an array of Huffman table objects.\n * @exception IllegalArgumentException if any of the argumentsis \u003ccode\u003enull\u003c/code\u003e, has more than 4 elements, or if the numbers of DC and AC tables differ.\n * @see #unsetDecodeTables\n */\n","tf":{"freq":{"stream":3,"use":1,"object":3,"type":1,"copi":1,"must":2,"specifi":1,"argumentsi":1,"indic":1,"equival":1,"quantiz":2,"abbrevi":1,"argument":3,"decod":3,"element":2,"except":2,"ignor":1,"may":1,"assum":1,"number":2,"illeg":1,"header":1,"non":1,"differ":1,"two":1,"frame":1,"unset":1,"encount":1,"maximum":1,"tabl":15,"huffman":6,"method":1,"scan":1,"array":6},"maxFreq":15,"totalTerms":71},"loc":15}