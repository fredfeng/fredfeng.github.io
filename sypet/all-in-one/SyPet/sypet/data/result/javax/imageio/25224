{"id":25224,"className":"javax.imageio.ImageReader","methodName":"hasThumbnails","signature":"\u003cjavax.imageio.ImageReader: boolean hasThumbnails(int)\u003e","javadoc":"/** \n * Returns \u003ccode\u003etrue\u003c/code\u003e if the given image has thumbnail preview images associated with it.  If the format does not support thumbnails (\u003ccode\u003ereaderSupportsThumbnails\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e), \u003ccode\u003efalse\u003c/code\u003e will be returned regardless of whether an input source has been set or whether \u003ccode\u003eimageIndex\u003c/code\u003e is in bounds. \u003cp\u003e The default implementation returns \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003egetNumThumbnails\u003c/code\u003e returns a value greater than 0.\n * @param imageIndex the index of the image being queried.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the given image has thumbnails.\n * @exception IllegalStateException if the reader supportsthumbnails but the input source has not been set.\n * @exception IndexOutOfBoundsException if the reader supportsthumbnails but \u003ccode\u003eimageIndex\u003c/code\u003e is out of bounds.\n * @exception IOException if an error occurs during reading.\n */\n","tf":{"freq":{"fals":2,"greater":1,"state":1,"whether":2,"supportsthumbnail":2,"given":2,"associ":1,"read":1,"valu":1,"regardless":1,"index":5,"except":6,"support":2,"error":1,"true":3,"format":1,"imag":7,"illeg":1,"queri":1,"input":2,"num":1,"reader":3,"thumbnail":6,"preview":1,"will":1,"sourc":2,"bound":3,"occur":1},"maxFreq":7,"totalTerms":61},"loc":3}