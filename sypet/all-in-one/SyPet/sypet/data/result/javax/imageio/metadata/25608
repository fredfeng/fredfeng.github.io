{"id":25608,"className":"javax.imageio.metadata.IIOMetadata","methodName":"mergeTree","signature":"\u003cjavax.imageio.metadata.IIOMetadata: void mergeTree(java.lang.String,org.w3c.dom.Node)\u003e","javadoc":"/** \n * Alters the internal state of this \u003ccode\u003eIIOMetadata\u003c/code\u003e object from a tree of XML DOM \u003ccode\u003eNode\u003c/code\u003es whose syntax is defined by the given metadata format.  The previous state is altered only as necessary to accomodate the nodes that are present in the given tree.  If the tree structure or contents are invalid, an \u003ccode\u003eIIOInvalidTreeException\u003c/code\u003e will be thrown. \u003cp\u003e As the semantics of how a tree or subtree may be merged with another tree are completely format-specific, plug-in authors may implement this method in whatever manner is most appropriate for the format, including simply replacing all existing state with the contents of the given tree.\n * @param formatName the desired metadata format.\n * @param root an XML DOM \u003ccode\u003eNode\u003c/code\u003e object forming theroot of a tree.\n * @exception IllegalStateException if this object is read-only.\n * @exception IllegalArgumentException if \u003ccode\u003eformatName\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e or is not one of the names returned by \u003ccode\u003egetMetadataFormatNames\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003eroot\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @exception IIOInvalidTreeException if the tree cannot be parsedsuccessfully using the rules of the given format.\n * @see #getMetadataFormatNames\n * @see #getAsTree\n * @see #setFromTree\n */\n","tf":{"freq":{"root":2,"desir":1,"necessari":1,"invalid":1,"tree":13,"given":4,"whatev":1,"metadata":4,"argument":2,"except":9,"thrown":1,"form":1,"whose":1,"format":9,"content":2,"present":1,"oinvalid":2,"node":3,"syntax":1,"ometadata":1,"plug":1,"will":1,"merg":2,"defin":1,"simpli":1,"accomod":1,"structur":1,"one":1,"state":4,"use":1,"object":3,"anoth":1,"parsedsuccess":1,"author":1,"rule":1,"semant":1,"name":5,"theroot":1,"read":1,"subtre":1,"exist":1,"complet":1,"may":2,"includ":1,"previous":1,"illeg":3,"alter":2,"specif":1,"appropri":1,"replac":1,"intern":1,"method":1,"manner":1},"maxFreq":13,"totalTerms":107},"loc":0}