{"id":25124,"className":"javax.imageio.ImageReadParam","methodName":"setSourceProgressivePasses","signature":"\u003cjavax.imageio.ImageReadParam: void setSourceProgressivePasses(int,int)\u003e","javadoc":"/** \n * Sets the range of progressive passes that will be decoded. Passes outside of this range will be ignored. \u003cp\u003e A progressive pass is a re-encoding of the entire image, generally at progressively higher effective resolutions, but requiring greater transmission bandwidth.  The most common use of progressive encoding is found in the JPEG format, where successive passes include more detailed representations of the high-frequency image content. \u003cp\u003e The actual number of passes to be decoded is determined during decoding, based on the number of actual passes available in the stream.  Thus if \u003ccode\u003eminPass + numPasses - 1\u003c/code\u003e is larger than the index of the last available passes, decoding will end with that pass. \u003cp\u003e A value of \u003ccode\u003enumPasses\u003c/code\u003e of \u003ccode\u003eInteger.MAX_VALUE\u003c/code\u003e indicates that all passes from \u003ccode\u003eminPass\u003c/code\u003e forward should be read.  Otherwise, the index of the last pass (\u003ci\u003ei.e.\u003c/i\u003e, \u003ccode\u003eminPass + numPasses - 1\u003c/code\u003e) must not exceed \u003ccode\u003eInteger.MAX_VALUE\u003c/code\u003e. \u003cp\u003e There is no \u003ccode\u003eunsetSourceProgressivePasses\u003c/code\u003e method; the same effect may be obtained by calling \u003ccode\u003esetSourceProgressivePasses(0, Integer.MAX_VALUE)\u003c/code\u003e.\n * @param minPass the index of the first pass to be decoded.\n * @param numPasses the maximum number of passes to be decoded.\n * @exception IllegalArgumentException if \u003ccode\u003eminPass\u003c/code\u003e isnegative, \u003ccode\u003enumPasses\u003c/code\u003e is negative or 0, or \u003ccode\u003enumPasses\u003c/code\u003e is smaller than \u003ccode\u003eInteger.MAX_VALUE\u003c/code\u003e but \u003ccode\u003eminPass + numPasses - 1\u003c/code\u003e is greater than \u003ccode\u003eINTEGER.MAX_VALUE\u003c/code\u003e.\n * @see #getSourceMinProgressivePass\n * @see #getSourceMaxProgressivePass\n */\n","tf":{"freq":{"progress":9,"detail":1,"greater":2,"last":2,"higher":1,"isneg":1,"must":1,"requir":1,"forward":1,"rang":2,"frequenc":1,"argument":1,"decod":6,"except":2,"ignor":1,"index":3,"number":3,"avail":2,"format":1,"imag":2,"content":1,"obtain":1,"encod":2,"outsid":1,"maximum":1,"unset":1,"determin":1,"will":3,"negat":1,"sourc":5,"entir":1,"otherwis":1,"call":1,"stream":1,"common":1,"use":1,"transmiss":1,"smaller":1,"bandwidth":1,"resolut":1,"indic":1,"read":1,"valu":1,"end":1,"min":7,"may":1,"max":1,"includ":1,"thus":1,"larger":1,"exceed":1,"illeg":1,"general":1,"pass":30,"represent":1,"num":7,"effect":2,"base":1,"actual":2,"method":1,"high":1,"first":1,"success":1,"integ":4,"found":1},"maxFreq":30,"totalTerms":141},"loc":16}