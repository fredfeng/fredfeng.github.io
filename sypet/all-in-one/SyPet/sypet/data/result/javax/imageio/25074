{"id":25074,"className":"javax.imageio.ImageWriter","methodName":"canRemoveImage","signature":"\u003cjavax.imageio.ImageWriter: boolean canRemoveImage(int)\u003e","javadoc":"/** \n * Returns \u003ccode\u003etrue\u003c/code\u003e if the writer supports the removal of an existing image at the given index.  Existing images with indices greater than the insertion index will have their indices decreased by 1. \u003cp\u003e A writer that does not support any image removal may return \u003ccode\u003efalse\u003c/code\u003e without performing bounds checking on the index. \u003cp\u003e The default implementation throws an \u003ccode\u003eIllegalStateException\u003c/code\u003e if the output is \u003ccode\u003enull\u003c/code\u003e, and otherwise returns \u003ccode\u003efalse\u003c/code\u003e without checking the value of \u003ccode\u003eimageIndex\u003c/code\u003e.\n * @param imageIndex the index of the image to be removed.\n * @return \u003ccode\u003etrue\u003c/code\u003e if it is possible to remove the givenimage.\n * @exception IllegalStateException if the output has notbeen set.\n * @exception IndexOutOfBoundsException if the writer supportsimage removal in general, but \u003ccode\u003eimageIndex\u003c/code\u003e is less than 0 or greater than the largest available index.\n * @exception IOException if an I/O error occurs during thequery.\n */\n","tf":{"freq":{"fals":2,"otherwis":1,"greater":2,"decreas":1,"state":2,"possibl":1,"perform":1,"indic":2,"given":1,"thequeri":1,"valu":1,"writer":3,"exist":2,"less":1,"index":9,"may":1,"except":7,"support":2,"error":1,"check":2,"supportsimag":1,"remov":6,"true":2,"avail":1,"imag":8,"without":2,"illeg":2,"general":1,"largest":1,"will":1,"notbeen":1,"insert":1,"output":2,"bound":2,"occur":1,"givenimag":1},"maxFreq":9,"totalTerms":76},"loc":6}