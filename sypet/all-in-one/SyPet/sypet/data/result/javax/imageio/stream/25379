{"id":25379,"className":"javax.imageio.stream.ImageOutputStream","methodName":"writeShort","signature":"\u003cjavax.imageio.stream.ImageOutputStream: void writeShort(int)\u003e","javadoc":"/** \n * Writes the 16 low-order bits of \u003ccode\u003ev\u003c/code\u003e to the stream. The 16 high-order bits of \u003ccode\u003ev\u003c/code\u003e are ignored. If the stream uses network byte order, the bytes written, in order, will be: \u003cpre\u003e (byte)((v \u0026gt;\u0026gt; 8) \u0026amp; 0xff) (byte)(v \u0026amp; 0xff) \u003c/pre\u003e Otherwise, the bytes written will be: \u003cpre\u003e (byte)(v \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 8) \u0026amp; 0xff) \u003c/pre\u003e \u003cp\u003e If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first.  The bit offset will be 0 after the write.\n * @param v an \u003ccode\u003eint\u003c/code\u003e containing the short value to bewritten.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"otherwis":1,"stream":3,"xff":4,"use":1,"zero":1,"network":1,"bewritten":1,"order":4,"written":3,"write":3,"current":1,"valu":1,"offset":2,"pad":1,"except":2,"ignor":1,"error":1,"non":1,"bit":4,"remaind":1,"pre":4,"contain":1,"will":3,"high":1,"within":1,"low":1,"amp":4,"first":1,"occur":1},"maxFreq":4,"totalTerms":54},"loc":0}