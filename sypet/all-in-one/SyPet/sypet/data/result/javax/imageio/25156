{"id":25156,"className":"javax.imageio.ImageIO","methodName":"getImageReadersBySuffix","signature":"\u003cjavax.imageio.ImageIO: java.util.Iterator\u003cjavax.imageio.ImageReader\u003e getImageReadersBySuffix(java.lang.String)\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eIterator\u003c/code\u003e containing all currently registered \u003ccode\u003eImageReader\u003c/code\u003es that claim to be able to decode files with the given suffix.\n * @param fileSuffix a \u003ccode\u003eString\u003c/code\u003e containing a filesuffix (\u003ci\u003ee.g.\u003c/i\u003e, \"jpg\" or \"tiff\").\n * @return an \u003ccode\u003eIterator\u003c/code\u003e containing\u003ccode\u003eImageReader\u003c/code\u003es.\n * @exception IllegalArgumentException if \u003ccode\u003efileSuffix\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e.\n * @see javax.imageio.spi.ImageReaderSpi#getFileSuffixes\n */\n","tf":{"freq":{"argument":1,"decod":1,"except":2,"abl":1,"imag":4,"illeg":1,"suffix":5,"jpg":1,"filesuffix":1,"reader":4,"given":1,"javax":1,"file":4,"spi":2,"string":1,"contain":3,"current":1,"regist":1,"claim":1,"iter":2,"imageio":1,"tiff":1},"maxFreq":5,"totalTerms":40},"loc":16}