{"id":25075,"className":"javax.imageio.ImageWriter","methodName":"removeImage","signature":"\u003cjavax.imageio.ImageWriter: void removeImage(int)\u003e","javadoc":"/** \n * Removes an image from the stream. \u003cp\u003e If \u003ccode\u003ecanRemoveImage(imageIndex)\u003c/code\u003e returns false, an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003ewill be thrown. \u003cp\u003e The removal may or may not cause a reduction in the actual file size. \u003cp\u003e The default implementation throws an \u003ccode\u003eIllegalStateException\u003c/code\u003e if the output is \u003ccode\u003enull\u003c/code\u003e, and otherwise throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @param imageIndex the index of the image to be removed.\n * @exception IllegalStateException if the output has notbeen set.\n * @exception UnsupportedOperationException if\u003ccode\u003ecanRemoveImage(imageIndex)\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e.\n * @exception IndexOutOfBoundsException if \u003ccode\u003eimageIndex\u003c/code\u003eis less than 0 or greater than the largest available index.\n * @exception IOException if an I/O error occurs during theremoval.\n */\n","tf":{"freq":{"fals":2,"otherwis":1,"unsupport":3,"stream":1,"greater":1,"state":2,"oper":3,"file":1,"theremov":1,"less":1,"may":2,"thrown":1,"except":11,"index":7,"error":1,"remov":6,"avail":1,"imag":9,"illeg":2,"largest":1,"size":1,"caus":1,"will":1,"actual":1,"notbeen":1,"reduct":1,"output":2,"bound":1,"occur":1},"maxFreq":11,"totalTerms":67},"loc":3}