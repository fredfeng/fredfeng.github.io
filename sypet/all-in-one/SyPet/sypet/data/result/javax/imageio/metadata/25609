{"id":25609,"className":"javax.imageio.metadata.IIOMetadata","methodName":"setFromTree","signature":"\u003cjavax.imageio.metadata.IIOMetadata: void setFromTree(java.lang.String,org.w3c.dom.Node)\u003e","javadoc":"/** \n * Sets the internal state of this \u003ccode\u003eIIOMetadata\u003c/code\u003e object from a tree of XML DOM \u003ccode\u003eNode\u003c/code\u003es whose syntax is defined by the given metadata format.  The previous state is discarded.  If the tree\u0027s structure or contents are invalid, an \u003ccode\u003eIIOInvalidTreeException\u003c/code\u003e will be thrown. \u003cp\u003e The default implementation calls \u003ccode\u003ereset\u003c/code\u003e followed by \u003ccode\u003emergeTree(formatName, root)\u003c/code\u003e.\n * @param formatName the desired metadata format.\n * @param root an XML DOM \u003ccode\u003eNode\u003c/code\u003e object forming theroot of a tree.\n * @exception IllegalStateException if this object is read-only.\n * @exception IllegalArgumentException if \u003ccode\u003eformatName\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e or is not one of the names returned by \u003ccode\u003egetMetadataFormatNames\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003eroot\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @exception IIOInvalidTreeException if the tree cannot be parsedsuccessfully using the rules of the given format.\n * @see #getMetadataFormatNames\n * @see #getAsTree\n * @see #mergeTree\n */\n","tf":{"freq":{"defin":1,"call":1,"root":3,"structur":1,"one":1,"state":3,"use":1,"object":3,"desir":1,"discard":1,"parsedsuccess":1,"given":2,"tree":10,"invalid":1,"rule":1,"name":6,"read":1,"theroot":1,"reset":1,"metadata":4,"follow":1,"argument":2,"except":9,"thrown":1,"form":1,"previous":1,"whose":1,"format":8,"illeg":3,"content":1,"syntax":1,"node":2,"oinvalid":2,"ometadata":1,"intern":1,"will":1,"merg":2},"maxFreq":10,"totalTerms":82},"loc":4}