{"id":25579,"className":"javax.imageio.spi.ServiceRegistry","methodName":"setOrdering","signature":"\u003cjavax.imageio.spi.ServiceRegistry: boolean setOrdering(java.lang.Class,T,T)\u003e","javadoc":"/** \n * Sets a pairwise ordering between two service provider objects within a given category.  If one or both objects are not currently registered within the given category, or if the desired ordering is already set, nothing happens and \u003ccode\u003efalse\u003c/code\u003e is returned.  If the providers previously were ordered in the reverse direction, that ordering is removed. \u003cp\u003e The ordering will be used by the \u003ccode\u003egetServiceProviders\u003c/code\u003e methods when their \u003ccode\u003euseOrdering\u003c/code\u003e argument is \u003ccode\u003etrue\u003c/code\u003e.\n * @param category a \u003ccode\u003eClass\u003c/code\u003e object indicating thecategory under which the preference is to be established.\n * @param firstProvider the preferred provider.\n * @param secondProvider the provider to which\u003ccode\u003efirstProvider\u003c/code\u003e is preferred.\n * @return \u003ccode\u003etrue\u003c/code\u003e if a previously unset orderingwas established.\n * @exception IllegalArgumentException if either provider is\u003ccode\u003enull\u003c/code\u003e or they are the same object.\n * @exception IllegalArgumentException if there is no categorycorresponding to \u003ccode\u003ecategory\u003c/code\u003e.\n */\n","tf":{"freq":{"fals":1,"second":1,"one":1,"servic":2,"pairwis":1,"use":2,"object":4,"desir":1,"categorycorrespond":1,"revers":1,"indic":1,"given":2,"order":7,"current":1,"regist":1,"noth":1,"happen":1,"orderingwa":1,"argument":3,"direct":1,"except":4,"categori":4,"previous":2,"thecategori":1,"establish":2,"remov":1,"true":2,"illeg":2,"provid":9,"two":1,"either":1,"unset":1,"will":1,"alreadi":1,"method":1,"within":2,"prefer":3,"first":2},"maxFreq":9,"totalTerms":74},"loc":17}