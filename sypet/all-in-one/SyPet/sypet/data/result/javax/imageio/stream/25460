{"id":25460,"className":"javax.imageio.stream.MemoryCache","methodName":"write","signature":"\u003cjavax.imageio.stream.MemoryCache: void write(byte[],int,int,long)\u003e","javadoc":"/** \n * Overwrites and/or appends the cache from a byte array. The length of the cache will be extended as needed to hold the incoming data.\n * @param b an array of bytes containing data to be written.\n * @param off the starting offset withing the data array.\n * @param len the number of bytes to be written.\n * @param pos the cache position at which to begin writing.\n * @exception NullPointerException if \u003ccode\u003eb\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @exception IndexOutOfBoundsException if \u003ccode\u003eoff\u003c/code\u003e,\u003ccode\u003elen\u003c/code\u003e, or \u003ccode\u003epos\u003c/code\u003e are negative, or if \u003ccode\u003eoff+len \u003e b.length\u003c/code\u003e.\n */\n","tf":{"freq":{"need":1,"append":1,"index":1,"except":4,"overwrit":1,"hold":1,"data":3,"number":1,"len":3,"cach":3,"begin":1,"pos":2,"start":1,"written":2,"contain":1,"write":2,"length":2,"will":1,"pointer":1,"negat":1,"offset":1,"posit":1,"bound":1,"array":3,"incom":1},"maxFreq":4,"totalTerms":40},"loc":30}