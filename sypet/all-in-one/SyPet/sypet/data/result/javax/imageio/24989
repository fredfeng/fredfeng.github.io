{"id":24989,"className":"javax.imageio.ImageWriteParam","methodName":"getCompressionTypes","signature":"\u003cjavax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()\u003e","javadoc":"/** \n * Returns a list of available compression types, as an array or \u003ccode\u003eString\u003c/code\u003es, or \u003ccode\u003enull\u003c/code\u003e if a compression type may not be chosen using these interfaces.  The array returned is a copy. \u003cp\u003e If the writer only offers a single, mandatory form of compression, it is not necessary to provide any named compression types.  Named compression types should only be used where the user is able to make a meaningful choice between different schemes. \u003cp\u003e The default implementation checks if compression is supported and throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e if not.  Otherwise, it returns a clone of the \u003ccode\u003ecompressionTypes\u003c/code\u003e instance variable if it is non-\u003ccode\u003enull\u003c/code\u003e, or else returns \u003ccode\u003enull\u003c/code\u003e.\n * @return an array of \u003ccode\u003eString\u003c/code\u003es containing the(non-localized) names of available compression types, or \u003ccode\u003enull\u003c/code\u003e.\n * @exception UnsupportedOperationException if the writer does notsupport compression.\n */\n","tf":{"freq":{"otherwis":1,"unsupport":2,"singl":1,"variabl":1,"use":2,"chosen":1,"abl":1,"type":7,"necessari":1,"copi":1,"scheme":1,"oper":2,"name":3,"writer":2,"clone":1,"except":3,"may":1,"support":1,"check":1,"form":1,"choic":1,"avail":2,"list":1,"offer":1,"meaning":1,"provid":1,"els":1,"notsupport":1,"non":2,"instanc":1,"compress":10,"differ":1,"mandatori":1,"contain":1,"string":2,"local":1,"user":1,"make":1,"array":3},"maxFreq":10,"totalTerms":67},"loc":10}