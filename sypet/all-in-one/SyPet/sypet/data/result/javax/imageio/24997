{"id":24997,"className":"javax.imageio.ImageWriteParam","methodName":"getBitRate","signature":"\u003cjavax.imageio.ImageWriteParam: float getBitRate(float)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003efloat\u003c/code\u003e indicating an estimate of the number of bits of output data for each bit of input image data at the given quality level.  The value will typically lie between \u003ccode\u003e0\u003c/code\u003e and \u003ccode\u003e1\u003c/code\u003e, with smaller values indicating more compression.  A special value of \u003ccode\u003e-1.0F\u003c/code\u003e is used to indicate that no estimate is available. \u003cp\u003e If there are multiple compression types but none has been set, an \u003ccode\u003eIllegalStateException\u003c/code\u003e is thrown. \u003cp\u003e The default implementation checks that compression is supported and the compression mode is \u003ccode\u003eMODE_EXPLICIT\u003c/code\u003e.  If so, if \u003ccode\u003egetCompressionTypes()\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e or \u003ccode\u003egetCompressionType()\u003c/code\u003e is non-\u003ccode\u003enull\u003c/code\u003e, and \u003ccode\u003equality\u003c/code\u003e is within bounds, it returns \u003ccode\u003e-1.0\u003c/code\u003e.\n * @param quality the quality setting whose bit rate is to bequeried.\n * @return an estimate of the compressed bit rate, or\u003ccode\u003e-1.0F\u003c/code\u003e if no estimate is available.\n * @exception UnsupportedOperationException if the writer does notsupport compression.\n * @exception IllegalStateException if the compression mode is not\u003ccode\u003eMODE_EXPLICIT\u003c/code\u003e.\n * @exception IllegalStateException if the set of legalcompression types is non-\u003ccode\u003enull\u003c/code\u003e and the current compression type is \u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003equality\u003c/code\u003e isnot between \u003ccode\u003e0\u003c/code\u003eand \u003ccode\u003e1\u003c/code\u003e, inclusive.\n */\n","tf":{"freq":{"unsupport":1,"legalcompress":1,"state":3,"data":2,"typic":1,"use":1,"bequeri":1,"type":5,"smaller":1,"mode":2,"inclus":1,"estim":4,"level":1,"rate":3,"isnot":1,"given":1,"indic":3,"oper":1,"current":1,"none":1,"valu":3,"writer":1,"argument":1,"thrown":1,"except":9,"support":1,"check":1,"multipl":1,"whose":1,"qualiti":5,"number":1,"avail":2,"imag":1,"illeg":4,"notsupport":1,"non":2,"compress":10,"bit":5,"input":1,"will":1,"special":1,"within":1,"output":1,"bound":1,"lie":1},"maxFreq":10,"totalTerms":92},"loc":18}