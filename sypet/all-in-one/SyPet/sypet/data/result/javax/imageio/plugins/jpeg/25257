{"id":25257,"className":"javax.imageio.plugins.jpeg.JPEGHuffmanTable","methodName":"JPEGHuffmanTable","signature":"\u003cjavax.imageio.plugins.jpeg.JPEGHuffmanTable: void JPEGHuffmanTable(short[],short[])\u003e","javadoc":"/** \n * Creates a Huffman table and initializes it. The input arrays are copied. The arrays must describe a possible Huffman table. For example, 3 codes cannot be expressed with a single bit.\n * @param lengths an array of {@code short}s where \u003ccode\u003elengths[k]\u003c/code\u003e is equal to the number of values with corresponding codes of length \u003ccode\u003ek + 1\u003c/code\u003e bits.\n * @param values an array of shorts containing the values inorder of increasing code length.\n * @throws IllegalArgumentException if \u003ccode\u003elengths\u003c/code\u003e or\u003ccode\u003evalues\u003c/code\u003e are null, the length of \u003ccode\u003elengths\u003c/code\u003e is greater than 16, the length of \u003ccode\u003evalues\u003c/code\u003e is greater than 256, if any value in \u003ccode\u003elengths\u003c/code\u003e or \u003ccode\u003evalues\u003c/code\u003e is less than zero, or if the arrays do not describe a valid Huffman table.\n */\n","tf":{"freq":{"increas":1,"valid":1,"greater":2,"singl":1,"correspond":1,"possibl":1,"zero":1,"express":1,"must":1,"copi":1,"ghuffman":1,"length":9,"valu":7,"initi":1,"less":1,"argument":1,"except":1,"creat":1,"describ":2,"inord":1,"equal":1,"number":1,"illeg":1,"bit":2,"input":1,"tabl":4,"contain":1,"exampl":1,"huffman":3,"array":5},"maxFreq":9,"totalTerms":56},"loc":20}