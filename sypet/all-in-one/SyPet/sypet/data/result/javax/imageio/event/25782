{"id":25782,"className":"javax.imageio.event.IIOReadUpdateListener","methodName":"imageUpdate","signature":"\u003cjavax.imageio.event.IIOReadUpdateListener: void imageUpdate(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int[])\u003e","javadoc":"/** \n * Reports that a given region of the image has been updated. The application might choose to redisplay the specified area, for example, in order to provide a progressive display effect, or perform other incremental processing. \u003cp\u003e Note that different image format readers may produce decoded pixels in a variety of different orders.  Many readers will produce pixels in a simple top-to-bottom, left-to-right-order, but others may use multiple passes of interlacing, tiling, etc.  The sequence of updates may even differ from call to call depending on network speeds, for example.  A call to this method does not guarantee that all the specified pixels have actually been updated, only that some activity has taken place within some subregion of the one specified. \u003cp\u003e The particular \u003ccode\u003eImageReader\u003c/code\u003e implementation may choose how often to provide updates.  Each update specifies that a given region of the image has been updated since the last update.  A region is described by its spatial bounding box (\u003ccode\u003eminX\u003c/code\u003e, \u003ccode\u003eminY\u003c/code\u003e, \u003ccode\u003ewidth\u003c/code\u003e, and \u003ccode\u003eheight\u003c/code\u003e); X and Y subsampling factors (\u003ccode\u003eperiodX\u003c/code\u003e and \u003ccode\u003eperiodY\u003c/code\u003e); and a set of updated bands (\u003ccode\u003ebands\u003c/code\u003e).  For example, the update: \u003cpre\u003e minX \u003d 10 minY \u003d 20 width \u003d 3 height \u003d 4 periodX \u003d 2 periodY \u003d 3 bands \u003d { 1, 3 } \u003c/pre\u003e would indicate that bands 1 and 3 of the following pixels were updated: \u003cpre\u003e (10, 20) (12, 20) (14, 20) (10, 23) (12, 23) (14, 23) (10, 26) (12, 26) (14, 26) (10, 29) (12, 29) (14, 29) \u003c/pre\u003e\n * @param source the \u003ccode\u003eImageReader\u003c/code\u003e object calling this method.\n * @param theImage the \u003ccode\u003eBufferedImage\u003c/code\u003e being updated.\n * @param minX the X coordinate of the leftmost updated columnof pixels.\n * @param minY the Y coordinate of the uppermost updated rowof pixels.\n * @param width the number of updated pixels horizontally.\n * @param height the number of updated pixels vertically.\n * @param periodX the horizontal spacing between updated pixels;a value of 1 means no gaps.\n * @param periodY the vertical spacing between updated pixels;a value of 1 means no gaps.\n * @param bands an array of \u003ccode\u003eint\u003c/code\u003es indicating whichbands are being updated.\n */\n","tf":{"freq":{"progress":1,"last":1,"simpl":1,"etc":1,"particular":1,"perform":1,"specifi":4,"buffer":1,"band":5,"height":3,"given":2,"sequenc":1,"report":1,"varieti":1,"taken":1,"place":1,"right":1,"follow":1,"coordin":2,"increment":1,"decod":1,"mani":1,"uppermost":1,"vertic":2,"multipl":1,"width":3,"describ":1,"number":2,"display":1,"format":1,"period":6,"imag":8,"provid":2,"rowof":1,"reader":4,"updat":19,"often":1,"leftmost":1,"will":1,"bottom":1,"sourc":1,"even":1,"interlac":1,"array":1,"gap":2,"region":3,"might":1,"call":4,"redisplay":1,"pixel":10,"columnof":1,"one":1,"use":1,"object":1,"space":2,"activ":1,"whichband":1,"applic":1,"network":1,"subregion":1,"area":1,"indic":2,"order":3,"mean":2,"choos":2,"valu":2,"horizont":2,"left":1,"note":1,"top":1,"min":6,"may":4,"subsampl":1,"spatial":1,"speed":1,"guarante":1,"depend":1,"produc":2,"factor":1,"pass":1,"process":1,"differ":3,"effect":1,"pre":4,"tile":1,"exampl":3,"actual":1,"box":1,"method":2,"within":1,"bound":1},"maxFreq":19,"totalTerms":180},"loc":0}