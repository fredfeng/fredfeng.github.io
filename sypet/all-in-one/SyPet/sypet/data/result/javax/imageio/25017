{"id":25017,"className":"javax.imageio.IIOParam","methodName":"activateController","signature":"\u003cjavax.imageio.IIOParam: boolean activateController()\u003e","javadoc":"/** \n * Activates the installed \u003ccode\u003eIIOParamController\u003c/code\u003e for this \u003ccode\u003eIIOParam\u003c/code\u003e object and returns the resulting value.  When this method returns \u003ccode\u003etrue\u003c/code\u003e, all values for this \u003ccode\u003eIIOParam\u003c/code\u003e object will be ready for the next read or write operation.  If \u003ccode\u003efalse\u003c/code\u003e is returned, no settings in this object will have been disturbed (\u003ci\u003ei.e.\u003c/i\u003e, the user canceled the operation). \u003cp\u003e Ordinarily, the controller will be a GUI providing a user interface for a subclass of \u003ccode\u003eIIOParam\u003c/code\u003e for a particular plug-in.  Controllers need not be GUIs, however.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the controller completed normally.\n * @exception IllegalStateException if there is no controllercurrently installed.\n * @see IIOParamController\n * @see #setController(IIOParamController)\n * @see #getController\n * @see #getDefaultController\n * @see #hasController\n */\n","tf":{"freq":{"need":1,"fals":1,"result":1,"normal":1,"next":1,"state":1,"controllercurr":1,"particular":1,"cancel":1,"object":3,"activ":2,"disturb":1,"oper":2,"write":1,"read":1,"valu":2,"howev":1,"oparam":6,"complet":1,"control":11,"except":2,"ordinarili":1,"instal":2,"true":2,"illeg":1,"provid":1,"plug":1,"will":3,"subclass":1,"method":1,"user":2,"readi":1},"maxFreq":11,"totalTerms":58},"loc":6}