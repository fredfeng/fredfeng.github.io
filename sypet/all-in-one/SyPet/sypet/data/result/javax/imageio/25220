{"id":25220,"className":"javax.imageio.ImageReader","methodName":"readTile","signature":"\u003cjavax.imageio.ImageReader: java.awt.image.BufferedImage readTile(int,int,int)\u003e","javadoc":"/** \n * Reads the tile indicated by the \u003ccode\u003etileX\u003c/code\u003e and \u003ccode\u003etileY\u003c/code\u003e arguments, returning it as a \u003ccode\u003eBufferedImage\u003c/code\u003e.  If the arguments are out of range, an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown.  If the image is not tiled, the values 0, 0 will return the entire image; any other values will cause an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e to be thrown. \u003cp\u003e This method is merely a convenience equivalent to calling \u003ccode\u003eread(int, ImageReadParam)\u003c/code\u003e with a read param specifiying a source region having offsets of \u003ccode\u003etileX*getTileWidth(imageIndex)\u003c/code\u003e, \u003ccode\u003etileY*getTileHeight(imageIndex)\u003c/code\u003e and width and height of \u003ccode\u003egetTileWidth(imageIndex)\u003c/code\u003e, \u003ccode\u003egetTileHeight(imageIndex)\u003c/code\u003e; and subsampling factors of 1 and offsets of 0.  To subsample a tile, call \u003ccode\u003eread\u003c/code\u003e with a read param specifying this region and different subsampling parameters. \u003cp\u003e The default implementation returns the entire image if \u003ccode\u003etileX\u003c/code\u003e and \u003ccode\u003etileY\u003c/code\u003e are 0, or throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e otherwise.\n * @param imageIndex the index of the image to be retrieved.\n * @param tileX the column index (starting with 0) of the tileto be retrieved.\n * @param tileY the row index (starting with 0) of the tileto be retrieved.\n * @return the tile as a \u003ccode\u003eBufferedImage\u003c/code\u003e.\n * @exception IllegalStateException if the input source has not beenset.\n * @exception IndexOutOfBoundsException if \u003ccode\u003eimageIndex\u003c/code\u003eis out of bounds.\n * @exception IllegalArgumentException if the tile indices areout of bounds.\n * @exception IOException if an error occurs during reading.\n */\n","tf":{"freq":{"otherwis":1,"region":2,"call":2,"state":1,"specifi":1,"buffer":2,"tileto":2,"height":3,"indic":2,"equival":1,"rang":1,"read":8,"valu":2,"offset":2,"conveni":1,"argument":6,"index":10,"thrown":2,"except":11,"error":1,"subsampl":3,"width":3,"paramet":1,"beenset":1,"factor":1,"imag":13,"illeg":5,"row":1,"differ":1,"input":1,"caus":1,"areout":1,"start":2,"retriev":3,"tile":18,"column":1,"will":2,"specifiy":1,"method":1,"sourc":2,"mere":1,"entir":2,"bound":3,"occur":1},"maxFreq":18,"totalTerms":130},"loc":6}