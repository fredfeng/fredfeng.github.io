{"id":25575,"className":"javax.imageio.spi.ServiceRegistry","methodName":"getServiceProviders","signature":"\u003cjavax.imageio.spi.ServiceRegistry: java.util.Iterator\u003cT\u003e getServiceProviders(java.lang.Class,boolean)\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eIterator\u003c/code\u003e containing all registered service providers in the given category.  If \u003ccode\u003euseOrdering\u003c/code\u003e is \u003ccode\u003efalse\u003c/code\u003e, the iterator will return all of the server provider objects in an arbitrary order.  Otherwise, the ordering will respect any pairwise orderings that have been set.  If the graph of pairwise orderings contains cycles, any providers that belong to a cycle will not be returned.\n * @param category the category to be retrieved from.\n * @param useOrdering \u003ccode\u003etrue\u003c/code\u003e if pairwise orderingsshould be taken account in ordering the returned objects.\n * @return an \u003ccode\u003eIterator\u003c/code\u003e containing service providerobjects from the given category, possibly in order.\n * @exception IllegalArgumentException if there is no categorycorresponding to \u003ccode\u003ecategory\u003c/code\u003e.\n */\n","tf":{"freq":{"fals":1,"otherwis":1,"belong":1,"servic":3,"cycl":2,"possibl":1,"use":2,"pairwis":3,"object":2,"categorycorrespond":1,"arbitrari":1,"graph":1,"order":8,"given":2,"regist":1,"taken":1,"argument":1,"except":2,"providerobject":1,"categori":5,"orderingsshould":1,"true":1,"illeg":1,"provid":4,"retriev":1,"contain":3,"will":3,"account":1,"server":1,"iter":3,"respect":1},"maxFreq":8,"totalTerms":60},"loc":7}