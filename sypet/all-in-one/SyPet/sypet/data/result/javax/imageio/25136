{"id":25136,"className":"javax.imageio.ImageIO","methodName":"setUseCache","signature":"\u003cjavax.imageio.ImageIO: void setUseCache(boolean)\u003e","javadoc":"/** \n * Sets a flag indicating whether a disk-based cache file should be used when creating \u003ccode\u003eImageInputStream\u003c/code\u003es and \u003ccode\u003eImageOutputStream\u003c/code\u003es. \u003cp\u003e When reading from a standard \u003ccode\u003eInputStream\u003c/code\u003e\u003e, it may be necessary to save previously read information in a cache since the underlying stream does not allow data to be re-read. Similarly, when writing to a standard \u003ccode\u003eOutputStream\u003c/code\u003e, a cache may be used to allow a previously written value to be changed before flushing it to the final destination. \u003cp\u003e The cache may reside in main memory or on disk.  Setting this flag to \u003ccode\u003efalse\u003c/code\u003e disallows the use of disk for future streams, which may be advantageous when working with small images, as the overhead of creating and destroying files is removed. \u003cp\u003e On startup, the value is set to \u003ccode\u003etrue\u003c/code\u003e.\n * @param useCache a \u003ccode\u003eboolean\u003c/code\u003e indicating whether acache file should be used, in cases where it is optional.\n * @see #getUseCache\n */\n","tf":{"freq":{"fals":1,"memori":1,"stream":6,"save":1,"allow":2,"disk":3,"data":1,"use":7,"acach":1,"necessari":1,"whether":2,"destroy":1,"disallow":1,"overhead":1,"indic":2,"file":3,"written":1,"write":1,"read":3,"valu":2,"option":1,"similar":1,"work":1,"may":4,"futur":1,"resid":1,"standard":2,"previous":2,"creat":2,"advantag":1,"remov":1,"true":1,"cach":7,"imag":3,"startup":1,"main":1,"inform":1,"input":2,"flush":1,"flag":2,"base":1,"chang":1,"output":2,"small":1,"destin":1},"maxFreq":7,"totalTerms":83},"loc":3}