{"id":25167,"className":"javax.imageio.ImageIO","methodName":"getImageWritersByMIMEType","signature":"\u003cjavax.imageio.ImageIO: java.util.Iterator\u003cjavax.imageio.ImageWriter\u003e getImageWritersByMIMEType(java.lang.String)\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eIterator\u003c/code\u003e containing all currently registered \u003ccode\u003eImageWriter\u003c/code\u003es that claim to be able to encode files with the given MIME type.\n * @param MIMEType a \u003ccode\u003eString\u003c/code\u003e containing a filesuffix (\u003ci\u003ee.g.\u003c/i\u003e, \"image/jpeg\" or \"image/x-bmp\").\n * @return an \u003ccode\u003eIterator\u003c/code\u003e containing \u003ccode\u003eImageWriter\u003c/code\u003es.\n * @exception IllegalArgumentException if \u003ccode\u003eMIMEType\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @see javax.imageio.spi.ImageWriterSpi#getMIMETypes\n */\n","tf":{"freq":{"argument":1,"except":2,"jpeg":1,"abl":1,"imag":6,"type":5,"illeg":1,"bmp":1,"encod":1,"filesuffix":1,"given":1,"javax":1,"file":1,"spi":2,"string":1,"contain":3,"current":1,"regist":1,"claim":1,"writer":4,"iter":2,"imageio":1},"maxFreq":6,"totalTerms":39},"loc":16}