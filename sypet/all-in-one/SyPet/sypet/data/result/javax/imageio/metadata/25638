{"id":25638,"className":"javax.imageio.metadata.IIOMetadataFormat","methodName":"getObjectClass","signature":"\u003cjavax.imageio.metadata.IIOMetadataFormat: java.lang.Class\u003c?\u003e getObjectClass(java.lang.String)\u003e","javadoc":"/** \n * Returns the \u003ccode\u003eClass\u003c/code\u003e type of the \u003ccode\u003eObject\u003c/code\u003e reference stored within the element.  If this element may not contain an \u003ccode\u003eObject\u003c/code\u003e reference, an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e will be thrown.  If the class type is an array, this field indicates the underlying class type (\u003ci\u003ee.g\u003c/i\u003e, for an array of \u003ccode\u003eint\u003c/code\u003es, this method would return \u003ccode\u003eint.class\u003c/code\u003e). \u003cp\u003e \u003ccode\u003eObject\u003c/code\u003e references whose legal values are defined as a range must implement the \u003ccode\u003eComparable\u003c/code\u003e interface.\n * @param elementName the name of the element being queried.\n * @return a \u003ccode\u003eClass\u003c/code\u003e object.\n * @exception IllegalArgumentException if \u003ccode\u003eelementName\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e or is not a legal element name for this format.\n * @exception IllegalArgumentException if the named element cannotcontain an object value (\u003ci\u003ei.e.\u003c/i\u003e, if \u003ccode\u003egetObjectValueType(elementName) \u003d\u003d VALUE_NONE\u003c/code\u003e).\n */\n","tf":{"freq":{"legal":2,"defin":1,"store":1,"object":7,"type":4,"must":1,"indic":1,"refer":3,"rang":1,"name":6,"valu":3,"argument":3,"element":8,"except":5,"may":1,"thrown":1,"whose":1,"cannotcontain":1,"format":1,"illeg":3,"field":1,"queri":1,"contain":1,"will":1,"method":1,"within":1,"compar":1,"array":2},"maxFreq":8,"totalTerms":63},"loc":0}