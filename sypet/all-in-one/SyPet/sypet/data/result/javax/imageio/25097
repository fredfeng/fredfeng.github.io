{"id":25097,"className":"javax.imageio.ImageTranscoder","methodName":"convertStreamMetadata","signature":"\u003cjavax.imageio.ImageTranscoder: javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageWriteParam)\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eIIOMetadata\u003c/code\u003e object that may be used for encoding and optionally modified using its document interfaces or other interfaces specific to the writer plug-in that will be used for encoding. \u003cp\u003e An optional \u003ccode\u003eImageWriteParam\u003c/code\u003e may be supplied for cases where it may affect the structure of the stream metadata. \u003cp\u003e If the supplied \u003ccode\u003eImageWriteParam\u003c/code\u003e contains optional setting values not understood by this writer or transcoder, they will be ignored.\n * @param inData an \u003ccode\u003eIIOMetadata\u003c/code\u003e object representingstream metadata, used to initialize the state of the returned object.\n * @param param an \u003ccode\u003eImageWriteParam\u003c/code\u003e that will be used toencode the image, or \u003ccode\u003enull\u003c/code\u003e.\n * @return an \u003ccode\u003eIIOMetadata\u003c/code\u003e object, or\u003ccode\u003enull\u003c/code\u003e if the plug-in does not provide metadata encoding capabilities.\n * @exception IllegalArgumentException if \u003ccode\u003einData\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"stream":2,"structur":1,"state":1,"data":2,"use":5,"convert":1,"object":4,"affect":1,"transcod":1,"document":1,"toencod":1,"understood":1,"write":3,"valu":1,"initi":1,"writer":2,"option":3,"metadata":4,"argument":1,"except":2,"ignor":1,"may":3,"capabl":1,"suppli":2,"imag":4,"illeg":1,"provid":1,"specif":1,"encod":3,"ometadata":3,"plug":2,"contain":1,"modifi":1,"will":3,"representingstream":1},"maxFreq":5,"totalTerms":66},"loc":0}