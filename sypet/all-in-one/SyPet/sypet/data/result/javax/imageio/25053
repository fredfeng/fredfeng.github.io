{"id":25053,"className":"javax.imageio.ImageWriter","methodName":"getDefaultWriteParam","signature":"\u003cjavax.imageio.ImageWriter: javax.imageio.ImageWriteParam getDefaultWriteParam()\u003e","javadoc":"/** \n * Returns a new \u003ccode\u003eImageWriteParam\u003c/code\u003e object of the appropriate type for this file format containing default values, that is, those values that would be used if no \u003ccode\u003eImageWriteParam\u003c/code\u003e object were specified.  This is useful as a starting point for tweaking just a few parameters and otherwise leaving the default settings alone. \u003cp\u003e The default implementation constructs and returns a new \u003ccode\u003eImageWriteParam\u003c/code\u003e object that does not allow tiling, progressive encoding, or compression, and that will be localized for the current \u003ccode\u003eLocale\u003c/code\u003e (\u003ci\u003ei.e.\u003c/i\u003e, what you would get by calling \u003ccode\u003enew ImageWriteParam(getLocale())\u003c/code\u003e. \u003cp\u003e Individual plug-ins may return an instance of \u003ccode\u003eImageWriteParam\u003c/code\u003e with additional optional features enabled, or they may return an instance of a plug-in specific subclass of \u003ccode\u003eImageWriteParam\u003c/code\u003e.\n * @return a new \u003ccode\u003eImageWriteParam\u003c/code\u003e object containingdefault values.\n */\n","tf":{"freq":{"otherwis":1,"progress":1,"call":1,"allow":1,"use":2,"object":4,"type":1,"specifi":1,"file":1,"current":1,"write":8,"valu":3,"option":1,"individu":1,"just":1,"addit":1,"may":2,"enabl":1,"paramet":1,"containingdefault":1,"format":1,"imag":7,"instanc":2,"compress":1,"point":1,"specif":1,"encod":1,"plug":2,"start":1,"appropri":1,"contain":1,"tile":1,"subclass":1,"featur":1,"will":1,"leav":1,"alon":1,"local":3,"tweak":1,"construct":1},"maxFreq":8,"totalTerms":64},"loc":3}