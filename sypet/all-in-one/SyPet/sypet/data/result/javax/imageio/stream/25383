{"id":25383,"className":"javax.imageio.stream.ImageOutputStream","methodName":"writeFloat","signature":"\u003cjavax.imageio.stream.ImageOutputStream: void writeFloat(float)\u003e","javadoc":"/** \n * Writes a \u003ccode\u003efloat\u003c/code\u003e value, which is comprised of four bytes, to the output stream. It does this as if it first converts this \u003ccode\u003efloat\u003c/code\u003e value to an \u003ccode\u003eint\u003c/code\u003e in exactly the manner of the \u003ccode\u003eFloat.floatToIntBits\u003c/code\u003e method and then writes the int value in exactly the manner of the \u003ccode\u003ewriteInt\u003c/code\u003e method. \u003cp\u003e If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first.  The bit offset will be 0 after the write.\n * @param v a \u003ccode\u003efloat\u003c/code\u003e containing the value to bewritten.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"pad":1,"except":2,"stream":2,"error":1,"convert":1,"zero":1,"non":1,"bewritten":1,"compris":1,"bit":3,"remaind":1,"contain":1,"written":1,"exact":2,"will":1,"current":1,"write":5,"valu":4,"manner":2,"method":2,"within":1,"four":1,"offset":2,"output":1,"first":2,"occur":1},"maxFreq":5,"totalTerms":42},"loc":0}