{"id":25562,"className":"javax.imageio.spi.ImageReaderWriterSpi","methodName":"getExtraImageMetadataFormatNames","signature":"\u003cjavax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()\u003e","javadoc":"/** \n * Returns an array of \u003ccode\u003eString\u003c/code\u003es containing the names of additional document formats, other than the native and standard formats, recognized by the \u003ccode\u003egetAsTree\u003c/code\u003e and \u003ccode\u003esetFromTree\u003c/code\u003e methods on the image metadata objects produced or consumed by this plug-in. \u003cp\u003e If the plug-in does not handle image metadata, null should be returned. \u003cp\u003e The set of formats may differ according to the particular images being read or written; this method should indicate all the additional formats supported by the plug-in under any circumstances. \u003cp\u003e The default implementation returns a clone of the \u003ccode\u003eextraImageMetadataFormatNames\u003c/code\u003e instance variable, which is typically set by the constructor.\n * @return an array of \u003ccode\u003eString\u003c/code\u003es, or null.\n * @see IIOMetadata#getMetadataFormatNames\n * @see #getExtraStreamMetadataFormatNames\n * @see #getNativeImageMetadataFormatName\n */\n","tf":{"freq":{"stream":1,"variabl":1,"typic":1,"particular":1,"object":1,"consum":1,"document":1,"indic":1,"tree":2,"written":1,"name":6,"read":1,"recogn":1,"constructor":1,"metadata":7,"clone":1,"addit":2,"may":1,"support":1,"standard":1,"extra":3,"circumst":1,"produc":1,"format":9,"accord":1,"imag":6,"instanc":1,"handl":1,"differ":1,"ometadata":1,"plug":3,"contain":1,"string":2,"method":2,"array":2},"maxFreq":9,"totalTerms":68},"loc":4}