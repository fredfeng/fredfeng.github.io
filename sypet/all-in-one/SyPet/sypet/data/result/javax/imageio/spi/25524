{"id":25524,"className":"javax.imageio.spi.ImageWriterSpi","methodName":"createWriterInstance","signature":"\u003cjavax.imageio.spi.ImageWriterSpi: javax.imageio.ImageWriter createWriterInstance(java.lang.Object)\u003e","javadoc":"/** \n * Returns an instance of the \u003ccode\u003eImageWriter\u003c/code\u003e implementation associated with this service provider. The returned object will initially be in an initial state as if its \u003ccode\u003ereset\u003c/code\u003e method had been called. \u003cp\u003e An \u003ccode\u003eObject\u003c/code\u003e may be supplied to the plug-in at construction time.  The nature of the object is entirely plug-in specific. \u003cp\u003e Typically, a plug-in will implement this method using code such as \u003ccode\u003ereturn new MyImageWriter(this)\u003c/code\u003e.\n * @param extension a plug-in specific extension object, which maybe \u003ccode\u003enull\u003c/code\u003e.\n * @return an \u003ccode\u003eImageWriter\u003c/code\u003e instance.\n * @exception IOException if the attempt to instantiatethe writer fails.\n * @exception IllegalArgumentException if the\u003ccode\u003eImageWriter\u003c/code\u003e\u0027s constructor throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e to indicate that the extension object is unsuitable.\n */\n","tf":{"freq":{"attempt":1,"call":1,"servic":1,"state":1,"typic":1,"natur":1,"use":1,"object":5,"instantiateth":1,"unsuit":1,"time":1,"indic":1,"fail":1,"associ":1,"extens":3,"reset":1,"initi":2,"writer":6,"constructor":1,"argument":2,"except":5,"may":1,"creat":1,"suppli":1,"imag":4,"illeg":2,"mayb":1,"provid":1,"instanc":3,"specif":2,"plug":4,"will":2,"method":2,"construct":1,"entir":1},"maxFreq":6,"totalTerms":64},"loc":0}