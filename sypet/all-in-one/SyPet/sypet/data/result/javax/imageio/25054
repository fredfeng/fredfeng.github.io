{"id":25054,"className":"javax.imageio.ImageWriter","methodName":"getDefaultStreamMetadata","signature":"\u003cjavax.imageio.ImageWriter: javax.imageio.metadata.IIOMetadata getDefaultStreamMetadata(javax.imageio.ImageWriteParam)\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eIIOMetadata\u003c/code\u003e object containing default values for encoding a stream of images.  The contents of the object may be manipulated using either the XML tree structure returned by the \u003ccode\u003eIIOMetadata.getAsTree\u003c/code\u003e method, an \u003ccode\u003eIIOMetadataController\u003c/code\u003e object, or via plug-in specific interfaces, and the resulting data supplied to one of the \u003ccode\u003ewrite\u003c/code\u003e methods that take a stream metadata parameter. \u003cp\u003e An optional \u003ccode\u003eImageWriteParam\u003c/code\u003e may be supplied for cases where it may affect the structure of the stream metadata. \u003cp\u003e If the supplied \u003ccode\u003eImageWriteParam\u003c/code\u003e contains optional setting values not supported by this writer (\u003ci\u003ee.g.\u003c/i\u003e progressive encoding or any format-specific settings), they will be ignored. \u003cp\u003e Writers that do not make use of stream metadata (\u003ci\u003ee.g.\u003c/i\u003e, writers for single-image formats) should return \u003ccode\u003enull\u003c/code\u003e.\n * @param param an \u003ccode\u003eImageWriteParam\u003c/code\u003e that will be used toencode the image, or \u003ccode\u003enull\u003c/code\u003e.\n * @return an \u003ccode\u003eIIOMetadata\u003c/code\u003e object.\n */\n","tf":{"freq":{"progress":1,"result":1,"manipul":1,"stream":5,"via":1,"singl":1,"structur":2,"one":1,"data":1,"use":3,"object":4,"affect":1,"toencod":1,"tree":2,"write":4,"valu":2,"writer":3,"option":2,"metadata":4,"control":1,"ignor":1,"may":3,"support":1,"paramet":1,"suppli":3,"format":2,"imag":6,"content":1,"encod":2,"either":1,"specif":2,"ometadata":4,"plug":1,"take":1,"contain":2,"will":2,"method":2,"make":1},"maxFreq":6,"totalTerms":77},"loc":0}