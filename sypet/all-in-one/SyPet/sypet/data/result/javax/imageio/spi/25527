{"id":25527,"className":"javax.imageio.spi.ImageReaderSpi","methodName":"ImageReaderSpi","signature":"\u003cjavax.imageio.spi.ImageReaderSpi: void ImageReaderSpi(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eImageReaderSpi\u003c/code\u003e with a given set of values.\n * @param vendorName the vendor name, as a non-\u003ccode\u003enull\u003c/code\u003e\u003ccode\u003eString\u003c/code\u003e.\n * @param version a version identifier, as a non-\u003ccode\u003enull\u003c/code\u003e\u003ccode\u003eString\u003c/code\u003e.\n * @param names a non-\u003ccode\u003enull\u003c/code\u003e array of\u003ccode\u003eString\u003c/code\u003es indicating the format names.  At least one entry must be present.\n * @param suffixes an array of \u003ccode\u003eString\u003c/code\u003es indicating thecommon file suffixes.  If no suffixes are defined, \u003ccode\u003enull\u003c/code\u003e should be supplied.  An array of length 0 will be normalized to \u003ccode\u003enull\u003c/code\u003e.\n * @param MIMETypes an array of \u003ccode\u003eString\u003c/code\u003es indicatingthe format\u0027s MIME types.  If no MIME types are defined, \u003ccode\u003enull\u003c/code\u003e should be supplied.  An array of length 0 will be normalized to \u003ccode\u003enull\u003c/code\u003e.\n * @param readerClassName the fully-qualified name of theassociated \u003ccode\u003eImageReader\u003c/code\u003e class, as a non-\u003ccode\u003enull\u003c/code\u003e \u003ccode\u003eString\u003c/code\u003e.\n * @param inputTypes a non-\u003ccode\u003enull\u003c/code\u003e array of\u003ccode\u003eClass\u003c/code\u003e objects of length at least 1 indicating the legal input types.\n * @param writerSpiNames an array \u003ccode\u003eString\u003c/code\u003es naming theclasses of all associated \u003ccode\u003eImageWriter\u003c/code\u003es, or \u003ccode\u003enull\u003c/code\u003e.  An array of length 0 is normalized to \u003ccode\u003enull\u003c/code\u003e.\n * @param supportsStandardStreamMetadataFormat a\u003ccode\u003eboolean\u003c/code\u003e that indicates whether a stream metadata object can use trees described by the standard metadata format.\n * @param nativeStreamMetadataFormatName a\u003ccode\u003eString\u003c/code\u003e, or \u003ccode\u003enull\u003c/code\u003e, to be returned from \u003ccode\u003egetNativeStreamMetadataFormatName\u003c/code\u003e.\n * @param nativeStreamMetadataFormatClassName a\u003ccode\u003eString\u003c/code\u003e, or \u003ccode\u003enull\u003c/code\u003e, to be used to instantiate a metadata format object to be returned from \u003ccode\u003egetNativeStreamMetadataFormat\u003c/code\u003e.\n * @param extraStreamMetadataFormatNames an array of\u003ccode\u003eString\u003c/code\u003es, or \u003ccode\u003enull\u003c/code\u003e, to be returned from \u003ccode\u003egetExtraStreamMetadataFormatNames\u003c/code\u003e.  An array of length 0 is normalized to \u003ccode\u003enull\u003c/code\u003e.\n * @param extraStreamMetadataFormatClassNames an array of\u003ccode\u003eString\u003c/code\u003es, or \u003ccode\u003enull\u003c/code\u003e, to be used to instantiate a metadata format object to be returned from \u003ccode\u003egetStreamMetadataFormat\u003c/code\u003e.  An array of length 0 is normalized to \u003ccode\u003enull\u003c/code\u003e.\n * @param supportsStandardImageMetadataFormat a\u003ccode\u003eboolean\u003c/code\u003e that indicates whether an image metadata object can use trees described by the standard metadata format.\n * @param nativeImageMetadataFormatName a\u003ccode\u003eString\u003c/code\u003e, or \u003ccode\u003enull\u003c/code\u003e, to be returned from \u003ccode\u003egetNativeImageMetadataFormatName\u003c/code\u003e.\n * @param nativeImageMetadataFormatClassName a\u003ccode\u003eString\u003c/code\u003e, or \u003ccode\u003enull\u003c/code\u003e, to be used to instantiate a metadata format object to be returned from \u003ccode\u003egetNativeImageMetadataFormat\u003c/code\u003e.\n * @param extraImageMetadataFormatNames an array of\u003ccode\u003eString\u003c/code\u003es to be returned from \u003ccode\u003egetExtraImageMetadataFormatNames\u003c/code\u003e.  An array of length 0 is normalized to \u003ccode\u003enull\u003c/code\u003e.\n * @param extraImageMetadataFormatClassNames an array of\u003ccode\u003eString\u003c/code\u003es, or \u003ccode\u003enull\u003c/code\u003e, to be used to instantiate a metadata format object to be returned from \u003ccode\u003egetImageMetadataFormat\u003c/code\u003e.  An array of length 0 is normalized to \u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003evendorName\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003eversion\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003enames\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e or has length 0.\n * @exception IllegalArgumentException if \u003ccode\u003ereaderClassName\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003einputTypes\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e or has length 0.\n */\n","tf":{"freq":{"least":2,"instanti":4,"normal":7,"type":6,"must":1,"whether":2,"given":1,"tree":2,"file":1,"spi":3,"writer":2,"metadata":26,"argument":5,"except":10,"support":2,"extra":6,"describ":2,"format":26,"imag":14,"non":5,"present":1,"input":3,"reader":5,"will":2,"array":16,"legal":1,"defin":2,"stream":10,"theclass":1,"one":1,"use":6,"identifi":1,"object":7,"version":3,"thecommon":1,"indic":5,"associ":1,"name":23,"length":10,"valu":1,"standard":4,"entri":1,"vendor":3,"suppli":2,"fulli":1,"illeg":5,"suffix":3,"indicatingth":1,"string":15,"construct":1,"theassoci":1,"qualifi":1},"maxFreq":26,"totalTerms":265},"loc":32}