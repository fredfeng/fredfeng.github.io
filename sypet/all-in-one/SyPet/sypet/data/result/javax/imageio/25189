{"id":25189,"className":"javax.imageio.ImageReader","methodName":"setInput","signature":"\u003cjavax.imageio.ImageReader: void setInput(java.lang.Object)\u003e","javadoc":"/** \n * Sets the input source to use to the given \u003ccode\u003eImageInputStream\u003c/code\u003e or other \u003ccode\u003eObject\u003c/code\u003e. The input source must be set before any of the query or read methods are used.  If \u003ccode\u003einput\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, any currently set input source will be removed.  In any case, the value of \u003ccode\u003eminIndex\u003c/code\u003e will be initialized to 0. \u003cp\u003e This method is equivalent to \u003ccode\u003esetInput(input, false, false)\u003c/code\u003e.\n * @param input the \u003ccode\u003eImageInputStream\u003c/code\u003e or other\u003ccode\u003eObject\u003c/code\u003e to use for future decoding.\n * @exception IllegalArgumentException if \u003ccode\u003einput\u003c/code\u003e isnot an instance of one of the classes returned by the originating service provider\u0027s \u003ccode\u003egetInputTypes\u003c/code\u003e method, or is not an \u003ccode\u003eImageInputStream\u003c/code\u003e.\n * @see #getInput\n */\n","tf":{"freq":{"fals":2,"stream":3,"servic":1,"one":1,"use":3,"object":2,"type":1,"must":1,"isnot":1,"given":1,"equival":1,"current":1,"read":1,"valu":1,"initi":1,"argument":1,"min":1,"decod":1,"index":1,"except":2,"futur":1,"origin":1,"remov":1,"imag":3,"provid":1,"illeg":1,"instanc":1,"queri":1,"input":14,"will":2,"method":3,"sourc":3},"maxFreq":14,"totalTerms":59},"loc":3}