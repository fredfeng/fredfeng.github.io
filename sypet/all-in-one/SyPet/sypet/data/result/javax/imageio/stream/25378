{"id":25378,"className":"javax.imageio.stream.ImageOutputStream","methodName":"writeByte","signature":"\u003cjavax.imageio.stream.ImageOutputStream: void writeByte(int)\u003e","javadoc":"/** \n * Writes the 8 low-order bits of \u003ccode\u003ev\u003c/code\u003e to the stream. The 24 high-order bits of \u003ccode\u003ev\u003c/code\u003e are ignored. (This means that \u003ccode\u003ewriteByte\u003c/code\u003e does exactly the same thing as \u003ccode\u003ewrite\u003c/code\u003e for an integer argument.) \u003cp\u003e If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first.  The bit offset will be 0 after the write.\n * @param v an \u003ccode\u003eint\u003c/code\u003e containing the byte value to bewritten.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"stream":2,"zero":1,"bewritten":1,"order":2,"exact":1,"written":1,"write":5,"current":1,"mean":1,"valu":1,"offset":2,"argument":1,"pad":1,"except":2,"ignor":1,"error":1,"non":1,"bit":4,"remaind":1,"contain":1,"will":1,"high":1,"within":1,"low":1,"integ":1,"first":1,"occur":1,"thing":1},"maxFreq":5,"totalTerms":39},"loc":0}