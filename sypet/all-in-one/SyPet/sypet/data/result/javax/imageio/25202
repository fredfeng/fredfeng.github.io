{"id":25202,"className":"javax.imageio.ImageReader","methodName":"getRawImageType","signature":"\u003cjavax.imageio.ImageReader: javax.imageio.ImageTypeSpecifier getRawImageType(int)\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eImageTypeSpecifier\u003c/code\u003e indicating the \u003ccode\u003eSampleModel\u003c/code\u003e and \u003ccode\u003eColorModel\u003c/code\u003e which most closely represents the \"raw\" internal format of the image.  For example, for a JPEG image the raw type might have a YCbCr color space even though the image would conventionally be transformed into an RGB color space prior to display.  The returned value should also be included in the list of values returned by \u003ccode\u003egetImageTypes\u003c/code\u003e. \u003cp\u003e The default implementation simply returns the first entry from the list provided by \u003ccode\u003egetImageType\u003c/code\u003e.\n * @param imageIndex the index of the image to be queried.\n * @return an \u003ccode\u003eImageTypeSpecifier\u003c/code\u003e.\n * @exception IllegalStateException if the input source has not been set.\n * @exception IndexOutOfBoundsException if the supplied index isout of bounds.\n * @exception IOException if an error occurs reading the formatinformation from the input source.\n */\n","tf":{"freq":{"raw":3,"might":1,"simpli":1,"model":2,"convent":1,"isout":1,"state":1,"ycb":1,"type":6,"space":2,"though":1,"close":1,"specifi":2,"prior":1,"transform":1,"formatinform":1,"indic":1,"read":1,"valu":2,"except":6,"index":4,"includ":1,"error":1,"repres":1,"entri":1,"suppli":1,"list":2,"display":1,"format":1,"imag":10,"illeg":1,"provid":1,"queri":1,"input":2,"color":3,"intern":1,"exampl":1,"sourc":2,"even":1,"first":1,"also":1,"bound":2,"sampl":1,"occur":1},"maxFreq":10,"totalTerms":78},"loc":3}