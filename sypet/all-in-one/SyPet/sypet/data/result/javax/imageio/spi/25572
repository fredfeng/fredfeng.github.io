{"id":25572,"className":"javax.imageio.spi.ServiceRegistry","methodName":"deregisterServiceProvider","signature":"\u003cjavax.imageio.spi.ServiceRegistry: boolean deregisterServiceProvider(T,java.lang.Class)\u003e","javadoc":"/** \n * Removes a service provider object from the given category.  If the provider was not previously registered, nothing happens and \u003ccode\u003efalse\u003c/code\u003e is returned.  Otherwise, \u003ccode\u003etrue\u003c/code\u003e is returned.  If an object of the same class as \u003ccode\u003eprovider\u003c/code\u003e but not equal (using \u003ccode\u003e\u003d\u003d\u003c/code\u003e) to \u003ccode\u003eprovider\u003c/code\u003e is registered, it will not be deregistered. \u003cp\u003e If \u003ccode\u003eprovider\u003c/code\u003e implements the \u003ccode\u003eRegisterableService\u003c/code\u003e interface, its \u003ccode\u003eonDeregistration\u003c/code\u003e method will be called.\n * @param provider the service provider object to be deregistered.\n * @param category the category from which to deregister theprovider.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the provider was previouslyregistered in the same category category, \u003ccode\u003efalse\u003c/code\u003e otherwise.\n * @exception IllegalArgumentException if \u003ccode\u003eprovider\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalArgumentException if there is no categorycorresponding to \u003ccode\u003ecategory\u003c/code\u003e.\n * @exception ClassCastException if provider does not implementthe class defined by \u003ccode\u003ecategory\u003c/code\u003e.\n */\n","tf":{"freq":{"fals":2,"otherwis":2,"defin":1,"call":1,"theprovid":1,"implementth":1,"servic":4,"previouslyregist":1,"use":1,"object":3,"categorycorrespond":1,"given":1,"deregist":4,"noth":1,"regist":2,"happen":1,"argument":2,"except":6,"categori":7,"previous":1,"remov":1,"true":2,"equal":1,"illeg":2,"provid":11,"register":1,"cast":1,"deregistr":1,"will":2,"method":1},"maxFreq":11,"totalTerms":66},"loc":13}