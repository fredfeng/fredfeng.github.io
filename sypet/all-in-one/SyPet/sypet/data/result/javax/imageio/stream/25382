{"id":25382,"className":"javax.imageio.stream.ImageOutputStream","methodName":"writeLong","signature":"\u003cjavax.imageio.stream.ImageOutputStream: void writeLong(long)\u003e","javadoc":"/** \n * Writes the 64 bits of \u003ccode\u003ev\u003c/code\u003e to the stream.  If the stream uses network byte order, the bytes written, in order, will be: \u003cpre\u003e (byte)((v \u0026gt;\u0026gt; 56) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 48) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 40) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 32) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 24) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 16) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 8) \u0026amp; 0xff) (byte)(v \u0026amp; 0xff) \u003c/pre\u003e Otherwise, the bytes written will be: \u003cpre\u003e (byte)(v \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 8) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 16) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 24) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 32) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 40) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 48) \u0026amp; 0xff) (byte)((v \u0026gt;\u0026gt; 56) \u0026amp; 0xff) \u003c/pre\u003e \u003cp\u003e If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first.  The bit offset will be 0 after the write.\n * @param v a \u003ccode\u003elong\u003c/code\u003e containing the value to bewritten.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"otherwis":1,"pad":1,"except":2,"stream":3,"error":1,"xff":16,"use":1,"zero":1,"network":1,"non":1,"bewritten":1,"bit":3,"remaind":1,"order":2,"pre":4,"contain":1,"written":3,"current":1,"write":3,"will":3,"valu":1,"within":1,"offset":2,"first":1,"amp":16,"occur":1},"maxFreq":16,"totalTerms":72},"loc":0}