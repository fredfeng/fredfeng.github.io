{"id":25604,"className":"javax.imageio.metadata.IIOMetadata","methodName":"getMetadataFormat","signature":"\u003cjavax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataFormat getMetadataFormat(java.lang.String)\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eIIOMetadataFormat\u003c/code\u003e object describing the given metadata format, or \u003ccode\u003enull\u003c/code\u003e if no description is available.  The supplied name must be one of those returned by \u003ccode\u003egetMetadataFormatNames\u003c/code\u003e (\u003ci\u003ei.e.\u003c/i\u003e, either the native format name, the standard format name, or one of those returned by \u003ccode\u003egetExtraMetadataFormatNames\u003c/code\u003e). \u003cp\u003e The default implementation checks the name against the global standard metadata format name, and returns that format if it is supported.  Otherwise, it checks against the native format names followed by any additional format names.  If a match is found, it retrieves the name of the \u003ccode\u003eIIOMetadataFormat\u003c/code\u003e class from \u003ccode\u003enativeMetadataFormatClassName\u003c/code\u003e or \u003ccode\u003eextraMetadataFormatClassNames\u003c/code\u003e as appropriate, and constructs an instance of that class using its \u003ccode\u003egetInstance\u003c/code\u003e method.\n * @param formatName the desired metadata format.\n * @return an \u003ccode\u003eIIOMetadataFormat\u003c/code\u003e object.\n * @exception IllegalArgumentException if \u003ccode\u003eformatName\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e or is not one of the names recognized by the plug-in.\n * @exception IllegalStateException if the class corresponding tothe format name cannot be loaded.\n */\n","tf":{"freq":{"otherwis":1,"correspond":1,"one":3,"state":1,"use":1,"object":2,"toth":1,"desir":1,"must":1,"given":1,"name":16,"recogn":1,"metadata":8,"follow":1,"argument":1,"addit":1,"except":4,"support":1,"standard":2,"check":2,"extra":2,"global":1,"descript":1,"describ":1,"suppli":1,"avail":1,"format":19,"illeg":2,"instanc":2,"either":1,"ometadata":3,"plug":1,"appropri":1,"retriev":1,"load":1,"method":1,"construct":1,"match":1,"found":1},"maxFreq":19,"totalTerms":92},"loc":73}