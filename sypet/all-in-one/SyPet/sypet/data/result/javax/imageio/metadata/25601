{"id":25601,"className":"javax.imageio.metadata.IIOMetadata","methodName":"getNativeMetadataFormatName","signature":"\u003cjavax.imageio.metadata.IIOMetadata: java.lang.String getNativeMetadataFormatName()\u003e","javadoc":"/** \n * Returns the name of the \"native\" metadata format for this plug-in, which typically allows for lossless encoding and transmission of the metadata stored in the format handled by this plug-in.  If no such format is supported, \u003ccode\u003enull\u003c/code\u003ewill be returned. \u003cp\u003e The structure and contents of the \"native\" metadata format are defined by the plug-in that created this \u003ccode\u003eIIOMetadata\u003c/code\u003e object.  Plug-ins for simple formats will usually create a dummy node for the root, and then a series of child nodes representing individual tags, chunks, or keyword/value pairs.  A plug-in may choose whether or not to document its native format. \u003cp\u003e The default implementation returns the value of the \u003ccode\u003enativeMetadataFormatName\u003c/code\u003e instance variable.\n * @return the name of the native format, or \u003ccode\u003enull\u003c/code\u003e.\n * @see #getExtraMetadataFormatNames\n * @see #getMetadataFormatNames\n */\n","tf":{"freq":{"defin":1,"chunk":1,"seri":1,"store":1,"allow":1,"simpl":1,"pair":1,"structur":1,"root":1,"tag":1,"variabl":1,"typic":1,"dummi":1,"object":1,"transmiss":1,"whether":1,"child":1,"document":1,"name":6,"choos":1,"valu":2,"individu":1,"metadata":7,"lossless":1,"usual":1,"may":1,"support":1,"repres":1,"creat":2,"extra":1,"keyword":1,"format":11,"instanc":1,"handl":1,"content":1,"encod":1,"node":2,"ometadata":1,"plug":5,"will":2},"maxFreq":11,"totalTerms":69},"loc":3}