{"id":25065,"className":"javax.imageio.ImageWriter","methodName":"prepareWriteSequence","signature":"\u003cjavax.imageio.ImageWriter: void prepareWriteSequence(javax.imageio.metadata.IIOMetadata)\u003e","javadoc":"/** \n * Prepares a stream to accept a series of subsequent \u003ccode\u003ewriteToSequence\u003c/code\u003e calls, using the provided stream metadata object.  The metadata will be written to the stream if it should precede the image data.  If the argument is \u003ccode\u003enull\u003c/code\u003e, default stream metadata is used. \u003cp\u003e If the output is an \u003ccode\u003eImageOutputStream\u003c/code\u003e, the existing contents of the output prior to the current seek position are flushed, and need not be readable or writable.  If the format requires that \u003ccode\u003eendWriteSequence\u003c/code\u003e be able to rewind to patch up the header information, such as for a sequence of images in a single TIFF file, then the metadata written by this method must remain in a writable portion of the stream.  Other formats may flush the stream after this method and after each image. \u003cp\u003e If \u003ccode\u003ecanWriteSequence\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e, this method will throw an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e. \u003cp\u003e The output must have been set beforehand using either the \u003ccode\u003esetOutput\u003c/code\u003e method. \u003cp\u003e The default implementation throws an \u003ccode\u003eIllegalStateException\u003c/code\u003e if the output is \u003ccode\u003enull\u003c/code\u003e, and otherwise throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @param streamMetadata A stream metadata object, or \u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalStateException if the output has notbeen set.\n * @exception UnsupportedOperationException if\u003ccode\u003ecanWriteSequence\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e.\n * @exception IOException if an error occurs writing the streammetadata.\n */\n","tf":{"freq":{"need":1,"fals":2,"unsupport":3,"singl":1,"accept":1,"abl":1,"must":2,"prior":1,"requir":1,"oper":3,"sequenc":6,"file":1,"metadata":6,"argument":1,"except":9,"writabl":2,"format":2,"imag":4,"provid":1,"prepar":2,"header":1,"content":1,"inform":1,"will":2,"notbeen":1,"output":7,"posit":1,"otherwis":1,"call":1,"stream":9,"seri":1,"streammetadata":1,"readabl":1,"state":2,"data":1,"use":3,"object":2,"rewind":1,"written":2,"current":1,"write":6,"subsequ":1,"exist":1,"end":1,"portion":1,"may":1,"error":1,"illeg":2,"seek":1,"preced":1,"either":1,"flush":2,"remain":1,"beforehand":1,"method":4,"patch":1,"occur":1},"maxFreq":9,"totalTerms":117},"loc":3}