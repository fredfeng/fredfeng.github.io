{"id":25076,"className":"javax.imageio.ImageWriter","methodName":"canWriteEmpty","signature":"\u003cjavax.imageio.ImageWriter: boolean canWriteEmpty()\u003e","javadoc":"/** \n * Returns \u003ccode\u003etrue\u003c/code\u003e if the writer supports the writing of a complete image stream consisting of a single image with undefined pixel values and associated metadata and thumbnails to the output.  The pixel values may be defined by future calls to the \u003ccode\u003ereplacePixels\u003c/code\u003e methods.  If the output is an \u003ccode\u003eImageOutputStream\u003c/code\u003e, its existing contents prior to the current seek position are not affected, and need not be readable or writable. \u003cp\u003e The default implementation throws an \u003ccode\u003eIllegalStateException\u003c/code\u003e if the output is \u003ccode\u003enull\u003c/code\u003e, and otherwise returns \u003ccode\u003efalse\u003c/code\u003e.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the writing of complete imagestream with contents to be defined later is supported.\n * @exception IllegalStateException if the output has not beenset.\n * @exception IOException if an I/O error occurs during thequery.\n */\n","tf":{"freq":{"fals":1,"otherwis":1,"need":1,"defin":2,"call":1,"stream":2,"pixel":3,"singl":1,"readabl":1,"state":2,"affect":1,"prior":1,"associ":1,"thequeri":1,"current":1,"write":3,"valu":2,"undefin":1,"writer":1,"exist":1,"complet":2,"metadata":1,"imagestream":1,"except":5,"may":1,"support":2,"futur":1,"error":1,"consist":1,"later":1,"beenset":1,"true":2,"writabl":1,"imag":3,"illeg":2,"seek":1,"empti":1,"content":2,"thumbnail":1,"replac":1,"method":1,"output":5,"posit":1,"occur":1},"maxFreq":5,"totalTerms":67},"loc":6}