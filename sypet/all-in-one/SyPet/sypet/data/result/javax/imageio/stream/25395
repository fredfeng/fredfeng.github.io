{"id":25395,"className":"javax.imageio.stream.ImageOutputStream","methodName":"writeBits","signature":"\u003cjavax.imageio.stream.ImageOutputStream: void writeBits(long,int)\u003e","javadoc":"/** \n * Writes a sequence of bits, given by the \u003ccode\u003enumBits\u003c/code\u003e least significant bits of the \u003ccode\u003ebits\u003c/code\u003e argument in left-to-right order, to the stream at the current bit offset within the current byte position.  The upper \u003ccode\u003e64 - numBits\u003c/code\u003e bits of the argument are ignored.  The bit offset is advanced by \u003ccode\u003enumBits\u003c/code\u003e and reduced modulo 8.  Note that a bit offset of 0 always indicates the most-significant bit of the byte, and bytes of bits are written out in sequence as they are encountered.  Thus bit writes are always effectively in network byte order.  The actual stream byte order setting is ignored. \u003cp\u003e Bit data may be accumulated in memory indefinitely, until \u003ccode\u003eflushBefore\u003c/code\u003e is called.  At that time, all bit data prior to the flushed position will be written. \u003cp\u003e If any bits of a particular byte have never been set at the time the byte is flushed to the destination, those bits will be set to 0 automatically.\n * @param bits a \u003ccode\u003elong\u003c/code\u003e containing the bits to bewritten, starting with the bit in position \u003ccode\u003enumBits - 1\u003c/code\u003e down to the least significant bit.\n * @param numBits an \u003ccode\u003eint\u003c/code\u003e between 0 and 64, inclusive.\n * @exception IllegalArgumentException if \u003ccode\u003enumBits\u003c/code\u003e isnot between 0 and 64, inclusive.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"memori":1,"least":2,"particular":1,"prior":1,"time":2,"given":1,"sequenc":2,"right":1,"argument":3,"except":4,"ignor":2,"alway":2,"signific":3,"accumul":1,"bit":25,"advanc":1,"start":1,"contain":1,"will":2,"posit":3,"call":1,"stream":2,"data":2,"automat":1,"network":1,"bewritten":1,"upper":1,"inclus":2,"isnot":1,"indic":1,"order":3,"written":2,"current":2,"write":3,"left":1,"offset":3,"note":1,"may":1,"error":1,"thus":1,"illeg":1,"num":6,"never":1,"flush":3,"effect":1,"encount":1,"modulo":1,"actual":1,"indefinit":1,"reduc":1,"within":1,"occur":1,"destin":1},"maxFreq":25,"totalTerms":110},"loc":0}