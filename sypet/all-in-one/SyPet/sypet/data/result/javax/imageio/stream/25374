{"id":25374,"className":"javax.imageio.stream.ImageOutputStream","methodName":"write","signature":"\u003cjavax.imageio.stream.ImageOutputStream: void write(int)\u003e","javadoc":"/** \n * Writes a single byte to the stream at the current position. The 24 high-order bits of \u003ccode\u003eb\u003c/code\u003e are ignored. \u003cp\u003e If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first.  The bit offset will be 0 after the write.  Implementers can use the {@link ImageOutputStreamImpl#flushBits \u003ccode\u003eflushBits\u003c/code\u003e}method of  {@link ImageOutputStreamImpl \u003ccode\u003eImageOutputStreamImpl\u003c/code\u003e} to guarantee this.\n * @param b an \u003ccode\u003eint\u003c/code\u003e whose lower 8 bits are to bewritten.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"stream":5,"lower":1,"singl":1,"link":2,"use":1,"zero":1,"bewritten":1,"order":1,"written":1,"current":2,"write":3,"offset":2,"pad":1,"except":2,"ignor":1,"error":1,"impl":3,"whose":1,"guarante":1,"imag":3,"non":1,"bit":6,"flush":2,"remaind":1,"will":1,"method":1,"within":1,"high":1,"output":3,"posit":1,"first":1,"occur":1},"maxFreq":6,"totalTerms":54},"loc":0}