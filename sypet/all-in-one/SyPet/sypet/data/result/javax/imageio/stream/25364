{"id":25364,"className":"javax.imageio.stream.ImageInputStream","methodName":"seek","signature":"\u003cjavax.imageio.stream.ImageInputStream: void seek(long)\u003e","javadoc":"/** \n * Sets the current stream position to the desired location.  The next read will occur at this location.  The bit offset is set to 0. \u003cp\u003e An \u003ccode\u003eIndexOutOfBoundsException\u003c/code\u003e will be thrown if \u003ccode\u003epos\u003c/code\u003e is smaller than the flushed position (as returned by \u003ccode\u003egetflushedPosition\u003c/code\u003e). \u003cp\u003e It is legal to seek past the end of the file; an \u003ccode\u003eEOFException\u003c/code\u003e will be thrown only if a read is performed.\n * @param pos a \u003ccode\u003elong\u003c/code\u003e containing the desired filepointer position.\n * @exception IndexOutOfBoundsException if \u003ccode\u003epos\u003c/code\u003e is smallerthan the flushed position.\n * @exception IOException if any other I/O error occurs.\n */\n","tf":{"freq":{"legal":1,"stream":1,"next":1,"smallerthan":1,"perform":1,"desir":2,"smaller":1,"pos":3,"file":1,"current":1,"read":2,"offset":1,"end":1,"locat":2,"index":2,"except":5,"thrown":2,"error":1,"filepoint":1,"past":1,"fexcept":1,"seek":2,"bit":1,"flush":2,"contain":1,"will":3,"getflush":1,"posit":5,"bound":2,"occur":2},"maxFreq":5,"totalTerms":51},"loc":0}