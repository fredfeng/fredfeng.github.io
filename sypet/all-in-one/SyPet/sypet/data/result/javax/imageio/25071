{"id":25071,"className":"javax.imageio.ImageWriter","methodName":"replaceImageMetadata","signature":"\u003cjavax.imageio.ImageWriter: void replaceImageMetadata(int,javax.imageio.metadata.IIOMetadata)\u003e","javadoc":"/** \n * Replaces the image metadata associated with an existing image. \u003cp\u003e If \u003ccode\u003ecanReplaceImageMetadata(imageIndex)\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e, an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e will be thrown. \u003cp\u003e The default implementation throws an \u003ccode\u003eIllegalStateException\u003c/code\u003e if the output is \u003ccode\u003enull\u003c/code\u003e, and otherwise throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @param imageIndex the index of the image whose metadata is tobe replaced.\n * @param imageMetadata an \u003ccode\u003eIIOMetadata\u003c/code\u003e objectrepresenting image metadata, or \u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalStateException if the output has not beenset.\n * @exception UnsupportedOperationException if\u003ccode\u003ecanReplaceImageMetadata\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e.\n * @exception IndexOutOfBoundsException if \u003ccode\u003eimageIndex\u003c/code\u003eis less than 0 or greater than the largest available index.\n * @exception IOException if an error occurs during writing.\n */\n","tf":{"freq":{"fals":2,"otherwis":1,"unsupport":3,"greater":1,"state":2,"objectrepres":1,"oper":3,"associ":1,"write":1,"tobe":1,"exist":1,"less":1,"metadata":7,"thrown":1,"except":11,"index":6,"error":1,"whose":1,"beenset":1,"avail":1,"imag":11,"illeg":2,"largest":1,"ometadata":1,"replac":5,"will":1,"output":2,"bound":1,"occur":1},"maxFreq":11,"totalTerms":72},"loc":3}