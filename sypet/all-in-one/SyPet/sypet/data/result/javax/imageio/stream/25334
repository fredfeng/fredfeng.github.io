{"id":25334,"className":"javax.imageio.stream.ImageInputStream","methodName":"readBytes","signature":"\u003cjavax.imageio.stream.ImageInputStream: void readBytes(javax.imageio.stream.IIOByteBuffer,int)\u003e","javadoc":"/** \n * Reads up to \u003ccode\u003elen\u003c/code\u003e bytes from the stream, and modifies the supplied \u003ccode\u003eIIOByteBuffer\u003c/code\u003e to indicate the byte array, offset, and length where the data may be found. The caller should not attempt to modify the data found in the \u003ccode\u003eIIOByteBuffer\u003c/code\u003e. \u003cp\u003e The bit offset within the stream is reset to zero before the read occurs.\n * @param buf an IIOByteBuffer object to be modified.\n * @param len the maximum number of \u003ccode\u003ebyte\u003c/code\u003es to read.\n * @exception IndexOutOfBoundsException if \u003ccode\u003elen\u003c/code\u003e isnegative.\n * @exception NullPointerException if \u003ccode\u003ebuf\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"caller":1,"attempt":1,"stream":2,"data":2,"object":1,"zero":1,"isneg":1,"obyt":3,"buffer":3,"indic":1,"length":1,"read":4,"reset":1,"offset":2,"index":1,"except":6,"may":1,"error":1,"number":1,"suppli":1,"len":3,"bit":1,"maximum":1,"modifi":3,"pointer":1,"within":1,"bound":1,"buf":2,"array":1,"found":2,"occur":2},"maxFreq":6,"totalTerms":53},"loc":0}