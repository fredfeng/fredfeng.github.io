{"id":25032,"className":"javax.imageio.ImageTypeSpecifier","methodName":"createGrayscale","signature":"\u003cjavax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createGrayscale(int,int,boolean,boolean)\u003e","javadoc":"/** \n * Returns a specifier for a grayscale plus alpha image format that will pack pixels of the given bit depth into array elements of the specified data type.\n * @param bits the number of bits per gray value (1, 2, 4, 8, or 16).\n * @param dataType the desired data type, as one of the enumerationsfrom the \u003ccode\u003eDataBuffer\u003c/code\u003e class.\n * @param isSigned \u003ccode\u003etrue\u003c/code\u003e if negative values are tobe represented.\n * @param isAlphaPremultiplied \u003ccode\u003etrue\u003c/code\u003e if the luminance channelwill be premultipled by the alpha channel.\n * @return an \u003ccode\u003eImageTypeSpecifier\u003c/code\u003e with the desiredcharacteristics.\n * @exception IllegalArgumentException if \u003ccode\u003ebits\u003c/code\u003e isnot one of 1, 2, 4, 8, or 16.\n * @exception IllegalArgumentException if \u003ccode\u003edataType\u003c/code\u003e isnot one of \u003ccode\u003eDataBuffer.TYPE_BYTE\u003c/code\u003e, \u003ccode\u003eDataBuffer.TYPE_SHORT\u003c/code\u003e, or \u003ccode\u003eDataBuffer.TYPE_USHORT\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003ebits\u003c/code\u003e islarger than the bit size of the given \u003ccode\u003edataType\u003c/code\u003e.\n */\n","tf":{"freq":{"desiredcharacterist":1,"pixel":1,"islarg":1,"one":3,"data":9,"pack":1,"type":6,"desir":1,"specifi":3,"premultipli":1,"buffer":4,"channelwil":1,"isnot":2,"given":2,"alpha":3,"premultipl":1,"grayscal":2,"valu":2,"tobe":1,"argument":3,"plus":1,"element":1,"except":6,"repres":1,"creat":1,"true":2,"number":1,"format":1,"imag":2,"gray":1,"illeg":3,"lumin":1,"depth":1,"size":1,"sign":1,"bit":6,"per":1,"will":1,"negat":1,"enumerationsfrom":1,"channel":1,"array":1},"maxFreq":9,"totalTerms":84},"loc":7}