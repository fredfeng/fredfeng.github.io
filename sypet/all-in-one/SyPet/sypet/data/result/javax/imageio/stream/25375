{"id":25375,"className":"javax.imageio.stream.ImageOutputStream","methodName":"write","signature":"\u003cjavax.imageio.stream.ImageOutputStream: void write(byte[])\u003e","javadoc":"/** \n * Writes a sequence of bytes to the stream at the current position.  If \u003ccode\u003eb.length\u003c/code\u003e is 0, nothing is written. The byte \u003ccode\u003eb[0]\u003c/code\u003e is written first, then the byte \u003ccode\u003eb[1]\u003c/code\u003e, and so on. \u003cp\u003e If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first.  The bit offset will be 0 after the write.\n * @param b an array of \u003ccode\u003ebyte\u003c/code\u003es to be written.\n * @exception NullPointerException if \u003ccode\u003eb\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"pad":1,"except":4,"stream":2,"error":1,"zero":1,"non":1,"bit":2,"remaind":1,"sequenc":1,"written":4,"will":1,"write":3,"current":2,"length":1,"pointer":1,"noth":1,"within":1,"offset":2,"posit":1,"first":2,"occur":1,"array":1},"maxFreq":4,"totalTerms":35},"loc":0}