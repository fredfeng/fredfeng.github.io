{"id":25339,"className":"javax.imageio.stream.ImageInputStream","methodName":"readUnsignedShort","signature":"\u003cjavax.imageio.stream.ImageInputStream: int readUnsignedShort()\u003e","javadoc":"/** \n * Reads two bytes from the stream, and (conceptually) concatenates them according to the current byte order, converts the resulting value to an \u003ccode\u003eint\u003c/code\u003e, masks it with \u003ccode\u003e0xffff\u003c/code\u003e in order to strip off any sign-extension buts, and returns the result as an unsigned \u003ccode\u003eint\u003c/code\u003e value. \u003cp\u003e The bit offset within the stream is reset to zero before the read occurs.\n * @return an unsigned short value from the stream, as an int.\n * @exception EOFException if the stream reaches the end beforereading all the bytes.\n * @exception IOException if an I/O error occurs.\n * @see #getByteOrder\n */\n","tf":{"freq":{"result":2,"stream":4,"convert":1,"mask":1,"beforeread":1,"zero":1,"reach":1,"order":3,"extens":1,"current":1,"read":3,"reset":1,"valu":3,"offset":1,"end":1,"except":3,"error":1,"concaten":1,"accord":1,"conceptu":1,"xffff":1,"strip":1,"fexcept":1,"sign":1,"two":1,"bit":1,"unsign":3,"within":1,"occur":2},"maxFreq":4,"totalTerms":44},"loc":0}