{"id":25390,"className":"javax.imageio.stream.ImageOutputStream","methodName":"writeInts","signature":"\u003cjavax.imageio.stream.ImageOutputStream: void writeInts(int[],int,int)\u003e","javadoc":"/** \n * Writes a sequence of ints to the stream at the current position.  If \u003ccode\u003elen\u003c/code\u003e is 0, nothing is written. The int \u003ccode\u003ei[off]\u003c/code\u003e is written first, then the int \u003ccode\u003ei[off + 1]\u003c/code\u003e, and so on.  The byte order of the stream is used to determine the order in which the individual bytes are written. \u003cp\u003e If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first.  The bit offset will be 0 after the write.\n * @param i an array of \u003ccode\u003eint\u003c/code\u003es to be written.\n * @param off the start offset in the data.\n * @param len the number of \u003ccode\u003eint\u003c/code\u003es to write.\n * @exception IndexOutOfBoundsException if \u003ccode\u003eoff\u003c/code\u003e isnegative, \u003ccode\u003elen\u003c/code\u003e is negative, or \u003ccode\u003eoff + len\u003c/code\u003e is greater than \u003ccode\u003ei.length\u003c/code\u003e.\n * @exception NullPointerException if \u003ccode\u003ei\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @exception IOException if an I/O error occurs.\n */\n","tf":{"freq":{"stream":3,"greater":1,"data":1,"use":1,"zero":1,"isneg":1,"order":2,"sequenc":1,"written":5,"length":1,"current":2,"write":4,"noth":1,"offset":3,"individu":1,"pad":1,"index":1,"except":6,"error":1,"number":1,"len":4,"non":1,"bit":2,"remaind":1,"start":1,"determin":1,"will":1,"pointer":1,"negat":1,"within":1,"first":2,"posit":1,"bound":1,"occur":1,"array":1},"maxFreq":6,"totalTerms":58},"loc":0}