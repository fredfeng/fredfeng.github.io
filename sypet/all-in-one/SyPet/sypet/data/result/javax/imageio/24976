{"id":24976,"className":"javax.imageio.ImageWriteParam","methodName":"getPreferredTileSizes","signature":"\u003cjavax.imageio.ImageWriteParam: java.awt.Dimension[] getPreferredTileSizes()\u003e","javadoc":"/** \n * Returns an array of \u003ccode\u003eDimension\u003c/code\u003es indicating the legal size ranges for tiles as they will be encoded in the output file or stream.  The returned array is a copy. \u003cp\u003e The information is returned as a set of pairs; the first element of a pair contains an (inclusive) minimum width and height, and the second element contains an (inclusive) maximum width and height.  Together, each pair defines a valid range of sizes.  To specify a fixed size, use the same width and height for both elements.  To specify an arbitrary range, a value of \u003ccode\u003enull\u003c/code\u003e is used in place of an actual array of \u003ccode\u003eDimension\u003c/code\u003es. \u003cp\u003e If no array is specified on the constructor, but tiling is allowed, then this method returns \u003ccode\u003enull\u003c/code\u003e.\n * @exception UnsupportedOperationException if the plug-in doesnot support tiling.\n * @return an array of \u003ccode\u003eDimension\u003c/code\u003es with an even lengthof at least two, or \u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"legal":1,"valid":1,"defin":1,"unsupport":1,"stream":1,"allow":1,"second":1,"pair":3,"minimum":1,"least":1,"use":2,"copi":1,"specifi":3,"arbitrari":1,"inclus":2,"height":3,"indic":1,"oper":1,"fix":1,"file":1,"rang":3,"doesnot":1,"valu":1,"place":1,"constructor":1,"element":3,"except":2,"support":1,"width":3,"togeth":1,"dimens":3,"size":4,"two":1,"inform":1,"encod":1,"plug":1,"maximum":1,"tile":4,"contain":2,"will":1,"actual":1,"even":1,"method":1,"output":1,"prefer":1,"first":1,"lengthof":1,"array":5},"maxFreq":5,"totalTerms":76},"loc":6}