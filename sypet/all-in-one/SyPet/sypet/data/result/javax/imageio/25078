{"id":25078,"className":"javax.imageio.ImageWriter","methodName":"endWriteEmpty","signature":"\u003cjavax.imageio.ImageWriter: void endWriteEmpty()\u003e","javadoc":"/** \n * Completes the writing of a new image that was begun with a prior call to \u003ccode\u003eprepareWriteEmpty\u003c/code\u003e. \u003cp\u003e If \u003ccode\u003ecanWriteEmpty()\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e, an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e will be thrown. \u003cp\u003e The default implementation throws an \u003ccode\u003eIllegalStateException\u003c/code\u003e if the output is \u003ccode\u003enull\u003c/code\u003e, and otherwise throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @exception IllegalStateException if the output has notbeen set.\n * @exception UnsupportedOperationException if\u003ccode\u003ecanWriteEmpty(imageIndex)\u003c/code\u003e returns \u003ccode\u003efalse\u003c/code\u003e.\n * @exception IllegalStateException if a previous call to\u003ccode\u003eprepareWriteEmpty\u003c/code\u003e without a corresponding call to \u003ccode\u003eendWriteEmpty\u003c/code\u003e has not been made.\n * @exception IllegalStateException if a previous call to\u003ccode\u003eprepareInsertEmpty\u003c/code\u003e without a corresponding call to \u003ccode\u003eendInsertEmpty\u003c/code\u003e has been made.\n * @exception IllegalStateException if a call to\u003ccode\u003eprepareReiplacePixels\u003c/code\u003e has been made without a matching call to \u003ccode\u003eendReplacePixels\u003c/code\u003e.\n * @exception IOException if an I/O error occurs during writing.\n */\n","tf":{"freq":{"fals":2,"otherwis":1,"call":7,"unsupport":3,"pixel":2,"correspond":2,"made":3,"state":5,"prior":1,"oper":3,"write":8,"end":4,"complet":1,"except":15,"thrown":1,"index":1,"error":1,"previous":2,"reiplac":1,"imag":2,"illeg":5,"without":3,"prepar":4,"empti":8,"begun":1,"replac":1,"will":1,"notbeen":1,"match":1,"insert":2,"output":2,"occur":1},"maxFreq":15,"totalTerms":95},"loc":6}