{"id":24077,"className":"javax.print.SimpleDoc","methodName":"getStreamForBytes","signature":"\u003cjavax.print.SimpleDoc: java.io.InputStream getStreamForBytes()\u003e","javadoc":"/** \n * Obtains an input stream for extracting byte print data from this doc. The \u003ccode\u003eDoc\u003c/code\u003e implementation is required to support this method if the \u003ccode\u003eDocFlavor\u003c/code\u003e has one of the following print data representation classes; otherwise this method returns \u003ccode\u003enull\u003c/code\u003e: \u003cUL\u003e \u003cLI\u003e \u003ccode\u003ebyte[]\u003c/code\u003e \u003cLI\u003e \u003ccode\u003ejava.io.InputStream\u003c/code\u003e \u003c/UL\u003e The doc\u0027s print data representation object is obtained.  Then, an input stream for reading the print data from the print data representation object as a stream of bytes is created and returned. However, if the print data representation object is itself an input stream then the print data representation object is simply returned. \u003cP\u003e\n * @return  an \u003ccode\u003eInputStream\u003c/code\u003e for reading the print databytes from this doc.  If an input stream cannot be provided because this doc does not meet the criteria stated above, \u003ccode\u003enull\u003c/code\u003e is returned.\n * @exception IOException if there was an I/O error while creating the input stream.\n */\n","tf":{"freq":{"otherwis":1,"stream":9,"simpli":1,"one":1,"state":1,"data":7,"object":4,"requir":1,"read":2,"howev":1,"follow":1,"except":2,"databyt":1,"support":1,"error":1,"criteria":1,"creat":2,"flavor":1,"meet":1,"provid":1,"print":8,"extract":1,"represent":5,"input":7,"obtain":2,"method":2,"java":1},"maxFreq":9,"totalTerms":66},"loc":17}