{"id":24076,"className":"javax.print.SimpleDoc","methodName":"getReaderForText","signature":"\u003cjavax.print.SimpleDoc: java.io.Reader getReaderForText()\u003e","javadoc":"/** \n * Obtains a reader for extracting character print data from this doc. The \u003ccode\u003eDoc\u003c/code\u003e implementation is required to support this method if the \u003ccode\u003eDocFlavor\u003c/code\u003e has one of the following print data representation classes, and return \u003ccode\u003enull\u003c/code\u003e otherwise: \u003cUL\u003e \u003cLI\u003e \u003ccode\u003echar[]\u003c/code\u003e \u003cLI\u003e \u003ccode\u003ejava.lang.String\u003c/code\u003e \u003cLI\u003e \u003ccode\u003ejava.io.Reader\u003c/code\u003e \u003c/UL\u003e The doc\u0027s print data representation object is used to construct and return a \u003ccode\u003eReader\u003c/code\u003e for reading the print data as a stream of characters from the print data representation object. However, if the print data representation object is itself a \u003ccode\u003eReader\u003c/code\u003e then the print data representation object is simply returned. \u003cP\u003e\n * @return  a \u003ccode\u003eReader\u003c/code\u003e for reading the print datacharacters from this doc. If a reader cannot be provided because this doc does not meet the criteria stated above, \u003ccode\u003enull\u003c/code\u003e is returned.\n * @exception IOException if there was an I/O error while creatingthe reader.\n */\n","tf":{"freq":{"otherwis":1,"simpli":1,"stream":1,"one":1,"state":1,"data":7,"use":1,"object":4,"lang":1,"datacharact":1,"requir":1,"read":2,"howev":1,"follow":1,"except":2,"text":1,"support":1,"error":1,"criteria":1,"charact":2,"flavor":1,"meet":1,"provid":1,"print":8,"extract":1,"represent":5,"obtain":1,"reader":8,"creatingth":1,"string":1,"method":1,"java":2,"construct":1},"maxFreq":8,"totalTerms":64},"loc":20}