{"id":28570,"className":"javax.crypto.spec.SecretKeySpec","methodName":"SecretKeySpec","signature":"\u003cjavax.crypto.spec.SecretKeySpec: void SecretKeySpec(byte[],int,int,java.lang.String)\u003e","javadoc":"/** \n * Constructs a secret key from the given byte array, using the first \u003ccode\u003elen\u003c/code\u003e bytes of \u003ccode\u003ekey\u003c/code\u003e, starting at \u003ccode\u003eoffset\u003c/code\u003e inclusive. \u003cp\u003e The bytes that constitute the secret key are those between \u003ccode\u003ekey[offset]\u003c/code\u003e and \u003ccode\u003ekey[offset+len-1]\u003c/code\u003e inclusive. \u003cp\u003eThis constructor does not check if the given bytes indeed specify a secret key of the specified algorithm. For example, if the algorithm is DES, this constructor does not check if \u003ccode\u003ekey\u003c/code\u003e is 8 bytes long, and also does not check for weak or semi-weak keys. In order for those checks to be performed, an algorithm-specific key specification class (in this case: {@link DESKeySpec DESKeySpec}) must be used.\n * @param key the key material of the secret key. The first\u003ccode\u003elen\u003c/code\u003e bytes of the array beginning at \u003ccode\u003eoffset\u003c/code\u003e inclusive are copied to protect against subsequent modification.\n * @param offset the offset in \u003ccode\u003ekey\u003c/code\u003e where the key materialstarts.\n * @param len the length of the key material.\n * @param algorithm the name of the secret-key algorithm to be associatedwith the given key material. See Appendix A in the \u003ca href\u003d \" {@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html#AppA\"\u003e Java Cryptography Architecture Reference Guide\u003c/a\u003e for information about standard algorithm names.\n * @exception IllegalArgumentException if \u003ccode\u003ealgorithm\u003c/code\u003eis null or \u003ccode\u003ekey\u003c/code\u003e is null, empty, or too short, i.e. \u003ccode\u003ekey.length-offset\u003clen\u003c/code\u003e.\n * @exception ArrayIndexOutOfBoundsException is thrown if\u003ccode\u003eoffset\u003c/code\u003e or \u003ccode\u003elen\u003c/code\u003e index bytes outside the \u003ccode\u003ekey\u003c/code\u003e.\n */\n","tf":{"freq":{"root":1,"perform":1,"associatedwith":1,"crypto":2,"must":1,"copi":1,"specifi":2,"given":3,"refer":1,"href":1,"key":21,"cryptographi":1,"argument":1,"thrown":1,"index":2,"except":4,"inform":1,"outsid":1,"start":1,"materi":3,"array":3,"spec":4,"materialstart":1,"constitut":1,"link":1,"use":2,"inde":1,"algorithm":7,"technot":1,"inclus":3,"order":1,"name":2,"length":2,"offset":8,"subsequ":1,"constructor":2,"app":1,"standard":1,"check":4,"semi":1,"len":6,"illeg":1,"empti":1,"begin":1,"guid":2,"specif":2,"secur":1,"architectur":1,"exampl":1,"skey":2,"secret":6,"weak":2,"appendix":1,"html":1,"java":1,"construct":1,"also":1,"first":2,"bound":1,"modif":1},"maxFreq":21,"totalTerms":132},"loc":18}