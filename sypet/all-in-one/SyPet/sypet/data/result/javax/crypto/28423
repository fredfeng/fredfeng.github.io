{"id":28423,"className":"javax.crypto.CipherInputStream","methodName":"read","signature":"\u003cjavax.crypto.CipherInputStream: int read(byte[],int,int)\u003e","javadoc":"/** \n * Reads up to \u003ccode\u003elen\u003c/code\u003e bytes of data from this input stream into an array of bytes. This method blocks until some input is available. If the first argument is \u003ccode\u003enull,\u003c/code\u003e up to \u003ccode\u003elen\u003c/code\u003e bytes are read and discarded.\n * @param b     the buffer into which the data is read.\n * @param off   the start offset in the destination array\u003ccode\u003ebuf\u003c/code\u003e\n * @param len   the maximum number of bytes read.\n * @return     the total number of bytes read into the buffer, or\u003ccode\u003e-1\u003c/code\u003e if there is no more data because the end of the stream has been reached.\n * @exception IOException  if an I/O error occurs.\n * @see java.io.InputStream#read()\n * @since      JCE1.2\n */\n","tf":{"freq":{"total":1,"stream":3,"data":3,"block":1,"discard":1,"buffer":2,"reach":1,"read":7,"offset":1,"end":1,"argument":1,"except":2,"error":1,"avail":1,"number":2,"len":3,"input":3,"start":1,"maximum":1,"java":1,"method":1,"first":1,"buf":1,"occur":1,"array":2,"destin":1},"maxFreq":7,"totalTerms":44},"loc":18}