{"id":28523,"className":"javax.crypto.CryptoPermission","methodName":"implies","signature":"\u003cjavax.crypto.CryptoPermission: boolean implies(java.security.Permission)\u003e","javadoc":"/** \n * Checks if the specified permission is \"implied\" by this object. \u003cp\u003e More specifically, this method returns true if:\u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ci\u003ep\u003c/i\u003e is an instance of CryptoPermission, and\u003cp\u003e \u003cli\u003e \u003ci\u003ep\u003c/i\u003e\u0027s algorithm name equals or (in the case of wildcards) is implied by this permission\u0027s algorithm name, and\u003cp\u003e \u003cli\u003e \u003ci\u003ep\u003c/i\u003e\u0027s maximum allowable key size is less or equal to this permission\u0027s maximum allowable key size, and\u003cp\u003e \u003cli\u003e \u003ci\u003ep\u003c/i\u003e\u0027s algorithm parameter spec equals or is implied by this permission\u0027s algorithm parameter spec, and\u003cp\u003e \u003cli\u003e \u003ci\u003ep\u003c/i\u003e\u0027s exemptionMechanism equals or is implied by this permission\u0027s exemptionMechanism (a \u003ccode\u003enull\u003c/code\u003e exemption mechanism implies any other exemption mechanism). \u003c/ul\u003e\n * @param p the permission to check against.\n * @return true if the specified permission is equal to orimplied by this permission, false otherwise.\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"spec":2,"allow":2,"object":1,"crypto":1,"algorithm":4,"specifi":2,"name":2,"permiss":9,"impli":6,"key":2,"less":1,"exempt":4,"check":2,"wildcard":1,"paramet":2,"true":2,"equal":5,"instanc":1,"size":2,"orimpli":1,"specif":1,"maximum":2,"mechan":4,"method":1},"maxFreq":9,"totalTerms":62},"loc":27}