{"id":28499,"className":"javax.crypto.Cipher","methodName":"updateAAD","signature":"\u003cjavax.crypto.Cipher: void updateAAD(byte[])\u003e","javadoc":"/** \n * Continues a multi-part update of the Additional Authentication Data (AAD). \u003cp\u003e Calls to this method provide AAD to the cipher when operating in modes such as AEAD (GCM/CCM).  If this cipher is operating in either GCM or CCM mode, all AAD must be supplied before beginning operations on the ciphertext (via the  {@code update} and {@code doFinal} methods).\n * @param src the buffer containing the Additional Authentication Data\n * @throws IllegalArgumentException if the {@code src}byte array is null\n * @throws IllegalStateException if this cipher is in a wrong state(e.g., has not been initialized), does not accept AAD, or if operating in either GCM or CCM mode and one of the  {@code update}methods has already been called for the active encryption/decryption operation\n * @throws UnsupportedOperationException if the corresponding methodin the  {@code CipherSpi} has not been overridden by animplementation\n * @since 1.7\n */\n","tf":{"freq":{"call":2,"unsupport":1,"via":1,"overridden":1,"correspond":1,"accept":1,"one":1,"state":2,"data":2,"activ":1,"must":1,"mode":3,"authent":2,"buffer":1,"decrypt":1,"oper":6,"encrypt":1,"spi":1,"initi":1,"src":2,"methodin":1,"argument":1,"addit":2,"except":3,"ciphertext":1,"suppli":1,"provid":1,"illeg":2,"continu":1,"begin":1,"either":2,"updat":4,"contain":1,"animplement":1,"multi":1,"alreadi":1,"wrong":1,"cipher":4,"method":3,"part":1,"array":1},"maxFreq":6,"totalTerms":66},"loc":7}