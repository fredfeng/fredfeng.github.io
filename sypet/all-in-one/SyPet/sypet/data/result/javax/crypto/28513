{"id":28513,"className":"javax.crypto.EncryptedPrivateKeyInfo","methodName":"EncryptedPrivateKeyInfo","signature":"\u003cjavax.crypto.EncryptedPrivateKeyInfo: void EncryptedPrivateKeyInfo(java.lang.String,byte[])\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eEncryptedPrivateKeyInfo\u003c/code\u003e from the encryption algorithm name and the encrypted data. \u003cp\u003eNote: This constructor will use null as the value of the algorithm parameters. If the encryption algorithm has parameters whose value is not null, a different constructor, e.g. EncryptedPrivateKeyInfo(AlgorithmParameters, byte[]), should be used.\n * @param algName encryption algorithm name. See Appendix A in the\u003ca href\u003d \" {@docRoot}/../technotes/guides/security/crypto/CryptoSpec.html#AppA\"\u003e Java Cryptography Architecture Reference Guide\u003c/a\u003e for information about standard Cipher algorithm names.\n * @param encryptedData encrypted data. The contents of\u003ccode\u003eencrypedData\u003c/code\u003e are copied to protect against subsequent modification when constructing this object.\n * @exception NullPointerException if \u003ccode\u003ealgName\u003c/code\u003e or\u003ccode\u003eencryptedData\u003c/code\u003e is null.\n * @exception IllegalArgumentException if \u003ccode\u003eencryptedData\u003c/code\u003eis empty, i.e. 0-length.\n * @exception NoSuchAlgorithmException if the specified algName isnot supported.\n */\n","tf":{"freq":{"spec":1,"root":1,"data":6,"use":2,"object":1,"crypto":2,"copi":1,"specifi":1,"algorithm":7,"info":3,"technot":1,"isnot":1,"refer":1,"encrypt":11,"name":6,"length":1,"valu":2,"subsequ":1,"href":1,"note":1,"key":3,"cryptographi":1,"constructor":2,"argument":1,"alg":3,"app":1,"except":6,"support":1,"standard":1,"whose":1,"paramet":3,"encryp":1,"illeg":1,"empti":1,"content":1,"guid":2,"inform":1,"differ":1,"secur":1,"architectur":1,"will":1,"pointer":1,"cipher":1,"java":1,"html":1,"appendix":1,"construct":2,"modif":1},"maxFreq":11,"totalTerms":93},"loc":20}