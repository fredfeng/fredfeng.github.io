{"id":28404,"className":"javax.crypto.KeyGenerator","methodName":"init","signature":"\u003cjavax.crypto.KeyGenerator: void init(int)\u003e","javadoc":"/** \n * Initializes this key generator for a certain keysize. \u003cp\u003e If this key generator requires any random bytes, it will get them using the {@link SecureRandom \u003ccode\u003eSecureRandom\u003c/code\u003e}implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)\n * @param keysize the keysize. This is an algorithm-specific metric,specified in number of bits.\n * @exception InvalidParameterException if the keysize is wrong or notsupported.\n */\n","tf":{"freq":{"highest":1,"link":1,"keysiz":4,"use":2,"algorithm":1,"specifi":1,"requir":1,"invalid":1,"none":1,"initi":1,"key":2,"except":2,"prioriti":1,"instal":2,"paramet":1,"random":6,"init":1,"number":1,"suppli":1,"provid":3,"notsupport":1,"bit":1,"system":1,"specif":1,"secur":3,"metric":1,"generat":2,"will":2,"wrong":1,"sourc":2,"certain":1},"maxFreq":6,"totalTerms":50},"loc":3}