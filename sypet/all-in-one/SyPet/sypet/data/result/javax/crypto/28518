{"id":28518,"className":"javax.crypto.EncryptedPrivateKeyInfo","methodName":"getKeySpec","signature":"\u003cjavax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)\u003e","javadoc":"/** \n * Extract the enclosed PKCS8EncodedKeySpec object from the encrypted data and return it. \u003cbr\u003eNote: In order to successfully retrieve the enclosed PKCS8EncodedKeySpec object, \u003ccode\u003ecipher\u003c/code\u003e needs to be initialized to either Cipher.DECRYPT_MODE or Cipher.UNWRAP_MODE, with the same key and parameters used for generating the encrypted data.\n * @param cipher the initialized cipher object which will beused for decrypting the encrypted data.\n * @return the PKCS8EncodedKeySpec object.\n * @exception NullPointerException if \u003ccode\u003ecipher\u003c/code\u003eis null.\n * @exception InvalidKeySpecException if the given cipher isinappropriate for the encrypted data or the encrypted data is corrupted and cannot be decrypted.\n */\n","tf":{"freq":{"spec":5,"need":1,"data":5,"use":1,"object":4,"corrupt":1,"isinappropri":1,"decrypt":2,"given":1,"invalid":1,"order":1,"encrypt":5,"initi":2,"note":1,"key":6,"except":4,"beus":1,"paramet":1,"extract":1,"encod":3,"either":1,"retriev":1,"enclos":2,"generat":1,"will":1,"pointer":1,"cipher":7,"success":1},"maxFreq":7,"totalTerms":62},"loc":26}