{"id":28494,"className":"javax.crypto.Cipher","methodName":"doFinal","signature":"\u003cjavax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)\u003e","javadoc":"/** \n * Encrypts or decrypts data in a single-part operation, or finishes a multiple-part operation. The data is encrypted or decrypted, depending on how this cipher was initialized. \u003cp\u003eAll \u003ccode\u003einput.remaining()\u003c/code\u003e bytes starting at \u003ccode\u003einput.position()\u003c/code\u003e are processed. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the output buffer. Upon return, the input buffer\u0027s position will be equal to its limit; its limit will not have changed. The output buffer\u0027s position will have advanced by n, where n is the value returned by this method; the output buffer\u0027s limit will not have changed. \u003cp\u003eIf \u003ccode\u003eoutput.remaining()\u003c/code\u003e bytes are insufficient to hold the result, a \u003ccode\u003eShortBufferException\u003c/code\u003e is thrown. In this case, repeat this call with a larger output buffer. Use {@link #getOutputSize(int) getOutputSize} to determine how bigthe output buffer should be. \u003cp\u003eUpon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to \u003ccode\u003einit\u003c/code\u003e. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to \u003ccode\u003einit\u003c/code\u003e) more data. \u003cp\u003eNote: if any exception is thrown, this cipher object may need to be reset before it can be used again. \u003cp\u003eNote: this method should be copy-safe, which means the \u003ccode\u003einput\u003c/code\u003e and \u003ccode\u003eoutput\u003c/code\u003e buffers can reference the same byte array and no unprocessed input data is overwritten when the result is copied into the output buffer.\n * @param input the input ByteBuffer\n * @param output the output ByteBuffer\n * @return the number of bytes stored in \u003ccode\u003eoutput\u003c/code\u003e\n * @exception IllegalStateException if this cipher is in a wrong state(e.g., has not been initialized)\n * @exception IllegalArgumentException if input and output are thesame object\n * @exception ReadOnlyBufferException if the output buffer is read-only\n * @exception IllegalBlockSizeException if this cipher is a block cipher,no padding has been requested (only in encryption mode), and the total input length of the data processed by this cipher is not a multiple of block size; or if this encryption algorithm is unable to process the input data provided.\n * @exception ShortBufferException if there is insufficient space in theoutput buffer\n * @exception BadPaddingException if this cipher is in decryption mode,and (un)padding has been requested, but the decrypted data is not bounded by the appropriate padding bytes\n * @exception AEADBadTagException if this cipher is decrypting in anAEAD mode (such as GCM/CCM), and the received authentication tag does not match the calculated value\n * @since 1.5\n */\n","tf":{"freq":{"total":1,"need":1,"via":1,"store":2,"singl":1,"tag":3,"copi":2,"specifi":1,"buffer":15,"theoutput":1,"refer":1,"oper":3,"encrypt":6,"request":2,"verifi":1,"reset":3,"thesam":1,"argument":1,"limit":3,"append":1,"except":16,"thrown":2,"multipl":2,"calcul":1,"hold":1,"init":2,"number":1,"avail":1,"bad":2,"provid":1,"insuffici":2,"size":4,"finish":2,"input":10,"start":1,"advanc":1,"determin":1,"will":4,"match":1,"unprocess":1,"output":15,"posit":3,"array":1,"upon":2,"result":3,"call":3,"link":1,"data":7,"state":3,"block":3,"use":3,"bigth":1,"repeat":1,"object":4,"space":1,"algorithm":1,"mode":5,"authent":2,"decrypt":7,"length":1,"read":2,"mean":1,"valu":2,"initi":3,"note":2,"pad":4,"safe":1,"may":1,"previous":1,"depend":2,"larger":1,"receiv":1,"equal":1,"illeg":3,"overwritten":1,"unabl":1,"process":3,"remain":2,"appropri":1,"wrong":1,"cipher":9,"method":3,"chang":2,"part":2,"bound":1},"maxFreq":16,"totalTerms":224},"loc":17}