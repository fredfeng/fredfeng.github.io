{"id":28554,"className":"javax.crypto.spec.RC5ParameterSpec","methodName":"RC5ParameterSpec","signature":"\u003cjavax.crypto.spec.RC5ParameterSpec: void RC5ParameterSpec(int,int,int,byte[],int)\u003e","javadoc":"/** \n * Constructs a parameter set for RC5 from the given version, number of rounds, word size (in bits), and IV. \u003cp\u003e The IV is taken from \u003ccode\u003eiv\u003c/code\u003e, starting at \u003ccode\u003eoffset\u003c/code\u003e inclusive. Note that the size of the IV (block size), starting at \u003ccode\u003eoffset\u003c/code\u003e inclusive, must be twice the word size. The bytes that constitute the IV are those between \u003ccode\u003eiv[offset]\u003c/code\u003e and \u003ccode\u003eiv[offset+2*(wordSize/8)-1]\u003c/code\u003e inclusive.\n * @param version the version.\n * @param rounds the number of rounds.\n * @param wordSize the word size in bits.\n * @param iv the buffer with the IV. The first \u003ccode\u003e2*(wordSize/8)\u003c/code\u003e bytes of the buffer beginning at \u003ccode\u003eoffset\u003c/code\u003e inclusive are copied to protect against subsequent modification.\n * @param offset the offset in \u003ccode\u003eiv\u003c/code\u003e where the IV starts.\n * @exception IllegalArgumentException if \u003ccode\u003eiv\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e or \u003ccode\u003e(iv.length - offset \u003c 2 * (wordSize / 8))\u003c/code\u003e\n */\n","tf":{"freq":{"spec":1,"constitut":1,"block":1,"round":3,"must":1,"copi":1,"version":3,"buffer":2,"inclus":4,"twice":1,"given":1,"length":1,"taken":1,"offset":8,"subsequ":1,"note":1,"argument":1,"except":2,"paramet":2,"number":2,"illeg":1,"size":9,"begin":1,"bit":2,"start":3,"word":7,"construct":1,"first":1,"modif":1},"maxFreq":9,"totalTerms":64},"loc":12}