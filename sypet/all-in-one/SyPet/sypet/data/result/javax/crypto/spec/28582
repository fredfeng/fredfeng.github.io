{"id":28582,"className":"javax.crypto.spec.PBEKeySpec","methodName":"PBEKeySpec","signature":"\u003cjavax.crypto.spec.PBEKeySpec: void PBEKeySpec(char[],byte[],int)\u003e","javadoc":"/** \n * Constructor that takes a password, salt, iteration count for generating PBEKey of fixed-key-size PBE ciphers. An empty char[] is used if null is specified for \u003ccode\u003epassword\u003c/code\u003e. \u003cp\u003e Note: the \u003ccode\u003epassword\u003c/code\u003e and \u003ccode\u003esalt\u003c/code\u003e are cloned before they are stored in the new \u003ccode\u003ePBEKeySpec\u003c/code\u003e object.\n * @param password the password.\n * @param salt the salt.\n * @param iterationCount the iteration count.\n * @exception NullPointerException if \u003ccode\u003esalt\u003c/code\u003e is null.\n * @exception IllegalArgumentException if \u003ccode\u003esalt\u003c/code\u003e is empty,i.e. 0-length, or \u003ccode\u003eiterationCount\u003c/code\u003e is not positive.\n */\n","tf":{"freq":{"spec":2,"count":4,"store":1,"use":1,"object":1,"password":5,"specifi":1,"fix":1,"length":1,"key":2,"note":1,"constructor":1,"argument":1,"clone":1,"except":4,"illeg":1,"size":1,"empti":2,"take":1,"generat":1,"ekey":2,"pointer":1,"cipher":1,"iter":4,"posit":1,"salt":6},"maxFreq":6,"totalTerms":48},"loc":20}