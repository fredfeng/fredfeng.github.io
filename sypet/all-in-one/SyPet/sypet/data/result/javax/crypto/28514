{"id":28514,"className":"javax.crypto.EncryptedPrivateKeyInfo","methodName":"EncryptedPrivateKeyInfo","signature":"\u003cjavax.crypto.EncryptedPrivateKeyInfo: void EncryptedPrivateKeyInfo(java.security.AlgorithmParameters,byte[])\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eEncryptedPrivateKeyInfo\u003c/code\u003e from the encryption algorithm parameters and the encrypted data.\n * @param algParams the algorithm parameters for the encryptionalgorithm. \u003ccode\u003ealgParams.getEncoded()\u003c/code\u003e should return the ASN.1 encoded bytes of the \u003ccode\u003eparameters\u003c/code\u003e field of the \u003ccode\u003eAlgorithmIdentifer\u003c/code\u003e component of the \u003ccode\u003eEncryptedPrivateKeyInfo\u003c/code\u003e type.\n * @param encryptedData encrypted data. The contents of\u003ccode\u003eencrypedData\u003c/code\u003e are copied to protect against subsequent modification when constructing this object.\n * @exception NullPointerException if \u003ccode\u003ealgParams\u003c/code\u003e or\u003ccode\u003eencryptedData\u003c/code\u003e is null.\n * @exception IllegalArgumentException if \u003ccode\u003eencryptedData\u003c/code\u003eis empty, i.e. 0-length.\n * @exception NoSuchAlgorithmException if the specified algName ofthe specified \u003ccode\u003ealgParams\u003c/code\u003e parameter is not supported.\n */\n","tf":{"freq":{"identif":1,"data":6,"object":1,"type":1,"encryptionalgorithm":1,"copi":1,"specifi":2,"algorithm":4,"info":3,"encrypt":9,"ofth":1,"name":1,"length":1,"subsequ":1,"key":3,"alg":5,"argument":1,"except":6,"support":1,"paramet":4,"encryp":1,"illeg":1,"empti":1,"field":1,"content":1,"encod":2,"compon":1,"pointer":1,"construct":2,"modif":1},"maxFreq":9,"totalTerms":65},"loc":20}