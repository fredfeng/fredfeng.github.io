{"id":28471,"className":"javax.crypto.Cipher","methodName":"getOutputSize","signature":"\u003cjavax.crypto.Cipher: int getOutputSize(int)\u003e","javadoc":"/** \n * Returns the length in bytes that an output buffer would need to be in order to hold the result of the next \u003ccode\u003eupdate\u003c/code\u003e or \u003ccode\u003edoFinal\u003c/code\u003e operation, given the input length \u003ccode\u003einputLen\u003c/code\u003e (in bytes). \u003cp\u003eThis call takes into account any unprocessed (buffered) data from a previous \u003ccode\u003eupdate\u003c/code\u003e call, padding, and AEAD tagging. \u003cp\u003eThe actual output length of the next \u003ccode\u003eupdate\u003c/code\u003e or \u003ccode\u003edoFinal\u003c/code\u003e call may be smaller than the length returned by this method.\n * @param inputLen the input length (in bytes)\n * @return the required output buffer size (in bytes)\n * @exception IllegalStateException if this cipher is in a wrong state(e.g., has not yet been initialized)\n */\n","tf":{"freq":{"need":1,"result":1,"call":3,"tag":1,"next":2,"state":2,"data":1,"smaller":1,"buffer":3,"requir":1,"given":1,"order":1,"oper":1,"length":5,"initi":1,"pad":1,"except":2,"may":1,"previous":1,"hold":1,"len":2,"illeg":1,"size":2,"input":4,"updat":3,"take":1,"account":1,"actual":1,"wrong":1,"cipher":1,"method":1,"unprocess":1,"output":4,"yet":1},"maxFreq":5,"totalTerms":55},"loc":12}