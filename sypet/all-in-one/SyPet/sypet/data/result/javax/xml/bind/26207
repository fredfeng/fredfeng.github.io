{"id":26207,"className":"javax.xml.bind.ValidationEventHandler","methodName":"handleEvent","signature":"\u003cjavax.xml.bind.ValidationEventHandler: boolean handleEvent(javax.xml.bind.ValidationEvent)\u003e","javadoc":"/** \n * Receive notification of a validation warning or error. The ValidationEvent will have a {@link ValidationEventLocator ValidationEventLocator} embedded in it thatindicates where the error or warning occurred. \u003cp\u003e If an unchecked runtime exception is thrown from this method, the JAXB provider will treat it as if the method returned false and interrupt the current unmarshal, validate, or marshal operation.\n * @param event the encapsulated validation event information.  It is aprovider error if this parameter is null.\n * @return true if the JAXB Provider should attempt to continue the currentunmarshal, validate, or marshal operation after handling this warning/error, false if the provider should terminate the current operation with the appropriate \u003ctt\u003eUnmarshalException\u003c/tt\u003e, \u003ctt\u003eValidationException\u003c/tt\u003e, or \u003ctt\u003eMarshalException\u003c/tt\u003e.\n * @throws IllegalArgumentException if the event object is null.\n */\n","tf":{"freq":{"attempt":1,"warn":3,"fals":2,"thatind":1,"valid":8,"link":1,"uncheck":1,"object":1,"notif":1,"oper":3,"event":7,"unmarsh":2,"current":2,"marshal":3,"argument":1,"locat":2,"except":5,"thrown":1,"error":4,"runtim":1,"currentunmarsh":1,"paramet":1,"true":1,"receiv":1,"illeg":1,"provid":3,"continu":1,"embed":1,"interrupt":1,"handl":2,"inform":1,"termin":1,"appropri":1,"aprovid":1,"encapsul":1,"will":2,"method":2,"occur":1,"treat":1},"maxFreq":8,"totalTerms":74},"loc":0}