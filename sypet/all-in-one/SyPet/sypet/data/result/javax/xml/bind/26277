{"id":26277,"className":"javax.xml.bind.Unmarshaller","methodName":"unmarshal","signature":"\u003cjavax.xml.bind.Unmarshaller: java.lang.Object unmarshal(org.w3c.dom.Node)\u003e","javadoc":"/** \n * Unmarshal global XML data from the specified DOM tree and return the resulting content tree. \u003cp\u003e Implements \u003ca href\u003d\"#unmarshalGlobal\"\u003eUnmarshal Global Root Element\u003c/a\u003e.\n * @param node the document/element to unmarshal XML data from. The caller must support at least Document and Element.\n * @return the newly created root object of the java content tree\n * @throws JAXBException If any unexpected errors occur while unmarshalling\n * @throws UnmarshalException If the  {@link ValidationEventHandler ValidationEventHandler}returns false from its \u003ctt\u003ehandleEvent\u003c/tt\u003e method or the \u003ctt\u003eUnmarshaller\u003c/tt\u003e is unable to perform the XML to Java binding.  See \u003ca href\u003d\"#unmarshalEx\"\u003eUnmarshalling XML Data\u003c/a\u003e\n * @throws IllegalArgumentException If the Node parameter is null\n * @see #unmarshal(org.w3c.dom.Node,Class)\n */\n","tf":{"freq":{"fals":1,"caller":1,"valid":2,"result":1,"unexpect":1,"dom":1,"root":2,"least":1,"link":1,"data":3,"perform":1,"object":1,"org":1,"unmarshal":3,"must":1,"specifi":1,"document":2,"tree":3,"event":3,"unmarsh":8,"href":2,"argument":1,"element":3,"except":3,"support":1,"error":1,"creat":1,"global":3,"paramet":1,"illeg":1,"handl":1,"unabl":1,"content":2,"newli":1,"node":3,"method":1,"java":2,"bind":1,"handler":2,"occur":1},"maxFreq":8,"totalTerms":70},"loc":0}