{"id":26766,"className":"javax.xml.ws.spi.Provider","methodName":"createAndPublishEndpoint","signature":"\u003cjavax.xml.ws.spi.Provider: javax.xml.ws.Endpoint createAndPublishEndpoint(java.lang.String,java.lang.Object,javax.xml.ws.WebServiceFeature[])\u003e","javadoc":"/** \n * Creates and publishes an endpoint object with the specified address, implementation object and web service features. \u003ccode\u003eProvider\u003c/code\u003e implementations must override the default implementation.\n * @param address A URI specifying the address and transport/protocolto use. A http: URI MUST result in the SOAP 1.1/HTTP binding being used. Implementations may support other URI schemes.\n * @param implementor A service implementation object to whichincoming requests will be dispatched. The corresponding class MUST be annotated with all the necessary Web service annotations.\n * @param features A list of WebServiceFeatures to configure on theendpoint.  Supported features not in the \u003ccode\u003efeatures \u003c/code\u003e parameter will have their default values.\n * @return The newly created endpoint.\n * @since JAX-WS 2.2\n */\n","tf":{"freq":{"result":1,"correspond":1,"theendpoint":1,"servic":4,"use":2,"object":3,"necessari":1,"must":1,"specifi":2,"scheme":1,"transport":1,"annot":2,"request":1,"valu":1,"dispatch":1,"publish":2,"protocolto":1,"implementor":1,"may":1,"support":2,"creat":3,"paramet":1,"list":1,"web":3,"provid":1,"endpoint":3,"newli":1,"configur":1,"address":3,"http":1,"featur":5,"will":2,"whichincom":1,"bind":1},"maxFreq":5,"totalTerms":57},"loc":3}