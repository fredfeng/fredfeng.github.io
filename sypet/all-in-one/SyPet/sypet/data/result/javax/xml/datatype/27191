{"id":27191,"className":"javax.xml.datatype.XMLGregorianCalendar","methodName":"toString","signature":"\u003cjavax.xml.datatype.XMLGregorianCalendar: java.lang.String toString()\u003e","javadoc":"/** \n * \u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e \u003ccode\u003eObject\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThe result is a lexical representation generated by  {@link #toXMLFormat()}.\u003c/p\u003e\n * @return A non-\u003ccode\u003enull\u003c/code\u003e valid \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e.\n * @throws IllegalStateException if the combination of set fieldsdoes not match one of the eight defined XML Schema builtin date/time datatypes.\n * @see #toXMLFormat()\n */\n","tf":{"freq":{"defin":1,"result":1,"valid":1,"except":1,"one":1,"link":1,"state":1,"object":1,"date":1,"illeg":1,"eight":1,"represent":3,"non":1,"schema":1,"time":1,"lexic":1,"fieldsdo":1,"builtin":1,"string":3,"generat":1,"combin":1,"lgregorian":2,"lformat":2,"match":1,"datatyp":1,"calendar":2},"maxFreq":3,"totalTerms":33},"loc":4}