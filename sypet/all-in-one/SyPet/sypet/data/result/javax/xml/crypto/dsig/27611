{"id":27611,"className":"javax.xml.crypto.dsig.XMLSignatureFactory","methodName":"newReference","signature":"\u003cjavax.xml.crypto.dsig.XMLSignatureFactory: javax.xml.crypto.dsig.Reference newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eReference\u003c/code\u003e with the specified parameters.\n * @param uri the reference URI (may be \u003ccode\u003enull\u003c/code\u003e)\n * @param dm the digest method\n * @param transforms a list of {@link Transform}s. The list is defensively copied to protect against subsequent modification. May be \u003ccode\u003enull\u003c/code\u003e or empty.\n * @param type the reference type, as a URI (may be \u003ccode\u003enull\u003c/code\u003e)\n * @param id the reference ID (may be \u003ccode\u003enull\u003c/code\u003e)\n * @return a \u003ccode\u003eReference\u003c/code\u003e\n * @throws ClassCastException if any of the \u003ccode\u003etransforms\u003c/code\u003e arenot of type \u003ccode\u003eTransform\u003c/code\u003e\n * @throws IllegalArgumentException if \u003ccode\u003euri\u003c/code\u003e is not RFC 2396compliant\n * @throws NullPointerException if \u003ccode\u003edm\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"argument":1,"except":3,"may":4,"creat":1,"link":1,"paramet":1,"digest":1,"list":2,"type":3,"illeg":1,"uri":2,"copi":1,"empti":1,"specifi":1,"defens":1,"transform":4,"cast":1,"refer":6,"compliant":1,"pointer":1,"method":1,"arenot":1,"subsequ":1,"modif":1},"maxFreq":6,"totalTerms":41},"loc":0}