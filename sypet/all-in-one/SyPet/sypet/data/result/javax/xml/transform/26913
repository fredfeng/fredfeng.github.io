{"id":26913,"className":"javax.xml.transform.Transformer","methodName":"setParameter","signature":"\u003cjavax.xml.transform.Transformer: void setParameter(java.lang.String,java.lang.Object)\u003e","javadoc":"/** \n * Add a parameter for the transformation. \u003cp\u003ePass a qualified name as a two-part string, the namespace URI enclosed in curly braces ({}), followed by the local name. If the name has a null URL, the String only contain the local name. An application can safely check for a non-null URI by testing to see if the first character of the name is a \u0027{\u0027 character.\u003c/p\u003e \u003cp\u003eFor example, if a URI and local name were obtained from an element defined with \u0026lt;xyz:foo xmlns:xyz\u003d\"http://xyz.foo.com/yada/baz.html\"/\u0026gt;, then the qualified name would be \"{http://xyz.foo.com/yada/baz.html}foo\". Note that no prefix is used.\u003c/p\u003e\n * @param name The name of the parameter, which may begin with anamespace URI in curly braces ({}).\n * @param value The value object.  This can be any valid Java object. It isup to the processor to provide the proper object coersion or to simply pass the object on for use in an extension.\n * @throws NullPointerException If value is null.\n */\n","tf":{"freq":{"isup":1,"com":2,"test":1,"foo":4,"namespac":1,"proper":1,"processor":1,"follow":1,"element":1,"except":1,"charact":2,"xmlns":1,"provid":1,"non":1,"obtain":1,"baz":2,"http":2,"contain":1,"enclos":1,"prefix":1,"pointer":1,"xyz":4,"defin":1,"valid":1,"simpli":1,"use":2,"object":4,"add":1,"applic":1,"transform":1,"brace":2,"yada":2,"extens":1,"name":9,"valu":3,"note":1,"safe":1,"may":1,"check":1,"paramet":3,"pass":2,"begin":1,"coersion":1,"two":1,"anamespac":1,"string":2,"exampl":1,"cur":2,"html":2,"java":1,"local":3,"part":1,"first":1,"qualifi":2},"maxFreq":9,"totalTerms":89},"loc":0}