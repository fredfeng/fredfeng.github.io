{"id":26722,"className":"javax.xml.ws.Endpoint","methodName":"publish","signature":"\u003cjavax.xml.ws.Endpoint: javax.xml.ws.Endpoint publish(java.lang.String,java.lang.Object,javax.xml.ws.WebServiceFeature[])\u003e","javadoc":"/** \n * Creates and publishes an endpoint for the specified implementor object at the given address. The created endpoint is configured with the web service features. \u003cp\u003e The necessary server infrastructure will be created and configured by the JAX-WS implementation using some default configuration. In order to get more control over the server configuration, please use the  {@link javax.xml.ws.Endpoint#create(String,Object)} and{@link javax.xml.ws.Endpoint#publish(Object)} methods instead.\n * @param address A URI specifying the address and transport/protocolto use. A http: URI MUST result in the SOAP 1.1/HTTP binding being used. Implementations may support other URI schemes.\n * @param implementor The endpoint implementor.\n * @param features A list of WebServiceFeature to configure on theendpoint. Supported features not in the \u003ccode\u003efeatures \u003c/code\u003e parameter will have their default values.\n * @return The newly created endpoint.\n * @throws java.lang.SecurityException If a \u003ccode\u003ejava.lang.SecurityManger\u003c/code\u003e is being used and the application doesn\u0027t have the \u003ccode\u003eWebServicePermission(\"publishEndpoint\")\u003c/code\u003e permission.\n * @since JAX-WS 2.2\n */\n","tf":{"freq":{"result":1,"infrastructur":1,"theendpoint":1,"servic":3,"link":2,"use":5,"object":3,"lang":2,"necessari":1,"applic":1,"specifi":2,"pleas":1,"scheme":1,"given":1,"order":1,"transport":1,"javax":2,"permiss":2,"valu":1,"publish":4,"protocolto":1,"implementor":3,"control":1,"except":1,"may":1,"support":2,"creat":5,"manger":1,"paramet":1,"list":1,"web":3,"xml":2,"endpoint":7,"newli":1,"configur":5,"secur":2,"http":1,"address":3,"string":1,"instead":1,"featur":5,"will":2,"java":2,"method":1,"server":2,"bind":1},"maxFreq":7,"totalTerms":92},"loc":3}