{"id":26580,"className":"javax.xml.namespace.NamespaceContext","methodName":"getPrefixes","signature":"\u003cjavax.xml.namespace.NamespaceContext: java.util.Iterator getPrefixes(java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003eGet all prefixes bound to a Namespace URI in the current scope.\u003c/p\u003e \u003cp\u003eAn Iterator over String elements is returned in an arbitrary, \u003cstrong\u003eimplementation dependent\u003c/strong\u003e, order.\u003c/p\u003e \u003cp\u003e\u003cstrong\u003eThe \u003ccode\u003eIterator\u003c/code\u003e is \u003cem\u003enot\u003c/em\u003e modifiable.  e.g. the \u003ccode\u003eremove()\u003c/code\u003e method will throw \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\u003c/strong\u003e\u003c/p\u003e \u003cp\u003eWhen requesting prefixes by Namespace URI, the following table describes the returned prefixes value for all Namespace URI values:\u003c/p\u003e \u003ctable border\u003d\"2\" rules\u003d\"all\" cellpadding\u003d\"4\"\u003e \u003cthead\u003e \u003ctr\u003e \u003cth align\u003d\"center\" colspan\u003d\"2\"\u003e\u003ccode\u003e getPrefixes(namespaceURI)\u003c/code\u003e return value for specified Namespace URIs\u003c/th\u003e \u003c/tr\u003e \u003ctr\u003e \u003cth\u003eNamespace URI parameter\u003c/th\u003e \u003cth\u003eprefixes value returned\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003ebound Namespace URI, including the \u0026lt;default Namespace URI\u0026gt;\u003c/td\u003e \u003ctd\u003e \u003ccode\u003eIterator\u003c/code\u003e over prefixes bound to Namespace URI in the current scope in an arbitrary, \u003cstrong\u003eimplementation dependent\u003c/strong\u003e, order \u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eunbound Namespace URI\u003c/td\u003e \u003ctd\u003eempty \u003ccode\u003eIterator\u003c/code\u003e\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e\u003ccode\u003eXMLConstants.XML_NS_URI\u003c/code\u003e (\"http://www.w3.org/XML/1998/namespace\")\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIterator\u003c/code\u003e with one element set to \u003ccode\u003eXMLConstants.XML_NS_PREFIX\u003c/code\u003e (\"xml\")\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e\u003ccode\u003eXMLConstants.XMLNS_ATTRIBUTE_NS_URI\u003c/code\u003e (\"http://www.w3.org/2000/xmlns/\")\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIterator\u003c/code\u003e with one element set to \u003ccode\u003eXMLConstants.XMLNS_ATTRIBUTE\u003c/code\u003e (\"xmlns\")\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e\n * @param namespaceURI URI of Namespace to lookup\n * @return \u003ccode\u003eIterator\u003c/code\u003e for all prefixes bound to theNamespace URI in the current scope\n * @throws IllegalArgumentException When \u003ccode\u003enamespaceURI\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"unsupport":1,"scope":3,"one":2,"www":2,"org":2,"lookup":1,"specifi":1,"center":1,"arbitrari":2,"unbound":1,"namespac":15,"order":2,"oper":1,"rule":1,"request":1,"current":3,"valu":4,"border":1,"follow":1,"argument":2,"thead":2,"element":3,"thrown":1,"except":3,"includ":1,"colspan":1,"tbodi":2,"depend":2,"align":1,"paramet":1,"remov":1,"describ":1,"xml":1,"xmlns":2,"illeg":2,"empti":1,"cellpad":1,"http":2,"strong":6,"tabl":3,"string":1,"prefix":8,"modifi":1,"will":1,"lconstant":4,"method":1,"iter":7,"bound":4},"maxFreq":15,"totalTerms":111},"loc":0}