{"id":26856,"className":"javax.xml.xpath.XPathFactory","methodName":"newInstance","signature":"\u003cjavax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance(java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003eGet a new \u003ccode\u003eXPathFactory\u003c/code\u003e instance using the specified object model.\u003c/p\u003e \u003cp\u003eTo find a \u003ccode\u003eXPathFactory\u003c/code\u003e object, this method looks the following places in the following order where \"the class loader\" refers to the context class loader:\u003c/p\u003e \u003col\u003e \u003cli\u003e If the system property  {@link #DEFAULT_PROPERTY_NAME} + \":uri\" is present,where uri is the parameter to this method, then its value is read as a class name. The method will try to create a new instance of this class by using the class loader, and returns it if it is successfully created. \u003c/li\u003e \u003cli\u003e ${java.home}/lib/jaxp.properties is read and the value associated with the key being the system property above is looked for. If present, the value is processed just like above. \u003c/li\u003e \u003cli\u003e The class loader is asked for service provider provider-configuration files matching \u003ccode\u003ejavax.xml.xpath.XPathFactory\u003c/code\u003e in the resource directory META-INF/services. See the JAR File Specification for file format and parsing rules. Each potential service provider is required to implement the method: \u003cpre\u003e {@link #isObjectModelSupported(String objectModel)}\u003c/pre\u003e The first service provider found in class loader order that supports the specified object model is returned. \u003c/li\u003e \u003cli\u003e Platform default \u003ccode\u003eXPathFactory\u003c/code\u003e is located in a platform specific way. There must be a platform default XPathFactory for the W3C DOM, i.e.  {@link #DEFAULT_OBJECT_MODEL_URI}. \u003c/li\u003e \u003c/ol\u003e \u003cp\u003eIf everything fails, an \u003ccode\u003eXPathFactoryConfigurationException\u003c/code\u003e will be thrown.\u003c/p\u003e \u003cp\u003eTip for Trouble-shooting:\u003c/p\u003e \u003cp\u003eSee  {@link java.util.Properties#load(java.io.InputStream)} for exactly how a property file is parsed.In particular, colons \u0027:\u0027 need to be escaped in a property file, so make sure the URIs are properly escaped in it. For example:\u003c/p\u003e \u003cpre\u003e http\\://java.sun.com/jaxp/xpath/dom\u003dorg.acme.DomXPathFactory \u003c/pre\u003e\n * @param uri Identifies the underlying object model.The specification only defines the URI  {@link #DEFAULT_OBJECT_MODEL_URI}, \u003ccode\u003ehttp://java.sun.com/jaxp/xpath/dom\u003c/code\u003e for the W3C DOM, the org.w3c.dom package, and implementations are free to introduce other URIs for other object models.\n * @return Instance of an \u003ccode\u003eXPathFactory\u003c/code\u003e.\n * @throws XPathFactoryConfigurationException If the specified object model is unavailable.\n * @throws NullPointerException If \u003ccode\u003euri\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @throws IllegalArgumentException If \u003ccode\u003euri\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003eor \u003ccode\u003euri.length() \u003d\u003d 0\u003c/code\u003e.\n */\n","tf":{"freq":{"need":1,"com":2,"dom":4,"servic":4,"particular":1,"tip":1,"must":1,"specifi":3,"free":1,"requir":1,"fail":1,"refer":1,"file":5,"javax":1,"unavail":1,"exact":1,"proper":1,"place":1,"key":1,"sure":1,"follow":2,"argument":1,"platform":3,"thrown":1,"except":4,"troubl":1,"everyth":1,"support":2,"creat":2,"loader":5,"xml":1,"format":1,"like":1,"uri":6,"provid":4,"instanc":4,"present":2,"input":1,"system":2,"configur":3,"jaxp":3,"http":2,"shoot":1,"will":2,"pointer":1,"load":1,"properti":6,"match":1,"ask":1,"make":1,"util":1,"defin":1,"home":1,"stream":1,"model":7,"directori":1,"link":5,"way":1,"use":2,"identifi":1,"colon":1,"object":8,"org":2,"sun":2,"escap":2,"introduc":1,"xpath":12,"resourc":1,"order":2,"associ":1,"factori":9,"rule":1,"name":1,"length":1,"read":2,"valu":3,"find":1,"look":2,"just":1,"locat":1,"acm":1,"paramet":1,"illeg":1,"potenti":1,"process":1,"specif":3,"lib":1,"pre":4,"string":1,"exampl":1,"context":1,"method":4,"java":5,"first":1,"pars":2,"success":1,"found":1},"maxFreq":12,"totalTerms":204},"loc":32}