{"id":27176,"className":"javax.xml.datatype.XMLGregorianCalendar","methodName":"getEonAndYear","signature":"\u003cjavax.xml.datatype.XMLGregorianCalendar: java.math.BigInteger getEonAndYear()\u003e","javadoc":"/** \n * \u003cp\u003eReturn XML Schema 1.0 dateTime datatype field for \u003ccode\u003eyear\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eValue constraints for this value are summarized in \u003ca href\u003d\"#datetimefield-year\"\u003eyear field of date/time field mapping table\u003c/a\u003e.\u003c/p\u003e\n * @return sum of \u003ccode\u003eeon\u003c/code\u003e and \u003ccode\u003eBigInteger.valueOf(year)\u003c/code\u003ewhen both fields are defined. When only \u003ccode\u003eyear\u003c/code\u003e is defined, return it. When both \u003ccode\u003eeon\u003c/code\u003e and \u003ccode\u003eyear\u003c/code\u003e are not defined, return \u003ccode\u003enull\u003c/code\u003e.\n * @see #getEon()\n * @see #getYear()\n */\n","tf":{"freq":{"defin":3,"datetimefield":1,"sum":1,"constraint":1,"date":2,"summar":1,"schema":1,"field":4,"time":2,"tabl":1,"map":1,"year":8,"valu":3,"big":1,"datatyp":1,"integ":1,"href":1,"eon":4},"maxFreq":8,"totalTerms":37},"loc":0}