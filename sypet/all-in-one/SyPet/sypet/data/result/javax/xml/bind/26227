{"id":26227,"className":"javax.xml.bind.Marshaller","methodName":"marshal","signature":"\u003cjavax.xml.bind.Marshaller: void marshal(java.lang.Object,org.w3c.dom.Node)\u003e","javadoc":"/** \n * Marshal the content tree rooted at \u003ctt\u003ejaxbElement\u003c/tt\u003e into a DOM tree.\n * @param jaxbElement The content tree to be marshalled.\n * @param node DOM nodes will be added as children of this node. This parameter must be a Node that accepts children ( {@link org.w3c.dom.Document}, {@link org.w3c.dom.DocumentFragment}, or {@link org.w3c.dom.Element})\n * @throws JAXBException If any unexpected problem occurs during the marshalling.\n * @throws MarshalException If the  {@link ValidationEventHandler ValidationEventHandler}returns false from its \u003ctt\u003ehandleEvent\u003c/tt\u003e method or the \u003ctt\u003eMarshaller\u003c/tt\u003e is unable to marshal \u003ctt\u003ejaxbElement\u003c/tt\u003e (or any object reachable from \u003ctt\u003ejaxbElement\u003c/tt\u003e).  See \u003ca href\u003d\"#elementMarshalling\"\u003e Marshalling a JAXB element\u003c/a\u003e.\n * @throws IllegalArgumentException If any of the method parameters are null\n */\n","tf":{"freq":{"fals":1,"valid":2,"unexpect":1,"root":1,"dom":3,"accept":1,"link":4,"children":2,"object":1,"org":3,"must":1,"document":2,"tree":3,"event":3,"href":1,"marshal":9,"fragment":1,"argument":1,"element":7,"except":3,"paramet":2,"problem":1,"illeg":1,"handl":1,"unabl":1,"content":2,"node":4,"will":1,"ad":1,"method":2,"reachabl":1,"jaxb":4,"handler":2,"occur":1},"maxFreq":9,"totalTerms":74},"loc":0}