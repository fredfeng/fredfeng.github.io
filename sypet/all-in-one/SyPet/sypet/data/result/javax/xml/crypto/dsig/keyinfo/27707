{"id":27707,"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","methodName":"newKeyInfo","signature":"\u003cjavax.xml.crypto.dsig.keyinfo.KeyInfoFactory: javax.xml.crypto.dsig.keyinfo.KeyInfo newKeyInfo(java.util.List,java.lang.String)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eKeyInfo\u003c/code\u003e containing the specified list of key information types and optional id. The \u003ccode\u003eid\u003c/code\u003e parameter represents the value of an XML \u003ccode\u003eID\u003c/code\u003e attribute and is useful for referencing the \u003ccode\u003eKeyInfo\u003c/code\u003e from other XML structures.\n * @param content a list of one or more {@link XMLStructure}s representing key information types. The list is defensively copied to protect against subsequent modification.\n * @param id the value of an XML \u003ccode\u003eID\u003c/code\u003e (may be \u003ccode\u003enull\u003c/code\u003e)\n * @return a \u003ccode\u003eKeyInfo\u003c/code\u003e\n * @throws NullPointerException if \u003ccode\u003econtent\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if \u003ccode\u003econtent\u003c/code\u003e is empty\n * @throws ClassCastException if \u003ccode\u003econtent\u003c/code\u003e contains any entriesthat are not of type  {@link XMLStructure}\n */\n","tf":{"freq":{"structur":1,"one":1,"link":2,"use":1,"type":3,"copi":1,"specifi":1,"info":4,"defens":1,"referenc":1,"attribut":1,"valu":2,"subsequ":1,"option":1,"key":6,"argument":1,"except":3,"may":1,"repres":2,"creat":1,"paramet":1,"list":3,"illeg":1,"empti":1,"lstructur":2,"content":4,"inform":2,"entriesthat":1,"cast":1,"contain":2,"pointer":1,"modif":1},"maxFreq":6,"totalTerms":55},"loc":0}