{"id":27232,"className":"javax.xml.datatype.DatatypeFactory","methodName":"newDuration","signature":"\u003cjavax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003eObtain a new instance of a \u003ccode\u003eDuration\u003c/code\u003e specifying the \u003ccode\u003eDuration\u003c/code\u003e as its string representation, \"PnYnMnDTnHnMnS\", as defined in XML Schema 1.0 section 3.2.6.1.\u003c/p\u003e \u003cp\u003eXML Schema Part 2: Datatypes, 3.2.6 duration, defines \u003ccode\u003eduration\u003c/code\u003e as:\u003c/p\u003e \u003cblockquote\u003e duration represents a duration of time. The value space of duration is a six-dimensional space where the coordinates designate the Gregorian year, month, day, hour, minute, and second components defined in Section 5.5.3.2 of [ISO 8601], respectively. These components are ordered in their significance by their order of appearance i.e. as year, month, day, hour, minute, and second. \u003c/blockquote\u003e \u003cp\u003eAll six values are set and availabe from the created  {@link Duration}\u003c/p\u003e \u003cp\u003eThe XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An  {@link UnsupportedOperationException} will be thrown with a message indicating implementation limitsif implementation capacities are exceeded.\u003c/p\u003e\n * @param lexicalRepresentation \u003ccode\u003eString\u003c/code\u003e representation of a \u003ccode\u003eDuration\u003c/code\u003e.\n * @return New \u003ccode\u003eDuration\u003c/code\u003e created from parsing the \u003ccode\u003elexicalRepresentation\u003c/code\u003e.\n * @throws IllegalArgumentException If \u003ccode\u003elexicalRepresentation\u003c/code\u003e is not a valid representation of a \u003ccode\u003eDuration\u003c/code\u003e.\n * @throws UnsupportedOperationException If implementation cannot support requested values.\n * @throws NullPointerException if \u003ccode\u003elexicalRepresentation\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"unsupport":2,"appear":1,"second":2,"specifi":1,"schema":3,"dtn":1,"arbitrari":1,"time":1,"lexic":4,"oper":2,"blockquot":2,"request":1,"arbitrarili":1,"year":2,"argument":1,"coordin":1,"incap":1,"thrown":1,"except":4,"minut":2,"support":2,"creat":2,"signific":1,"chose":1,"instanc":1,"size":1,"obtain":1,"will":1,"month":2,"pointer":1,"day":2,"small":1,"valid":1,"defin":3,"limitsif":1,"link":2,"state":1,"space":2,"six":2,"durat":12,"indic":1,"order":2,"valu":5,"datatyp":1,"may":1,"repres":1,"messag":1,"exceed":1,"availab":1,"hour":2,"illeg":1,"section":2,"represent":7,"dimension":1,"specif":1,"compon":2,"larg":1,"string":2,"capac":1,"gregorian":1,"part":1,"pars":1,"design":1,"respect":1},"maxFreq":12,"totalTerms":113},"loc":0}