{"id":27212,"className":"javax.xml.datatype.Duration","methodName":"add","signature":"\u003cjavax.xml.datatype.Duration: javax.xml.datatype.Duration add(javax.xml.datatype.Duration)\u003e","javadoc":"/** \n * \u003cp\u003eComputes a new duration whose value is \u003ccode\u003ethis+rhs\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor example,\u003c/p\u003e \u003cpre\u003e \"1 day\" + \"-3 days\" \u003d \"-2 days\" \"1 year\" + \"1 day\" \u003d \"1 year and 1 day\" \"-(1 hour,50 minutes)\" + \"-20 minutes\" \u003d \"-(1 hours,70 minutes)\" \"15 hours\" + \"-3 days\" \u003d \"-(2 days,9 hours)\" \"1 year\" + \"-1 day\" \u003d IllegalStateException \u003c/pre\u003e \u003cp\u003eSince there\u0027s no way to meaningfully subtract 1 day from 1 month, there are cases where the operation fails in {@link IllegalStateException}.\u003c/p\u003e \u003cp\u003e Formally, the computation is defined as follows.\u003c/p\u003e \u003cp\u003e Firstly, we can assume that two \u003ccode\u003eDuration\u003c/code\u003es to be added are both positive without losing generality (i.e., \u003ccode\u003e(-X)+Y\u003dY-X\u003c/code\u003e, \u003ccode\u003eX+(-Y)\u003dX-Y\u003c/code\u003e, \u003ccode\u003e(-X)+(-Y)\u003d-(X+Y)\u003c/code\u003e) \u003cp\u003e Addition of two positive \u003ccode\u003eDuration\u003c/code\u003es are simply defined as field by field addition where missing fields are treated as 0. \u003cp\u003e A field of the resulting \u003ccode\u003eDuration\u003c/code\u003e will be unset if and only if respective fields of two input \u003ccode\u003eDuration\u003c/code\u003es are unset. \u003cp\u003e Note that \u003ccode\u003elhs.add(rhs)\u003c/code\u003e will be always successful if \u003ccode\u003elhs.signum()*rhs.signum()!\u003d-1\u003c/code\u003e or both of them are normalized.\u003c/p\u003e\n * @param rhs \u003ccode\u003eDuration\u003c/code\u003e to add to this \u003ccode\u003eDuration\u003c/code\u003e\n * @return non-null valid Duration object.\n * @throws NullPointerException If the rhs parameter is null.\n * @throws IllegalStateException If two durations cannot be meaningfully added. For example, adding negative one day to one month causes this exception.\n * @see #subtract(Duration)\n */\n","tf":{"freq":{"normal":1,"lhs":2,"fail":1,"oper":1,"rhs":5,"year":3,"follow":1,"except":5,"minut":3,"whose":1,"alway":1,"without":1,"non":1,"formal":1,"input":1,"signum":2,"unset":2,"month":2,"will":2,"pointer":1,"comput":2,"negat":1,"day":10,"posit":2,"treat":1,"valid":1,"defin":2,"result":1,"simpli":1,"one":2,"link":1,"state":3,"way":1,"object":1,"add":3,"durat":10,"valu":1,"note":1,"addit":2,"assum":1,"paramet":1,"meaning":2,"hour":4,"illeg":3,"general":1,"field":5,"subtract":2,"two":4,"lose":1,"caus":1,"pre":2,"exampl":2,"ad":3,"first":1,"success":1,"miss":1,"respect":1},"maxFreq":10,"totalTerms":119},"loc":0}