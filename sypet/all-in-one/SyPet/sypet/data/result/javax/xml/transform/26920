{"id":26920,"className":"javax.xml.transform.Transformer","methodName":"setOutputProperty","signature":"\u003cjavax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Set an output property that will be in effect for the transformation. \u003cp\u003ePass a qualified property name as a two-part string, the namespace URI enclosed in curly braces ({}), followed by the local name. If the name has a null URL, the String only contain the local name. An application can safely check for a non-null URI by testing to see if the first character of the name is a \u0027{\u0027 character.\u003c/p\u003e \u003cp\u003eFor example, if a URI and local name were obtained from an element defined with \u0026lt;xyz:foo xmlns:xyz\u003d\"http://xyz.foo.com/yada/baz.html\"/\u0026gt;, then the qualified name would be \"{http://xyz.foo.com/yada/baz.html}foo\". Note that no prefix is used.\u003c/p\u003e \u003cp\u003eThe Properties object that was passed to  {@link #setOutputProperties}won\u0027t be effected by calling this method.\u003c/p\u003e\n * @param name A non-null String that specifies an outputproperty name, which may be namespace qualified.\n * @param value The non-null string value of the output property.\n * @throws IllegalArgumentException If the property is not supported, and isnot qualified with a namespace.\n * @see javax.xml.transform.OutputKeys\n */\n","tf":{"freq":{"com":2,"test":1,"foo":4,"specifi":1,"namespac":3,"javax":1,"key":1,"follow":1,"argument":1,"element":1,"except":1,"support":1,"charact":2,"xml":1,"xmlns":1,"non":3,"obtain":1,"baz":2,"http":2,"contain":1,"enclos":1,"prefix":1,"will":1,"properti":7,"output":5,"xyz":4,"defin":1,"call":1,"link":1,"use":1,"object":1,"applic":1,"transform":2,"outputproperti":1,"isnot":1,"brace":1,"yada":2,"name":9,"valu":2,"note":1,"safe":1,"may":1,"check":1,"illeg":1,"pass":2,"two":1,"effect":2,"string":4,"exampl":1,"cur":1,"html":2,"method":1,"local":3,"part":1,"first":1,"qualifi":4},"maxFreq":9,"totalTerms":102},"loc":0}