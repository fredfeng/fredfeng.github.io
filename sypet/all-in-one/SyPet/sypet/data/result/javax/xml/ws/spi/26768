{"id":26768,"className":"javax.xml.ws.spi.Provider","methodName":"createEndpoint","signature":"\u003cjavax.xml.ws.spi.Provider: javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Class,javax.xml.ws.spi.Invoker,javax.xml.ws.WebServiceFeature[])\u003e","javadoc":"/** \n * Creates an endpoint object with the provided binding, implementation class, invoker and web service features. Containers typically use this to create Endpoint objects. \u003ccode\u003eProvider\u003c/code\u003e implementations must override the default implementation.\n * @param bindingId A URI specifying the desired binding (e.g. SOAP/HTTP).Can be null.\n * @param implementorClass A service implementation class thatMUST be annotated with all the necessary Web service annotations.\n * @param invoker that does the actual invocation on the service instance.\n * @param features A list of WebServiceFeatures to configure on theendpoint.  Supported features not in the \u003ccode\u003efeatures \u003c/code\u003e parameter will have their default values.\n * @return The newly created endpoint.\n * @since JAX-WS 2.2\n */\n","tf":{"freq":{"servic":5,"theendpoint":1,"typic":1,"use":1,"object":2,"desir":1,"necessari":1,"must":1,"specifi":1,"annot":2,"valu":1,"implementor":1,"support":1,"creat":4,"invok":2,"paramet":1,"web":3,"list":1,"provid":2,"endpoint":4,"invoc":1,"instanc":1,"newli":1,"configur":1,"contain":1,"will":1,"featur":5,"actual":1,"bind":3},"maxFreq":5,"totalTerms":51},"loc":3}