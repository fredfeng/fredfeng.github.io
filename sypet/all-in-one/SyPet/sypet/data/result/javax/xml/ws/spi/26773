{"id":26773,"className":"javax.xml.ws.spi.ServiceDelegate","methodName":"getPort","signature":"\u003cjavax.xml.ws.spi.ServiceDelegate: T getPort(java.lang.Class,javax.xml.ws.WebServiceFeature[])\u003e","javadoc":"/** \n * The \u003ccode\u003egetPort\u003c/code\u003e method returns a proxy. The parameter \u003ccode\u003eserviceEndpointInterface\u003c/code\u003e specifies the service endpoint interface that is supported by the returned proxy. In the implementation of this method, the JAX-WS runtime system takes the responsibility of selecting a protocol binding (and a port) and configuring the proxy accordingly. The returned proxy should not be reconfigured by the client.\n * @param serviceEndpointInterface Service endpoint interface\n * @param features  An array of \u003ccode\u003eWebServiceFeatures\u003c/code\u003e to configure on theproxy.  Supported features not in the \u003ccode\u003efeatures \u003c/code\u003e parameter will have their default values.\n * @return Object instance that supports thespecified service endpoint interface\n * @throws WebServiceException \u003cUL\u003e \u003cLI\u003eIf there is an error during creation of the proxy \u003cLI\u003eIf there is any missing WSDL metadata as required by this method \u003cLI\u003eIf an illegal \u003ccode\u003eserviceEndpointInterface\u003c/code\u003e is specified \u003cLI\u003eIf a feature is enabled that is not compatible with this port or is unsupported. \u003c/UL\u003e\n * @see WebServiceFeature\n * @since JAX-WS 2.1\n */\n","tf":{"freq":{"port":4,"creation":1,"reconfigur":1,"unsupport":1,"client":1,"servic":9,"object":1,"specifi":2,"requir":1,"thespecifi":1,"valu":1,"metadata":1,"theproxi":1,"except":1,"protocol":1,"support":3,"error":1,"respons":1,"proxi":5,"enabl":1,"select":1,"runtim":1,"paramet":2,"web":3,"accord":1,"illeg":1,"endpoint":6,"instanc":1,"system":1,"configur":2,"take":1,"featur":6,"will":1,"method":3,"bind":1,"miss":1,"compat":1,"array":1},"maxFreq":9,"totalTerms":72},"loc":0}