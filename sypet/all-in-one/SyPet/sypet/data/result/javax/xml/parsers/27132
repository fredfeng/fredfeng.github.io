{"id":27132,"className":"javax.xml.parsers.DocumentBuilderFactory","methodName":"setValidating","signature":"\u003cjavax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)\u003e","javadoc":"/** \n * Specifies that the parser produced by this code will validate documents as they are parsed. By default the value of this is set to \u003ccode\u003efalse\u003c/code\u003e. \u003cp\u003e Note that \"the validation\" here means \u003ca href\u003d\"http://www.w3.org/TR/REC-xml#proc-types\"\u003ea validating parser\u003c/a\u003e as defined in the XML recommendation. In other words, it essentially just controls the DTD validation. (except the legacy two properties defined in JAXP 1.2.) \u003c/p\u003e \u003cp\u003e To use modern schema languages such as W3C XML Schema or RELAX NG instead of DTD, you can configure your parser to be a non-validating parser by leaving the  {@link #setValidating(boolean)}method \u003ccode\u003efalse\u003c/code\u003e, then use the  {@link #setSchema(Schema)}method to associate a schema to a parser. \u003c/p\u003e\n * @param validating true if the parser produced will validate documentsas they are parsed; false otherwise.\n */\n","tf":{"freq":{"otherwis":1,"fals":3,"valid":9,"defin":2,"link":2,"legaci":1,"www":1,"use":2,"languag":1,"org":1,"type":1,"recommend":1,"specifi":1,"schema":5,"modern":1,"document":1,"associ":1,"essenti":1,"mean":1,"documentsa":1,"valu":1,"href":1,"note":1,"proc":1,"just":1,"control":1,"except":1,"true":1,"produc":2,"xml":1,"non":1,"two":1,"configur":1,"http":1,"leav":1,"instead":1,"will":2,"method":2,"word":1,"properti":1,"pars":2,"parser":6},"maxFreq":9,"totalTerms":68},"loc":3}