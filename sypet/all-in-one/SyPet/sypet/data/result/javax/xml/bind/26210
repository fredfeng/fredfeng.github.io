{"id":26210,"className":"javax.xml.bind.Binder","methodName":"marshal","signature":"\u003cjavax.xml.bind.Binder: void marshal(java.lang.Object,XmlNode)\u003e","javadoc":"/** \n * Marshal a JAXB object tree to a new XML document. \u003cp\u003e This method is similar to  {@link Marshaller#marshal(Object,Node)}with the addition of maintaining the association between JAXB objects and the produced XML nodes, enabling future update operations such as {@link #updateXML(Object,Object)} or {@link #updateJAXB(Object)}. \u003cp\u003e When  {@link #getSchema()} is non-null, the marshalledxml content is validated during this operation.\n * @param jaxbObject The content tree to be marshalled.\n * @param xmlNode The parameter must be a Node that accepts children.\n * @throws JAXBException If any unexpected problem occurs during the marshalling.\n * @throws MarshalException If the  {@link ValidationEventHandler ValidationEventHandler}returns false from its \u003ctt\u003ehandleEvent\u003c/tt\u003e method or the \u003ctt\u003eBinder\u003c/tt\u003e is unable to marshal \u003ctt\u003ejaxbObject\u003c/tt\u003e (or any object reachable from \u003ctt\u003ejaxbObject\u003c/tt\u003e).\n * @throws IllegalArgumentException If any of the method parameters are null\n */\n","tf":{"freq":{"fals":1,"binder":1,"valid":3,"unexpect":1,"accept":1,"maintain":1,"link":5,"children":1,"object":10,"must":1,"schema":1,"document":1,"tree":2,"associ":1,"oper":2,"event":3,"marshal":8,"similar":1,"argument":1,"addit":1,"except":3,"futur":1,"enabl":1,"paramet":2,"problem":1,"produc":1,"xml":1,"illeg":1,"handl":1,"non":1,"unabl":1,"content":2,"node":4,"updat":3,"method":3,"reachabl":1,"jaxb":3,"marshalledxml":1,"handler":2,"occur":1},"maxFreq":10,"totalTerms":80},"loc":0}