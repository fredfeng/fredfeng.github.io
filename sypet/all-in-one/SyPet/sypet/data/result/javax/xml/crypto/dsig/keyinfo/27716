{"id":27716,"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","methodName":"newX509IssuerSerial","signature":"\u003cjavax.xml.crypto.dsig.keyinfo.KeyInfoFactory: javax.xml.crypto.dsig.keyinfo.X509IssuerSerial newX509IssuerSerial(java.lang.String,java.math.BigInteger)\u003e","javadoc":"/** \n * Creates an \u003ccode\u003eX509IssuerSerial\u003c/code\u003e from the specified X.500 issuer distinguished name and serial number.\n * @param issuerName the issuer\u0027s distinguished name in RFC 2253 Stringformat. Implementations MUST support the attribute type keywords defined in RFC 2253 (CN, L, ST, O, OU, C, STREET, DC and UID). Implementations MAY support additional keywords.\n * @param serialNumber the serial number\n * @return an \u003ccode\u003eX509IssuerSerial\u003c/code\u003e\n * @throws NullPointerException if \u003ccode\u003eissuerName\u003c/code\u003e or\u003ccode\u003eserialNumber\u003c/code\u003e are \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if the issuer name is not RFC 2253compliant or one of the attribute type keywords is not recognized.\n */\n","tf":{"freq":{"argument":1,"stringformat":1,"addit":1,"defin":1,"except":2,"support":2,"creat":1,"one":1,"keyword":3,"number":4,"type":2,"illeg":1,"specifi":1,"attribut":2,"issuer":8,"name":5,"compliant":1,"pointer":1,"distinguish":2,"recogn":1,"serial":7},"maxFreq":8,"totalTerms":48},"loc":0}