{"id":27355,"className":"javax.xml.soap.MessageFactory","methodName":"newInstance","signature":"\u003cjavax.xml.soap.MessageFactory: javax.xml.soap.MessageFactory newInstance()\u003e","javadoc":"/** \n * Creates a new \u003ccode\u003eMessageFactory\u003c/code\u003e object that is an instance of the default implementation (SOAP 1.1), This method uses the following ordered lookup procedure to determine the MessageFactory implementation class to load: \u003cUL\u003e \u003cLI\u003e Use the javax.xml.soap.MessageFactory system property. \u003cLI\u003e Use the properties file \"lib/jaxm.properties\" in the JRE directory. This configuration file is in standard java.util.Properties format and contains the fully qualified name of the implementation class with the key being the system property defined above. \u003cLI\u003e Use the Services API (as detailed in the JAR specification), if available, to determine the classname. The Services API will look for a classname in the file META-INF/services/javax.xml.soap.MessageFactory in jars available to the runtime. \u003cLI\u003e Use the SAAJMetaFactory instance to locate the MessageFactory implementation class. \u003c/UL\u003e\n * @return a new instance of a \u003ccode\u003eMessageFactory\u003c/code\u003e\n * @exception SOAPException if there was an error in creating thedefault implementation of the \u003ccode\u003eMessageFactory\u003c/code\u003e.\n * @see SAAJMetaFactory\n */\n","tf":{"freq":{"defin":1,"detail":1,"directori":1,"servic":3,"use":5,"object":1,"lookup":1,"meta":2,"order":1,"jar":1,"factori":9,"javax":2,"file":3,"name":1,"key":1,"follow":1,"look":1,"except":2,"locat":1,"error":1,"standard":1,"creat":2,"messag":7,"runtim":1,"avail":2,"fulli":1,"xml":2,"format":1,"procedur":1,"instanc":4,"jaxm":1,"specif":1,"system":2,"configur":1,"lib":1,"contain":1,"determin":2,"will":1,"classnam":2,"java":1,"method":1,"load":1,"soap":2,"properti":5,"thedefault":1,"qualifi":1,"util":1},"maxFreq":9,"totalTerms":86},"loc":21}