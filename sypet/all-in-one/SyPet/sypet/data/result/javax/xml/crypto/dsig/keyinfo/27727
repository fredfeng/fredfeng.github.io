{"id":27727,"className":"javax.xml.crypto.dsig.keyinfo.RetrievalMethod","methodName":"dereference","signature":"\u003cjavax.xml.crypto.dsig.keyinfo.RetrievalMethod: javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext)\u003e","javadoc":"/** \n * Dereferences the \u003ccode\u003eKeyInfo\u003c/code\u003e information referenced by this \u003ccode\u003eRetrievalMethod\u003c/code\u003e and applies the specified \u003ccode\u003eTransform\u003c/code\u003es.\n * @param context an \u003ccode\u003eXMLCryptoContext\u003c/code\u003e that may containadditional useful information for dereferencing the URI. The context\u0027s \u003ccode\u003ebaseURI\u003c/code\u003e and \u003ccode\u003edereferencer\u003c/code\u003e parameters (if specified) are used to resolve and dereference this \u003ccode\u003eRetrievalMethod\u003c/code\u003e\n * @return a \u003ccode\u003eData\u003c/code\u003e object representing the raw contents of the\u003ccode\u003eKeyInfo\u003c/code\u003e information referenced by this \u003ccode\u003eRetrievalMethod\u003c/code\u003e. It is the caller\u0027s responsibility to convert the returned data to an appropriate \u003ccode\u003eKeyInfo\u003c/code\u003e object.\n * @throws NullPointerException if \u003ccode\u003econtext\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws URIReferenceException if there is an error while dereferencing\n */\n","tf":{"freq":{"caller":1,"raw":1,"data":2,"convert":1,"use":2,"object":2,"specifi":2,"info":3,"referenc":2,"transform":1,"dereferenc":3,"derefer":3,"key":3,"containaddit":1,"except":2,"may":1,"error":1,"respons":1,"repres":1,"lcrypto":1,"paramet":1,"irefer":1,"resolv":1,"content":1,"inform":3,"appli":1,"appropri":1,"retriev":3,"context":4,"base":1,"pointer":1,"method":3},"maxFreq":4,"totalTerms":55},"loc":0}