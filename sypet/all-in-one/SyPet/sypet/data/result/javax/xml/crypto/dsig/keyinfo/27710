{"id":27710,"className":"javax.xml.crypto.dsig.keyinfo.KeyInfoFactory","methodName":"newPGPData","signature":"\u003cjavax.xml.crypto.dsig.keyinfo.KeyInfoFactory: javax.xml.crypto.dsig.keyinfo.PGPData newPGPData(byte[])\u003e","javadoc":"/** \n * Creates a \u003ccode\u003ePGPData\u003c/code\u003e from the specified PGP public key identifier.\n * @param keyId a PGP public key identifier as defined in \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2440.txt\"\u003eRFC 2440\u003c/a\u003e, section 11.2. The array is cloned to protect against subsequent modification.\n * @return a \u003ccode\u003ePGPData\u003c/code\u003e\n * @throws NullPointerException if \u003ccode\u003ekeyId\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if the key id is not in the correctformat\n */\n","tf":{"freq":{"argument":1,"clone":1,"defin":1,"except":2,"creat":1,"www":1,"pdata":3,"identifi":2,"org":1,"illeg":1,"section":1,"txt":1,"rfc":2,"specifi":1,"ietf":1,"http":1,"correctformat":1,"pointer":1,"subsequ":1,"href":1,"modif":1,"key":5,"array":1},"maxFreq":5,"totalTerms":32},"loc":0}