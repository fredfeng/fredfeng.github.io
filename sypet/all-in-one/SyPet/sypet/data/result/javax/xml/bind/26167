{"id":26167,"className":"javax.xml.bind.DatatypeConverter","methodName":"parseQName","signature":"\u003cjavax.xml.bind.DatatypeConverter: javax.xml.namespace.QName parseQName(java.lang.String,javax.xml.namespace.NamespaceContext)\u003e","javadoc":"/** \n * \u003cp\u003e Converts the string argument into a byte value. \u003cp\u003e String parameter \u003ctt\u003elexicalXSDQname\u003c/tt\u003e must conform to lexical value space specifed at \u003ca href\u003d\"http://www.w3.org/TR/xmlschema-2/#QName\"\u003eXML Schema Part 2:Datatypes specification:QNames\u003c/a\u003e\n * @param lexicalXSDQName A string containing lexical representation of xsd:QName.\n * @param nsc A namespace context for interpreting a prefix within a QName.\n * @return A QName value represented by the string argument.\n * @throws IllegalArgumentException  if string parameter does not conform to XML Schema Part 2 specification orif namespace prefix of \u003ctt\u003elexicalXSDQname\u003c/tt\u003e is not bound to a URI in NamespaceContext \u003ctt\u003ensc\u003c/tt\u003e.\n */\n","tf":{"freq":{"nsc":2,"interpret":1,"www":1,"convert":1,"orif":1,"space":1,"org":1,"must":1,"schema":2,"namespac":3,"lexic":5,"qname":6,"name":1,"valu":3,"datatyp":1,"href":1,"argument":3,"except":1,"dqname":2,"repres":1,"paramet":2,"illeg":1,"represent":1,"specif":3,"xmlschema":1,"conform":2,"http":1,"prefix":2,"string":5,"contain":1,"context":2,"xsd":1,"within":1,"part":2,"pars":1,"bound":1},"maxFreq":6,"totalTerms":65},"loc":4}