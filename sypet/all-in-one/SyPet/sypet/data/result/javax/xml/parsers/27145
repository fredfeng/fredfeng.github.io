{"id":27145,"className":"javax.xml.parsers.DocumentBuilderFactory","methodName":"setFeature","signature":"\u003cjavax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)\u003e","javadoc":"/** \n * \u003cp\u003eSet a feature for this \u003ccode\u003eDocumentBuilderFactory\u003c/code\u003e and \u003ccode\u003eDocumentBuilder\u003c/code\u003es created by this factory.\u003c/p\u003e \u003cp\u003e Feature names are fully qualified  {@link java.net.URI}s. Implementations may define their own features. A  {@link ParserConfigurationException} is thrown if this \u003ccode\u003eDocumentBuilderFactory\u003c/code\u003e or the\u003ccode\u003eDocumentBuilder\u003c/code\u003es it creates cannot support the feature. It is possible for a \u003ccode\u003eDocumentBuilderFactory\u003c/code\u003e to expose a feature value but be unable to change its state. \u003c/p\u003e \u003cp\u003e All implementations are required to support the  {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.When the feature is:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003etrue\u003c/code\u003e: the implementation will limit XML processing to conform to implementation limits. Examples include enity expansion limits and XML Schema constructs that would consume large amounts of resources. If XML processing is limited for security reasons, it will be reported via a call to the registered {@link org.xml.sax.ErrorHandler#fatalError(SAXParseException exception)}. See  {@link DocumentBuilder#setErrorHandler(org.xml.sax.ErrorHandler errorHandler)}. \u003c/li\u003e \u003cli\u003e \u003ccode\u003efalse\u003c/code\u003e: the implementation will processing XML according to the XML specifications without regard to possible implementation limits. \u003c/li\u003e \u003c/ul\u003e\n * @param name Feature name.\n * @param value Is feature state \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e.\n * @throws ParserConfigurationException if this \u003ccode\u003eDocumentBuilderFactory\u003c/code\u003e or the \u003ccode\u003eDocumentBuilder\u003c/code\u003esit creates cannot support this feature.\n * @throws NullPointerException If the \u003ccode\u003ename\u003c/code\u003e parameter is null.\n */\n","tf":{"freq":{"fals":2,"via":1,"reason":1,"possibl":2,"eniti":1,"schema":1,"amount":1,"requir":1,"javax":1,"report":1,"limit":5,"thrown":1,"except":5,"support":3,"creat":3,"fatal":1,"builder":8,"expans":1,"regard":1,"xml":3,"without":1,"configur":2,"xpars":1,"will":3,"pointer":1,"sax":2,"lconstant":1,"parser":2,"defin":1,"call":1,"link":5,"state":2,"org":2,"net":1,"consum":1,"document":8,"resourc":1,"factori":5,"name":4,"regist":1,"valu":2,"expos":1,"may":1,"includ":1,"error":5,"paramet":1,"true":2,"fulli":1,"accord":1,"sit":1,"unabl":1,"process":3,"specif":1,"secur":1,"conform":1,"larg":1,"featur":11,"exampl":1,"java":1,"chang":1,"construct":1,"qualifi":1,"handler":4},"maxFreq":11,"totalTerms":132},"loc":0}