{"id":27016,"className":"javax.xml.transform.dom.DOMResult","methodName":"setNode","signature":"\u003cjavax.xml.transform.dom.DOMResult: void setNode(org.w3c.dom.Node)\u003e","javadoc":"/** \n * \u003cp\u003eSet the node that will contain the result DOM tree.\u003cp\u003e \u003cp\u003eIn practice, the node should be a  {@link org.w3c.dom.Document} node,a  {@link org.w3c.dom.DocumentFragment} node, ora  {@link org.w3c.dom.Element} node.In other words, a node that accepts children.\u003c/p\u003e \u003cp\u003eAn \u003ccode\u003eIllegalStateException\u003c/code\u003e is thrown if \u003ccode\u003enextSibling\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e and \u003ccode\u003enode\u003c/code\u003e is not a parent of \u003ccode\u003enextSibling\u003c/code\u003e. An \u003ccode\u003eIllegalStateException\u003c/code\u003e is thrown if \u003ccode\u003enode\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e and \u003ccode\u003enextSibling\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n * @param node The node to which the transformation will be appended.\n * @throws IllegalStateException If \u003ccode\u003enextSibling\u003c/code\u003e is not\u003ccode\u003enull\u003c/code\u003e and \u003ccode\u003enextSibling\u003c/code\u003e is not a child of \u003ccode\u003enode\u003c/code\u003e or \u003ccode\u003enode\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e and \u003ccode\u003enextSibling\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"result":1,"dom":3,"accept":1,"link":3,"next":6,"state":3,"children":1,"org":3,"child":1,"transform":1,"document":2,"tree":1,"practic":1,"fragment":1,"append":1,"element":1,"except":3,"thrown":2,"sibl":6,"parent":1,"illeg":3,"node":13,"ora":1,"contain":1,"will":2,"word":1},"maxFreq":13,"totalTerms":63},"loc":16}