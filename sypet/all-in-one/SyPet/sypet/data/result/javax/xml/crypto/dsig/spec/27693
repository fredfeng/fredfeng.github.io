{"id":27693,"className":"javax.xml.crypto.dsig.spec.XPathType","methodName":"XPathType","signature":"\u003cjavax.xml.crypto.dsig.spec.XPathType: void XPathType(java.lang.String,javax.xml.crypto.dsig.spec.XPathType$Filter,java.util.Map)\u003e","javadoc":"/** \n * Creates an \u003ccode\u003eXPathType\u003c/code\u003e instance with the specified XPath expression, filter, and namespace map. The map is copied to protect against subsequent modification.\n * @param expression the XPath expression to be evaluated\n * @param filter the filter operation ({@link Filter#INTERSECT}, {@link Filter#SUBTRACT}, or  {@link Filter#UNION})\n * @param namespaceMap the map of namespace prefixes. Each key is anamespace prefix \u003ccode\u003eString\u003c/code\u003e that maps to a corresponding namespace URI \u003ccode\u003eString\u003c/code\u003e.\n * @throws NullPointerException if \u003ccode\u003eexpression\u003c/code\u003e,\u003ccode\u003efilter\u003c/code\u003e or \u003ccode\u003enamespaceMap\u003c/code\u003e are \u003ccode\u003enull\u003c/code\u003e\n * @throws ClassCastException if any of the map\u0027s keys or entries arenot of type \u003ccode\u003eString\u003c/code\u003e\n */\n","tf":{"freq":{"correspond":1,"link":3,"express":4,"type":3,"copi":1,"specifi":1,"xpath":3,"namespac":5,"oper":1,"map":7,"path":1,"subsequ":1,"key":2,"except":2,"creat":1,"entri":1,"evalu":1,"instanc":1,"cast":1,"anamespac":1,"prefix":2,"string":3,"pointer":1,"arenot":1,"filter":7,"modif":1},"maxFreq":7,"totalTerms":56},"loc":16}