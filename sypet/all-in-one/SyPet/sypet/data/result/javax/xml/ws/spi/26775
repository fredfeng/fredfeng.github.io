{"id":26775,"className":"javax.xml.ws.spi.ServiceDelegate","methodName":"createDispatch","signature":"\u003cjavax.xml.ws.spi.ServiceDelegate: javax.xml.ws.Dispatch\u003cT\u003e createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eDispatch\u003c/code\u003e instance for use with objects of the user\u0027s choosing.\n * @param portName  Qualified name for the target service endpoint\n * @param type The class of object used for messages or messagepayloads. Implementations are required to support \u003ccode\u003ejavax.xml.transform.Source\u003c/code\u003e and \u003ccode\u003ejavax.xml.soap.SOAPMessage\u003c/code\u003e.\n * @param mode Controls whether the created dispatch instance is messageor payload oriented, i.e. whether the user will work with complete protocol messages or message payloads. E.g. when using the SOAP protocol, this parameter controls whether the user will work with SOAP messages or the contents of a SOAP body. Mode MUST be \u003ccode\u003eMESSAGE\u003c/code\u003e when type is \u003ccode\u003eSOAPMessage\u003c/code\u003e.\n * @return Dispatch instance\n * @throws WebServiceException If any error in the creation ofthe \u003ccode\u003eDispatch\u003c/code\u003e object\n * @see javax.xml.transform.Source\n * @see javax.xml.soap.SOAPMessage\n */\n","tf":{"freq":{"port":1,"creation":1,"servic":2,"payload":2,"use":3,"object":3,"type":2,"whether":3,"mode":2,"transform":2,"requir":1,"javax":4,"ofth":1,"name":2,"choos":1,"dispatch":5,"complet":1,"work":2,"control":2,"except":1,"protocol":2,"support":1,"error":1,"creat":3,"messag":7,"messagepayload":1,"paramet":1,"web":1,"xml":4,"endpoint":1,"instanc":3,"content":1,"bodi":1,"orient":1,"will":2,"target":1,"messageor":1,"sourc":2,"soap":2,"user":3,"qualifi":1},"maxFreq":7,"totalTerms":81},"loc":0}