{"id":27686,"className":"javax.xml.crypto.dsig.spec.XPathFilterParameterSpec","methodName":"XPathFilterParameterSpec","signature":"\u003cjavax.xml.crypto.dsig.spec.XPathFilterParameterSpec: void XPathFilterParameterSpec(java.lang.String,java.util.Map)\u003e","javadoc":"/** \n * Creates an \u003ccode\u003eXPathFilterParameterSpec\u003c/code\u003e with the specified XPath expression and namespace map. The map is copied to protect against subsequent modification.\n * @param xPath the XPath expression to be evaluated\n * @param namespaceMap the map of namespace prefixes. Each key is anamespace prefix \u003ccode\u003eString\u003c/code\u003e that maps to a corresponding namespace URI \u003ccode\u003eString\u003c/code\u003e.\n * @throws NullPointerException if \u003ccode\u003exPath\u003c/code\u003e or\u003ccode\u003enamespaceMap\u003c/code\u003e are \u003ccode\u003enull\u003c/code\u003e\n * @throws ClassCastException if any of the map\u0027s keys or entries are notof type \u003ccode\u003eString\u003c/code\u003e\n */\n","tf":{"freq":{"spec":2,"correspond":1,"notof":1,"type":1,"express":2,"copi":1,"specifi":1,"xpath":3,"namespac":5,"map":7,"path":3,"subsequ":1,"key":2,"except":2,"creat":1,"entri":1,"paramet":2,"evalu":1,"cast":1,"anamespac":1,"prefix":2,"string":3,"pointer":1,"filter":2,"modif":1},"maxFreq":7,"totalTerms":48},"loc":16}