{"id":27618,"className":"javax.xml.crypto.dsig.XMLSignatureFactory","methodName":"newManifest","signature":"\u003cjavax.xml.crypto.dsig.XMLSignatureFactory: javax.xml.crypto.dsig.Manifest newManifest(java.util.List,java.lang.String)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eManifest\u003c/code\u003e containing the specified list of  {@link Reference}s and optional id.\n * @param references a list of one or more \u003ccode\u003eReference\u003c/code\u003es. The listis defensively copied to protect against subsequent modification.\n * @param id the id (may be \u003ccode\u003enull\u003c/code\u003e)\n * @return a \u003ccode\u003eManifest\u003c/code\u003e\n * @throws NullPointerException if \u003ccode\u003ereferences\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if \u003ccode\u003ereferences\u003c/code\u003e is empty\n * @throws ClassCastException if \u003ccode\u003ereferences\u003c/code\u003e contains anyentries that are not of type  {@link Reference}\n */\n","tf":{"freq":{"argument":1,"listi":1,"except":3,"may":1,"creat":1,"link":2,"one":1,"manifest":3,"list":2,"type":1,"illeg":1,"copi":1,"empti":1,"specifi":1,"defens":1,"cast":1,"refer":7,"anyentri":1,"contain":2,"pointer":1,"subsequ":1,"modif":1,"option":1},"maxFreq":7,"totalTerms":36},"loc":0}