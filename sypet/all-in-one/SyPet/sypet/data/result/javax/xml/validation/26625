{"id":26625,"className":"javax.xml.validation.SchemaFactory","methodName":"setErrorHandler","signature":"\u003cjavax.xml.validation.SchemaFactory: void setErrorHandler(org.xml.sax.ErrorHandler)\u003e","javadoc":"/** \n * Sets the  {@link ErrorHandler} to receive errors encounteredduring the \u003ccode\u003enewSchema\u003c/code\u003e method invocation. \u003cp\u003e Error handler can be used to customize the error handling process during schema parsing. When an  {@link ErrorHandler} is set,errors found during the parsing of schemas will be first sent to the  {@link ErrorHandler}. \u003cp\u003e The error handler can abort the parsing of a schema immediately by throwing  {@link SAXException} from the handler. Or for exampleit can print an error to the screen and try to continue the processing by returning normally from the  {@link ErrorHandler}\u003cp\u003e If any  {@link Throwable} (or instances of its derived classes)is thrown from an  {@link ErrorHandler}, the caller of the \u003ccode\u003enewSchema\u003c/code\u003e method will be thrown the same  {@link Throwable} object.\u003cp\u003e {@link SchemaFactory} is not allowed tothrow  {@link SAXException} without first reporting it to{@link ErrorHandler}. \u003cp\u003e Applications can call this method even during a  {@link Schema}is being parsed. \u003cp\u003e When the  {@link ErrorHandler} is null, the implementation willbehave as if the following  {@link ErrorHandler} is set:\u003cpre\u003e class DraconianErrorHandler implements  {@link ErrorHandler} {public void fatalError(  {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {throw e; } public void error(  {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {throw e; } public void warning(  {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {// noop } } \u003c/pre\u003e \u003cp\u003e When a new  {@link SchemaFactory} object is created, initiallythis field is set to null. This field will \u003cem\u003eNOT\u003c/em\u003e be inherited to  {@link Schema}s,  {@link Validator}s, or {@link ValidatorHandler}s that are created from this  {@link SchemaFactory}.\n * @param errorHandler A new error handler to be set.This parameter can be \u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"deriv":1,"normal":1,"willbehav":1,"schema":10,"sent":1,"encountereddur":1,"draconian":1,"report":1,"custom":1,"follow":1,"screen":1,"except":3,"thrown":2,"creat":2,"fatal":1,"xml":3,"without":1,"continu":1,"invoc":1,"instanc":1,"initiallythi":1,"xpars":3,"will":3,"sax":3,"even":1,"xexcept":5,"warn":1,"caller":1,"valid":2,"call":1,"allow":1,"noop":1,"link":26,"use":1,"object":2,"org":3,"applic":1,"factori":3,"immedi":1,"error":21,"paramet":1,"exampleit":1,"receiv":1,"print":1,"handl":1,"field":2,"process":2,"pre":2,"tothrow":1,"method":3,"throwabl":2,"first":2,"pars":4,"abort":1,"found":1,"handler":17},"maxFreq":26,"totalTerms":158},"loc":0}