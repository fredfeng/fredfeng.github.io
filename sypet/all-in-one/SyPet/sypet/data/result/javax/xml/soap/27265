{"id":27265,"className":"javax.xml.soap.AttachmentPart","methodName":"getRawContent","signature":"\u003cjavax.xml.soap.AttachmentPart: java.io.InputStream getRawContent()\u003e","javadoc":"/** \n * Gets the content of this \u003ccode\u003eAttachmentPart\u003c/code\u003e object as an InputStream as if a call had been made to \u003ccode\u003egetContent\u003c/code\u003e and no \u003ccode\u003eDataContentHandler\u003c/code\u003e had been registered for the \u003ccode\u003econtent-type\u003c/code\u003e of this \u003ccode\u003eAttachmentPart\u003c/code\u003e. \u003cp\u003e Note that reading from the returned InputStream would result in consuming the data in the stream. It is the responsibility of the caller to reset the InputStream appropriately before calling a Subsequent API. If a copy of the raw attachment content is required then the  {@link #getRawContentBytes} APIshould be used instead.\n * @return an \u003ccode\u003eInputStream\u003c/code\u003e from which the raw data contained bythe \u003ccode\u003eAttachmentPart\u003c/code\u003e can be accessed.\n * @throws SOAPException if there is no content set into this\u003ccode\u003eAttachmentPart\u003c/code\u003e object or if there was a data transformation error.\n * @since SAAJ 1.3\n * @see #getRawContentBytes\n */\n","tf":{"freq":{"raw":5,"caller":1,"call":2,"result":1,"stream":5,"link":1,"data":4,"made":1,"use":1,"ishould":1,"object":2,"type":1,"copi":1,"consum":1,"transform":1,"requir":1,"byth":1,"regist":1,"read":1,"reset":1,"subsequ":1,"note":1,"except":1,"error":1,"respons":1,"access":1,"content":9,"input":4,"attach":5,"appropri":1,"contain":1,"instead":1,"part":4,"handler":1},"maxFreq":9,"totalTerms":65},"loc":0}