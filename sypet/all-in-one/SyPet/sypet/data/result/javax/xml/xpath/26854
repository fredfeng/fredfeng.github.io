{"id":26854,"className":"javax.xml.xpath.XPathExpression","methodName":"evaluate","signature":"\u003cjavax.xml.xpath.XPathExpression: java.lang.String evaluate(org.xml.sax.InputSource)\u003e","javadoc":"/** \n * \u003cp\u003eEvaluate the compiled XPath expression in the context of the specified \u003ccode\u003eInputSource\u003c/code\u003e and return the result as a \u003ccode\u003eString\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThis method calls  {@link #evaluate(InputSource source,QName returnType)} with a \u003ccode\u003ereturnType\u003c/code\u003e of{@link XPathConstants#STRING}.\u003c/p\u003e \u003cp\u003eSee \u003ca href\u003d\"#XPathExpression-evaluation\"\u003eEvaluation of XPath Expressions\u003c/a\u003e for context item evaluation, variable, function and QName resolution and return type conversion.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, then a \u003ccode\u003eNullPointerException\u003c/code\u003e is thrown.\u003c/p\u003e\n * @param source The \u003ccode\u003eInputSource\u003c/code\u003e of the document to evaluate over.\n * @return The \u003ccode\u003eString\u003c/code\u003e that is the result of evaluating the expression and converting the result to a\u003ccode\u003eString\u003c/code\u003e.\n * @throws XPathExpressionException If the expression cannot be evaluated.\n * @throws NullPointerException If  \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"call":1,"result":3,"link":2,"variabl":1,"convers":1,"convert":1,"express":6,"type":3,"specifi":1,"xpath":5,"function":1,"resolut":1,"document":1,"qname":2,"href":1,"thrown":1,"except":3,"constant":1,"evalu":9,"input":3,"string":3,"item":1,"context":2,"pointer":2,"method":1,"sourc":7,"compil":1},"maxFreq":9,"totalTerms":64},"loc":0}