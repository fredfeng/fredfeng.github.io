{"id":27082,"className":"javax.xml.parsers.SAXParserFactory","methodName":"setSchema","signature":"\u003cjavax.xml.parsers.SAXParserFactory: void setSchema(javax.xml.validation.Schema)\u003e","javadoc":"/** \n * \u003cp\u003eSet the  {@link Schema} to be used by parsers createdfrom this factory.\u003c/p\u003e \u003cp\u003eWhen a  {@link Schema} is non-null, a parser will use a validatorcreated from it to validate documents before it passes information down to the application.\u003c/p\u003e \u003cp\u003eWhen warnings/errors/fatal errors are found by the validator, the parser must handle them as if those errors were found by the parser itself. In other words, if the user-specified  {@link org.xml.sax.ErrorHandler}is set, it must receive those errors, and if not, they must be treated according to the implementation specific default error handling rules. \u003cp\u003eA validator may modify the SAX event stream (for example by adding default values that were missing in documents), and a parser is responsible to make sure that the application will receive those modified event stream.\u003c/p\u003e \u003cp\u003eInitialy, \u003ccode\u003enull\u003c/code\u003e is set as the  {@link Schema}.\u003c/p\u003e \u003cp\u003eThis processing will take effect even if the  {@link #isValidating()} method returns \u003ccode\u003efalse\u003c/code\u003e.\u003cp\u003eIt is an error to use the \u003ccode\u003ehttp://java.sun.com/xml/jaxp/properties/schemaSource\u003c/code\u003e property and/or the \u003ccode\u003ehttp://java.sun.com/xml/jaxp/properties/schemaLanguage\u003c/code\u003e property in conjunction with a non-null  {@link Schema} object.Such configuration will cause a  {@link SAXException}exception when those properties are set on a  {@link SAXParser}.\u003c/p\u003e \u003ch4\u003eNote for implmentors\u003c/h4\u003e \u003cp\u003e A parser must be able to work with any  {@link Schema}implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification. \u003c/p\u003e\n * @param schema \u003ccode\u003eSchema\u003c/code\u003e to use, \u003ccode\u003enull\u003c/code\u003e to remove a schema.\n * @throws UnsupportedOperationException When implementation does notoverride this method\n * @since 1.5\n */\n","tf":{"freq":{"fals":1,"unsupport":1,"com":2,"yield":1,"languag":1,"abl":1,"must":4,"specifi":1,"schema":12,"oper":1,"event":2,"howev":1,"validatorcr":1,"custom":1,"sure":1,"initiali":1,"work":1,"except":2,"respons":1,"fatal":1,"remov":1,"describ":1,"xml":3,"non":2,"notoverrid":1,"conjunct":1,"inform":1,"configur":1,"jaxp":2,"http":2,"will":4,"sax":1,"sourc":1,"word":1,"even":1,"properti":5,"xexcept":1,"parser":7,"make":1,"treat":1,"warn":1,"result":1,"valid":4,"stream":2,"allow":1,"xparser":1,"link":9,"use":5,"object":1,"org":1,"sun":2,"applic":2,"document":2,"implmentor":1,"factori":1,"rule":1,"valu":1,"note":1,"may":1,"error":7,"receiv":2,"accord":1,"createdfrom":1,"handl":2,"pass":1,"process":1,"specif":3,"caus":1,"effect":1,"mechan":1,"take":1,"modifi":2,"exampl":1,"ad":1,"java":2,"method":2,"user":1,"miss":1,"found":2,"handler":1},"maxFreq":12,"totalTerms":148},"loc":9}