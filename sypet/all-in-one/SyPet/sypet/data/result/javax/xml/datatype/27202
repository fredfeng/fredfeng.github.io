{"id":27202,"className":"javax.xml.datatype.Duration","methodName":"getYears","signature":"\u003cjavax.xml.datatype.Duration: int getYears()\u003e","javadoc":"/** \n * \u003cp\u003eGet the years value of this \u003ccode\u003eDuration\u003c/code\u003e as an \u003ccode\u003eint\u003c/code\u003e or \u003ccode\u003e0\u003c/code\u003e if not present.\u003c/p\u003e \u003cp\u003e\u003ccode\u003egetYears()\u003c/code\u003e is a convenience method for {@link #getField(DatatypeConstants.Field field) getField(DatatypeConstants.YEARS)}.\u003c/p\u003e \u003cp\u003eAs the return value is an \u003ccode\u003eint\u003c/code\u003e, an incorrect value will be returned for \u003ccode\u003eDuration\u003c/code\u003es with years that go beyond the range of an \u003ccode\u003eint\u003c/code\u003e. Use  {@link #getField(DatatypeConstants.Field field) getField(DatatypeConstants.YEARS)} to avoid possible loss of precision.\u003c/p\u003e\n * @return If the years field is present, return its value as an \u003ccode\u003eint\u003c/code\u003e, else return \u003ccode\u003e0\u003c/code\u003e.\n */\n","tf":{"freq":{"constant":4,"loss":1,"link":2,"possibl":1,"use":1,"els":1,"beyond":1,"durat":2,"field":9,"avoid":1,"present":2,"rang":1,"precis":1,"will":1,"year":5,"valu":4,"method":1,"datatyp":4,"incorrect":1,"conveni":1},"maxFreq":9,"totalTerms":44},"loc":3}