{"id":26947,"className":"javax.xml.transform.TransformerFactory","methodName":"newTemplates","signature":"\u003cjavax.xml.transform.TransformerFactory: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)\u003e","javadoc":"/** \n * Process the Source into a Templates object, which is a a compiled representation of the source. This Templates object may then be used concurrently across multiple threads.  Creating a Templates object allows the TransformerFactory to do detailed performance optimization of transformation instructions, without penalizing runtime transformation.\n * @param source An object that holds a URL, input stream, etc.\n * @return A Templates object capable of being used for transformationpurposes, never \u003ccode\u003enull\u003c/code\u003e.\n * @throws TransformerConfigurationException When parsing toconstruct the Templates object fails.\n */\n","tf":{"freq":{"stream":1,"detail":1,"allow":1,"templat":6,"concurr":1,"etc":1,"use":2,"perform":1,"object":6,"across":1,"transform":4,"fail":1,"instruct":1,"factori":1,"thread":1,"except":1,"may":1,"multipl":1,"optim":1,"creat":1,"runtim":1,"hold":1,"capabl":1,"without":1,"penal":1,"represent":1,"process":1,"configur":1,"never":1,"input":1,"toconstruct":1,"sourc":3,"pars":1,"transformationpurpos":1,"compil":1},"maxFreq":6,"totalTerms":51},"loc":0}