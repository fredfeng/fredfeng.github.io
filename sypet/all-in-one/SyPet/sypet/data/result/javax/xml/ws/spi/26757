{"id":26757,"className":"javax.xml.ws.spi.Provider","methodName":"provider","signature":"\u003cjavax.xml.ws.spi.Provider: javax.xml.ws.spi.Provider provider()\u003e","javadoc":"/** \n * Creates a new provider object. \u003cp\u003e The algorithm used to locate the provider subclass to use consists of the following steps: \u003cp\u003e \u003cul\u003e \u003cli\u003e If a resource with the name of \u003ccode\u003eMETA-INF/services/javax.xml.ws.spi.Provider\u003c/code\u003e exists, then its first line, if present, is used as the UTF-8 encoded name of the implementation class. \u003c/li\u003e \u003cli\u003e If the $java.home/lib/jaxws.properties file exists and it is readable by the \u003ccode\u003ejava.util.Properties.load(InputStream)\u003c/code\u003e method and it contains an entry whose key is \u003ccode\u003ejavax.xml.ws.spi.Provider\u003c/code\u003e, then the value of that entry is used as the name of the implementation class. \u003c/li\u003e \u003cli\u003e If a system property with the name \u003ccode\u003ejavax.xml.ws.spi.Provider\u003c/code\u003e is defined, then its value is used as the name of the implementation class. \u003c/li\u003e \u003cli\u003e Finally, a default implementation class name is used. \u003c/li\u003e \u003c/ul\u003e\n */\n","tf":{"freq":{"defin":1,"home":1,"stream":1,"readabl":1,"servic":1,"use":6,"line":1,"object":1,"algorithm":1,"resourc":1,"file":1,"javax":3,"name":6,"spi":3,"valu":2,"exist":2,"key":1,"follow":1,"locat":1,"whose":1,"consist":1,"creat":1,"entri":2,"xml":3,"jaxw":1,"provid":6,"present":1,"system":1,"input":1,"encod":1,"lib":1,"contain":1,"subclass":1,"method":1,"load":1,"java":2,"properti":3,"first":1,"util":1,"step":1},"maxFreq":6,"totalTerms":67},"loc":25}