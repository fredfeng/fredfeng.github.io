{"id":27018,"className":"javax.xml.transform.dom.DOMResult","methodName":"setNextSibling","signature":"\u003cjavax.xml.transform.dom.DOMResult: void setNextSibling(org.w3c.dom.Node)\u003e","javadoc":"/** \n * \u003cp\u003eSet the child node before which the result nodes will be inserted.\u003c/p\u003e \u003cp\u003eUse \u003ccode\u003enextSibling\u003c/code\u003e to specify the child node before which the result nodes should be inserted. If \u003ccode\u003enextSibling\u003c/code\u003e is not a descendant of \u003ccode\u003enode\u003c/code\u003e, then an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown. If \u003ccode\u003enode\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e and \u003ccode\u003enextSibling\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e, then an \u003ccode\u003eIllegalStateException\u003c/code\u003e is thrown. If \u003ccode\u003enextSibling\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, then the behavior is the same as calling  {@link #DOMResult(Node node)}, i.e. append the result nodes as the last child of the specified \u003ccode\u003enode\u003c/code\u003e.\u003c/p\u003e\n * @param nextSibling The child node before which the result nodes will be inserted.\n * @throws IllegalArgumentException If \u003ccode\u003enextSibling\u003c/code\u003e is not adescendant of \u003ccode\u003enode\u003c/code\u003e.\n * @throws IllegalStateException If \u003ccode\u003enode\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003eand \u003ccode\u003enextSibling\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e.\n * @since 1.5\n */\n","tf":{"freq":{"argument":2,"append":1,"call":1,"result":4,"thrown":2,"except":4,"last":1,"sibl":8,"behavior":1,"link":1,"next":8,"state":2,"use":1,"adescend":1,"illeg":4,"mresult":1,"specifi":2,"child":4,"node":14,"will":2,"descend":1,"insert":3},"maxFreq":14,"totalTerms":68},"loc":17}