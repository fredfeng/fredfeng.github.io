{"id":27246,"className":"javax.xml.datatype.DatatypeFactory","methodName":"newXMLGregorianCalendar","signature":"\u003cjavax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.util.GregorianCalendar)\u003e","javadoc":"/** \n * \u003cp\u003eCreate an \u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e from a  {@link GregorianCalendar}.\u003c/p\u003e \u003ctable border\u003d\"2\" rules\u003d\"all\" cellpadding\u003d\"2\"\u003e \u003cthead\u003e \u003ctr\u003e \u003cth align\u003d\"center\" colspan\u003d\"2\"\u003e Field by Field Conversion from {@link GregorianCalendar} to an {@link XMLGregorianCalendar}\u003c/th\u003e \u003c/tr\u003e \u003ctr\u003e \u003cth\u003e\u003ccode\u003ejava.util.GregorianCalendar\u003c/code\u003e field\u003c/th\u003e \u003cth\u003e\u003ccode\u003ejavax.xml.datatype.XMLGregorianCalendar\u003c/code\u003e field\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e\u003ccode\u003eERA \u003d\u003d GregorianCalendar.BC ? -YEAR : YEAR\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e {@link XMLGregorianCalendar#setYear(int year)}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e\u003ccode\u003eMONTH + 1\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e {@link XMLGregorianCalendar#setMonth(int month)}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e\u003ccode\u003eDAY_OF_MONTH\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e {@link XMLGregorianCalendar#setDay(int day)}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e\u003ccode\u003eHOUR_OF_DAY, MINUTE, SECOND, MILLISECOND\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e {@link XMLGregorianCalendar#setTime(int hour,int minute,int second,BigDecimal fractional)}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e \u003ccode\u003e(ZONE_OFFSET + DST_OFFSET) / (60*1000)\u003c/code\u003e\u003cbr/\u003e \u003cem\u003e(in minutes)\u003c/em\u003e \u003c/td\u003e \u003ctd\u003e {@link XMLGregorianCalendar#setTimezone(int offset)}\u003csup\u003e\u003cem\u003e*\u003c/em\u003e\u003c/sup\u003e \u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003cp\u003e\u003cem\u003e*\u003c/em\u003econversion loss of information. It is not possible to represent a \u003ccode\u003ejava.util.GregorianCalendar\u003c/code\u003e daylight savings timezone id in the XML Schema 1.0 date/time datatype representation.\u003c/p\u003e \u003cp\u003eTo compute the return value\u0027s \u003ccode\u003eTimeZone\u003c/code\u003e field, \u003cul\u003e \u003cli\u003ewhen \u003ccode\u003ethis.getTimezone() !\u003d FIELD_UNDEFINED\u003c/code\u003e, create a \u003ccode\u003ejava.util.TimeZone\u003c/code\u003e with a custom timezone id using the \u003ccode\u003ethis.getTimezone()\u003c/code\u003e.\u003c/li\u003e \u003cli\u003eelse use the \u003ccode\u003eGregorianCalendar\u003c/code\u003e default timezone value for the host is defined as specified by \u003ccode\u003ejava.util.TimeZone.getDefault()\u003c/code\u003e.\u003c/li\u003e\u003c/p\u003e\n * @param cal \u003ccode\u003ejava.util.GregorianCalendar\u003c/code\u003e used to create \u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e\n * @return \u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from \u003ccode\u003ejava.util.GregorianCalendar\u003c/code\u003e\n * @throws NullPointerException If \u003ccode\u003ecal\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"second":1,"save":1,"timezon":6,"possibl":1,"specifi":1,"center":1,"schema":1,"time":5,"javax":1,"year":2,"border":1,"custom":1,"except":1,"minut":2,"host":1,"colspan":1,"creat":4,"align":1,"xml":1,"els":1,"inform":1,"cellpad":1,"month":2,"pointer":1,"comput":1,"day":2,"big":1,"util":6,"defin":1,"loss":1,"link":8,"convers":2,"use":3,"decim":1,"sup":2,"date":1,"rule":1,"valu":2,"cal":2,"datatyp":2,"offset":1,"calendar":19,"thead":2,"fraction":1,"tbodi":2,"repres":1,"hour":1,"represent":1,"field":5,"tabl":2,"lgregorian":11,"java":6,"gregorian":8,"daylight":1,"zone":3},"maxFreq":19,"totalTerms":139},"loc":0}