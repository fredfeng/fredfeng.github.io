{"id":27148,"className":"javax.xml.parsers.DocumentBuilderFactory","methodName":"setSchema","signature":"\u003cjavax.xml.parsers.DocumentBuilderFactory: void setSchema(javax.xml.validation.Schema)\u003e","javadoc":"/** \n * \u003cp\u003eSet the  {@link Schema} to be used by parsers createdfrom this factory. \u003cp\u003e When a  {@link Schema} is non-null, a parser will use a validatorcreated from it to validate documents before it passes information down to the application. \u003cp\u003eWhen errors are found by the validator, the parser is responsible to report them to the user-specified  {@link org.xml.sax.ErrorHandler}(or if the error handler is not set, ignore them or throw them), just like any other errors found by the parser itself. In other words, if the user-specified  {@link org.xml.sax.ErrorHandler}is set, it must receive those errors, and if not, they must be treated according to the implementation specific default error handling rules. \u003cp\u003e A validator may modify the outcome of a parse (for example by adding default values that were missing in documents), and a parser is responsible to make sure that the application will receive modified DOM trees. \u003cp\u003e Initialy, null is set as the  {@link Schema}. \u003cp\u003e This processing will take effect even if the  {@link #isValidating()} method returns \u003ccode\u003efalse\u003c/code\u003e.\u003cp\u003eIt is an error to use the \u003ccode\u003ehttp://java.sun.com/xml/jaxp/properties/schemaSource\u003c/code\u003e property and/or the \u003ccode\u003ehttp://java.sun.com/xml/jaxp/properties/schemaLanguage\u003c/code\u003e property in conjunction with a  {@link Schema} object.Such configuration will cause a  {@link ParserConfigurationException}exception when the  {@link #newDocumentBuilder()} is invoked.\u003c/p\u003e\u003ch4\u003eNote for implmentors\u003c/h4\u003e \u003cp\u003e A parser must be able to work with any  {@link Schema}implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification. \u003c/p\u003e\n * @param schema \u003ccode\u003eSchema\u003c/code\u003e to use or \u003ccode\u003enull\u003c/code\u003eto remove a schema.\n * @throws UnsupportedOperationException When implementation does notoverride this method.\n * @since 1.5\n */\n","tf":{"freq":{"fals":1,"unsupport":1,"com":2,"yield":1,"languag":1,"abl":1,"must":3,"specifi":2,"schema":12,"tree":1,"oper":1,"report":1,"howev":1,"validatorcr":1,"custom":1,"sure":1,"initiali":1,"work":1,"except":3,"ignor":1,"respons":2,"invok":1,"remov":1,"builder":1,"describ":1,"xml":4,"like":1,"non":1,"notoverrid":1,"conjunct":1,"inform":1,"configur":2,"jaxp":2,"http":2,"will":4,"sax":2,"sourc":1,"even":1,"word":1,"properti":4,"parser":8,"make":1,"treat":1,"result":1,"valid":4,"allow":1,"link":10,"use":5,"object":1,"outcom":1,"org":2,"sun":2,"applic":2,"document":3,"implmentor":1,"factori":1,"rule":1,"valu":1,"note":1,"just":1,"may":1,"error":8,"receiv":2,"accord":1,"createdfrom":1,"pass":1,"handl":1,"process":1,"specif":3,"caus":1,"effect":1,"mechan":1,"take":1,"modifi":2,"exampl":1,"ad":1,"java":2,"method":2,"user":2,"pars":1,"miss":1,"handler":3,"found":2},"maxFreq":12,"totalTerms":159},"loc":9}