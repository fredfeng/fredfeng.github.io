{"id":26229,"className":"javax.xml.bind.Marshaller","methodName":"marshal","signature":"\u003cjavax.xml.bind.Marshaller: void marshal(java.lang.Object,javax.xml.stream.XMLEventWriter)\u003e","javadoc":"/** \n * Marshal the content tree rooted at \u003ctt\u003ejaxbElement\u003c/tt\u003e into a {@link javax.xml.stream.XMLEventWriter}.\n * @param jaxbElement The content tree rooted at jaxbElement to be marshalled.\n * @param writer XML will be sent to this writer.\n * @throws JAXBException If any unexpected problem occurs during the marshalling.\n * @throws MarshalException If the  {@link ValidationEventHandler ValidationEventHandler}returns false from its \u003ctt\u003ehandleEvent\u003c/tt\u003e method or the \u003ctt\u003eMarshaller\u003c/tt\u003e is unable to marshal \u003ctt\u003eobj\u003c/tt\u003e (or any object reachable from \u003ctt\u003eobj\u003c/tt\u003e).  See \u003ca href\u003d\"#elementMarshalling\"\u003e Marshalling a JAXB element\u003c/a\u003e.\n * @throws IllegalArgumentException If any of the method parameters are null\n * @since JAXB 2.0\n */\n","tf":{"freq":{"fals":1,"valid":2,"stream":1,"unexpect":1,"root":2,"link":2,"object":1,"sent":1,"tree":2,"javax":1,"event":3,"levent":1,"writer":3,"href":1,"marshal":9,"argument":1,"element":5,"except":3,"paramet":1,"xml":1,"problem":1,"illeg":1,"handl":1,"unabl":1,"content":2,"will":1,"obj":2,"method":2,"reachabl":1,"jaxb":3,"occur":1,"handler":2},"maxFreq":9,"totalTerms":60},"loc":0}