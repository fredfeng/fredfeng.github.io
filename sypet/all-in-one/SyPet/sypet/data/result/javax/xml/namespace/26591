{"id":26591,"className":"javax.xml.namespace.QName","methodName":"valueOf","signature":"\u003cjavax.xml.namespace.QName: javax.xml.namespace.QName valueOf(java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003e\u003ccode\u003eQName\u003c/code\u003e derived from parsing the formatted \u003ccode\u003eString\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003eString\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e or does not conform to {@link #toString() QName.toString()} formatting, an\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown.\u003c/p\u003e \u003cp\u003e\u003cem\u003eThe \u003ccode\u003eString\u003c/code\u003e \u003cstrong\u003eMUST\u003c/strong\u003e be in the form returned by  {@link #toString() QName.toString()}.\u003c/em\u003e\u003c/p\u003e \u003cp\u003eThe commonly accepted way of representing a \u003ccode\u003eQName\u003c/code\u003e as a \u003ccode\u003eString\u003c/code\u003e was \u003ca href\u003d\"http://jclark.com/xml/xmlns.htm\"\u003edefined\u003c/a\u003e by James Clark.  Although this is not a \u003cem\u003estandard\u003c/em\u003e specification, it is in common use, e.g.  {@link javax.xml.transform.Transformer#setParameter(String name,Object value)}. This implementation parses a \u003ccode\u003eString\u003c/code\u003e formatted as: \"{\" + Namespace URI + \"}\" + local part.  If the Namespace URI \u003ccode\u003e.equals(XMLConstants.NULL_NS_URI)\u003c/code\u003e, only the local part should be provided.\u003c/p\u003e \u003cp\u003eThe prefix value \u003cstrong\u003e\u003cem\u003eCANNOT\u003c/em\u003e\u003c/strong\u003e be represented in the \u003ccode\u003eString\u003c/code\u003e and will be set to {@link javax.xml.XMLConstants#DEFAULT_NS_PREFIX XMLConstants.DEFAULT_NS_PREFIX}.\u003c/p\u003e \u003cp\u003eThis method does not do full validation of the resulting \u003ccode\u003eQName\u003c/code\u003e. \u003cp\u003eThe Namespace URI is not validated as a \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2396.txt\"\u003eURI reference\u003c/a\u003e. The local part is not validated as a \u003ca href\u003d\"http://www.w3.org/TR/REC-xml-names/#NT-NCName\"\u003eNCName\u003c/a\u003e as specified in \u003ca href\u003d\"http://www.w3.org/TR/REC-xml-names/\"\u003eNamespaces in XML\u003c/a\u003e.\u003c/p\u003e\n * @param qNameAsString \u003ccode\u003eString\u003c/code\u003e representationof the \u003ccode\u003eQName\u003c/code\u003e\n * @throws IllegalArgumentException When \u003ccode\u003eqNameAsString\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e or malformed\n * @return \u003ccode\u003eQName\u003c/code\u003e corresponding to the given \u003ccode\u003eString\u003c/code\u003e\n * @see #toString() QName.toString()\n */\n","tf":{"freq":{"clark":1,"com":1,"jclark":1,"deriv":1,"accept":1,"specifi":1,"although":1,"namespac":4,"given":1,"qname":8,"refer":1,"javax":2,"href":4,"htm":1,"argument":2,"except":2,"thrown":1,"form":1,"xml":5,"xmlns":1,"format":3,"provid":1,"malform":1,"http":4,"strong":4,"prefix":1,"representationof":1,"will":1,"lconstant":3,"result":1,"defin":1,"valid":3,"common":2,"correspond":1,"link":4,"www":3,"way":1,"use":1,"object":1,"org":3,"txt":1,"rfc":2,"transform":2,"full":1,"name":7,"valu":3,"jame":1,"standard":1,"repres":2,"paramet":1,"equal":1,"illeg":2,"ietf":1,"specif":1,"conform":1,"string":17,"method":1,"local":3,"part":3,"pars":2},"maxFreq":17,"totalTerms":133},"loc":49}