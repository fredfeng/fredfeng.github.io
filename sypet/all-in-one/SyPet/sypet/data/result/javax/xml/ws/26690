{"id":26690,"className":"javax.xml.ws.LogicalMessage","methodName":"getPayload","signature":"\u003cjavax.xml.ws.LogicalMessage: javax.xml.transform.Source getPayload()\u003e","javadoc":"/** \n * Gets the message payload as an XML source, may be called multiple times on the same LogicalMessage instance, always returns a new \u003ccode\u003eSource\u003c/code\u003e that may be used to retrieve the entire message payload. \u003cp\u003eIf the returned \u003ccode\u003eSource\u003c/code\u003e is an instance of \u003ccode\u003eDOMSource\u003c/code\u003e, then modifications to the encapsulated DOM tree change the message payload in-place, there is no need to susequently call \u003ccode\u003esetPayload\u003c/code\u003e. Other types of \u003ccode\u003eSource\u003c/code\u003e provide only read access to the message payload.\n * @return The contained message payload; returns \u003ccode\u003enull\u003c/code\u003e if nopayload is present in this message.\n */\n","tf":{"freq":{"need":1,"call":2,"nopayload":1,"susequ":1,"use":1,"payload":7,"type":1,"time":1,"tree":1,"read":1,"place":1,"may":2,"multipl":1,"alway":1,"messag":7,"access":1,"provid":1,"logic":1,"instanc":2,"present":1,"retriev":1,"contain":1,"encapsul":1,"sourc":4,"chang":1,"msourc":1,"entir":1,"modif":1},"maxFreq":7,"totalTerms":46},"loc":0}