{"id":26609,"className":"javax.xml.validation.Validator","methodName":"validate","signature":"\u003cjavax.xml.validation.Validator: void validate(javax.xml.transform.Source,javax.xml.transform.Result)\u003e","javadoc":"/** \n * \u003cp\u003eValidates the specified input and send the augmented validation result to the specified output.\u003c/p\u003e \u003cp\u003eThis method places the following restrictions on the types of the  {@link Source}/ {@link Result} accepted.\u003c/p\u003e\u003ctable border\u003d1\u003e \u003cthead\u003e \u003ctr\u003e \u003cth colspan\u003d\"5\"\u003e\u003ccode\u003eSource\u003c/code\u003e / \u003ccode\u003eResult\u003c/code\u003e Accepted\u003c/th\u003e \u003c/tr\u003e \u003ctr\u003e \u003cth\u003e\u003c/th\u003e \u003cth\u003e {@link javax.xml.transform.stream.StreamSource}\u003c/th\u003e \u003cth\u003e {@link javax.xml.transform.sax.SAXSource}\u003c/th\u003e \u003cth\u003e {@link javax.xml.transform.dom.DOMSource}\u003c/th\u003e \u003cth\u003e {@link javax.xml.transform.stax.StAXSource}\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody align\u003d\"center\"\u003e \u003ctr\u003e \u003ctd\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e \u003ctd\u003eOK\u003c/td\u003e \u003ctd\u003eOK\u003c/td\u003e \u003ctd\u003eOK\u003c/td\u003e \u003ctd\u003eOK\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003cth\u003e {@link javax.xml.transform.stream.StreamResult}\u003c/th\u003e \u003ctd\u003eOK\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003cth\u003e {@link javax.xml.transform.sax.SAXResult}\u003c/th\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003eOK\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003cth\u003e {@link javax.xml.transform.dom.DOMResult}\u003c/th\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003eOK\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003cth\u003e {@link javax.xml.transform.stax.StAXResult}\u003c/th\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/td\u003e \u003ctd\u003eOK\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003cp\u003eTo validate one \u003ccode\u003eSource\u003c/code\u003e into another kind of \u003ccode\u003eResult\u003c/code\u003e, use the identity transformer (see {@link javax.xml.transform.TransformerFactory#newTransformer()}).\u003c/p\u003e \u003cp\u003eErrors found during the validation is sent to the specified {@link ErrorHandler}.\u003c/p\u003e \u003cp\u003eIf a document is valid, or if a document contains some errors but none of them were fatal and the \u003ccode\u003eErrorHandler\u003c/code\u003e didn\u0027t throw any exception, then the method returns normally.\u003c/p\u003e\n * @param source XML to be validated. Must be an XML document or XML element and must not be null. For backwards compatibility, the results of attempting to validate anything other than a document or element are implementation-dependent. Implementations must either recognize and process the input or throw an IllegalArgumentException.\n * @param result The \u003ccode\u003eResult\u003c/code\u003e object that receives (possibly augmented) XML. This parameter can be null if the caller is not interested in it. Note that when a \u003ccode\u003eDOMResult\u003c/code\u003e is used, a validator might just pass the same DOM node from \u003ccode\u003eDOMSource\u003c/code\u003e to \u003ccode\u003eDOMResult\u003c/code\u003e (in which case \u003ccode\u003esource.getNode()\u003d\u003dresult.getNode()\u003c/code\u003e), it might copy the entire DOM tree, or it might alter the node given by the source.\n * @throws IllegalArgumentException If the \u003ccode\u003eResult\u003c/code\u003e type doesn\u0027t match the \u003ccode\u003eSource\u003c/code\u003e type of if the \u003ccode\u003eSource\u003c/code\u003e is an XML artifact that the implementation cannot validate (for example, a processing instruction).\n * @throws SAXException If the \u003ccode\u003eErrorHandler\u003c/code\u003e throws a \u003ccode\u003eSAXException\u003c/code\u003e or if a fatal error is found and the \u003ccode\u003eErrorHandler\u003c/code\u003e returns normally.\n * @throws IOException If the validator is processing a \u003ccode\u003eSAXSource\u003c/code\u003e and the underlying  {@link org.xml.sax.XMLReader} throws an\u003ccode\u003eIOException\u003c/code\u003e.\n * @throws NullPointerException If the \u003ccode\u003esource\u003c/code\u003e parameter is \u003ccode\u003enull\u003c/code\u003e.\n * @see #validate(Source source)\n */\n","tf":{"freq":{"anyth":1,"xresult":1,"send":1,"dom":2,"accept":2,"normal":2,"possibl":1,"augment":2,"type":3,"copi":1,"must":3,"mresult":3,"specifi":3,"center":1,"sent":1,"instruct":1,"given":1,"tree":1,"interest":1,"javax":9,"none":1,"border":1,"place":1,"recogn":1,"follow":1,"argument":14,"element":2,"except":18,"colspan":1,"fatal":2,"align":1,"xml":10,"restrict":1,"node":4,"input":2,"contain":1,"pointer":1,"sax":3,"sourc":13,"match":1,"xexcept":2,"output":1,"msourc":2,"entir":1,"lreader":1,"compat":1,"caller":1,"attempt":1,"might":3,"valid":12,"result":11,"stream":4,"xsourc":2,"backward":1,"link":13,"one":1,"use":2,"object":1,"anoth":1,"org":1,"kind":1,"transform":12,"document":4,"ident":1,"factori":1,"note":1,"just":1,"thead":2,"stax":2,"error":7,"tbodi":2,"depend":1,"paramet":2,"receiv":1,"illeg":14,"alter":1,"pass":1,"process":3,"artifact":1,"either":1,"tabl":2,"exampl":1,"method":2,"found":2,"handler":4},"maxFreq":18,"totalTerms":251},"loc":0}