{"id":27437,"className":"javax.xml.soap.SOAPMessage","methodName":"createAttachmentPart","signature":"\u003cjavax.xml.soap.SOAPMessage: javax.xml.soap.AttachmentPart createAttachmentPart(java.lang.Object,java.lang.String)\u003e","javadoc":"/** \n * Creates an \u003ccode\u003eAttachmentPart\u003c/code\u003e object and populates it with the specified data of the specified content type. The type of the \u003ccode\u003eObject\u003c/code\u003e should correspond to the value given for the \u003ccode\u003eContent-Type\u003c/code\u003e.\n * @param content an \u003ccode\u003eObject\u003c/code\u003e containing the content for the \u003ccode\u003eAttachmentPart\u003c/code\u003e object to be created\n * @param contentType a \u003ccode\u003eString\u003c/code\u003e object giving the type of content; examples are \"text/xml\", \"text/plain\", and \"image/jpeg\"\n * @return a new \u003ccode\u003eAttachmentPart\u003c/code\u003e object that contains thegiven data\n * @exception IllegalArgumentException may be thrown if the contentType does not match the type of the content object, or if there was no \u003ccode\u003eDataContentHandler\u003c/code\u003e object for the given content object\n * @see javax.activation.DataHandler\n * @see javax.activation.DataContentHandler\n */\n","tf":{"freq":{"jpeg":1,"give":1,"correspond":1,"data":5,"object":9,"activ":2,"type":7,"specifi":2,"popul":1,"given":2,"javax":2,"valu":1,"thegiven":1,"plain":1,"argument":1,"thrown":1,"may":1,"text":2,"except":2,"creat":3,"xml":1,"imag":1,"illeg":1,"content":11,"attach":4,"contain":2,"string":1,"exampl":1,"match":1,"part":4,"handler":3},"maxFreq":11,"totalTerms":76},"loc":5}