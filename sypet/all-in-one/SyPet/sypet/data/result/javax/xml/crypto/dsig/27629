{"id":27629,"className":"javax.xml.crypto.dsig.XMLSignatureFactory","methodName":"unmarshalXMLSignature","signature":"\u003cjavax.xml.crypto.dsig.XMLSignatureFactory: javax.xml.crypto.dsig.XMLSignature unmarshalXMLSignature(javax.xml.crypto.XMLStructure)\u003e","javadoc":"/** \n * Unmarshals a new \u003ccode\u003eXMLSignature\u003c/code\u003e instance from a mechanism-specific \u003ccode\u003eXMLStructure\u003c/code\u003e instance. This method is useful if you only want to unmarshal (and not validate) an \u003ccode\u003eXMLSignature\u003c/code\u003e.\n * @param xmlStructure a mechanism-specific XML structure from which tounmarshal the signature from\n * @return the \u003ccode\u003eXMLSignature\u003c/code\u003e\n * @throws NullPointerException if \u003ccode\u003exmlStructure\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e\n * @throws ClassCastException if the type of \u003ccode\u003exmlStructure\u003c/code\u003e isinappropriate for this factory\n * @throws MarshalException if an unrecoverable exception occursduring unmarshalling\n */\n","tf":{"freq":{"valid":1,"except":4,"structur":4,"use":1,"xml":3,"type":1,"unmarshal":1,"signatur":1,"instanc":2,"lstructur":1,"isinappropri":1,"specif":2,"cast":1,"tounmarsh":1,"factori":1,"mechan":2,"unrecover":1,"unmarsh":3,"pointer":1,"lsignatur":4,"method":1,"occursdur":1,"marshal":1,"want":1},"maxFreq":4,"totalTerms":40},"loc":0}