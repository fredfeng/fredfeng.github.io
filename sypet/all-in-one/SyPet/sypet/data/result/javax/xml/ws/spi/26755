{"id":26755,"className":"javax.xml.ws.spi.Invoker","methodName":"inject","signature":"\u003cjavax.xml.ws.spi.Invoker: void inject(javax.xml.ws.WebServiceContext)\u003e","javadoc":"/** \n * JAX-WS runtimes calls this method to ask container to inject WebServiceContext on the endpoint instance. The \u003ccode\u003eWebServiceContext\u003c/code\u003e object uses thread-local information to return the correct information during the actual endpoint invocation regardless of how many threads are concurrently being used to serve requests.\n * @param webServiceContext a holder for MessageContext\n * @throws IllegalAccessException if the injection doneby reflection API throws this exception\n * @throws IllegalArgumentException if the injection doneby reflection API throws this exception\n * @throws InvocationTargetException if the injection doneby reflection API throws this exception\n */\n","tf":{"freq":{"call":1,"concurr":1,"servic":3,"use":2,"object":1,"correct":1,"donebi":3,"thread":2,"request":1,"serv":1,"regardless":1,"argument":1,"mani":1,"except":6,"holder":1,"messag":1,"runtim":1,"inject":5,"web":3,"access":1,"illeg":2,"endpoint":2,"invoc":2,"instanc":1,"inform":2,"contain":1,"target":1,"context":4,"actual":1,"method":1,"local":1,"ask":1,"reflect":3},"maxFreq":6,"totalTerms":59},"loc":0}