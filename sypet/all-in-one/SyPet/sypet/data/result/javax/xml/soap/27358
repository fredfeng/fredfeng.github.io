{"id":27358,"className":"javax.xml.soap.MessageFactory","methodName":"createMessage","signature":"\u003cjavax.xml.soap.MessageFactory: javax.xml.soap.SOAPMessage createMessage(javax.xml.soap.MimeHeaders,java.io.InputStream)\u003e","javadoc":"/** \n * Internalizes the contents of the given \u003ccode\u003eInputStream\u003c/code\u003e object into a new \u003ccode\u003eSOAPMessage\u003c/code\u003e object and returns the \u003ccode\u003eSOAPMessage\u003c/code\u003e object.\n * @param in the \u003ccode\u003eInputStream\u003c/code\u003e object that contains the datafor a message\n * @param headers the transport-specific headers passed to themessage in a transport-independent fashion for creation of the message\n * @return a new \u003ccode\u003eSOAPMessage\u003c/code\u003e object containing the data fromthe given \u003ccode\u003eInputStream\u003c/code\u003e object\n * @exception IOException if there is a problem in reading data fromthe input stream\n * @exception SOAPException may be thrown if the message is invalid\n * @exception IllegalArgumentException if the \u003ccode\u003eMessageFactory\u003c/code\u003erequires one or more MIME headers to be present in the \u003ccode\u003eheaders\u003c/code\u003e parameter and they are missing. \u003ccode\u003eMessageFactory\u003c/code\u003e implementations for \u003ccode\u003eSOAP_1_1_PROTOCOL\u003c/code\u003e or \u003ccode\u003eSOAP_1_2_PROTOCOL\u003c/code\u003e must not throw \u003ccode\u003eIllegalArgumentException\u003c/code\u003e for this reason.\n */\n","tf":{"freq":{"creation":1,"stream":4,"fashion":1,"reason":1,"one":1,"data":2,"object":6,"must":1,"independ":1,"requir":1,"invalid":1,"given":2,"transport":2,"factori":2,"read":1,"fromth":2,"argument":2,"thrown":1,"except":7,"may":1,"creat":1,"messag":9,"paramet":1,"problem":1,"illeg":2,"header":4,"pass":1,"content":1,"present":1,"input":4,"specif":1,"contain":2,"themessag":1,"intern":1,"datafor":1,"miss":1},"maxFreq":9,"totalTerms":72},"loc":0}