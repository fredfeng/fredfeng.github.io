{"id":27589,"className":"javax.xml.crypto.dsig.TransformService","methodName":"getInstance","signature":"\u003cjavax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eTransformService\u003c/code\u003e that supports the specified algorithm URI (ex:  {@link Transform#XPATH2}) and mechanism type (ex: DOM) as supplied by the specified provider. The specified provider must be registered in the security provider list. \u003cp\u003eNote that the list of registered providers may be retrieved via the  {@link Security#getProviders() Security.getProviders()} method.\n * @param algorithm the URI of the algorithm\n * @param mechanismType the type of the XML processing mechanism andrepresentation\n * @param provider the string name of the provider\n * @return a new \u003ccode\u003eTransformService\u003c/code\u003e\n * @throws NoSuchProviderException if the specified provider is notregistered in the security provider list\n * @throws NullPointerException if \u003ccode\u003eprovider\u003c/code\u003e,\u003ccode\u003emechanismType\u003c/code\u003e, or \u003ccode\u003ealgorithm\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws NoSuchAlgorithmException if a \u003ccode\u003eTransformService\u003c/code\u003eimplementation for the specified algorithm and mechanism type is not available from the specified provider\n * @see Provider\n */\n","tf":{"freq":{"via":1,"link":2,"servic":3,"type":5,"must":1,"andrepresent":1,"algorithm":6,"specifi":6,"transform":4,"name":1,"regist":2,"note":1,"notregist":1,"except":3,"may":1,"support":1,"avail":1,"suppli":1,"list":3,"provid":14,"instanc":1,"process":1,"secur":4,"mechan":5,"retriev":1,"string":1,"pointer":1,"method":1},"maxFreq":14,"totalTerms":73},"loc":26}