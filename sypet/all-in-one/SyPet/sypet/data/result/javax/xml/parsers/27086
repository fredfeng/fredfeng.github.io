{"id":27086,"className":"javax.xml.parsers.SAXParser","methodName":"reset","signature":"\u003cjavax.xml.parsers.SAXParser: void reset()\u003e","javadoc":"/** \n * \u003cp\u003eReset this \u003ccode\u003eSAXParser\u003c/code\u003e to its original configuration.\u003c/p\u003e \u003cp\u003e\u003ccode\u003eSAXParser\u003c/code\u003e is reset to the same state as when it was created with {@link SAXParserFactory#newSAXParser()}. \u003ccode\u003ereset()\u003c/code\u003e is designed to allow the reuse of existing \u003ccode\u003eSAXParser\u003c/code\u003es thus saving resources associated with the creation of new \u003ccode\u003eSAXParser\u003c/code\u003es.\u003c/p\u003e \u003cp\u003eThe reset \u003ccode\u003eSAXParser\u003c/code\u003e is not guaranteed to have the same  {@link Schema}\u003ccode\u003eObject\u003c/code\u003e, e.g.  {@link Object#equals(Object obj)}.  It is guaranteed to have a functionally equal \u003ccode\u003eSchema\u003c/code\u003e.\u003c/p\u003e\n * @throws UnsupportedOperationException When Implementations do notoverride this method\n * @since 1.5\n */\n","tf":{"freq":{"creation":1,"unsupport":1,"allow":1,"save":1,"xparser":7,"link":3,"state":1,"object":3,"reus":1,"function":1,"schema":2,"resourc":1,"oper":1,"associ":1,"factori":1,"reset":5,"exist":1,"except":1,"creat":1,"thus":1,"guarante":2,"origin":1,"equal":2,"notoverrid":1,"configur":1,"method":1,"obj":1,"design":1},"maxFreq":7,"totalTerms":45},"loc":9}