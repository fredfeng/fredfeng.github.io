{"id":27117,"className":"javax.xml.parsers.DocumentBuilder","methodName":"parse","signature":"\u003cjavax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)\u003e","javadoc":"/** \n * Parse the content of the given input source as an XML document and return a new DOM  {@link Document} object.An \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown if the \u003ccode\u003eInputSource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e null.\n * @param is InputSource containing the content to be parsed.\n * @return A new DOM Document object.\n * @throws IOException If any IO errors occur.\n * @throws SAXException If any parse errors occur.\n * @throws IllegalArgumentException When \u003ccode\u003eis\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @see org.xml.sax.DocumentHandler\n */\n","tf":{"freq":{"argument":2,"except":3,"thrown":1,"error":2,"link":1,"xml":1,"object":2,"org":1,"illeg":2,"content":2,"input":3,"document":4,"given":1,"contain":1,"sax":1,"sourc":3,"xexcept":1,"pars":4,"handler":1,"occur":2},"maxFreq":4,"totalTerms":38},"loc":0}