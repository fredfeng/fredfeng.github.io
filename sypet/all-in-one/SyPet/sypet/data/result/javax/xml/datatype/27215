{"id":27215,"className":"javax.xml.datatype.Duration","methodName":"subtract","signature":"\u003cjavax.xml.datatype.Duration: javax.xml.datatype.Duration subtract(javax.xml.datatype.Duration)\u003e","javadoc":"/** \n * \u003cp\u003eComputes a new duration whose value is \u003ccode\u003ethis-rhs\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor example:\u003c/p\u003e \u003cpre\u003e \"1 day\" - \"-3 days\" \u003d \"4 days\" \"1 year\" - \"1 day\" \u003d IllegalStateException \"-(1 hour,50 minutes)\" - \"-20 minutes\" \u003d \"-(1hours,30 minutes)\" \"15 hours\" - \"-3 days\" \u003d \"3 days and 15 hours\" \"1 year\" - \"-1 day\" \u003d \"1 year and 1 day\" \u003c/pre\u003e \u003cp\u003eSince there\u0027s no way to meaningfully subtract 1 day from 1 month, there are cases where the operation fails in  {@link IllegalStateException}.\u003c/p\u003e \u003cp\u003eFormally the computation is defined as follows. First, we can assume that two \u003ccode\u003eDuration\u003c/code\u003es are both positive without losing generality.  (i.e., \u003ccode\u003e(-X)-Y\u003d-(X+Y)\u003c/code\u003e, \u003ccode\u003eX-(-Y)\u003dX+Y\u003c/code\u003e, \u003ccode\u003e(-X)-(-Y)\u003d-(X-Y)\u003c/code\u003e)\u003c/p\u003e \u003cp\u003eThen two durations are subtracted field by field. If the sign of any non-zero field \u003ccode\u003eF\u003c/code\u003e is different from the sign of the most significant field, 1 (if \u003ccode\u003eF\u003c/code\u003e is negative) or -1 (otherwise) will be borrowed from the next bigger unit of \u003ccode\u003eF\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThis process is repeated until all the non-zero fields have the same sign.\u003c/p\u003e \u003cp\u003eIf a borrow occurs in the days field (in other words, if the computation needs to borrow 1 or -1 month to compensate days), then the computation fails by throwing an {@link IllegalStateException}.\u003c/p\u003e\n * @param rhs \u003ccode\u003eDuration\u003c/code\u003e to subtract from this \u003ccode\u003eDuration\u003c/code\u003e.\n * @return New \u003ccode\u003eDuration\u003c/code\u003e created from subtracting \u003ccode\u003erhs\u003c/code\u003e from this \u003ccode\u003eDuration\u003c/code\u003e.\n * @throws IllegalStateException If two durations cannot be meaningfully subtracted. For example, subtracting one day from one month causes this exception.\n * @throws NullPointerException If the rhs parameter is null.\n * @see #add(Duration)\n */\n","tf":{"freq":{"need":1,"zero":2,"fail":2,"oper":1,"rhs":4,"year":3,"follow":1,"minut":3,"except":6,"creat":1,"whose":1,"compens":1,"signific":1,"without":1,"borrow":3,"non":2,"sign":3,"formal":1,"month":3,"will":1,"pointer":1,"comput":4,"negat":1,"word":1,"day":12,"posit":1,"otherwis":1,"defin":1,"bigger":1,"one":2,"link":2,"next":1,"state":4,"way":1,"repeat":1,"add":1,"durat":9,"valu":1,"assum":1,"paramet":1,"meaning":2,"hour":4,"illeg":4,"general":1,"field":6,"process":1,"subtract":7,"two":3,"lose":1,"differ":1,"unit":1,"caus":1,"pre":2,"exampl":2,"first":1,"occur":1},"maxFreq":12,"totalTerms":126},"loc":3}