{"id":27588,"className":"javax.xml.crypto.dsig.TransformService","methodName":"getInstance","signature":"\u003cjavax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.security.Provider)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eTransformService\u003c/code\u003e that supports the specified algorithm URI (ex:  {@link Transform#XPATH2}) and mechanism type (ex: DOM) as supplied by the specified provider. Note that the specified \u003ccode\u003eProvider\u003c/code\u003e object does not have to be registered in the provider list.\n * @param algorithm the URI of the algorithm\n * @param mechanismType the type of the XML processing mechanism andrepresentation\n * @param provider the \u003ccode\u003eProvider\u003c/code\u003e object\n * @return a new \u003ccode\u003eTransformService\u003c/code\u003e\n * @throws NullPointerException if \u003ccode\u003eprovider\u003c/code\u003e,\u003ccode\u003ealgorithm\u003c/code\u003e, or \u003ccode\u003emechanismType\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws NoSuchAlgorithmException if a \u003ccode\u003eTransformService\u003c/code\u003eimplementation for the specified algorithm and mechanism type is not available from the specified \u003ccode\u003eProvider\u003c/code\u003e object\n * @see Provider\n */\n","tf":{"freq":{"except":2,"support":1,"servic":3,"link":1,"avail":1,"list":1,"suppli":1,"object":3,"type":5,"provid":8,"andrepresent":1,"instanc":1,"specifi":5,"algorithm":6,"process":1,"transform":4,"mechan":5,"pointer":1,"regist":1,"note":1},"maxFreq":8,"totalTerms":52},"loc":25}