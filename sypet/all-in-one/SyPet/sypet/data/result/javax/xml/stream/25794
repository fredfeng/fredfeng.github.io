{"id":25794,"className":"javax.xml.stream.XMLStreamReader","methodName":"getNamespaceURI","signature":"\u003cjavax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(java.lang.String)\u003e","javadoc":"/** \n * Return the uri for the given prefix. The uri returned depends on the current state of the processor. \u003cp\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003eThe \u0027xml\u0027 prefix is bound as defined in \u003ca href\u003d\"http://www.w3.org/TR/REC-xml-names/#ns-using\"\u003eNamespaces in XML\u003c/a\u003e specification to \"http://www.w3.org/XML/1998/namespace\". \u003cp\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e The \u0027xmlns\u0027 prefix must be resolved to following namespace \u003ca href\u003d\"http://www.w3.org/2000/xmlns/\"\u003ehttp://www.w3.org/2000/xmlns/\u003c/a\u003e\n * @param prefix The prefix to lookup, may not be null\n * @return the uri bound to the given prefix or null if it is not bound\n * @throws IllegalArgumentException if the prefix is null\n */\n","tf":{"freq":{"defin":1,"state":1,"www":4,"use":1,"org":4,"lookup":1,"must":1,"namespac":4,"given":2,"name":1,"current":1,"processor":1,"href":2,"follow":1,"argument":1,"except":1,"may":1,"depend":1,"resolv":1,"xml":2,"xmlns":3,"illeg":1,"uri":3,"specif":1,"strong":4,"http":4,"prefix":7,"bound":3},"maxFreq":7,"totalTerms":58},"loc":0}