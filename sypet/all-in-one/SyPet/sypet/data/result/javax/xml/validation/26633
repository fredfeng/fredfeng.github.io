{"id":26633,"className":"javax.xml.validation.SchemaFactory","methodName":"newSchema","signature":"\u003cjavax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema()\u003e","javadoc":"/** \n * Creates a special  {@link Schema} object.\u003cp\u003eThe exact semantics of the returned  {@link Schema} objectdepend on the schema language for which this  {@link SchemaFactory}is created. \u003cp\u003eAlso, implementations are allowed to use implementation-specific property/feature to alter the semantics of this method.\u003c/p\u003e \u003cp\u003eImplementors and developers should pay particular attention to how the features set on this  {@link SchemaFactory} areprocessed by this special  {@link Schema}. In some cases, for example, when the {@link SchemaFactory} and the class actually loading theschema come from different implementations, it may not be possible for  {@link SchemaFactory} features to be inherited automatically.Developers should make sure that features, such as secure processing, are explicitly set in both places.\u003c/p\u003e \u003ch2\u003eW3C XML Schema 1.0\u003c/h2\u003e \u003cp\u003e For XML Schema, this method creates a  {@link Schema} object thatperforms validation by using location hints specified in documents. \u003cp\u003e The returned  {@link Schema} object assumes that if documentsrefer to the same URL in the schema location hints, they will always resolve to the same schema document. This asusmption allows implementations to reuse parsed results of schema documents so that multiple validations against the same schema will run faster. \u003cp\u003e Note that the use of schema location hints introduces a vulnerability to denial-of-service attacks. \u003ch2\u003eRELAX NG\u003c/h2\u003e \u003cp\u003e RELAX NG does not support this operation.\n * @return Always return non-null valid  {@link Schema} object.\n * @throws UnsupportedOperationException If this operation is not supported by the callee.\n * @throws SAXException If this operation is supported but failed for some reason.\n */\n","tf":{"freq":{"unsupport":1,"reason":1,"servic":1,"documentsref":1,"particular":1,"possibl":1,"languag":1,"vulner":1,"reus":1,"specifi":1,"schema":19,"fail":1,"oper":4,"exact":1,"place":1,"asusmpt":1,"implementor":1,"sure":1,"except":1,"support":3,"multipl":1,"areprocess":1,"creat":3,"alway":2,"resolv":1,"non":1,"explicit":1,"attent":1,"will":2,"load":1,"properti":1,"xexcept":1,"objectdepend":1,"make":1,"calle":1,"result":1,"valid":3,"allow":2,"link":10,"use":3,"object":4,"run":1,"automat":1,"introduc":1,"faster":1,"document":3,"factori":4,"semant":2,"thatperform":1,"pay":1,"develop":2,"note":1,"denial":1,"theschema":1,"may":1,"locat":3,"assum":1,"come":1,"hint":3,"alter":1,"process":1,"differ":1,"specif":1,"secur":1,"featur":4,"exampl":1,"actual":1,"method":2,"special":2,"attack":1,"pars":1,"also":1},"maxFreq":19,"totalTerms":132},"loc":0}