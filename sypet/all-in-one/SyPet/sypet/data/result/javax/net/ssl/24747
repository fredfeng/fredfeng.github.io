{"id":24747,"className":"javax.net.ssl.HttpsURLConnection","methodName":"getLocalCertificates","signature":"\u003cjavax.net.ssl.HttpsURLConnection: java.security.cert.Certificate[] getLocalCertificates()\u003e","javadoc":"/** \n * Returns the certificate(s) that were sent to the server during handshaking. \u003cP\u003e Note: This method is useful only when using certificate-based cipher suites. \u003cP\u003e When multiple certificates are available for use in a handshake, the implementation chooses what it considers the \"best\" certificate chain available, and transmits that to the other side.  This method allows the caller to know which certificate chain was actually sent.\n * @return an ordered array of certificates,with the client\u0027s own certificate first followed by any certificate authorities.  If no certificates were sent, then null is returned.\n * @throws IllegalStateException if this method is called beforethe connection has been established.\n * @see #getLocalPrincipal()\n */\n","tf":{"freq":{"caller":1,"call":1,"connect":1,"client":1,"allow":1,"state":1,"use":3,"consid":1,"handshak":2,"author":1,"sent":3,"order":1,"side":1,"choos":1,"best":1,"note":1,"follow":1,"transmit":1,"except":1,"certif":10,"multipl":1,"establish":1,"avail":2,"beforeth":1,"illeg":1,"know":1,"chain":2,"suit":1,"base":1,"actual":1,"cipher":1,"method":3,"server":1,"local":2,"first":1,"princip":1,"array":1},"maxFreq":10,"totalTerms":56},"loc":0}