{"id":24874,"className":"javax.net.ssl.SSLServerSocket","methodName":"setSSLParameters","signature":"\u003cjavax.net.ssl.SSLServerSocket: void setSSLParameters(javax.net.ssl.SSLParameters)\u003e","javadoc":"/** \n * Applies SSLParameters to newly accepted connections. \u003cp\u003eThis means: \u003cul\u003e \u003cli\u003eif \u003ccode\u003eparams.getCipherSuites()\u003c/code\u003e is non-null, \u003ccode\u003esetEnabledCipherSuites()\u003c/code\u003e is called with that value \u003cli\u003eif \u003ccode\u003eparams.getProtocols()\u003c/code\u003e is non-null, \u003ccode\u003esetEnabledProtocols()\u003c/code\u003e is called with that value \u003cli\u003eif \u003ccode\u003eparams.getNeedClientAuth()\u003c/code\u003e or \u003ccode\u003eparams.getWantClientAuth()\u003c/code\u003e return \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003esetNeedClientAuth(true)\u003c/code\u003e and \u003ccode\u003esetWantClientAuth(true)\u003c/code\u003e are called, respectively; otherwise \u003ccode\u003esetWantClientAuth(false)\u003c/code\u003e is called. \u003c/ul\u003e\n * @param params the parameters\n * @throws IllegalArgumentException if the setEnabledCipherSuites() orthe setEnabledProtocols() call fails\n * @see #getSSLParameters()\n * @since 1.7\n */\n","tf":{"freq":{"need":2,"otherwis":1,"fals":1,"call":5,"orth":1,"connect":1,"client":5,"accept":1,"fail":1,"mean":1,"valu":2,"want":3,"argument":1,"except":1,"lparamet":3,"protocol":3,"enabl":4,"paramet":1,"true":3,"illeg":1,"non":2,"newli":1,"appli":1,"suit":3,"cipher":3,"auth":5,"respect":1},"maxFreq":5,"totalTerms":57},"loc":20}