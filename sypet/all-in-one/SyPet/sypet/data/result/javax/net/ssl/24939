{"id":24939,"className":"javax.net.ssl.SSLSocketFactory","methodName":"createSocket","signature":"\u003cjavax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)\u003e","javadoc":"/** \n * Returns a socket layered over an existing socket connected to the named host, at the given port.  This constructor can be used when tunneling SSL through a proxy or when negotiating the use of SSL over an existing socket. The host and port refer to the logical peer destination. This socket is configured using the socket options established for this factory.\n * @param s the existing socket\n * @param host the server host\n * @param port the server port\n * @param autoClose close the underlying socket when this socket is closed\n * @return a socket connected to the specified host and port\n * @throws IOException if an I/O error occurs when creating the socket\n * @throws NullPointerException if the parameter s is null\n */\n","tf":{"freq":{"port":5,"negoti":1,"connect":2,"use":3,"specifi":1,"close":3,"given":1,"refer":1,"factori":1,"name":1,"socket":11,"exist":3,"option":1,"constructor":1,"peer":1,"except":2,"host":5,"error":1,"proxi":1,"creat":2,"paramet":1,"layer":1,"establish":1,"logic":1,"configur":1,"pointer":1,"auto":1,"server":2,"occur":1,"tunnel":1,"destin":1},"maxFreq":11,"totalTerms":59},"loc":0}