{"id":24725,"className":"javax.net.ServerSocketFactory","methodName":"createServerSocket","signature":"\u003cjavax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket(int)\u003e","javadoc":"/** \n * Returns a server socket bound to the specified port. The socket is configured with the socket options (such as accept timeout) given to this factory. \u003cP\u003e If there is a security manager, its \u003ccode\u003echeckListen\u003c/code\u003e method is called with the \u003ccode\u003eport\u003c/code\u003e argument as its argument to ensure the operation is allowed. This could result in a SecurityException.\n * @param port the port to listen to\n * @return the \u003ccode\u003eServerSocket\u003c/code\u003e\n * @throws IOException for networking errors\n * @throws SecurityException if a security manager exists and its\u003ccode\u003echeckListen\u003c/code\u003e method doesn\u0027t allow the operation.\n * @throws IllegalArgumentException if the port parameter is outside thespecified range of valid port values, which is between 0 and 65535, inclusive.\n * @see SecurityManager#checkListen\n * @see java.net.ServerSocket#ServerSocket(int)\n */\n","tf":{"freq":{"port":6,"valid":1,"call":1,"result":1,"allow":2,"accept":1,"net":1,"network":1,"specifi":1,"ensur":1,"inclus":1,"given":1,"oper":2,"rang":1,"factori":1,"thespecifi":1,"socket":7,"valu":1,"exist":1,"listen":4,"option":1,"argument":3,"except":4,"error":1,"check":3,"creat":1,"manag":3,"paramet":1,"illeg":1,"configur":1,"secur":5,"outsid":1,"java":1,"server":5,"method":2,"timeout":1,"bound":1},"maxFreq":7,"totalTerms":71},"loc":0}