{"id":24867,"className":"javax.net.ssl.SSLServerSocket","methodName":"setWantClientAuth","signature":"\u003cjavax.net.ssl.SSLServerSocket: void setWantClientAuth(boolean)\u003e","javadoc":"/** \n * Controls whether \u003ccode\u003eaccept\u003c/code\u003eed server-mode \u003ccode\u003eSSLSockets\u003c/code\u003e will be initially configured to \u003ci\u003erequest\u003c/i\u003e client authentication. \u003cP\u003e A socket\u0027s client authentication setting is one of the following: \u003cul\u003e \u003cli\u003e client authentication required \u003cli\u003e client authentication requested \u003cli\u003e no client authentication desired \u003c/ul\u003e \u003cP\u003e Unlike  {@link #setNeedClientAuth(boolean)}, if the accepted socket\u0027s option is set and the client chooses not to provide authentication information about itself, \u003ci\u003ethe negotiations will continue\u003c/i\u003e. \u003cP\u003e Calling this method overrides any previous setting made by this method or  {@link #setNeedClientAuth(boolean)}. \u003cP\u003e The initial inherited setting may be overridden by calling {@link SSLSocket#setNeedClientAuth(boolean)} or{@link SSLSocket#setWantClientAuth(boolean)}.\n * @param want set to true if client authentication is requested,or false if no client authentication is desired.\n * @see #getWantClientAuth()\n * @see #setNeedClientAuth(boolean)\n * @see #getNeedClientAuth()\n * @see #setUseClientMode(boolean)\n */\n","tf":{"freq":{"fals":1,"need":5,"call":2,"negoti":1,"client":17,"overridden":1,"accept":2,"one":1,"link":4,"made":1,"use":1,"desir":2,"whether":1,"mode":2,"authent":8,"requir":1,"request":3,"unlik":1,"socket":2,"choos":1,"initi":2,"want":4,"option":1,"follow":1,"lsocket":3,"control":1,"may":1,"previous":1,"true":1,"provid":1,"continu":1,"inform":1,"configur":1,"will":2,"method":2,"server":1,"auth":8},"maxFreq":17,"totalTerms":89},"loc":0}