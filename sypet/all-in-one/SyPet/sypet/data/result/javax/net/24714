{"id":24714,"className":"javax.net.SocketFactory","methodName":"createSocket","signature":"\u003cjavax.net.SocketFactory: java.net.Socket createSocket(java.lang.String,int)\u003e","javadoc":"/** \n * Creates a socket and connects it to the specified remote host at the specified remote port.  This socket is configured using the socket options established for this factory. \u003cp\u003e If there is a security manager, its \u003ccode\u003echeckConnect\u003c/code\u003e method is called with the host address and \u003ccode\u003eport\u003c/code\u003e as its arguments. This could result in a SecurityException.\n * @param host the server host name with which to connect, or\u003ccode\u003enull\u003c/code\u003e for the loopback address.\n * @param port the server port\n * @return the \u003ccode\u003eSocket\u003c/code\u003e\n * @throws IOException if an I/O error occurs when creating the socket\n * @throws SecurityException if a security manager exists and its\u003ccode\u003echeckConnect\u003c/code\u003e method doesn\u0027t allow the operation.\n * @throws UnknownHostException if the host is not known\n * @throws IllegalArgumentException if the port parameter is outside thespecified range of valid port values, which is between 0 and 65535, inclusive.\n * @see SecurityManager#checkConnect\n * @see java.net.Socket#Socket(String,int)\n */\n","tf":{"freq":{"port":6,"valid":1,"call":1,"result":1,"allow":1,"connect":5,"use":1,"net":1,"specifi":2,"inclus":1,"loopback":1,"oper":1,"rang":1,"factori":1,"name":1,"thespecifi":1,"socket":8,"valu":1,"exist":1,"option":1,"argument":2,"except":5,"host":6,"error":1,"check":3,"creat":3,"manag":3,"paramet":1,"establish":1,"unknown":1,"illeg":1,"configur":1,"secur":5,"outsid":1,"address":2,"remot":2,"string":1,"java":1,"method":2,"server":2,"known":1,"occur":1},"maxFreq":8,"totalTerms":83},"loc":0}