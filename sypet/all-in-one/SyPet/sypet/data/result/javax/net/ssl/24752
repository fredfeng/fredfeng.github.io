{"id":24752,"className":"javax.net.ssl.HttpsURLConnection","methodName":"setDefaultHostnameVerifier","signature":"\u003cjavax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)\u003e","javadoc":"/** \n * Sets the default \u003ccode\u003eHostnameVerifier\u003c/code\u003e inherited by a new instance of this class. \u003cP\u003e If this method is not called, the default \u003ccode\u003eHostnameVerifier\u003c/code\u003e assumes the connection should not be permitted.\n * @param v the default host name verifier\n * @throws IllegalArgumentException if the \u003ccode\u003eHostnameVerifier\u003c/code\u003eparameter is null.\n * @throws SecurityException if a security manager exists and its\u003ccode\u003echeckPermission\u003c/code\u003e method does not allow \u003ccode\u003eSSLPermission(\"setHostnameVerifier\")\u003c/code\u003e\n * @see #getDefaultHostnameVerifier()\n */\n","tf":{"freq":{"argument":1,"call":1,"except":2,"assum":1,"host":1,"allow":1,"check":1,"connect":1,"manag":1,"permit":1,"paramet":1,"illeg":1,"instanc":1,"secur":2,"hostnam":6,"verifi":7,"name":1,"permiss":1,"method":2,"exist":1,"lpermiss":1},"maxFreq":7,"totalTerms":35},"loc":12}