{"id":24876,"className":"javax.net.ssl.X509TrustManager","methodName":"checkServerTrusted","signature":"\u003cjavax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)\u003e","javadoc":"/** \n * Given the partial or complete certificate chain provided by the peer, build a certificate path to a trusted root and return if it can be validated and is trusted for server SSL authentication based on the authentication type. \u003cp\u003e The authentication type is the key exchange algorithm portion of the cipher suites represented as a String, such as \"RSA\", \"DHE_DSS\". Note: for some exportable cipher suites, the key exchange algorithm is determined at run time during the handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5, the authType should be RSA_EXPORT when an ephemeral RSA key is used for the key exchange, and RSA when the key from the server certificate is used. Checking is case-sensitive.\n * @param chain the peer certificate chain\n * @param authType the key exchange algorithm used\n * @throws IllegalArgumentException if null or zero-length chainis passed in for the chain parameter or if null or zero-length string is passed in for the  authType parameter\n * @throws CertificateException if the certificate chain is not trustedby this TrustManager.\n */\n","tf":{"freq":{"valid":1,"root":1,"use":3,"zero":2,"run":1,"build":1,"type":5,"algorithm":3,"handshak":1,"authent":3,"time":1,"given":1,"ephemer":1,"length":2,"path":1,"note":1,"key":6,"complet":1,"portion":1,"argument":1,"peer":2,"except":2,"sensit":1,"export":1,"certif":6,"check":2,"repres":1,"manag":1,"trust":4,"paramet":2,"partial":1,"illeg":1,"provid":1,"exchang":4,"pass":2,"instanc":1,"chain":5,"trustedbi":1,"determin":1,"string":2,"base":1,"suit":2,"server":3,"cipher":2,"chaini":1,"auth":3},"maxFreq":6,"totalTerms":90},"loc":0}