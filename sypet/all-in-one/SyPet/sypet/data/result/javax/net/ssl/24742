{"id":24742,"className":"javax.net.ssl.HandshakeCompletedEvent","methodName":"getPeerCertificateChain","signature":"\u003cjavax.net.ssl.HandshakeCompletedEvent: javax.security.cert.X509Certificate[] getPeerCertificateChain()\u003e","javadoc":"/** \n * Returns the identity of the peer which was identified as part of defining the session. Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException. \u003cp\u003e\u003cem\u003eNote: this method exists for compatibility with previous releases. New applications should use {@link #getPeerCertificates} instead.\u003c/em\u003e\u003c/p\u003e\n * @return an ordered array of peer X.509 certificates,with the peer\u0027s own certificate first followed by any certificate authorities.  (The certificates are in the original JSSE {@link javax.security.cert.X509Certificate} format).\n * @exception SSLPeerUnverifiedException if the peer is not verified.\n * @see #getPeerPrincipal()\n */\n","tf":{"freq":{"defin":1,"link":2,"use":4,"identifi":1,"kerbero":1,"unverifi":2,"applic":1,"author":1,"cert":1,"order":1,"ident":1,"releas":1,"javax":1,"verifi":1,"exist":1,"note":2,"follow":1,"peer":7,"certif":9,"except":3,"previous":1,"lpeer":2,"origin":1,"format":1,"non":1,"secur":1,"session":1,"chain":1,"instead":1,"base":2,"suit":2,"will":1,"method":2,"cipher":2,"part":1,"first":1,"princip":1,"array":1,"compat":1},"maxFreq":9,"totalTerms":66},"loc":3}