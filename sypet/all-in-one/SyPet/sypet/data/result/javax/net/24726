{"id":24726,"className":"javax.net.ServerSocketFactory","methodName":"createServerSocket","signature":"\u003cjavax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket(int,int)\u003e","javadoc":"/** \n * Returns a server socket bound to the specified port, and uses the specified connection backlog.  The socket is configured with the socket options (such as accept timeout) given to this factory. \u003cP\u003e The \u003ccode\u003ebacklog\u003c/code\u003e argument must be a positive value greater than 0. If the value passed if equal or less than 0, then the default value will be assumed. \u003cP\u003e If there is a security manager, its \u003ccode\u003echeckListen\u003c/code\u003e method is called with the \u003ccode\u003eport\u003c/code\u003e argument as its argument to ensure the operation is allowed. This could result in a SecurityException.\n * @param port the port to listen to\n * @param backlog how many connections are queued\n * @return the \u003ccode\u003eServerSocket\u003c/code\u003e\n * @throws IOException for networking errors\n * @throws SecurityException if a security manager exists and its\u003ccode\u003echeckListen\u003c/code\u003e method doesn\u0027t allow the operation.\n * @throws IllegalArgumentException if the port parameter is outside thespecified range of valid port values, which is between 0 and 65535, inclusive.\n * @see SecurityManager#checkListen\n * @see java.net.ServerSocket#ServerSocket(int,int)\n */\n","tf":{"freq":{"greater":1,"accept":1,"must":1,"specifi":2,"given":1,"oper":2,"rang":1,"socket":7,"thespecifi":1,"option":1,"argument":4,"mani":1,"except":4,"creat":1,"configur":1,"backlog":3,"outsid":1,"will":1,"posit":1,"port":6,"call":1,"result":1,"valid":1,"connect":2,"allow":2,"use":1,"net":1,"network":1,"ensur":1,"inclus":1,"factori":1,"valu":4,"listen":4,"exist":1,"less":1,"assum":1,"check":3,"error":1,"manag":3,"queu":1,"paramet":1,"equal":1,"illeg":1,"pass":1,"secur":5,"java":1,"server":5,"method":2,"timeout":1,"bound":1},"maxFreq":7,"totalTerms":92},"loc":0}