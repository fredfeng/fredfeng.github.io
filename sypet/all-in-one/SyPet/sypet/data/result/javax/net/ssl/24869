{"id":24869,"className":"javax.net.ssl.SSLServerSocket","methodName":"setUseClientMode","signature":"\u003cjavax.net.ssl.SSLServerSocket: void setUseClientMode(boolean)\u003e","javadoc":"/** \n * Controls whether accepted connections are in the (default) SSL server mode, or the SSL client mode. \u003cP\u003e Servers normally authenticate themselves, and clients are not required to do so. \u003cP\u003e In rare cases, TCP servers need to act in the SSL client mode on newly accepted connections. For example, FTP clients acquire server sockets and listen there for reverse connections from the server. An FTP client would use an SSLServerSocket in \"client\" mode to accept the reverse connection while the FTP server uses an SSLSocket with \"client\" mode disabled to initiate the connection. During the resulting handshake, existing SSL sessions may be reused. \u003cP\u003e \u003ccode\u003eSSLSocket\u003c/code\u003es returned from \u003ccode\u003eaccept()\u003c/code\u003e inherit this setting.\n * @param mode true if newly accepted connections should use SSLclient mode.\n * @see #getUseClientMode()\n */\n","tf":{"freq":{"need":1,"acquir":1,"result":1,"connect":6,"client":9,"accept":5,"normal":1,"lserver":1,"use":5,"reus":1,"whether":1,"mode":9,"handshak":1,"authent":1,"revers":2,"requir":1,"rare":1,"socket":2,"initi":1,"exist":1,"listen":1,"lsocket":2,"control":1,"may":1,"true":1,"lclient":1,"newli":2,"disabl":1,"session":1,"exampl":1,"server":6,"act":1},"maxFreq":9,"totalTerms":70},"loc":0}