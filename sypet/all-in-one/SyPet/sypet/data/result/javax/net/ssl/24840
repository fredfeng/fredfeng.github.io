{"id":24840,"className":"javax.net.ssl.SSLContext","methodName":"init","signature":"\u003cjavax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)\u003e","javadoc":"/** \n * Initializes this context. Either of the first two parameters may be null in which case the installed security providers will be searched for the highest priority implementation of the appropriate factory. Likewise, the secure random parameter may be null in which case the default implementation will be used. \u003cP\u003e Only the first instance of a particular key and/or trust manager implementation type in the array is used.  (For example, only the first javax.net.ssl.X509KeyManager in the array will be used.)\n * @param km the sources of authentication keys or null\n * @param tm the sources of peer authentication trust decisions or null\n * @param random the source of randomness for this generator or null\n * @throws KeyManagementException if this operation fails\n */\n","tf":{"freq":{"decis":1,"highest":1,"use":3,"particular":1,"ssl":1,"net":1,"type":1,"authent":2,"fail":1,"oper":1,"search":1,"javax":1,"factori":1,"initi":1,"key":4,"peer":1,"except":1,"may":2,"prioriti":1,"manag":3,"trust":2,"instal":1,"paramet":2,"random":3,"init":1,"provid":1,"instanc":1,"two":1,"either":1,"secur":2,"likewis":1,"appropri":1,"generat":1,"exampl":1,"will":3,"context":1,"sourc":3,"first":3,"array":2},"maxFreq":4,"totalTerms":60},"loc":3}