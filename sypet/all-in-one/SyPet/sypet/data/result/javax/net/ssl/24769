{"id":24769,"className":"javax.net.ssl.SSLSession","methodName":"putValue","signature":"\u003cjavax.net.ssl.SSLSession: void putValue(java.lang.String,java.lang.Object)\u003e","javadoc":"/** \n * Binds the specified \u003ccode\u003evalue\u003c/code\u003e object into the session\u0027s application layer data with the given \u003ccode\u003ename\u003c/code\u003e. \u003cP\u003e Any existing binding using the same \u003ccode\u003ename\u003c/code\u003e is replaced.  If the new (or existing) \u003ccode\u003evalue\u003c/code\u003e implements the \u003ccode\u003eSSLSessionBindingListener\u003c/code\u003e interface, the object represented by \u003ccode\u003evalue\u003c/code\u003e is notified appropriately. \u003cp\u003e For security reasons, the same named values may not be visible across different access control contexts.\n * @param name the name to which the data object will be bound.This may not be null.\n * @param value the data object to be bound. This may not be null.\n * @throws IllegalArgumentException if either argument is null.\n */\n","tf":{"freq":{"put":1,"lsession":1,"reason":1,"visibl":1,"data":3,"use":1,"object":4,"across":1,"applic":1,"specifi":1,"given":1,"name":5,"valu":6,"exist":2,"listen":1,"argument":2,"notifi":1,"control":1,"except":1,"may":3,"repres":1,"layer":1,"access":1,"illeg":1,"differ":1,"either":1,"secur":1,"session":1,"appropri":1,"replac":1,"will":1,"context":1,"bind":3,"bound":2},"maxFreq":6,"totalTerms":55},"loc":0}