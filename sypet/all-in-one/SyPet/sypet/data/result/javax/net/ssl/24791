{"id":24791,"className":"javax.net.ssl.KeyManagerFactory","methodName":"init","signature":"\u003cjavax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])\u003e","javadoc":"/** \n * Initializes this factory with a source of key material. \u003cP\u003e The provider typically uses a KeyStore for obtaining key material for use during secure socket negotiations. The KeyStore is generally password-protected. \u003cP\u003e For more flexible initialization, please see {@link #init(ManagerFactoryParameters)}. \u003cP\u003e\n * @param ks the key store or null\n * @param password the password for recovering keys in the KeyStore\n * @throws KeyStoreException if this operation fails\n * @throws NoSuchAlgorithmException if the specified algorithm is notavailable from the specified provider.\n * @throws UnrecoverableKeyException if the key cannot be recovered(e.g. the given password is wrong).\n */\n","tf":{"freq":{"negoti":1,"store":5,"link":1,"typic":1,"use":2,"password":4,"specifi":2,"algorithm":2,"recov":2,"pleas":1,"given":1,"fail":1,"oper":1,"factori":2,"notavail":1,"socket":1,"initi":2,"key":10,"except":3,"manag":1,"paramet":1,"init":2,"provid":2,"general":1,"flexibl":1,"obtain":1,"secur":1,"materi":2,"unrecover":1,"wrong":1,"sourc":1},"maxFreq":10,"totalTerms":58},"loc":3}