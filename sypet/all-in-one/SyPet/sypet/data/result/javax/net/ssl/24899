{"id":24899,"className":"javax.net.ssl.SSLParameters","methodName":"setEndpointIdentificationAlgorithm","signature":"\u003cjavax.net.ssl.SSLParameters: void setEndpointIdentificationAlgorithm(java.lang.String)\u003e","javadoc":"/** \n * Sets the endpoint identification algorithm. \u003cp\u003e If the \u003ccode\u003ealgorithm\u003c/code\u003e parameter is non-null or non-empty, the endpoint identification/verification procedures must be handled during SSL/TLS handshaking.  This is to prevent man-in-the-middle attacks.\n * @param algorithm The standard string name of the endpointidentification algorithm (or null).  See Appendix A in the \u003ca href\u003d \"../../../technotes/guides/security/crypto/CryptoSpec.html#AppA\"\u003e Java Cryptography Architecture API Specification \u0026amp; Reference \u003c/a\u003e for information about standard algorithm names.\n * @see X509ExtendedTrustManager\n * @since 1.7\n */\n","tf":{"freq":{"spec":1,"verif":1,"identif":3,"crypto":2,"must":1,"algorithm":6,"technot":1,"handshak":1,"refer":1,"name":2,"middl":1,"href":1,"man":1,"cryptographi":1,"app":1,"standard":2,"manag":1,"trust":1,"paramet":1,"prevent":1,"procedur":1,"endpoint":3,"handl":1,"empti":1,"non":2,"endpointidentif":1,"guid":1,"inform":1,"specif":1,"secur":1,"architectur":1,"string":1,"java":1,"html":1,"appendix":1,"attack":1,"amp":1},"maxFreq":6,"totalTerms":50},"loc":3}