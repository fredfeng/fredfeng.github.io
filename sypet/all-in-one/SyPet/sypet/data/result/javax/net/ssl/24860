{"id":24860,"className":"javax.net.ssl.SSLServerSocket","methodName":"setEnabledCipherSuites","signature":"\u003cjavax.net.ssl.SSLServerSocket: void setEnabledCipherSuites(java.lang.String[])\u003e","javadoc":"/** \n * Sets the cipher suites enabled for use by accepted connections. \u003cP\u003e The cipher suites must have been listed by getSupportedCipherSuites() as being supported.  Following a successful call to this method, only suites listed in the \u003ccode\u003esuites\u003c/code\u003e parameter are enabled for use. \u003cP\u003e Suites that require authentication information which is not available in this ServerSocket\u0027s authentication context will not be used in any case, even if they are enabled. \u003cP\u003e \u003ccode\u003eSSLSocket\u003c/code\u003es returned from \u003ccode\u003eaccept()\u003c/code\u003e inherit this setting.\n * @param suites Names of all the cipher suites to enable\n * @exception IllegalArgumentException when one or more of ciphersnamed by the parameter is not supported, or when the parameter is null.\n * @see #getSupportedCipherSuites()\n * @see #getEnabledCipherSuites()\n */\n","tf":{"freq":{"call":1,"connect":1,"accept":2,"one":1,"use":3,"ciphersnam":1,"must":1,"authent":2,"requir":1,"name":1,"socket":1,"follow":1,"argument":1,"lsocket":1,"except":2,"support":4,"enabl":6,"paramet":3,"list":2,"avail":1,"illeg":1,"inform":1,"suit":11,"context":1,"will":1,"cipher":7,"method":1,"server":1,"even":1,"success":1},"maxFreq":11,"totalTerms":62},"loc":0}