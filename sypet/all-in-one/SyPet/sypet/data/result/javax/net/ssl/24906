{"id":24906,"className":"javax.net.ssl.SSLEngine","methodName":"unwrap","signature":"\u003cjavax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)\u003e","javadoc":"/** \n * Attempts to decode SSL/TLS network data into a plaintext application data buffer. \u003cP\u003e An invocation of this method behaves in exactly the same manner as the invocation: \u003cblockquote\u003e\u003cpre\u003e {@link #unwrap(ByteBuffer,ByteBuffer[],int,int)}engine.unwrap(src, new ByteBuffer []  dst }, 0, 1);} \u003c/pre\u003c/blockquote\u003e\n * @param src a \u003ccode\u003eByteBuffer\u003c/code\u003e containing inbound network data.\n * @param dst a \u003ccode\u003eByteBuffer\u003c/code\u003e to hold inbound application data.\n * @return  an \u003ccode\u003eSSLEngineResult\u003c/code\u003e describing the resultof this operation.\n * @throws SSLException A problem was encountered while processing the data that caused the \u003ccode\u003eSSLEngine\u003c/code\u003e to abort. See the class description for more information on engine closure.\n * @throws ReadOnlyBufferException if the \u003ccode\u003edst\u003c/code\u003e buffer is read-only.\n * @throws IllegalArgumentException if either \u003ccode\u003esrc\u003c/code\u003e or \u003ccode\u003edst\u003c/code\u003e is null.\n * @throws IllegalStateException if the client/server modehas not yet been set.\n * @see #unwrap(ByteBuffer,ByteBuffer[],int,int)\n */\n","tf":{"freq":{"attempt":1,"result":1,"client":1,"unwrap":4,"behav":1,"link":1,"state":1,"lexcept":1,"data":5,"engin":2,"dst":4,"applic":2,"network":2,"buffer":10,"resultof":1,"oper":1,"blockquot":2,"exact":1,"lengin":2,"read":2,"src":3,"argument":1,"decod":1,"except":3,"plaintext":1,"hold":1,"descript":1,"describ":1,"problem":1,"illeg":2,"invoc":2,"process":1,"inform":1,"either":1,"caus":1,"encount":1,"pre":2,"contain":1,"closur":1,"modeha":1,"server":1,"method":1,"manner":1,"inbound":2,"yet":1,"abort":1},"maxFreq":10,"totalTerms":79},"loc":3}