{"id":24920,"className":"javax.net.ssl.SSLEngine","methodName":"getSession","signature":"\u003cjavax.net.ssl.SSLEngine: javax.net.ssl.SSLSession getSession()\u003e","javadoc":"/** \n * Returns the \u003ccode\u003eSSLSession\u003c/code\u003e in use in this \u003ccode\u003eSSLEngine\u003c/code\u003e. \u003cP\u003e These can be long lived, and frequently correspond to an entire login session for some user.  The session specifies a particular cipher suite which is being actively used by all connections in that session, as well as the identities of the session\u0027s client and server. \u003cP\u003e Unlike  {@link SSLSocket#getSession()}this method does not block until handshaking is complete. \u003cP\u003e Until the initial handshake has completed, this method returns a session object which reports an invalid cipher suite of \"SSL_NULL_WITH_NULL_NULL\".\n * @return  the \u003ccode\u003eSSLSession\u003c/code\u003e for this \u003ccode\u003eSSLEngine\u003c/code\u003e\n * @see SSLSession\n */\n","tf":{"freq":{"lsession":3,"connect":1,"client":1,"correspond":1,"link":1,"block":1,"particular":1,"use":2,"object":1,"well":1,"activ":1,"specifi":1,"handshak":2,"invalid":1,"ident":1,"report":1,"lengin":2,"unlik":1,"login":1,"initi":1,"complet":2,"live":1,"lsocket":1,"frequent":1,"session":7,"suit":2,"cipher":2,"server":1,"method":2,"user":1,"entir":1},"maxFreq":7,"totalTerms":46},"loc":0}