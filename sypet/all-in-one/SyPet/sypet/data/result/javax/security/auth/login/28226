{"id":28226,"className":"javax.security.auth.login.LoginContext","methodName":"login","signature":"\u003cjavax.security.auth.login.LoginContext: void login()\u003e","javadoc":"/** \n * Perform the authentication. \u003cp\u003e This method invokes the \u003ccode\u003elogin\u003c/code\u003e method for each LoginModule configured for the \u003ci\u003ename\u003c/i\u003e specified to the \u003ccode\u003eLoginContext\u003c/code\u003e constructor, as determined by the login \u003ccode\u003eConfiguration\u003c/code\u003e.  Each \u003ccode\u003eLoginModule\u003c/code\u003e then performs its respective type of authentication (username/password, smart card pin verification, etc.). \u003cp\u003e This method completes a 2-phase authentication process by calling each configured LoginModule\u0027s \u003ccode\u003ecommit\u003c/code\u003e method if the overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT, and OPTIONAL LoginModules succeeded), or by calling each configured LoginModule\u0027s \u003ccode\u003eabort\u003c/code\u003e method if the overall authentication failed.  If authentication succeeded, each successful LoginModule\u0027s \u003ccode\u003ecommit\u003c/code\u003e method associates the relevant Principals and Credentials with the \u003ccode\u003eSubject\u003c/code\u003e. If authentication failed, each LoginModule\u0027s \u003ccode\u003eabort\u003c/code\u003e method removes/destroys any previously stored state. \u003cp\u003e If the \u003ccode\u003ecommit\u003c/code\u003e phase of the authentication process fails, then the overall authentication fails and this method invokes the \u003ccode\u003eabort\u003c/code\u003e method for each configured \u003ccode\u003eLoginModule\u003c/code\u003e. \u003cp\u003e If the \u003ccode\u003eabort\u003c/code\u003e phase fails for any reason, then this method propagates the original exception thrown either during the \u003ccode\u003elogin\u003c/code\u003e phase or the \u003ccode\u003ecommit\u003c/code\u003e phase.  In either case, the overall authentication fails. \u003cp\u003e In the case where multiple LoginModules fail, this method propagates the exception raised by the first \u003ccode\u003eLoginModule\u003c/code\u003e which failed. \u003cp\u003e Note that if this method enters the \u003ccode\u003eabort\u003c/code\u003e phase (either the \u003ccode\u003elogin\u003c/code\u003e or \u003ccode\u003ecommit\u003c/code\u003e phase failed), this method invokes all LoginModules configured for the application regardless of their respective \u003ccode\u003eConfiguration\u003c/code\u003e flag parameters.  Essentially this means that \u003ccode\u003eRequisite\u003c/code\u003e and \u003ccode\u003eSufficient\u003c/code\u003e semantics are ignored during the \u003ccode\u003eabort\u003c/code\u003e phase.  This guarantees that proper cleanup and state restoration can take place. \u003cp\u003e\n * @exception LoginException if the authentication fails.\n */\n","tf":{"freq":{"verif":1,"cleanup":1,"store":1,"relev":2,"reason":1,"etc":1,"usernam":1,"perform":2,"type":1,"password":1,"specifi":1,"fail":10,"commit":5,"essenti":1,"propag":2,"card":1,"login":18,"proper":1,"place":1,"modul":11,"requisit":1,"ignor":1,"except":4,"thrown":1,"succeed":3,"multipl":1,"invok":3,"remov":1,"enter":1,"configur":7,"flag":1,"determin":1,"restor":1,"suffici":1,"phase":8,"princip":1,"call":2,"subject":1,"state":2,"applic":1,"authent":11,"destroy":1,"rais":1,"associ":1,"semant":1,"name":1,"mean":1,"note":1,"regardless":1,"complet":1,"constructor":1,"credenti":1,"previous":1,"guarante":1,"paramet":1,"origin":1,"process":2,"either":3,"pin":1,"take":1,"context":1,"method":13,"first":1,"success":1,"smart":1,"respect":2,"abort":6},"maxFreq":18,"totalTerms":163},"loc":32}