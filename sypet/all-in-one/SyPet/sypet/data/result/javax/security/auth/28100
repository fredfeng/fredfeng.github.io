{"id":28100,"className":"javax.security.auth.Subject","methodName":"doAs","signature":"\u003cjavax.security.auth.Subject: T doAs(javax.security.auth.Subject,java.security.PrivilegedExceptionAction)\u003e","javadoc":"/** \n * Perform work as a particular \u003ccode\u003eSubject\u003c/code\u003e. \u003cp\u003e This method first retrieves the current Thread\u0027s \u003ccode\u003eAccessControlContext\u003c/code\u003e via \u003ccode\u003eAccessController.getContext\u003c/code\u003e, and then instantiates a new \u003ccode\u003eAccessControlContext\u003c/code\u003e using the retrieved context along with a new \u003ccode\u003eSubjectDomainCombiner\u003c/code\u003e (constructed using the provided \u003ccode\u003eSubject\u003c/code\u003e). Finally, this method invokes \u003ccode\u003eAccessController.doPrivileged\u003c/code\u003e, passing it the provided \u003ccode\u003ePrivilegedExceptionAction\u003c/code\u003e, as well as the newly constructed \u003ccode\u003eAccessControlContext\u003c/code\u003e. \u003cp\u003e\n * @param subject the \u003ccode\u003eSubject\u003c/code\u003e that the specified\u003ccode\u003eaction\u003c/code\u003e will run as.  This parameter may be \u003ccode\u003enull\u003c/code\u003e. \u003cp\u003e\n * @param action the code to be run as the specified\u003ccode\u003eSubject\u003c/code\u003e. \u003cp\u003e\n * @return the value returned by thePrivilegedExceptionAction\u0027s \u003ccode\u003erun\u003c/code\u003e method.\n * @exception PrivilegedActionException if the\u003ccode\u003ePrivilegedExceptionAction.run\u003c/code\u003e method throws a checked exception. \u003cp\u003e\n * @exception NullPointerException if the specified\u003ccode\u003ePrivilegedExceptionAction\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e. \u003cp\u003e\n * @exception SecurityException if the caller does not have permissionto invoke this method.\n */\n","tf":{"freq":{"caller":1,"via":1,"subject":6,"instanti":1,"particular":1,"use":2,"perform":1,"well":1,"run":4,"specifi":3,"permissionto":1,"thread":1,"action":7,"current":1,"domain":1,"combin":1,"valu":1,"along":1,"privileg":6,"work":1,"control":5,"may":1,"except":11,"check":1,"invok":2,"paramet":1,"access":5,"provid":2,"pass":1,"newli":1,"secur":1,"retriev":2,"will":1,"context":5,"pointer":1,"method":5,"construct":2,"first":1},"maxFreq":11,"totalTerms":90},"loc":19}