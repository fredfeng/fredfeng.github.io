{"id":28045,"className":"javax.security.sasl.RealmChoiceCallback","methodName":"RealmChoiceCallback","signature":"\u003cjavax.security.sasl.RealmChoiceCallback: void RealmChoiceCallback(java.lang.String,java.lang.String[],int,boolean)\u003e","javadoc":"/** \n * Constructs a \u003ctt\u003eRealmChoiceCallback\u003c/tt\u003e with a prompt, a list of choices and a default choice.\n * @param prompt the non-null prompt to use to request the realm.\n * @param choices the non-null list of realms to choose from.\n * @param defaultChoice the choice to be used as the default choicewhen the list of choices is displayed. It is an index into the \u003ctt\u003echoices\u003c/tt\u003e arary.\n * @param multiple true if multiple choices allowed; false otherwise\n * @throws IllegalArgumentException If \u003ctt\u003eprompt\u003c/tt\u003e is null or the empty string,if \u003ctt\u003echoices\u003c/tt\u003e has a length of 0, if any element from \u003ctt\u003echoices\u003c/tt\u003e is null or empty, or if \u003ctt\u003edefaultChoice\u003c/tt\u003e does not fall within the array boundary of \u003ctt\u003echoices\u003c/tt\u003e\n */\n","tf":{"freq":{"fals":1,"otherwis":1,"allow":1,"arari":1,"use":2,"realm":4,"request":1,"length":1,"choos":1,"argument":1,"element":1,"index":1,"except":1,"multipl":2,"choic":14,"true":1,"display":1,"list":3,"choicewhen":1,"illeg":1,"non":2,"empti":2,"fall":1,"string":1,"callback":2,"within":1,"prompt":4,"construct":1,"boundari":1,"array":1},"maxFreq":14,"totalTerms":56},"loc":3}