{"id":28369,"className":"javax.security.auth.x500.X500Principal","methodName":"equals","signature":"\u003cjavax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares the specified \u003ccode\u003eObject\u003c/code\u003e with this \u003ccode\u003eX500Principal\u003c/code\u003e for equality. \u003cp\u003e Specifically, this method returns \u003ccode\u003etrue\u003c/code\u003e if the \u003ccode\u003eObject\u003c/code\u003e \u003ci\u003eo\u003c/i\u003e is an \u003ccode\u003eX500Principal\u003c/code\u003e and if the respective canonical string representations (obtained via the \u003ccode\u003egetName(X500Principal.CANONICAL)\u003c/code\u003e method) of this object and \u003ci\u003eo\u003c/i\u003e are equal. \u003cp\u003e This implementation is compliant with the requirements of RFC 3280.\n * @param o Object to be compared for equality with this\u003ccode\u003eX500Principal\u003c/code\u003e\n * @return \u003ccode\u003etrue\u003c/code\u003e if the specified \u003ccode\u003eObject\u003c/code\u003e is equalto this \u003ccode\u003eX500Principal\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e otherwise\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"canon":1,"via":1,"true":2,"equal":4,"object":5,"specifi":2,"represent":1,"obtain":1,"specif":1,"requir":1,"name":1,"string":1,"compliant":1,"equalto":1,"method":2,"compar":2,"respect":1,"princip":5},"maxFreq":5,"totalTerms":35},"loc":10}