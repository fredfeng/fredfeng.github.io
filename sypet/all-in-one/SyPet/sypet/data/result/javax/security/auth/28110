{"id":28110,"className":"javax.security.auth.Subject","methodName":"equals","signature":"\u003cjavax.security.auth.Subject: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares the specified Object with this \u003ccode\u003eSubject\u003c/code\u003e for equality.  Returns true if the given object is also a Subject and the two \u003ccode\u003eSubject\u003c/code\u003e instances are equivalent. More formally, two \u003ccode\u003eSubject\u003c/code\u003e instances are equal if their \u003ccode\u003ePrincipal\u003c/code\u003e and \u003ccode\u003eCredential\u003c/code\u003e Sets are equal. \u003cp\u003e\n * @param o Object to be compared for equality with this\u003ccode\u003eSubject\u003c/code\u003e.\n * @return true if the specified Object is equal to this\u003ccode\u003eSubject\u003c/code\u003e.\n * @exception SecurityException if the caller does not have permissionto access the private credentials for this \u003ccode\u003eSubject\u003c/code\u003e, or if the caller does not have permission to access the private credentials for the provided \u003ccode\u003eSubject\u003c/code\u003e.\n */\n","tf":{"freq":{"caller":2,"except":2,"credenti":3,"subject":8,"true":2,"equal":6,"object":4,"access":2,"provid":1,"specifi":2,"instanc":2,"two":2,"formal":1,"secur":1,"given":1,"equival":1,"permissionto":1,"permiss":1,"compar":2,"also":1,"princip":1},"maxFreq":8,"totalTerms":46},"loc":43}