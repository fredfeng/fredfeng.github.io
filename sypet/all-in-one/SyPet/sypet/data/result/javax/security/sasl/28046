{"id":28046,"className":"javax.security.sasl.SaslClientFactory","methodName":"createSaslClient","signature":"\u003cjavax.security.sasl.SaslClientFactory: javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)\u003e","javadoc":"/** \n * Creates a SaslClient using the parameters supplied.\n * @param mechanisms The non-null list of mechanism names to try. Each is theIANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").\n * @param authorizationId The possibly null protocol-dependentidentification to be used for authorization. If null or empty, the server derives an authorization ID from the client\u0027s authentication credentials. When the SASL authentication completes successfully, the specified entity is granted access.\n * @param protocol The non-null string name of the protocol for whichthe authentication is being performed (e.g., \"ldap\").\n * @param serverName The non-null fully qualified host nameof the server to authenticate to.\n * @param props The possibly null set of properties used to select the SASLmechanism and to configure the authentication exchange of the selected mechanism. See the \u003ctt\u003eSasl\u003c/tt\u003e class for a list of standard properties. Other, possibly mechanism-specific, properties can be included. Properties not relevant to the selected mechanism are ignored, including any map entries with non-String keys.\n * @param cbh The possibly null callback handler to used by the SASLmechanisms to get further information from the application/library to complete the authentication. For example, a SASL mechanism might require the authentication ID, password and realm from the caller. The authentication ID is requested by using a \u003ctt\u003eNameCallback\u003c/tt\u003e. The password is requested by using a \u003ctt\u003ePasswordCallback\u003c/tt\u003e. The realm is requested by using a \u003ctt\u003eRealmChoiceCallback\u003c/tt\u003e if there is a list of realms to choose from, and by using a \u003ctt\u003eRealmCallback\u003c/tt\u003e if the realm must be entered.\n * @return A possibly null \u003ctt\u003eSaslClient\u003c/tt\u003e created using the parameterssupplied. If null, this factory cannot produce a \u003ctt\u003eSaslClient\u003c/tt\u003e using the parameters supplied.\n * @exception SaslException If cannot create a \u003ctt\u003eSaslClient\u003c/tt\u003e becauseof an error.\n */\n","tf":{"freq":{"client":6,"grant":1,"deriv":1,"relev":1,"possibl":5,"perform":1,"password":3,"must":1,"specifi":1,"requir":1,"realm":6,"request":3,"key":1,"except":2,"ignor":1,"host":1,"creat":4,"select":3,"enter":1,"slmechan":2,"dependentidentif":1,"non":4,"whichth":1,"inform":1,"parameterssuppli":1,"configur":1,"entiti":1,"ldap":1,"nameof":1,"properti":4,"caller":1,"becauseof":1,"might":1,"use":10,"applic":1,"authent":8,"author":3,"factori":1,"name":5,"map":1,"choos":1,"regist":1,"sasl":7,"complet":2,"protocol":3,"includ":2,"error":1,"credenti":1,"standard":1,"entri":1,"paramet":2,"prop":1,"choic":1,"librari":1,"produc":1,"suppli":2,"list":3,"fulli":1,"access":1,"exchang":1,"empti":1,"specif":1,"mechan":7,"string":2,"exampl":1,"callback":5,"server":3,"success":1,"cbh":1,"qualifi":1,"handler":1},"maxFreq":10,"totalTerms":151},"loc":0}