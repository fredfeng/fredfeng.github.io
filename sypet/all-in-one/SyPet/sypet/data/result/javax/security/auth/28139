{"id":28139,"className":"javax.security.auth.SubjectDomainCombiner","methodName":"combine","signature":"\u003cjavax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])\u003e","javadoc":"/** \n * Update the relevant ProtectionDomains with the Principals from the \u003ccode\u003eSubject\u003c/code\u003e associated with this \u003ccode\u003eSubjectDomainCombiner\u003c/code\u003e. \u003cp\u003e A new \u003ccode\u003eProtectionDomain\u003c/code\u003e instance is created for each \u003ccode\u003eProtectionDomain\u003c/code\u003e in the \u003ci\u003ecurrentDomains\u003c/i\u003e array.  Each new \u003ccode\u003eProtectionDomain\u003c/code\u003e instance is created using the \u003ccode\u003eCodeSource\u003c/code\u003e, \u003ccode\u003ePermission\u003c/code\u003es and \u003ccode\u003eClassLoader\u003c/code\u003e from the corresponding \u003ccode\u003eProtectionDomain\u003c/code\u003e in \u003ci\u003ecurrentDomains\u003c/i\u003e, as well as with the Principals from the \u003ccode\u003eSubject\u003c/code\u003e associated with this \u003ccode\u003eSubjectDomainCombiner\u003c/code\u003e. \u003cp\u003e All of the newly instantiated ProtectionDomains are combined into a new array.  The ProtectionDomains from the \u003ci\u003eassignedDomains\u003c/i\u003e array are appended to this new array, and the result is returned. \u003cp\u003e Note that optimizations such as the removal of duplicate ProtectionDomains may have occurred. In addition, caching of ProtectionDomains may be permitted. \u003cp\u003e\n * @param currentDomains the ProtectionDomains associated with thecurrent execution Thread, up to the most recent privileged \u003ccode\u003eProtectionDomain\u003c/code\u003e. The ProtectionDomains are are listed in order of execution, with the most recently executing \u003ccode\u003eProtectionDomain\u003c/code\u003e residing at the beginning of the array. This parameter may be \u003ccode\u003enull\u003c/code\u003e if the current execution Thread has no associated ProtectionDomains.\u003cp\u003e\n * @param assignedDomains the ProtectionDomains inherited from theparent Thread, or the ProtectionDomains from the privileged \u003ci\u003econtext\u003c/i\u003e, if a call to AccessController.doPrivileged(..., \u003ci\u003econtext\u003c/i\u003e) had occurred  This parameter may be \u003ccode\u003enull\u003c/code\u003e if there were no ProtectionDomains inherited from the parent Thread, or from the privileged \u003ci\u003econtext\u003c/i\u003e.\n * @return a new array consisting of the updated ProtectionDomains,or \u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"call":1,"result":1,"assign":2,"relev":1,"subject":4,"correspond":1,"instanti":1,"permit":1,"use":1,"well":1,"recent":2,"order":1,"associ":4,"thread":4,"current":4,"domain":25,"combin":4,"permiss":1,"privileg":4,"note":1,"thepar":1,"control":1,"addit":1,"append":1,"may":4,"resid":1,"optim":1,"consist":1,"creat":2,"loader":1,"paramet":2,"remov":1,"parent":1,"list":1,"cach":1,"access":1,"begin":1,"instanc":2,"newli":1,"updat":2,"context":3,"thecurr":1,"duplic":1,"sourc":1,"execut":4,"occur":2,"array":6,"princip":2},"maxFreq":25,"totalTerms":111},"loc":135}