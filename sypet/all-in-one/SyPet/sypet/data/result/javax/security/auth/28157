{"id":28157,"className":"javax.security.auth.Policy","methodName":"getPermissions","signature":"\u003cjavax.security.auth.Policy: java.security.PermissionCollection getPermissions(javax.security.auth.Subject,java.security.CodeSource)\u003e","javadoc":"/** \n * Retrieve the Permissions granted to the Principals associated with the specified \u003ccode\u003eCodeSource\u003c/code\u003e. \u003cp\u003e\n * @param subject the \u003ccode\u003eSubject\u003c/code\u003ewhose associated Principals, in conjunction with the provided \u003ccode\u003eCodeSource\u003c/code\u003e, determines the Permissions returned by this method.  This parameter may be \u003ccode\u003enull\u003c/code\u003e. \u003cp\u003e\n * @param cs the code specified by its \u003ccode\u003eCodeSource\u003c/code\u003ethat determines, in conjunction with the provided \u003ccode\u003eSubject\u003c/code\u003e, the Permissions returned by this method.  This parameter may be \u003ccode\u003enull\u003c/code\u003e.\n * @return the Collection of Permissions granted to all the\u003ccode\u003eSubject\u003c/code\u003e and code specified in the provided \u003ci\u003esubject\u003c/i\u003e and \u003ci\u003ecs\u003c/i\u003e parameters.\n */\n","tf":{"freq":{"may":2,"grant":2,"whose":1,"subject":5,"paramet":3,"provid":3,"specifi":3,"conjunct":2,"associ":2,"retriev":1,"determin":2,"permiss":5,"method":2,"sourc":3,"collect":1,"princip":2},"maxFreq":5,"totalTerms":39},"loc":0}