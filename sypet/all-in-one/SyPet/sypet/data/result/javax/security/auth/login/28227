{"id":28227,"className":"javax.security.auth.login.LoginContext","methodName":"logout","signature":"\u003cjavax.security.auth.login.LoginContext: void logout()\u003e","javadoc":"/** \n * Logout the \u003ccode\u003eSubject\u003c/code\u003e. \u003cp\u003e This method invokes the \u003ccode\u003elogout\u003c/code\u003e method for each \u003ccode\u003eLoginModule\u003c/code\u003e configured for this \u003ccode\u003eLoginContext\u003c/code\u003e. Each \u003ccode\u003eLoginModule\u003c/code\u003e performs its respective logout procedure which may include removing/destroying \u003ccode\u003ePrincipal\u003c/code\u003e and \u003ccode\u003eCredential\u003c/code\u003e information from the \u003ccode\u003eSubject\u003c/code\u003e and state cleanup. \u003cp\u003e Note that this method invokes all LoginModules configured for the application regardless of their respective \u003ccode\u003eConfiguration\u003c/code\u003e flag parameters.  Essentially this means that \u003ccode\u003eRequisite\u003c/code\u003e and \u003ccode\u003eSufficient\u003c/code\u003e semantics are ignored for this method.  This guarantees that proper cleanup and state restoration can take place. \u003cp\u003e\n * @exception LoginException if the logout fails.\n */\n","tf":{"freq":{"cleanup":2,"subject":2,"state":2,"perform":1,"applic":1,"destroy":1,"fail":1,"essenti":1,"semant":1,"mean":1,"login":5,"proper":1,"place":1,"modul":3,"note":1,"regardless":1,"requisit":1,"except":2,"ignor":1,"may":1,"includ":1,"credenti":1,"guarante":1,"invok":2,"paramet":1,"remov":1,"procedur":1,"inform":1,"configur":3,"logout":5,"flag":1,"take":1,"restor":1,"context":1,"suffici":1,"method":4,"respect":2,"princip":1},"maxFreq":5,"totalTerms":59},"loc":14}