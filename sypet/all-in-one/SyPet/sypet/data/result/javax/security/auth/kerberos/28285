{"id":28285,"className":"javax.security.auth.kerberos.KerberosPrincipal","methodName":"KerberosPrincipal","signature":"\u003cjavax.security.auth.kerberos.KerberosPrincipal: void KerberosPrincipal(java.lang.String)\u003e","javadoc":"/** \n * Constructs a KerberosPrincipal from the provided string input. The name type for this  principal defaults to {@link #KRB_NT_PRINCIPAL KRB_NT_PRINCIPAL}This string is assumed to contain a name in the format that is specified in Section 2.1.1. (Kerberos Principal Name Form) of \u003ca href\u003dhttp://www.ietf.org/rfc/rfc1964.txt\u003e RFC 1964 \u003c/a\u003e (for example, \u003ci\u003eduke@FOO.COM\u003c/i\u003e, where \u003ci\u003eduke\u003c/i\u003e represents a principal, and \u003ci\u003eFOO.COM\u003c/i\u003e represents a realm). \u003cp\u003eIf the input name does not contain a realm, the default realm is used. The default realm can be specified either in a Kerberos configuration file or via the java.security.krb5.realm system property. For more information, \u003ca href\u003d\"../../../../../technotes/guides/security/jgss/tutorials/index.html\"\u003e Kerberos Requirements \u003c/a\u003e\n * @param name the principal name\n * @throws IllegalArgumentException if name is improperlyformatted, if name is null, or if name does not contain the realm to use and the default realm is not specified in either a Kerberos configuration file or via the java.security.krb5.realm system property.\n */\n","tf":{"freq":{"krb":2,"via":2,"link":1,"www":1,"use":2,"kerbero":6,"type":1,"org":1,"rfc":2,"txt":1,"technot":1,"specifi":3,"improperlyformat":1,"tutori":1,"requir":1,"realm":8,"file":2,"name":9,"duke":2,"href":2,"argument":1,"except":1,"index":1,"assum":1,"form":1,"repres":2,"format":1,"illeg":1,"provid":1,"section":1,"ietf":1,"jgss":1,"guid":1,"inform":1,"system":2,"configur":2,"either":2,"input":2,"secur":3,"http":1,"contain":3,"string":2,"exampl":1,"html":1,"java":2,"properti":2,"construct":1,"princip":6},"maxFreq":9,"totalTerms":94},"loc":14}