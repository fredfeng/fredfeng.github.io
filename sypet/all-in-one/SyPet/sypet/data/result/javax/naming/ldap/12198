{"id":12198,"className":"javax.naming.ldap.LdapReferralException","methodName":"getReferralContext","signature":"\u003cjavax.naming.ldap.LdapReferralException: javax.naming.Context getReferralContext()\u003e","javadoc":"/** \n * Retrieves the context at which to continue the method using the context\u0027s environment and no controls. The referral context is created using the environment properties of the context that threw the \u003ctt\u003eReferralException\u003c/tt\u003e and no controls. \u003cp\u003e This method is equivalent to \u003cblockquote\u003e\u003cpre\u003e getReferralContext(ctx.getEnvironment(), null); \u003c/pre\u003e\u003c/blockquote\u003e where \u003ctt\u003ectx\u003c/tt\u003e is the context that threw the \u003ctt\u003eReferralException.\u003c/tt\u003e \u003cp\u003e It is overridden in this class for documentation purposes only. See \u003ctt\u003eReferralException\u003c/tt\u003e for how to use this method.\n * @return The non-null context at which to continue the method.\n * @exception NamingException If a naming exception was encountered.Call either \u003ctt\u003eretryReferral()\u003c/tt\u003e or \u003ctt\u003eskipReferral()\u003c/tt\u003e to continue processing referrals.\n */\n","tf":{"freq":{"call":1,"overridden":1,"use":3,"skip":1,"retri":1,"document":1,"equival":1,"blockquot":2,"name":2,"ctx":2,"purpos":1,"control":2,"except":6,"creat":1,"environ":3,"referr":9,"continu":3,"non":1,"process":1,"either":1,"threw":2,"retriev":1,"pre":2,"encount":1,"context":8,"method":4,"properti":1},"maxFreq":9,"totalTerms":62},"loc":0}