{"id":12161,"className":"javax.naming.event.EventDirContext","methodName":"addNamingListener","signature":"\u003cjavax.naming.event.EventDirContext: void addNamingListener(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls,javax.naming.event.NamingListener)\u003e","javadoc":"/** \n * Adds a listener for receiving naming events fired when objects identified by the search filter \u003ctt\u003efilter\u003c/tt\u003e and filter arguments at the object named by the string target name are modified. See the overload that accepts a \u003ctt\u003eName\u003c/tt\u003e for details of how this method behaves.\n * @param target The nonnull string name of the object resolved relative to this context.\n * @param filter The nonnull string filter (see RFC2254).\n * @param filterArgs The possibly null array of arguments for the filter.\n * @param ctls   The possibly null search controls. If null, the defaultsearch controls is used.\n * @param l  The nonnull listener.\n * @exception NamingException If a problem was encountered whileadding the listener.\n * @see EventContext#removeNamingListener\n * @see javax.naming.directory.DirContext#search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)      \n */\n","tf":{"freq":{"detail":1,"directori":2,"accept":1,"behav":1,"use":1,"possibl":2,"identifi":1,"object":4,"add":2,"lang":3,"arg":1,"nonnul":3,"defaultsearch":1,"dir":1,"search":4,"javax":2,"event":2,"name":10,"relat":1,"listen":5,"whilead":1,"argument":2,"control":3,"except":2,"ctls":1,"remov":1,"resolv":1,"problem":1,"receiv":1,"overload":1,"fire":1,"encount":1,"string":5,"target":2,"modifi":1,"context":3,"java":3,"method":1,"filter":7,"array":1},"maxFreq":10,"totalTerms":87},"loc":0}