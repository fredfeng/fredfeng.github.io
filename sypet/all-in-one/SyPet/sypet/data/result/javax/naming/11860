{"id":11860,"className":"javax.naming.NamingEnumeration","methodName":"next","signature":"\u003cjavax.naming.NamingEnumeration: T next()\u003e","javadoc":"/** \n * Retrieves the next element in the enumeration. This method allows naming exceptions encountered while retrieving the next element to be caught and handled by the application. \u003cp\u003e Note that \u003ctt\u003enext()\u003c/tt\u003e can also throw the runtime exception NoSuchElementException to indicate that the caller is attempting to enumerate beyond the end of the enumeration. This is different from a NamingException, which indicates that there was a problem in obtaining the next element, for example, due to a referral or server unavailability, etc.\n * @return         The possibly null element in the enumeration.null is only valid for enumerations that can return null (e.g. Attribute.getAll() returns an enumeration of attribute values, and an attribute value can be null).\n * @exception NamingException If a naming exception is encountered while attemptingto retrieve the next element. See NamingException and its subclasses for the possible naming exceptions.\n * @exception java.util.NoSuchElementException If attempting to get the next element when none is available.\n * @see java.util.Enumeration#nextElement\n */\n","tf":{"freq":{"caller":1,"attempt":2,"valid":1,"allow":1,"etc":1,"next":8,"possibl":2,"applic":1,"beyond":1,"attribut":3,"indic":2,"unavail":1,"name":6,"none":1,"valu":2,"caught":1,"note":1,"end":1,"element":9,"except":11,"runtim":1,"avail":1,"referr":1,"problem":1,"handl":1,"differ":1,"obtain":1,"encount":2,"retriev":3,"subclass":1,"exampl":1,"due":1,"java":2,"server":1,"method":1,"attemptingto":1,"also":1,"util":2},"maxFreq":11,"totalTerms":79},"loc":0}