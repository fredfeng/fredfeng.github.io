{"id":11891,"className":"javax.naming.spi.DirectoryManager","methodName":"getObjectInstance","signature":"\u003cjavax.naming.spi.DirectoryManager: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable,javax.naming.directory.Attributes)\u003e","javadoc":"/** \n * Creates an instance of an object for the specified object, attributes, and environment. \u003cp\u003e This method is the same as \u003ctt\u003eNamingManager.getObjectInstance\u003c/tt\u003e except for the following differences: \u003cul\u003e \u003cli\u003e It accepts an \u003ctt\u003eAttributes\u003c/tt\u003e parameter that contains attributes associated with the object. The \u003ctt\u003eDirObjectFactory\u003c/tt\u003e might use these attributes to save having to look them up from the directory. \u003cli\u003e The object factories tried must implement either \u003ctt\u003eObjectFactory\u003c/tt\u003e or \u003ctt\u003eDirObjectFactory\u003c/tt\u003e. If it implements \u003ctt\u003eDirObjectFactory\u003c/tt\u003e, \u003ctt\u003eDirObjectFactory.getObjectInstance()\u003c/tt\u003e is used, otherwise, \u003ctt\u003eObjectFactory.getObjectInstance()\u003c/tt\u003e is used. \u003c/ul\u003e Service providers that implement the \u003ctt\u003eDirContext\u003c/tt\u003e interface should use this method, not \u003ctt\u003eNamingManager.getObjectInstance()\u003c/tt\u003e. \u003cp\u003e\n * @param refInfo The possibly null object for which to create an object.\n * @param name The name of this object relative to \u003ccode\u003enameCtx\u003c/code\u003e.Specifying a name is optional; if it is omitted, \u003ccode\u003ename\u003c/code\u003e should be null.\n * @param nameCtx The context relative to which the \u003ccode\u003ename\u003c/code\u003eparameter is specified.  If null, \u003ccode\u003ename\u003c/code\u003e is relative to the default initial context.\n * @param environment The possibly null environment tobe used in the creation of the object factory and the object.\n * @param attrs The possibly null attributes associated with refInfo.This might not be the complete set of attributes for refInfo; you might be able to read more attributes from the directory.\n * @return An object created using \u003ccode\u003erefInfo\u003c/code\u003e and \u003ctt\u003eattrs\u003c/tt\u003e; or\u003ccode\u003erefInfo\u003c/code\u003e if an object cannot be created by a factory.\n * @exception NamingException If a naming exception was encounteredwhile attempting to get a URL context, or if one of the factories accessed throws a NamingException.\n * @exception Exception If one of the factories accessed throws anexception, or if an error was encountered while loading and instantiating the factory and object classes. A factory should only throw an exception if it does not want other factories to be used in an attempt to create an object. See \u003ctt\u003eDirObjectFactory.getObjectInstance()\u003c/tt\u003e.\n * @see NamingManager#getURLContext\n * @see DirObjectFactory\n * @see DirObjectFactory#getObjectInstance\n * @since 1.3\n */\n","tf":{"freq":{"save":1,"instanti":1,"accept":1,"servic":1,"possibl":3,"abl":1,"must":1,"specifi":3,"info":5,"relat":3,"ctx":2,"tobe":1,"option":1,"follow":1,"except":8,"creat":5,"environ":3,"attr":2,"lcontext":1,"provid":1,"instanc":8,"anexcept":1,"contain":1,"load":1,"encounteredwhil":1,"otherwis":1,"attempt":2,"might":3,"creation":1,"directori":2,"one":2,"use":7,"object":29,"attribut":7,"dir":8,"associ":2,"factori":17,"name":14,"read":1,"initi":1,"want":1,"complet":1,"look":1,"error":1,"manag":3,"paramet":2,"access":2,"differ":1,"ref":5,"either":1,"encount":1,"omit":1,"context":4,"method":2},"maxFreq":29,"totalTerms":180},"loc":62}