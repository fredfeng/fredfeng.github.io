{"id":12170,"className":"javax.naming.event.NamingEvent","methodName":"getNewBinding","signature":"\u003cjavax.naming.event.NamingEvent: javax.naming.Binding getNewBinding()\u003e","javadoc":"/** \n * Retrieves the binding of the object after the change. \u003cp\u003e The binding must be nonnull if the object existed after the change relative to the source context (\u003ctt\u003egetEventContext()\u003c/tt\u003e). That is, it must be nonnull for \u003ctt\u003eOBJECT_ADDED\u003c/tt\u003e and \u003ctt\u003eOBJECT_CHANGED\u003c/tt\u003e. For \u003ctt\u003eOBJECT_RENAMED\u003c/tt\u003e, it is null if the object after the rename is outside the scope for which the listener registered interest; it is nonnull if the object is inside the scope after the rename. \u003cp\u003e The name in the binding is to be resolved relative to the event source \u003ctt\u003egetEventContext()\u003c/tt\u003e. The object returned by \u003ctt\u003eBinding.getObject()\u003c/tt\u003e may be null if such information is unavailable.\n * @return The possibly null binding of the object after the change.\n */\n","tf":{"freq":{"may":1,"scope":2,"possibl":1,"resolv":1,"renam":2,"object":7,"must":2,"inform":1,"nonnul":3,"outsid":1,"interest":1,"retriev":1,"event":3,"unavail":1,"name":1,"relat":2,"context":3,"regist":1,"insid":1,"sourc":2,"chang":3,"listen":1,"bind":6,"exist":1},"maxFreq":7,"totalTerms":48},"loc":3}