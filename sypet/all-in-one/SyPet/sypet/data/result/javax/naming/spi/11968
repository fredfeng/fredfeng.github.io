{"id":11968,"className":"javax.naming.spi.StateFactory","methodName":"getStateToBind","signature":"\u003cjavax.naming.spi.StateFactory: java.lang.Object getStateToBind(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)\u003e","javadoc":"/** \n * Retrieves the state of an object for binding. \u003cp\u003e \u003ctt\u003eNamingManager.getStateToBind()\u003c/tt\u003e successively loads in state factories and invokes this method on them until one produces a non-null answer. \u003ctt\u003eDirectoryManager.getStateToBind()\u003c/tt\u003e successively loads in state factories.  If a factory implements \u003ctt\u003eDirStateFactory\u003c/tt\u003e, then \u003ctt\u003eDirectoryManager\u003c/tt\u003e invokes \u003ctt\u003eDirStateFactory.getStateToBind()\u003c/tt\u003e; otherwise it invokes \u003ctt\u003eStateFactory.getStateToBind()\u003c/tt\u003e. \u003cp\u003e When an exception is thrown by a factory, the exception is passed on to the caller of \u003ctt\u003eNamingManager.getStateToBind()\u003c/tt\u003e and \u003ctt\u003eDirectoryManager.getStateToBind()\u003c/tt\u003e. The search for other factories that may produce a non-null answer is halted. A factory should only throw an exception if it is sure that it is the only intended factory and that no other factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null. \u003cp\u003e The \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003enameCtx\u003c/code\u003e parameters may optionally be used to specify the name of the object being created. See the description of \"Name and Context Parameters\" in {@link ObjectFactory#getObjectInstance ObjectFactory.getObjectInstance()}for details. If a factory uses \u003ccode\u003enameCtx\u003c/code\u003e it should synchronize its use against concurrent access, since context implementations are not guaranteed to be thread-safe. \u003cp\u003e The \u003ctt\u003ename\u003c/tt\u003e and \u003ctt\u003eenvironment\u003c/tt\u003e parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies.\n * @param obj A non-null object whose state is to be retrieved.\n * @param name The name of this object relative to \u003ccode\u003enameCtx\u003c/code\u003e,or null if no name is specified.\n * @param nameCtx The context relative to which the \u003ccode\u003ename\u003c/code\u003eparameter is specified, or null if \u003ccode\u003ename\u003c/code\u003e is relative to the default initial context.\n * @param environment The possibly null environment tobe used in the creation of the object\u0027s state.\n * @return The object\u0027s state for binding;null if the factory is not returning any changes.\n * @exception NamingException if this factory encountered an exceptionwhile attempting to get the object\u0027s state, and no other factories are to be tried.\n * @see NamingManager#getStateToBind\n * @see DirectoryManager#getStateToBind\n */\n","tf":{"freq":{"detail":1,"possibl":1,"copi":1,"specifi":3,"although":1,"refer":2,"search":1,"thread":1,"relat":3,"ctx":4,"tobe":1,"option":1,"sure":1,"argument":1,"clone":1,"thrown":1,"except":5,"whose":1,"creat":2,"invok":3,"answer":2,"descript":1,"environ":3,"non":3,"instanc":2,"will":1,"load":2,"attempt":1,"caller":2,"otherwis":1,"creation":1,"directori":4,"concurr":1,"one":1,"link":1,"state":19,"use":5,"object":13,"dir":2,"factori":18,"name":17,"exceptionwhil":1,"initi":1,"safe":1,"may":3,"manag":7,"guarante":1,"paramet":4,"produc":2,"suppli":1,"access":1,"pass":1,"encount":1,"retriev":2,"context":4,"modifi":1,"obj":1,"method":1,"chang":1,"halt":1,"intend":1,"bind":11,"success":2,"keep":2},"maxFreq":19,"totalTerms":186},"loc":0}