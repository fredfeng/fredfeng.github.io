{"id":11619,"className":"javax.naming.Name","methodName":"compareTo","signature":"\u003cjavax.naming.Name: int compareTo(java.lang.Object)\u003e","javadoc":"/** \n * Compares this name with another name for order. Returns a negative integer, zero, or a positive integer as this name is less than, equal to, or greater than the given name. \u003cp\u003e As with \u003ctt\u003eObject.equals()\u003c/tt\u003e, the notion of ordering for names depends on the class that implements this interface. For example, the ordering may be based on lexicographical ordering of the name components. Specific attributes of the name, such as how it treats case, may affect the ordering.  In general, two names of different classes may not be compared.\n * @param obj the non-null object to compare against.\n * @return  a negative integer, zero, or a positive integer as this nameis less than, equal to, or greater than the given name\n * @throws ClassCastException if obj is not a \u003ctt\u003eName\u003c/tt\u003e of atype that may be compared with this name\n * @see Comparable#compareTo(Object)\n */\n","tf":{"freq":{"greater":2,"namei":1,"anoth":1,"object":3,"zero":2,"affect":1,"attribut":1,"given":2,"order":5,"name":11,"less":2,"atyp":1,"except":1,"may":4,"notion":1,"depend":1,"equal":3,"lexicograph":1,"general":1,"non":1,"differ":1,"two":1,"specif":1,"cast":1,"compon":1,"exampl":1,"base":1,"obj":2,"negat":2,"posit":2,"integ":4,"compar":7,"treat":1},"maxFreq":11,"totalTerms":70},"loc":0}