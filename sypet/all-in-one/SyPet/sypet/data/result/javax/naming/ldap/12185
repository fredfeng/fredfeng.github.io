{"id":12185,"className":"javax.naming.ldap.InitialLdapContext","methodName":"InitialLdapContext","signature":"\u003cjavax.naming.ldap.InitialLdapContext: void InitialLdapContext(java.util.Hashtable,javax.naming.ldap.Control[])\u003e","javadoc":"/** \n * Constructs an initial context using environment properties and connection request controls. See \u003ctt\u003ejavax.naming.InitialContext\u003c/tt\u003e for a discussion of environment properties. \u003cp\u003e This constructor will not modify its parameters or save references to them, but may save a clone or copy. Caller should not modify mutable keys and values in \u003ctt\u003eenvironment\u003c/tt\u003e after it has been passed to the constructor. \u003cp\u003e \u003ctt\u003econnCtls\u003c/tt\u003e is used as the underlying context instance\u0027s connection request controls.  See the class description for details.\n * @param environment environment used to create the initial DirContext. Null indicates an empty environment.\n * @param connCtls connection request controls for the initial context. If null, no connection request controls are used.\n * @throws NamingException if a naming exception is encountered\n * @see #reconnect\n * @see LdapContext#reconnect\n */\n","tf":{"freq":{"caller":1,"detail":1,"conn":2,"connect":4,"save":2,"mutabl":1,"use":4,"copi":1,"indic":1,"dir":1,"refer":1,"javax":1,"name":3,"request":4,"valu":1,"initi":5,"key":1,"constructor":2,"control":4,"clone":1,"except":2,"may":1,"creat":1,"ctls":2,"descript":1,"environ":6,"paramet":1,"empti":1,"instanc":1,"pass":1,"ldap":2,"reconnect":2,"encount":1,"discuss":1,"context":7,"will":1,"modifi":2,"properti":2,"construct":1},"maxFreq":7,"totalTerms":77},"loc":21}