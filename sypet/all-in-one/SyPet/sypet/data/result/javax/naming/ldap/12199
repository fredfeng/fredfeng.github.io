{"id":12199,"className":"javax.naming.ldap.LdapReferralException","methodName":"getReferralContext","signature":"\u003cjavax.naming.ldap.LdapReferralException: javax.naming.Context getReferralContext(java.util.Hashtable)\u003e","javadoc":"/** \n * Retrieves the context at which to continue the method using environment properties and no controls. The referral context is created using \u003ctt\u003eenv\u003c/tt\u003e as its environment properties and no controls. \u003cp\u003e This method is equivalent to \u003cblockquote\u003e\u003cpre\u003e getReferralContext(env, null); \u003c/pre\u003e\u003c/blockquote\u003e \u003cp\u003e It is overridden in this class for documentation purposes only. See \u003ctt\u003eReferralException\u003c/tt\u003e for how to use this method.\n * @param env The possibly null environment to use when retrieving thereferral context. If null, no environment properties will be used.\n * @return The non-null context at which to continue the method.\n * @exception NamingException If a naming exception was encountered.Call either \u003ctt\u003eretryReferral()\u003c/tt\u003e or \u003ctt\u003eskipReferral()\u003c/tt\u003e to continue processing referrals.\n */\n","tf":{"freq":{"call":1,"overridden":1,"use":5,"possibl":1,"skip":1,"retri":1,"document":1,"equival":1,"blockquot":2,"name":2,"purpos":1,"control":2,"except":4,"creat":1,"environ":4,"referr":7,"env":3,"thereferr":1,"continu":3,"non":1,"process":1,"either":1,"retriev":2,"pre":2,"encount":1,"context":6,"will":1,"method":4,"properti":3},"maxFreq":7,"totalTerms":64},"loc":0}