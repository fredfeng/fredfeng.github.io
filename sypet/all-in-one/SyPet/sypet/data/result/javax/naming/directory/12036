{"id":12036,"className":"javax.naming.directory.Attribute","methodName":"set","signature":"\u003cjavax.naming.directory.Attribute: java.lang.Object set(int,java.lang.Object)\u003e","javadoc":"/** \n * Sets an attribute value in the ordered list of attribute values. This method sets the value at the \u003ctt\u003eix\u003c/tt\u003e index of the list of attribute values to be \u003ctt\u003eattrVal\u003c/tt\u003e. The old value is removed. If the attribute values are unordered, this method sets the value that happens to be at that index to \u003ctt\u003eattrVal\u003c/tt\u003e, unless \u003ctt\u003eattrVal\u003c/tt\u003e is already one of the values. In that case, \u003ctt\u003eIllegalStateException\u003c/tt\u003e is thrown.\n * @param ix The index of the value in the ordered list of attribute values.0 \u003c\u003d \u003ctt\u003eix\u003c/tt\u003e \u003c \u003ctt\u003esize()\u003c/tt\u003e.\n * @param attrVal The possibly null attribute value to use.If null, \u0027null\u0027 replaces the old value.\n * @return The possibly null attribute value at index ix that was replaced.Null if the attribute value was null.\n * @exception IndexOutOfBoundsException If \u003ctt\u003eix\u003c/tt\u003e is outside the specified range.\n * @exception IllegalStateException If \u003ctt\u003eattrVal\u003c/tt\u003e already exists and theattribute values are unordered.\n */\n","tf":{"freq":{"val":5,"old":2,"one":1,"state":2,"possibl":2,"use":1,"specifi":1,"attribut":8,"order":2,"unless":1,"rang":1,"valu":15,"happen":1,"exist":1,"index":5,"except":5,"thrown":1,"remov":1,"attr":5,"list":3,"illeg":2,"size":1,"unord":2,"outsid":1,"replac":2,"method":2,"alreadi":2,"theattribut":1,"bound":1},"maxFreq":15,"totalTerms":77},"loc":0}