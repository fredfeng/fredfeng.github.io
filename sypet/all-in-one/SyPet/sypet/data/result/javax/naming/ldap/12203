{"id":12203,"className":"javax.naming.ldap.LdapContext","methodName":"reconnect","signature":"\u003cjavax.naming.ldap.LdapContext: void reconnect(javax.naming.ldap.Control[])\u003e","javadoc":"/** \n * Reconnects to the LDAP server using the supplied controls and this context\u0027s environment. \u003cp\u003e This method is a way to explicitly initiate an LDAP \"bind\" operation. For example, you can use this method to set request controls for the LDAP \"bind\" operation, or to explicitly connect to the server to get response controls returned by the LDAP \"bind\" operation. \u003cp\u003e This method sets this context\u0027s \u003ctt\u003econnCtls\u003c/tt\u003e to be its new connection request controls. This context\u0027s context request controls are not affected. After this method has been invoked, any subsequent implicit reconnections will be done using \u003ctt\u003econnCtls\u003c/tt\u003e. \u003ctt\u003econnCtls\u003c/tt\u003e are also used as connection request controls for new context instances derived from this context. These connection request controls are not affected by \u003ctt\u003esetRequestControls()\u003c/tt\u003e. \u003cp\u003e Service provider implementors should read the \"Service Provider\" section in the class description for implementation details.\n * @param connCtls The possibly null controls to use. If null, nocontrols are used.\n * @exception NamingException If an error occurred while reconnecting.\n * @see #getConnectControls\n * @see #newInstance\n */\n","tf":{"freq":{"detail":1,"conn":4,"connect":5,"deriv":1,"servic":2,"implicit":1,"nocontrol":1,"possibl":1,"way":1,"use":6,"affect":2,"oper":3,"name":1,"request":6,"read":1,"initi":1,"subsequ":1,"implementor":1,"control":10,"except":2,"error":1,"respons":1,"ctls":4,"invok":1,"done":1,"descript":1,"environ":1,"suppli":1,"provid":2,"section":1,"instanc":2,"explicit":2,"reconnect":4,"context":6,"exampl":1,"will":1,"method":4,"server":2,"also":1,"bind":3,"occur":1},"maxFreq":10,"totalTerms":92},"loc":0}