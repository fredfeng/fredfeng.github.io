{"id":12168,"className":"javax.naming.event.NamingEvent","methodName":"getEventContext","signature":"\u003cjavax.naming.event.NamingEvent: javax.naming.event.EventContext getEventContext()\u003e","javadoc":"/** \n * Retrieves the event source that fired this event. This returns the same object as \u003ctt\u003eEventObject.getSource()\u003c/tt\u003e. \u003cp\u003e If the result of this method is used to access the event source, for example, to look up the object or get its attributes, then it needs to be locked  because implementations of \u003ctt\u003eContext\u003c/tt\u003e are not guaranteed to be thread-safe (and \u003ctt\u003eEventContext\u003c/tt\u003e is a subinterface of \u003ctt\u003eContext\u003c/tt\u003e). See the \u003ca href\u003dpackage-summary.html#THREADING\u003epackage description\u003c/a\u003e for more information on threading issues.\n * @return The non-null context that fired this event.\n */\n","tf":{"freq":{"need":1,"look":1,"safe":1,"result":1,"guarante":1,"descript":1,"lock":1,"use":1,"subinterfac":1,"object":3,"access":1,"issu":1,"fire":2,"non":1,"inform":1,"summari":1,"attribut":1,"event":7,"retriev":1,"thread":2,"context":5,"exampl":1,"html":1,"sourc":3,"method":1,"href":1},"maxFreq":7,"totalTerms":42},"loc":3}