{"id":11950,"className":"javax.naming.spi.DirObjectFactory","methodName":"getObjectInstance","signature":"\u003cjavax.naming.spi.DirObjectFactory: java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable,javax.naming.directory.Attributes)\u003e","javadoc":"/** \n * Creates an object using the location or reference information, and attributes specified. \u003cp\u003e Special requirements of this object are supplied using \u003ccode\u003eenvironment\u003c/code\u003e. An example of such an environment property is user identity information. \u003cp\u003e \u003ctt\u003eDirectoryManager.getObjectInstance()\u003c/tt\u003e successively loads in object factories. If it encounters a \u003ctt\u003eDirObjectFactory\u003c/tt\u003e, it will invoke \u003ctt\u003eDirObjectFactory.getObjectInstance()\u003c/tt\u003e; otherwise, it invokes \u003ctt\u003eObjectFactory.getObjectInstance()\u003c/tt\u003e. It does this until a factory produces a non-null answer. \u003cp\u003e When an exception is thrown by an object factory, the exception is passed on to the caller of \u003ctt\u003eDirectoryManager.getObjectInstance()\u003c/tt\u003e. The search for other factories that may produce a non-null answer is halted. An object factory should only throw an exception if it is sure that it is the only intended factory and that no other object factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null. \u003cp\u003eSince \u003ctt\u003eDirObjectFactory\u003c/tt\u003e extends \u003ctt\u003eObjectFactory\u003c/tt\u003e, it effectively has two \u003ctt\u003egetObjectInstance()\u003c/tt\u003e methods, where one differs from the other by the attributes argument. Given a factory that implements \u003ctt\u003eDirObjectFactory\u003c/tt\u003e, \u003ctt\u003eDirectoryManager.getObjectInstance()\u003c/tt\u003e will only use the method that accepts the attributes argument, while \u003ctt\u003eNamingManager.getObjectInstance()\u003c/tt\u003e will only use the one that does not accept the attributes argument. \u003cp\u003e See \u003ctt\u003eObjectFactory\u003c/tt\u003e for a description URL context factories and other properties of object factories that apply equally to \u003ctt\u003eDirObjectFactory\u003c/tt\u003e. \u003cp\u003e The \u003ctt\u003ename\u003c/tt\u003e, \u003ctt\u003eattrs\u003c/tt\u003e, and \u003ctt\u003eenvironment\u003c/tt\u003e parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies.\n * @param obj The possibly null object containing location or referenceinformation that can be used in creating an object.\n * @param name The name of this object relative to \u003ccode\u003enameCtx\u003c/code\u003e,or null if no name is specified.\n * @param nameCtx The context relative to which the \u003ccode\u003ename\u003c/code\u003eparameter is specified, or null if \u003ccode\u003ename\u003c/code\u003e is relative to the default initial context.\n * @param environment The possibly null environment that is used increating the object.\n * @param attrs The possibly null attributes containing some of \u003ctt\u003eobj\u003c/tt\u003e\u0027sattributes. \u003ctt\u003eattrs\u003c/tt\u003e might not necessarily have all of \u003ctt\u003eobj\u003c/tt\u003e\u0027s attributes. If the object factory requires more attributes, it needs to get it, either using \u003ctt\u003eobj\u003c/tt\u003e, or \u003ctt\u003ename\u003c/tt\u003e and \u003ctt\u003enameCtx\u003c/tt\u003e. The factory must not modify attrs.\n * @return The object created; null if an object cannot be created.\n * @exception Exception If this object factory encountered an exceptionwhile attempting to create an object, and no other object factories are to be tried.\n * @see DirectoryManager#getObjectInstance\n * @see NamingManager#getURLContext\n */\n","tf":{"freq":{"need":1,"accept":2,"possibl":3,"must":1,"copi":1,"specifi":3,"although":1,"requir":2,"given":1,"sattribut":1,"refer":3,"search":1,"ctx":3,"relat":3,"sure":1,"argument":4,"clone":1,"except":5,"thrown":1,"creat":6,"invok":2,"descript":1,"environ":5,"answer":2,"attr":4,"lcontext":1,"instanc":9,"non":2,"inform":2,"appli":1,"contain":2,"will":4,"load":1,"properti":2,"referenceinform":1,"attempt":1,"otherwis":1,"caller":2,"might":1,"directori":4,"increat":1,"one":2,"use":8,"object":36,"attribut":7,"ident":1,"dir":5,"factori":23,"name":12,"exceptionwhil":1,"initi":1,"locat":2,"may":2,"manag":6,"paramet":2,"equal":1,"suppli":2,"produc":2,"pass":1,"two":1,"differ":1,"either":1,"effect":1,"encount":2,"modifi":2,"context":3,"exampl":1,"obj":4,"special":1,"method":2,"necessarili":1,"halt":1,"intend":1,"success":1,"user":1,"keep":2},"maxFreq":36,"totalTerms":233},"loc":0}