{"id":12106,"className":"javax.naming.directory.DirContext","methodName":"rebind","signature":"\u003cjavax.naming.directory.DirContext: void rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)\u003e","javadoc":"/** \n * Binds a name to an object, along with associated attributes, overwriting any existing binding. If \u003ctt\u003eattrs\u003c/tt\u003e is null and \u003ctt\u003eobj\u003c/tt\u003e is a \u003ctt\u003eDirContext\u003c/tt\u003e, the attributes from \u003ctt\u003eobj\u003c/tt\u003e are used. If \u003ctt\u003eattrs\u003c/tt\u003e is null and \u003ctt\u003eobj\u003c/tt\u003e is not a \u003ctt\u003eDirContext\u003c/tt\u003e, any existing attributes associated with the object already bound in the directory remain unchanged. If \u003ctt\u003eattrs\u003c/tt\u003e is non-null, any existing attributes associated with the object already bound in the directory are removed and \u003ctt\u003eattrs\u003c/tt\u003e is associated with the named object.  If \u003ctt\u003eobj\u003c/tt\u003e is a \u003ctt\u003eDirContext\u003c/tt\u003e and \u003ctt\u003eattrs\u003c/tt\u003e is non-null, the attributes of \u003ctt\u003eobj\u003c/tt\u003e are ignored.\n * @param name the name to bind; may not be empty\n * @param obj the object to bind; possibly null\n * @param attrs the attributes to associate with the binding\n * @throws InvalidAttributesException if some \"mandatory\" attributesof the binding are not supplied\n * @throws NamingException if a naming exception is encountered\n * @see Context#bind(Name,Object)\n * @see #bind(Name,Object,Attributes)\n */\n","tf":{"freq":{"overwrit":1,"directori":2,"possibl":1,"use":1,"object":7,"attribut":8,"invalid":1,"dir":3,"associ":5,"name":8,"along":1,"exist":3,"attributesof":1,"except":3,"ignor":1,"may":1,"unchang":1,"remov":1,"suppli":1,"attr":6,"non":2,"empti":1,"remain":1,"encount":1,"mandatori":1,"rebind":1,"context":4,"obj":6,"alreadi":2,"bind":8,"bound":2},"maxFreq":8,"totalTerms":85},"loc":0}