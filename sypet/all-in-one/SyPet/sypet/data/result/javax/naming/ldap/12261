{"id":12261,"className":"javax.naming.ldap.LdapName","methodName":"compareTo","signature":"\u003cjavax.naming.ldap.LdapName: int compareTo(java.lang.Object)\u003e","javadoc":"/** \n * Compares this LdapName with the specified Object for order. Returns a negative integer, zero, or a positive integer as this Name is less than, equal to, or greater than the given Object. \u003cp\u003e If obj is null or not an instance of LdapName, ClassCastException is thrown. \u003cp\u003e Ordering of LDAP names follows the lexicographical rules for string comparison, with the extension that this applies to all the RDNs in the LDAP name. All the RDNs are lined up in their specified order and compared lexicographically. See  {@link Rdn#compareTo(Object obj) Rdn.compareTo(Object obj)}for RDN comparison rules. \u003cp\u003e If this LDAP name is lexicographically lesser than obj, a negative number is returned. If this LDAP name is lexicographically greater than obj, a positive number is returned.\n * @param obj The non-null LdapName instance to compare against.\n * @return  A negative integer, zero, or a positive integer as this Nameis less than, equal to, or greater than the given obj.\n * @exception ClassCastException if obj is null or not a LdapName.\n */\n","tf":{"freq":{"greater":3,"namei":1,"link":1,"line":1,"object":4,"zero":2,"lesser":1,"specifi":2,"rdn":2,"order":3,"given":2,"extens":1,"name":9,"rule":2,"less":2,"follow":1,"except":3,"thrown":1,"number":2,"equal":2,"lexicograph":4,"comparison":2,"non":1,"instanc":2,"appli":1,"ldap":4,"cast":2,"string":1,"negat":3,"obj":8,"posit":3,"integ":4,"compar":6},"maxFreq":9,"totalTerms":86},"loc":31}