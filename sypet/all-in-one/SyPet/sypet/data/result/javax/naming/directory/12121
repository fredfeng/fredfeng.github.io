{"id":12121,"className":"javax.naming.directory.DirContext","methodName":"search","signature":"\u003cjavax.naming.directory.DirContext: javax.naming.NamingEnumeration\u003cjavax.naming.directory.SearchResult\u003e search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)\u003e","javadoc":"/** \n * Searches in the named context or object for entries that satisfy the given search filter.  Performs the search as specified by the search controls. See  {@link #search(Name,String,Object[],SearchControls)} for details.\n * @param name the name of the context or object to search\n * @param filterExpr the filter expression to use for the search. The expression may contain variables of the form \"\u003ccode\u003e{i}\u003c/code\u003e\" where \u003ccode\u003ei\u003c/code\u003e is a nonnegative integer.  May not be null.\n * @param filterArgs the array of arguments to substitute for the variables in \u003ccode\u003efilterExpr\u003c/code\u003e.  The value of \u003ccode\u003efilterArgs[i]\u003c/code\u003e will replace each occurrence of \"\u003ccode\u003e{i}\u003c/code\u003e\". If null, equivalent to an empty array.\n * @param cons the search controls that control the search.  If null, the default search controls are used (equivalent to \u003ctt\u003e(new SearchControls())\u003c/tt\u003e).\n * @return  an enumeration of \u003ctt\u003eSearchResult\u003c/tt\u003es of the objectsthat satisfy the filter; never null\n * @throws ArrayIndexOutOfBoundsException if \u003ctt\u003efilterExpr\u003c/tt\u003e contains\u003ccode\u003e{i}\u003c/code\u003e expressions where \u003ccode\u003ei\u003c/code\u003e is outside the bounds of the array \u003ccode\u003efilterArgs\u003c/code\u003e\n * @throws InvalidSearchControlsException if \u003ctt\u003econs\u003c/tt\u003e containsinvalid settings\n * @throws InvalidSearchFilterException if \u003ctt\u003efilterExpr\u003c/tt\u003e with\u003ctt\u003efilterArgs\u003c/tt\u003e represents an invalid search filter\n * @throws NamingException if a naming exception is encountered\n */\n","tf":{"freq":{"con":2,"result":1,"detail":1,"link":1,"variabl":2,"use":2,"perform":1,"expr":4,"object":3,"express":3,"substitut":1,"occurr":1,"specifi":1,"arg":4,"invalid":3,"given":1,"equival":2,"search":17,"name":6,"valu":1,"containsinvalid":1,"argument":1,"control":7,"except":5,"index":1,"may":2,"form":1,"repres":1,"entri":1,"empti":1,"never":1,"outsid":1,"encount":1,"nonneg":1,"replac":1,"satisfi":2,"string":1,"contain":2,"will":1,"context":2,"objectsthat":1,"integ":1,"bound":2,"filter":13,"array":4},"maxFreq":17,"totalTerms":112},"loc":0}