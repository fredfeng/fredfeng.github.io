{"id":11601,"className":"javax.naming.CompoundName","methodName":"equals","signature":"\u003cjavax.naming.CompoundName: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Determines whether obj is syntactically equal to this compound name. If obj is null or not a CompoundName, false is returned. Two compound names are equal if each component in one is \"equal\" to the corresponding component in the other. \u003cp\u003e Equality is also defined in terms of the syntax of this compound name. The default implementation of CompoundName uses the syntax properties jndi.syntax.ignorecase and jndi.syntax.trimblanks when comparing two components for equality.  If case is ignored, two strings with the same sequence of characters but with different cases are considered equal. If blanks are being trimmed, leading and trailing blanks are ignored for the purpose of the comparison. \u003cp\u003e Both compound names must have the same number of components. \u003cp\u003e Implementation note: Currently the syntax properties of the two compound names are not compared for equality. They might be in the future.\n * @param obj     The possibly null object to compare against.\n * @return true if obj is equal to this compound name, false otherwise.\n * @see #compareTo(java.lang.Object obj)\n */\n","tf":{"freq":{"otherwis":1,"fals":2,"might":1,"defin":1,"compound":8,"ignorecas":1,"correspond":1,"one":1,"possibl":1,"lead":1,"use":1,"object":2,"lang":1,"must":1,"consid":1,"whether":1,"syntact":1,"sequenc":1,"trail":1,"name":8,"current":1,"purpos":1,"trimblank":1,"trim":1,"jndi":2,"note":1,"ignor":2,"futur":1,"blank":2,"charact":1,"true":1,"number":1,"equal":9,"comparison":1,"differ":1,"two":4,"syntax":5,"compon":4,"term":1,"determin":1,"string":1,"java":1,"obj":5,"properti":2,"also":1,"compar":4},"maxFreq":9,"totalTerms":91},"loc":6}