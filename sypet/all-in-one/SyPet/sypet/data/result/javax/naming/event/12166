{"id":12166,"className":"javax.naming.event.NamingEvent","methodName":"NamingEvent","signature":"\u003cjavax.naming.event.NamingEvent: void NamingEvent(javax.naming.event.EventContext,int,javax.naming.Binding,javax.naming.Binding,java.lang.Object)\u003e","javadoc":"/** \n * Constructs an instance of \u003ctt\u003eNamingEvent\u003c/tt\u003e. \u003cp\u003e The names in \u003ctt\u003enewBd\u003c/tt\u003e and \u003ctt\u003eoldBd\u003c/tt\u003e are to be resolved relative to the event source \u003ctt\u003esource\u003c/tt\u003e. For an \u003ctt\u003eOBJECT_ADDED\u003c/tt\u003e event type, \u003ctt\u003enewBd\u003c/tt\u003e must not be null. For an \u003ctt\u003eOBJECT_REMOVED\u003c/tt\u003e event type, \u003ctt\u003eoldBd\u003c/tt\u003e must not be null. For an \u003ctt\u003eOBJECT_CHANGED\u003c/tt\u003e event type,  \u003ctt\u003enewBd\u003c/tt\u003e and \u003ctt\u003eoldBd\u003c/tt\u003e must not be null. For  an \u003ctt\u003eOBJECT_RENAMED\u003c/tt\u003e event type, one of \u003ctt\u003enewBd\u003c/tt\u003e or \u003ctt\u003eoldBd\u003c/tt\u003e may be null if the new or old binding is outside of the scope for which the listener has registered.\n * @param source The non-null context that fired this event.\n * @param type The type of the event.\n * @param newBd A possibly null binding before the change. See method description.\n * @param oldBd A possibly null binding after the change. See method description.\n * @param changeInfo A possibly null object containing information about the change.\n * @see #OBJECT_ADDED\n * @see #OBJECT_REMOVED\n * @see #OBJECT_RENAMED\n * @see #OBJECT_CHANGED\n */\n","tf":{"freq":{"old":6,"scope":1,"one":1,"possibl":3,"object":1,"type":6,"must":3,"info":1,"event":9,"name":3,"relat":1,"regist":1,"listen":1,"may":1,"descript":2,"resolv":1,"fire":1,"instanc":1,"non":1,"inform":1,"outsid":1,"contain":1,"context":1,"sourc":3,"method":2,"construct":1,"chang":4,"bind":3},"maxFreq":9,"totalTerms":61},"loc":7}