{"id":12221,"className":"javax.naming.ldap.StartTlsRequest","methodName":"createExtendedResponse","signature":"\u003cjavax.naming.ldap.StartTlsRequest: javax.naming.ldap.ExtendedResponse createExtendedResponse(java.lang.String,byte[],int,int)\u003e","javadoc":"/** \n * Creates an extended response object that corresponds to the LDAP StartTLS extended request. \u003cp\u003e The result must be a concrete subclass of StartTlsResponse and must have a public zero-argument constructor. \u003cp\u003e This method locates the implementation class by locating configuration files that have the name: \u003cblockquote\u003e\u003ctt\u003e META-INF/services/javax.naming.ldap.StartTlsResponse \u003c/tt\u003e\u003c/blockquote\u003e The configuration files and their corresponding implementation classes must be accessible to the calling thread\u0027s context class loader. \u003cp\u003e Each configuration file should contain a list of fully-qualified class names, one per line.  Space and tab characters surrounding each name, as well as blank lines, are ignored.  The comment character is \u003ctt\u003e\u0027#\u0027\u003c/tt\u003e (\u003ctt\u003e0x23\u003c/tt\u003e); on each line all characters following the first comment character are ignored.  The file must be encoded in UTF-8. \u003cp\u003e This method will return an instance of the first implementation class that it is able to load and instantiate successfully from the list of class names collected from the configuration files. This method uses the calling thread\u0027s context classloader to find the configuration files and to load the implementation class. \u003cp\u003e If no class can be found in this way, this method will use an implementation-specific way to locate an implementation. If none is found, a NamingException is thrown.\n * @param id         The object identifier of the extended response.Its value must be \"1.3.6.1.4.1.1466.20037\" or null. Both values are equivalent.\n * @param berValue   The possibly null ASN.1 BER encoded value of theextended response. This is the raw BER bytes including the tag and length of the response value. It does not include the response OID. Its value is ignored because a Start TLS response is not expected to contain any response value.\n * @param offset     The starting position in berValue of the bytes to use.Its value is ignored because a Start TLS response is not expected to contain any response value.\n * @param length     The number of bytes in berValue to use.Its value is ignored because a Start TLS response is not expected to contain any response value.\n * @return           The StartTLS extended response object.\n * @exception NamingException If a naming exception was encounteredwhile creating the StartTLS extended response object.\n */\n","tf":{"freq":{"tag":1,"instanti":1,"servic":1,"possibl":1,"tab":1,"abl":1,"zero":1,"must":5,"expect":3,"equival":1,"javax":1,"blockquot":2,"file":6,"request":1,"thread":2,"none":1,"follow":1,"argument":1,"thrown":1,"except":4,"ignor":5,"respons":16,"creat":3,"charact":4,"loader":1,"ber":3,"number":1,"instanc":1,"configur":5,"encod":2,"ldap":1,"start":9,"contain":4,"subclass":1,"will":2,"load":2,"encounteredwhil":1,"comment":2,"posit":1,"collect":1,"raw":1,"result":1,"call":2,"correspond":2,"one":1,"way":2,"use":4,"line":3,"identifi":1,"object":4,"well":1,"space":1,"surround":1,"name":8,"length":2,"concret":1,"valu":13,"offset":1,"find":1,"constructor":1,"locat":3,"includ":2,"blank":1,"tls":2,"list":2,"fulli":1,"access":1,"specif":1,"per":1,"context":2,"method":4,"success":1,"first":2,"theextend":1,"qualifi":1,"found":2,"classload":1},"maxFreq":16,"totalTerms":180},"loc":40}