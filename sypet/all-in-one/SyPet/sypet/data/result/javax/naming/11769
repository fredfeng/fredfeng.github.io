{"id":11769,"className":"javax.naming.ReferralException","methodName":"retryReferral","signature":"\u003cjavax.naming.ReferralException: void retryReferral()\u003e","javadoc":"/** \n * Retries the referral currently being processed. A call to this method should be followed by a call to \u003ccode\u003egetReferralContext\u003c/code\u003e to allow the current referral to be retried. The following code fragment shows a typical usage pattern. \u003cp\u003e\u003cblockquote\u003e\u003cpre\u003e } catch (ReferralException e) { while (true) { try { ctx \u003d e.getReferralContext(env); break; } catch (NamingException ne) { if (! shallIRetry()) { return; } // modify environment properties (env), if necessary e.retryReferral(); } } } \u003c/pre\u003e\u003c/blockquote\u003e\n */\n","tf":{"freq":{"call":2,"allow":1,"typic":1,"iretri":1,"show":1,"necessari":1,"retri":4,"blockquot":2,"name":1,"current":2,"ctx":1,"fragment":1,"follow":2,"except":2,"environ":1,"true":1,"referr":7,"env":2,"shall":1,"process":1,"pattern":1,"pre":2,"context":2,"modifi":1,"method":1,"properti":1,"usag":1},"maxFreq":7,"totalTerms":44},"loc":0}