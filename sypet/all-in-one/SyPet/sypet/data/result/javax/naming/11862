{"id":11862,"className":"javax.naming.NamingEnumeration","methodName":"close","signature":"\u003cjavax.naming.NamingEnumeration: void close()\u003e","javadoc":"/** \n * Closes this enumeration. After this method has been invoked on this enumeration, the enumeration becomes invalid and subsequent invocation of any of its methods will yield undefined results. This method is intended for aborting an enumeration to free up resources. If an enumeration proceeds to the end--that is, until \u003ctt\u003ehasMoreElements()\u003c/tt\u003e or \u003ctt\u003ehasMore()\u003c/tt\u003e returns \u003ctt\u003efalse\u003c/tt\u003e-- resources will be freed up automatically and there is no need to explicitly call \u003ctt\u003eclose()\u003c/tt\u003e. \u003cp\u003e This method indicates to the service provider that it is free to release resources associated with the enumeration, and can notify servers to cancel any outstanding requests. The \u003ctt\u003eclose()\u003c/tt\u003e method is a hint to implementations for managing their resources. Implementations are encouraged to use appropriate algorithms to manage their resources when client omits the \u003ctt\u003eclose()\u003c/tt\u003e calls.\n * @exception NamingException If a naming exception is encounteredwhile closing the enumeration.\n * @since 1.3\n */\n","tf":{"freq":{"fals":1,"need":1,"result":1,"call":2,"client":1,"yield":1,"servic":1,"use":1,"cancel":1,"automat":1,"algorithm":1,"close":6,"free":2,"resourc":5,"becom":1,"releas":1,"indic":1,"invalid":1,"associ":1,"name":2,"encourag":1,"request":1,"proceed":1,"undefin":1,"subsequ":1,"end":1,"notifi":1,"element":1,"except":3,"outstand":1,"manag":2,"invok":1,"hint":1,"provid":1,"invoc":1,"explicit":1,"omit":1,"appropri":1,"will":2,"server":1,"method":5,"freed":1,"encounteredwhil":1,"intend":1,"abort":1},"maxFreq":6,"totalTerms":65},"loc":0}