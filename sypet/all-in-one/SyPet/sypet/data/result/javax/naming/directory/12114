{"id":12114,"className":"javax.naming.directory.DirContext","methodName":"search","signature":"\u003cjavax.naming.directory.DirContext: javax.naming.NamingEnumeration\u003cjavax.naming.directory.SearchResult\u003e search(javax.naming.Name,javax.naming.directory.Attributes,java.lang.String[])\u003e","javadoc":"/** \n * Searches in a single context for objects that contain a specified set of attributes, and retrieves selected attributes. The search is performed using the default \u003ccode\u003eSearchControls\u003c/code\u003e settings. \u003cp\u003e For an object to be selected, each attribute in \u003ccode\u003ematchingAttributes\u003c/code\u003e must match some attribute of the object.  If \u003ccode\u003ematchingAttributes\u003c/code\u003e is empty or null, all objects in the target context are returned. \u003cp\u003e An attribute \u003cem\u003eA\u003c/em\u003e\u003csub\u003e1\u003c/sub\u003e in \u003ccode\u003ematchingAttributes\u003c/code\u003e is considered to match an attribute \u003cem\u003eA\u003c/em\u003e\u003csub\u003e2\u003c/sub\u003e of an object if \u003cem\u003eA\u003c/em\u003e\u003csub\u003e1\u003c/sub\u003e and \u003cem\u003eA\u003c/em\u003e\u003csub\u003e2\u003c/sub\u003e have the same identifier, and each value of \u003cem\u003eA\u003c/em\u003e\u003csub\u003e1\u003c/sub\u003e is equal to some value of \u003cem\u003eA\u003c/em\u003e\u003csub\u003e2\u003c/sub\u003e.  This implies that the order of values is not significant, and that \u003cem\u003eA\u003c/em\u003e\u003csub\u003e2\u003c/sub\u003e may contain \"extra\" values not found in \u003cem\u003eA\u003c/em\u003e\u003csub\u003e1\u003c/sub\u003e without affecting the comparison.  It also implies that if \u003cem\u003eA\u003c/em\u003e\u003csub\u003e1\u003c/sub\u003e has no values, then testing for a match is equivalent to testing for the presence of an attribute \u003cem\u003eA\u003c/em\u003e\u003csub\u003e2\u003c/sub\u003e with the same identifier. \u003cp\u003e The precise definition of \"equality\" used in comparing attribute values is defined by the underlying directory service.  It might use the \u003ccode\u003eObject.equals\u003c/code\u003e method, for example, or might use a schema to specify a different equality operation. For matching based on operations other than equality (such as substring comparison) use the version of the \u003ccode\u003esearch\u003c/code\u003e method that takes a filter argument. \u003cp\u003e When changes are made to this \u003ctt\u003eDirContext\u003c/tt\u003e, the effect on enumerations returned by prior calls to this method is undefined. \u003cp\u003e If the object does not have the attribute specified, the directory will ignore the nonexistent attribute and return the requested attributes that the object does have. \u003cp\u003e A directory might return more attributes than was requested (see \u003cstrong\u003eAttribute Type Names\u003c/strong\u003e in the class description), but is not allowed to return arbitrary, unrelated attributes. \u003cp\u003e See also \u003cstrong\u003eOperational Attributes\u003c/strong\u003e in the class description.\n * @param name the name of the context to search\n * @param matchingAttributes the attributes to search for.  If empty or null, all objects in the target context are returned.\n * @param attributesToReturn the attributes to return.  null indicates that all attributes are to be returned; an empty array indicates that none are to be returned.\n * @return a non-null enumeration of \u003ctt\u003eSearchResult\u003c/tt\u003e objects. Each \u003ctt\u003eSearchResult\u003c/tt\u003e contains the attributes identified by \u003ccode\u003eattributesToReturn\u003c/code\u003e and the name of the corresponding object, named relative to the context named by \u003ccode\u003ename\u003c/code\u003e.\n * @throws NamingException if a naming exception is encountered\n * @see SearchControls\n * @see SearchResult\n * @see #search(Name,String,Object[],SearchControls)\n */\n","tf":{"freq":{"singl":1,"test":2,"servic":1,"perform":1,"type":1,"must":1,"prior":1,"specifi":3,"schema":1,"arbitrari":1,"search":13,"equival":1,"oper":3,"request":2,"relat":1,"impli":2,"precis":1,"none":1,"undefin":1,"substr":1,"argument":1,"control":3,"presenc":1,"except":2,"ignor":1,"unrel":1,"nonexist":1,"select":2,"extra":1,"descript":2,"signific":1,"without":1,"comparison":2,"non":1,"strong":4,"contain":3,"definit":1,"will":1,"match":8,"compar":1,"filter":1,"array":1,"result":3,"call":1,"defin":1,"might":3,"sub":20,"allow":1,"directori":3,"correspond":1,"made":1,"use":5,"identifi":3,"object":12,"affect":1,"consid":1,"version":1,"attribut":25,"indic":2,"order":1,"dir":1,"name":10,"valu":6,"may":1,"equal":5,"empti":3,"differ":1,"effect":1,"encount":1,"take":1,"retriev":1,"string":1,"target":2,"context":6,"exampl":1,"base":1,"method":3,"chang":1,"also":2,"found":1},"maxFreq":25,"totalTerms":213},"loc":0}