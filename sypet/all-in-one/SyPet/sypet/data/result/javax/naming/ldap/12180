{"id":12180,"className":"javax.naming.ldap.ControlFactory","methodName":"getControlInstance","signature":"\u003cjavax.naming.ldap.ControlFactory: javax.naming.ldap.Control getControlInstance(javax.naming.ldap.Control,javax.naming.Context,java.util.Hashtable)\u003e","javadoc":"/** \n * Creates a control using known control factories. \u003cp\u003e The following rule is used to create the control: \u003cul\u003e \u003cli\u003e Use the control factories specified in the \u003ctt\u003eLdapContext.CONTROL_FACTORIES\u003c/tt\u003e property of the environment, and of the provider resource file associated with \u003ctt\u003ectx\u003c/tt\u003e, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in creating the control is the one used. If none of the factories can be loaded, return \u003ccode\u003ectl\u003c/code\u003e. If an exception is encountered while creating the control, the exception is passed up to the caller. \u003c/ul\u003e \u003cp\u003e Note that a control factory must be public and must have a public constructor that accepts no arguments. \u003cp\u003e\n * @param ctl The non-null control object containing the OID and BER data.\n * @param ctx The possibly null context in which the control is being created.If null, no such information is available.\n * @param env The possibly null environment of the context. This is usedto find the value of the \u003ctt\u003eLdapContext.CONTROL_FACTORIES\u003c/tt\u003e property.\n * @return A control object created using \u003ccode\u003ectl\u003c/code\u003e; or\u003ccode\u003ectl\u003c/code\u003e if a control object cannot be created using the algorithm described above.\n * @exception NamingException if a naming exception was encounteredwhile attempting to create the control object. If one of the factories accessed throws an exception, it is propagated up to the caller. If an error was encountered while loading and instantiating the factory and object classes, the exception is wrapped inside a \u003ctt\u003eNamingException\u003c/tt\u003e and then rethrown.\n */\n","tf":{"freq":{"instanti":1,"accept":1,"possibl":2,"must":2,"specifi":1,"file":1,"propag":1,"ctx":2,"none":1,"follow":1,"usedto":1,"argument":1,"wrap":1,"control":13,"except":8,"succeed":1,"creat":8,"ctl":4,"rethrown":1,"environ":2,"describ":1,"avail":1,"provid":1,"instanc":1,"non":1,"inform":1,"ldap":2,"separ":1,"contain":1,"load":2,"known":1,"properti":3,"encounteredwhil":1,"attempt":1,"caller":2,"one":3,"data":1,"use":6,"colon":1,"object":5,"algorithm":1,"resourc":1,"order":2,"associ":1,"factori":7,"name":4,"rule":1,"valu":2,"find":1,"note":1,"constructor":1,"error":1,"list":1,"env":1,"access":1,"pass":1,"encount":2,"context":4,"insid":1,"first":1},"maxFreq":13,"totalTerms":124},"loc":21}