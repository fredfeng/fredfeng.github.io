{"id":12098,"className":"javax.naming.directory.DirContext","methodName":"getAttributes","signature":"\u003cjavax.naming.directory.DirContext: javax.naming.directory.Attributes getAttributes(javax.naming.Name,java.lang.String[])\u003e","javadoc":"/** \n * Retrieves selected attributes associated with a named object. See the class description regarding attribute models, attribute type names, and operational attributes. \u003cp\u003e If the object does not have an attribute specified, the directory will ignore the nonexistent attribute and return those requested attributes that the object does have. \u003cp\u003e A directory might return more attributes than was requested (see \u003cstrong\u003eAttribute Type Names\u003c/strong\u003e in the class description), but is not allowed to return arbitrary, unrelated attributes. \u003cp\u003e See also \u003cstrong\u003eOperational Attributes\u003c/strong\u003e in the class description.\n * @param name the name of the object from which to retrieve attributes\n * @param attrIds the identifiers of the attributes to retrieve. null indicates that all attributes should be retrieved; an empty array indicates that none should be retrieved.\n * @return  the requested attributes; never null\n * @throws NamingException if a naming exception is encountered\n */\n","tf":{"freq":{"might":1,"model":1,"allow":1,"directori":2,"identifi":1,"object":4,"type":2,"specifi":1,"id":1,"arbitrari":1,"attribut":16,"indic":2,"oper":2,"associ":1,"name":7,"request":3,"none":1,"except":2,"ignor":1,"unrel":1,"nonexist":1,"select":1,"descript":3,"regard":1,"attr":1,"empti":1,"never":1,"strong":4,"encount":1,"retriev":5,"will":1,"also":1,"array":1},"maxFreq":16,"totalTerms":73},"loc":0}