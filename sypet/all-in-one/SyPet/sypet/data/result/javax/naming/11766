{"id":11766,"className":"javax.naming.ReferralException","methodName":"getReferralContext","signature":"\u003cjavax.naming.ReferralException: javax.naming.Context getReferralContext()\u003e","javadoc":"/** \n * Retrieves the context at which to continue the method. Regardless of whether a referral is encountered directly during a context operation, or indirectly, for example, during a search enumeration, the referral exception should provide a context at which to continue the operation. The referral context is created using the environment properties of the context that threw the ReferralException. \u003cp\u003e To continue the operation, the client program should re-invoke the method using the same arguments as the original invocation.\n * @return The non-null context at which to continue the method.\n * @exception NamingException If a naming exception was encountered.Call either \u003ctt\u003eretryReferral()\u003c/tt\u003e or \u003ctt\u003eskipReferral()\u003c/tt\u003e to continue processing referrals.\n */\n","tf":{"freq":{"call":1,"client":1,"use":2,"skip":1,"whether":1,"retri":1,"indirect":1,"oper":3,"search":1,"name":2,"regardless":1,"direct":1,"argument":1,"except":5,"creat":1,"invok":1,"origin":1,"environ":1,"referr":8,"provid":1,"invoc":1,"continu":5,"non":1,"process":1,"either":1,"threw":1,"encount":2,"retriev":1,"program":1,"exampl":1,"context":7,"method":3,"properti":1},"maxFreq":8,"totalTerms":61},"loc":0}