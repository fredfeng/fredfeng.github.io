{"id":12287,"className":"javax.naming.ldap.Rdn","methodName":"unescapeValue","signature":"\u003cjavax.naming.ldap.Rdn: java.lang.Object unescapeValue(java.lang.String)\u003e","javadoc":"/** \n * Given an attribute value string formated according to the rules specified in \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2253.txt\"\u003eRFC 2253\u003c/a\u003e, returns the unformated value.  Escapes and quotes are stripped away, and hex-encoded UTF-8 is converted to equivalent UTF-16 characters. Returns a string value as a String, and a binary value as a byte array. \u003cp\u003e Legal and illegal values are defined in RFC 2253. This method is generous in accepting the values and does not catch all illegal values. Therefore, passing in an illegal value might not necessarily trigger an \u003ctt\u003eIllegalArgumentException\u003c/tt\u003e.\n * @param val     The non-null string to be unescaped.\n * @return          Unescaped value.\n * @throws IllegalArgumentException When an Illegal valueis provided.\n */\n","tf":{"freq":{"val":1,"legal":1,"might":1,"defin":1,"binari":1,"accept":1,"www":1,"convert":1,"therefor":1,"org":1,"generous":1,"rfc":2,"txt":1,"escap":1,"specifi":1,"attribut":1,"given":1,"hex":1,"equival":1,"rule":1,"unescap":3,"valu":10,"href":1,"quot":1,"argument":2,"trigger":1,"except":2,"charact":1,"valuei":1,"accord":1,"format":1,"strip":1,"provid":1,"illeg":6,"non":1,"pass":1,"ietf":1,"away":1,"encod":1,"http":1,"string":4,"method":1,"necessarili":1,"unform":1,"array":1},"maxFreq":10,"totalTerms":67},"loc":79}