{"id":12118,"className":"javax.naming.directory.DirContext","methodName":"search","signature":"\u003cjavax.naming.directory.DirContext: javax.naming.NamingEnumeration\u003cjavax.naming.directory.SearchResult\u003e search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)\u003e","javadoc":"/** \n * Searches in the named context or object for entries that satisfy the given search filter.  Performs the search as specified by the search controls. \u003cp\u003e The format and interpretation of \u003ccode\u003efilter\u003c/code\u003e follows RFC 2254 with the following interpretations for \u003ccode\u003eattr\u003c/code\u003e and \u003ccode\u003evalue\u003c/code\u003e mentioned in the RFC. \u003cp\u003e \u003ccode\u003eattr\u003c/code\u003e is the attribute\u0027s identifier. \u003cp\u003e \u003ccode\u003evalue\u003c/code\u003e is the string representation the attribute\u0027s value. The translation of this string representation into the attribute\u0027s value is directory-specific. \u003cp\u003e For the assertion \"someCount\u003d127\", for example, \u003ccode\u003eattr\u003c/code\u003e is \"someCount\" and \u003ccode\u003evalue\u003c/code\u003e is \"127\". The provider determines, based on the attribute ID (\"someCount\") (and possibly its schema), that the attribute\u0027s value is an integer. It then parses the string \"127\" appropriately. \u003cp\u003e Any non-ASCII characters in the filter string should be represented by the appropriate Java (Unicode) characters, and not encoded as UTF-8 octets.  Alternately, the \"backslash-hexcode\" notation described in RFC 2254 may be used. \u003cp\u003e If the directory does not support a string representation of some or all of its attributes, the form of \u003ccode\u003esearch\u003c/code\u003e that accepts filter arguments in the form of Objects can be used instead. The service provider for such a directory would then translate the filter arguments to its service-specific representation for filter evaluation. See \u003ccode\u003esearch(Name, String, Object[], SearchControls)\u003c/code\u003e. \u003cp\u003e RFC 2254 defines certain operators for the filter, including substring matches, equality, approximate match, greater than, less than.  These operators are mapped to operators with corresponding semantics in the underlying directory. For example, for the equals operator, suppose the directory has a matching rule defining \"equality\" of the attributes in the filter. This rule would be used for checking equality of the attributes specified in the filter with the attributes of objects in the directory. Similarly, if the directory has a matching rule for ordering, this rule would be used for making \"greater than\" and \"less than\" comparisons. \u003cp\u003e Not all of the operators defined in RFC 2254 are applicable to all attributes.  When an operator is not applicable, the exception \u003ccode\u003eInvalidSearchFilterException\u003c/code\u003e is thrown. \u003cp\u003e The result is returned in an enumeration of \u003ctt\u003eSearchResult\u003c/tt\u003es. Each \u003ctt\u003eSearchResult\u003c/tt\u003e contains the name of the object and other information about the object (see SearchResult). The name is either relative to the target context of the search (which is named by the \u003ccode\u003ename\u003c/code\u003e parameter), or it is a URL string. If the target context is included in the enumeration (as is possible when \u003ccode\u003econs\u003c/code\u003e specifies a search scope of \u003ccode\u003eSearchControls.OBJECT_SCOPE\u003c/code\u003e or \u003ccode\u003eSearchControls.SUBSTREE_SCOPE\u003c/code\u003e), its name is the empty string. The \u003ctt\u003eSearchResult\u003c/tt\u003e may also contain attributes of the matching object if the \u003ctt\u003econs\u003c/tt\u003e argument specified that attributes be returned. \u003cp\u003e If the object does not have a requested attribute, that nonexistent attribute will be ignored.  Those requested attributes that the object does have will be returned. \u003cp\u003e A directory might return more attributes than were requested (see \u003cstrong\u003eAttribute Type Names\u003c/strong\u003e in the class description) but is not allowed to return arbitrary, unrelated attributes. \u003cp\u003e See also \u003cstrong\u003eOperational Attributes\u003c/strong\u003e in the class description.\n * @param name the name of the context or object to search\n * @param filter the filter expression to use for the search; may not be null\n * @param cons the search controls that control the search.  If null, the default search controls are used (equivalent to \u003ctt\u003e(new SearchControls())\u003c/tt\u003e).\n * @return  an enumeration of \u003ctt\u003eSearchResult\u003c/tt\u003es ofthe objects that satisfy the filter; never null\n * @throws InvalidSearchFilterException if the search filter specified isnot supported or understood by the underlying directory\n * @throws InvalidSearchControlsException if the search controlscontain invalid settings\n * @throws NamingException if a naming exception is encountered\n * @see #search(Name,String,Object[],SearchControls)\n * @see SearchControls\n * @see SearchResult\n */\n","tf":{"freq":{"greater":2,"accept":1,"servic":2,"specifi":5,"schema":1,"given":1,"search":32,"oper":7,"relat":1,"substr":1,"ignor":1,"support":2,"form":2,"charact":2,"describ":1,"attr":3,"provid":2,"non":1,"encod":1,"will":2,"might":1,"directori":9,"correspond":1,"use":6,"express":1,"applic":2,"attribut":19,"semant":1,"map":1,"mention":1,"similar":1,"may":3,"repres":1,"suppos":1,"translat":2,"hexcod":1,"represent":4,"empti":1,"either":1,"encount":1,"appropri":2,"satisfi":2,"string":9,"unicod":1,"base":1,"exampl":2,"pars":1,"octet":1,"con":3,"controlscontain":1,"count":3,"possibl":2,"perform":1,"approxim":1,"type":1,"arbitrari":1,"altern":1,"invalid":4,"equival":1,"understood":1,"request":3,"follow":2,"argument":3,"control":11,"except":6,"thrown":1,"unrel":1,"nonexist":1,"descript":2,"format":1,"comparison":1,"inform":1,"strong":4,"determin":1,"contain":2,"match":5,"make":1,"filter":15,"defin":3,"result":7,"scope":1,"allow":1,"interpret":2,"identifi":1,"object":12,"backslash":1,"isnot":1,"order":1,"ofth":1,"name":13,"rule":4,"valu":6,"less":2,"includ":2,"check":1,"entri":1,"paramet":1,"equal":4,"evalu":1,"never":1,"notat":1,"specif":2,"context":4,"instead":1,"target":2,"java":1,"certain":1,"integ":1,"also":2},"maxFreq":32,"totalTerms":310},"loc":0}