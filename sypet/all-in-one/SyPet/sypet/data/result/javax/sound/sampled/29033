{"id":29033,"className":"javax.sound.sampled.Line","methodName":"open","signature":"\u003cjavax.sound.sampled.Line: void open()\u003e","javadoc":"/** \n * Opens the line, indicating that it should acquire any required system resources and become operational. If this operation succeeds, the line is marked as open, and an \u003ccode\u003eOPEN\u003c/code\u003e event is dispatched to the line\u0027s listeners. \u003cp\u003e Note that some lines, once closed, cannot be reopened.  Attempts to reopen such a line will always result in an \u003ccode\u003eLineUnavailableException\u003c/code\u003e. \u003cp\u003e Some types of lines have configurable properties that may affect resource allocation.   For example, a \u003ccode\u003eDataLine\u003c/code\u003e must be opened with a particular format and buffer size.  Such lines should provide a mechanism for configuring these properties, such as an additional \u003ccode\u003eopen\u003c/code\u003e method or methods which allow an application to specify the desired settings. \u003cp\u003e This method takes no arguments, and opens the line with the current settings.  For \u003ccode\u003e {@link SourceDataLine}\u003c/code\u003e and \u003ccode\u003e {@link TargetDataLine}\u003c/code\u003e objects, this means that the line is opened with default settings.  For a \u003ccode\u003e {@link Clip}\u003c/code\u003e, however, the buffer size is determined when data is loaded.  Since this method does not allow the application to specify any data to load, an IllegalArgumentException is thrown. Therefore, you should instead use one of the \u003ccode\u003eopen\u003c/code\u003e methods provided in the \u003ccode\u003eClip\u003c/code\u003e interface to load data into the \u003ccode\u003eClip\u003c/code\u003e. \u003cp\u003e For \u003ccode\u003eDataLine\u003c/code\u003e\u0027s, if the \u003ccode\u003eDataLine.Info\u003c/code\u003e object which was used to retrieve the line, specifies at least one fully qualified audio format, the last one will be used as the default format.\n * @throws IllegalArgumentException if this method is called on a Clip instance.\n * @throws LineUnavailableException if the line cannot beopened due to resource restrictions.\n * @throws SecurityException if the line cannot beopened due to security restrictions.\n * @see #close\n * @see #isOpen\n * @see LineEvent\n * @see DataLine\n * @see Clip#open(AudioFormat,byte[],int,int)\n * @see Clip#open(AudioInputStream)\n */\n","tf":{"freq":{"acquir":1,"last":1,"least":1,"particular":1,"type":1,"desir":1,"must":1,"info":1,"close":2,"specifi":3,"buffer":2,"open":11,"requir":1,"becom":1,"oper":2,"event":2,"unavail":2,"howev":1,"argument":3,"thrown":1,"except":5,"succeed":1,"alway":1,"mark":1,"format":4,"provid":2,"restrict":2,"instanc":1,"size":2,"input":1,"system":1,"configur":2,"determin":1,"will":2,"due":2,"load":3,"sourc":1,"properti":2,"reopen":2,"alloc":1,"attempt":1,"call":1,"result":1,"stream":1,"allow":2,"one":3,"link":3,"data":9,"use":3,"line":21,"therefor":1,"object":2,"affect":1,"applic":2,"resourc":3,"indic":1,"current":1,"mean":1,"dispatch":1,"beopen":2,"listen":1,"note":1,"clip":6,"addit":1,"may":1,"audio":3,"fulli":1,"illeg":2,"secur":2,"retriev":1,"mechan":1,"take":1,"instead":1,"target":1,"exampl":1,"method":6,"qualifi":1},"maxFreq":21,"totalTerms":167},"loc":0}