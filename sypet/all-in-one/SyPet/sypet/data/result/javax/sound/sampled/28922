{"id":28922,"className":"javax.sound.sampled.LineEvent","methodName":"LineEvent","signature":"\u003cjavax.sound.sampled.LineEvent: void LineEvent(javax.sound.sampled.Line,javax.sound.sampled.LineEvent$Type,long)\u003e","javadoc":"/** \n * Constructs a new event of the specified type, originating from the specified line.\n * @param line the source of this event\n * @param type the event type (\u003ccode\u003eOPEN\u003c/code\u003e, \u003ccode\u003eCLOSE\u003c/code\u003e, \u003ccode\u003eSTART\u003c/code\u003e, or \u003ccode\u003eSTOP\u003c/code\u003e)\n * @param position the number of sample frames that the line had already processed when the event occurred,or  {@link AudioSystem#NOT_SPECIFIED}\n * @throws IllegalArgumentException if \u003ccode\u003eline\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"argument":1,"except":1,"audio":1,"link":1,"origin":1,"line":5,"number":1,"type":3,"illeg":1,"specifi":2,"process":1,"system":1,"frame":1,"event":5,"sourc":1,"alreadi":1,"construct":1,"posit":1,"sampl":1,"occur":1},"maxFreq":5,"totalTerms":31},"loc":6}