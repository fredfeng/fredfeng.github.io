{"id":28889,"className":"javax.sound.sampled.AudioFormat","methodName":"AudioFormat","signature":"\u003cjavax.sound.sampled.AudioFormat: void AudioFormat(float,int,int,boolean,boolean)\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eAudioFormat\u003c/code\u003e with a linear PCM encoding and the given parameters.  The frame size is set to the number of bytes required to contain one sample from each channel, and the frame rate is set to the sample rate.\n * @param sampleRate                the number of samples per second\n * @param sampleSizeInBits  the number of bits in each sample\n * @param channels                  the number of channels (1 for mono, 2 for stereo, and so on)\n * @param signed                    indicates whether the data is signed or unsigned\n * @param bigEndian                 indicates whether the data for a single sampleis stored in big-endian byte order (\u003ccode\u003efalse\u003c/code\u003e means little-endian)\n */\n","tf":{"freq":{"littl":1,"fals":1,"store":1,"second":1,"singl":1,"one":1,"data":2,"whether":2,"requir":1,"rate":3,"order":1,"given":1,"indic":2,"mean":1,"samplei":1,"linear":1,"audio":2,"paramet":1,"number":4,"format":2,"size":2,"sign":2,"bit":2,"encod":1,"frame":2,"per":1,"endian":3,"unsign":1,"contain":1,"stereo":1,"construct":1,"big":2,"channel":3,"mono":1,"sampl":6},"maxFreq":6,"totalTerms":59},"loc":12}