{"id":28704,"className":"javax.sound.midi.MidiSystem","methodName":"getMidiFileFormat","signature":"\u003cjavax.sound.midi.MidiSystem: javax.sound.midi.MidiFileFormat getMidiFileFormat(java.io.File)\u003e","javadoc":"/** \n * Obtains the MIDI file format of the specified \u003ccode\u003eFile\u003c/code\u003e.  The \u003ccode\u003eFile\u003c/code\u003e must point to valid MIDI file data for a file type recognized by the system. \u003cp\u003e This operation can only succeed for files of a type which can be parsed by an installed file reader.  It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed.  It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while determining the file format.\n * @param file the \u003ccode\u003eFile\u003c/code\u003e from which file format informationshould be extracted\n * @return a \u003ccode\u003eMidiFileFormat\u003c/code\u003e object describing the MIDI fileformat\n * @throws InvalidMidiDataException if the \u003ccode\u003eFile\u003c/code\u003e does not pointto valid MIDI file data recognized by the system\n * @throws IOException if an I/O exception occurs while accessing the file\n * @see #getMidiFileFormat(InputStream)\n * @see #getMidiFileFormat(URL)\n */\n","tf":{"freq":{"valid":3,"stream":1,"informationshould":1,"data":5,"object":1,"type":2,"must":1,"specifi":1,"midi":7,"fail":2,"invalid":3,"oper":1,"file":21,"pointto":1,"recogn":2,"fileformat":1,"may":1,"except":5,"succeed":1,"error":1,"instal":3,"describ":1,"format":7,"access":1,"extract":1,"point":1,"input":1,"system":2,"obtain":1,"reader":3,"encount":1,"determin":1,"will":1,"even":1,"also":1,"pars":1,"occur":1,"compat":2},"maxFreq":21,"totalTerms":91},"loc":21}