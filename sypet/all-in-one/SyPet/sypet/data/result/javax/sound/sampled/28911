{"id":28911,"className":"javax.sound.sampled.AudioInputStream","methodName":"read","signature":"\u003cjavax.sound.sampled.AudioInputStream: int read(byte[],int,int)\u003e","javadoc":"/** \n * Reads up to a specified maximum number of bytes of data from the audio stream, putting them into the given byte array. \u003cp\u003eThis method will always read an integral number of frames. If \u003ccode\u003elen\u003c/code\u003e does not specify an integral number of frames, a maximum of \u003ccode\u003elen - (len % frameSize) \u003c/code\u003e bytes will be read.\n * @param b the buffer into which the data is read\n * @param off the offset, from the beginning of array \u003ccode\u003eb\u003c/code\u003e, at whichthe data will be written\n * @param len the maximum number of bytes to read\n * @return the total number of bytes read into the buffer, or -1 if thereis no more data because the end of the stream has been reached\n * @throws IOException if an input or output error occurs\n * @see #read(byte[])\n * @see #read()\n * @see #skip\n * @see #available\n */\n","tf":{"freq":{"total":1,"stream":2,"put":1,"integr":2,"data":4,"skip":1,"specifi":2,"buffer":2,"reach":1,"given":1,"written":1,"read":9,"offset":1,"end":1,"except":1,"error":1,"audio":1,"alway":1,"avail":1,"number":5,"len":4,"size":1,"begin":1,"whichth":1,"input":1,"frame":3,"maximum":3,"will":3,"method":1,"therei":1,"output":1,"occur":1,"array":2},"maxFreq":9,"totalTerms":62},"loc":60}