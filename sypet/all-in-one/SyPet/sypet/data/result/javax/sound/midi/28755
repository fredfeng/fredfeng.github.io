{"id":28755,"className":"javax.sound.midi.MidiChannel","methodName":"controlChange","signature":"\u003cjavax.sound.midi.MidiChannel: void controlChange(int,int)\u003e","javadoc":"/** \n * Reacts to a change in the specified controller\u0027s value.  A controller is some control other than a keyboard key, such as a switch, slider, pedal, wheel, or breath-pressure sensor. The MIDI 1.0 Specification provides standard numbers for typical controllers on MIDI devices, and describes the intended effect for some of the controllers. The way in which an \u003ccode\u003eInstrument\u003c/code\u003e reacts to a controller change may be specific to the \u003ccode\u003eInstrument\u003c/code\u003e. \u003cp\u003e The MIDI 1.0 Specification defines both 7-bit controllers and 14-bit controllers.  Continuous controllers, such as wheels and sliders, typically have 14 bits (two MIDI bytes), while discrete controllers, such as switches, typically have 7 bits (one MIDI byte).  Refer to the specification to see the expected resolution for each type of control. \u003cp\u003e Controllers 64 through 95 (0x40 - 0x5F) allow 7-bit precision. The value of a 7-bit controller is set completely by the \u003ccode\u003evalue\u003c/code\u003e argument.  An additional set of controllers provide 14-bit precision by using two controller numbers, one for the most significant 7 bits and another for the least significant 7 bits.  Controller numbers 0 through 31 (0x00 - 0x1F) control the most significant 7 bits of 14-bit controllers; controller numbers 32 through 63 (0x20 - 0x3F) control the least significant 7 bits of these controllers.  For example, controller number 7 (0x07) controls the upper 7 bits of the channel volume controller, and controller number 39 (0x27) controls the lower 7 bits. The value of a 14-bit controller is determined by the interaction of the two halves.  When the most significant 7 bits of a controller are set (using controller numbers 0 through 31), the lower 7 bits are automatically set to 0.  The corresponding controller number for the lower 7 bits may then be used to further modulate the controller value. It is possible that the underlying synthesizer does not support a specific controller message. In order to verify that a call to \u003ccode\u003econtrolChange\u003c/code\u003e was successful, use \u003ccode\u003egetController\u003c/code\u003e.\n * @param controller the controller number (0 to 127; see the MIDI1.0 Specification for the interpretation)\n * @param value the value to which the specified controller is changed (0 to 127)\n * @see #getController(int)\n */\n","tf":{"freq":{"lower":3,"least":2,"possibl":1,"type":1,"specifi":2,"sensor":1,"expect":1,"refer":1,"verifi":1,"precis":2,"modul":1,"key":1,"breath":1,"argument":1,"control":39,"support":1,"synthes":1,"signific":5,"describ":1,"number":9,"provid":2,"pedal":1,"continu":1,"bit":18,"determin":1,"volum":1,"slider":2,"call":1,"defin":1,"discret":1,"wheel":2,"allow":1,"correspond":1,"one":2,"interpret":1,"typic":3,"way":1,"use":4,"anoth":1,"automat":1,"resolut":1,"upper":1,"order":1,"valu":7,"react":2,"complet":1,"addit":1,"keyboard":1,"may":2,"pressur":1,"standard":1,"messag":1,"instrument":2,"two":3,"specif":6,"effect":1,"exampl":1,"interact":1,"devic":1,"chang":5,"intend":1,"success":1,"channel":1,"halv":1},"maxFreq":39,"totalTerms":165},"loc":0}