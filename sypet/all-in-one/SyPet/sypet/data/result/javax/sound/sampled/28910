{"id":28910,"className":"javax.sound.sampled.AudioInputStream","methodName":"read","signature":"\u003cjavax.sound.sampled.AudioInputStream: int read(byte[])\u003e","javadoc":"/** \n * Reads some number of bytes from the audio input stream and stores them into the buffer array \u003ccode\u003eb\u003c/code\u003e. The number of bytes actually read is returned as an integer. This method blocks until input data is available, the end of the stream is detected, or an exception is thrown. \u003cp\u003eThis method will always read an integral number of frames. If the length of the array is not an integral number of frames, a maximum of \u003ccode\u003eb.length - (b.length % frameSize) \u003c/code\u003e bytes will be read.\n * @param b the buffer into which the data is read\n * @return the total number of bytes read into the buffer, or -1 if thereis no more data because the end of the stream has been reached\n * @throws IOException if an input or output error occurs\n * @see #read(byte[],int,int)\n * @see #read()\n * @see #available\n */\n","tf":{"freq":{"total":1,"stream":3,"integr":2,"store":1,"data":3,"block":1,"buffer":3,"reach":1,"length":3,"read":9,"end":2,"detect":1,"except":2,"thrown":1,"error":1,"audio":1,"alway":1,"number":5,"avail":2,"size":1,"input":3,"frame":3,"maximum":1,"will":2,"actual":1,"therei":1,"method":2,"output":1,"integ":1,"occur":1,"array":2},"maxFreq":9,"totalTerms":62},"loc":3}