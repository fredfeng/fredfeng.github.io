{"id":28821,"className":"javax.sound.midi.Sequencer","methodName":"setTrackSolo","signature":"\u003cjavax.sound.midi.Sequencer: void setTrackSolo(int,boolean)\u003e","javadoc":"/** \n * Sets the solo state for a track.  If \u003ccode\u003esolo\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e only this track and other solo\u0027d tracks will sound. If \u003ccode\u003esolo\u003c/code\u003e is \u003ccode\u003efalse\u003c/code\u003e then only other solo\u0027d tracks will sound, unless no tracks are solo\u0027d in which case all un-muted tracks will sound. \u003cp\u003e This method may fail for a number of reasons.  For example, the track number specified may not be valid for the current sequence, or the sequencer may not support this functionality. An application which needs to verify whether this operation succeeded should follow this call with a call to \u003ccode\u003e {@link #getTrackSolo}\u003c/code\u003e.\n * @param track the track number.  Tracks in the current sequence are numberedfrom 0 to the number of tracks in the sequence minus 1.\n * @param solo the new solo state for the track.  \u003ccode\u003etrue\u003c/code\u003e implies thetrack should be solo\u0027d, \u003ccode\u003efalse\u003c/code\u003e implies the track should not be solo\u0027d.\n * @see #getSequence\n */\n","tf":{"freq":{"fals":2,"need":1,"call":2,"valid":1,"reason":1,"link":1,"state":2,"whether":1,"applic":1,"specifi":1,"function":1,"fail":1,"unless":1,"solo":12,"oper":1,"sequenc":5,"verifi":1,"impli":2,"current":2,"follow":1,"mute":1,"may":3,"minus":1,"succeed":1,"support":1,"track":15,"true":2,"number":4,"numberedfrom":1,"sound":3,"will":3,"exampl":1,"method":1,"thetrack":1},"maxFreq":15,"totalTerms":78},"loc":0}