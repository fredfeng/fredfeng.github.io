{"id":28953,"className":"javax.sound.sampled.Mixer","methodName":"unsynchronize","signature":"\u003cjavax.sound.sampled.Mixer: void unsynchronize(javax.sound.sampled.Line[])\u003e","javadoc":"/** \n * Releases synchronization for the specified lines.  The array must be identical to one for which synchronization has already been established; otherwise an exception may be thrown.  However, \u003ccode\u003enull\u003c/code\u003e may be specified, in which case all currently synchronized lines that belong to this mixer are unsynchronized.\n * @param lines the synchronized lines for which synchronization should bereleased, or \u003ccode\u003enull\u003c/code\u003e for all this mixer\u0027s synchronized lines\n * @throws IllegalArgumentException if the lines cannot be unsynchronized.This may occur if the argument specified does not exactly match a set of lines for which synchronization has already been established.\n */\n","tf":{"freq":{"argument":2,"otherwis":1,"thrown":1,"may":3,"except":2,"belong":1,"one":1,"establish":2,"line":7,"illeg":1,"must":1,"specifi":3,"bereleas":1,"releas":1,"ident":1,"exact":1,"current":1,"unsynchron":3,"alreadi":2,"match":1,"mixer":2,"howev":1,"occur":1,"array":1},"maxFreq":7,"totalTerms":41},"loc":0}