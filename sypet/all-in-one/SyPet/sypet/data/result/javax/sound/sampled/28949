{"id":28949,"className":"javax.sound.sampled.Mixer","methodName":"getMaxLines","signature":"\u003cjavax.sound.sampled.Mixer: int getMaxLines(javax.sound.sampled.Line$Info)\u003e","javadoc":"/** \n * Obtains the approximate maximum number of lines of the requested type that can be open simultaneously on the mixer. Certain types of mixers do not have a hard bound and may allow opening more lines. Since certain lines are a shared resource, a mixer may not be able to open the maximum number of lines if another process has opened lines of this mixer. The requested type is any line that matches the description in the provided \u003ccode\u003eLine.Info\u003c/code\u003e object.  For example, if the info object represents a speaker port, and the mixer supports exactly one speaker port, this method should return 1.  If the info object represents a source data line and the mixer supports the use of 32 source data lines simultaneously, the return value should be 32. If there is no limit, this function returns \u003ccode\u003eAudioSystem.NOT_SPECIFIED\u003c/code\u003e.\n * @param info a \u003ccode\u003eLine.Info\u003c/code\u003e that describes the line for whichthe number of supported instances is queried\n * @return the maximum number of matching lines supported, or \u003ccode\u003eAudioSystem.NOT_SPECIFIED\u003c/code\u003e\n */\n","tf":{"freq":{"port":2,"allow":1,"one":1,"data":2,"use":1,"simultan":2,"line":13,"object":3,"approxim":1,"abl":1,"anoth":1,"type":3,"function":1,"info":5,"open":4,"share":1,"resourc":1,"exact":1,"request":2,"valu":1,"mixer":6,"hard":1,"limit":1,"may":2,"support":4,"max":1,"audio":2,"repres":2,"speaker":2,"descript":1,"describ":1,"number":4,"provid":1,"instanc":1,"whichth":1,"process":1,"queri":1,"system":2,"obtain":1,"maximum":3,"exampl":1,"sourc":2,"method":1,"certain":2,"match":2,"bound":1},"maxFreq":13,"totalTerms":94},"loc":0}