{"id":28705,"className":"javax.sound.midi.MidiSystem","methodName":"getSequence","signature":"\u003cjavax.sound.midi.MidiSystem: javax.sound.midi.Sequence getSequence(java.io.InputStream)\u003e","javadoc":"/** \n * Obtains a MIDI sequence from the specified input stream.  The stream must point to valid MIDI file data for a file type recognized by the system. \u003cp\u003e This method and/or the code it invokes may need to read some data from the stream to determine whether its data format is supported.  The implementation may therefore need to mark the stream, read enough data to determine whether it is in a supported format, and reset the stream\u0027s read pointer to its original position.  If the input stream does not permit this set of operations, this method may fail with an \u003ccode\u003eIOException\u003c/code\u003e. \u003cp\u003e This operation can only succeed for files of a type which can be parsed by an installed file reader.  It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed.  It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while constructing the \u003ccode\u003eSequence\u003c/code\u003e object from the file data.\n * @param stream the input stream from which the \u003ccode\u003eSequence\u003c/code\u003eshould be constructed\n * @return a \u003ccode\u003eSequence\u003c/code\u003e object based on the MIDI file datacontained in the input stream\n * @throws InvalidMidiDataException if the stream does not point tovalid MIDI file data recognized by the system\n * @throws IOException if an I/O exception occurs while accessing thestream\n * @see InputStream#markSupported\n * @see InputStream#mark\n */\n","tf":{"freq":{"need":2,"permit":1,"type":2,"enough":1,"whether":2,"must":1,"specifi":1,"fail":3,"invalid":3,"oper":2,"sequenc":5,"file":10,"reset":1,"recogn":2,"except":6,"support":3,"succeed":1,"invok":1,"mark":3,"format":2,"system":2,"obtain":1,"input":6,"thestream":1,"reader":3,"tovalid":1,"determin":2,"will":1,"pointer":1,"even":1,"posit":1,"compat":2,"valid":2,"stream":12,"data":9,"therefor":1,"object":2,"midi":3,"datacontain":1,"read":3,"may":4,"error":1,"instal":3,"origin":1,"access":1,"point":2,"encount":1,"base":1,"method":2,"construct":2,"pars":1,"also":1,"occur":1},"maxFreq":12,"totalTerms":128},"loc":21}