{"id":28760,"className":"javax.sound.midi.MidiChannel","methodName":"setPitchBend","signature":"\u003cjavax.sound.midi.MidiChannel: void setPitchBend(int)\u003e","javadoc":"/** \n * Changes the pitch offset for all notes on this channel. This affects all currently sounding notes as well as subsequent ones. (For pitch bend to cease, the value needs to be reset to the center position.) \u003cp\u003e The MIDI specification stipulates that pitch bend be a 14-bit value, where zero is maximum downward bend, 16383 is maximum upward bend, and 8192 is the center (no pitch bend).  The actual amount of pitch change is not specified; it can be changed by a pitch-bend sensitivity setting.  However, the General MIDI specification says that the default range should be two semitones up and down from center. It is possible that the underlying synthesizer does not support this MIDI message. In order to verify that \u003ccode\u003esetPitchBend\u003c/code\u003e was successful, use \u003ccode\u003egetPitchBend\u003c/code\u003e.\n * @param bend the amount of pitch change, as a nonnegative 14-bit value(8192 \u003d no bend)\n * @see #getPitchBend\n */\n","tf":{"freq":{"need":1,"ceas":1,"stipul":1,"one":1,"bend":12,"use":1,"possibl":1,"well":1,"zero":1,"affect":1,"specifi":1,"amount":2,"center":3,"order":1,"rang":1,"verifi":1,"current":1,"downward":1,"reset":1,"valu":3,"howev":1,"subsequ":1,"offset":1,"note":2,"sensit":1,"support":1,"synthes":1,"semiton":1,"messag":1,"upward":1,"general":1,"two":1,"bit":2,"specif":2,"nonneg":1,"sound":1,"maximum":2,"say":1,"actual":1,"chang":4,"success":1,"channel":1,"pitch":11,"posit":1},"maxFreq":12,"totalTerms":77},"loc":0}