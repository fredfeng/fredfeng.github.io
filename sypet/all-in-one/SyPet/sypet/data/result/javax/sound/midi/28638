{"id":28638,"className":"javax.sound.midi.Synthesizer","methodName":"loadInstruments","signature":"\u003cjavax.sound.midi.Synthesizer: boolean loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch[])\u003e","javadoc":"/** \n * Loads the instruments referenced by the specified patches, from the specified \u003ccode\u003eSoundbank\u003c/code\u003e.  Each of the \u003ccode\u003ePatch\u003c/code\u003e objects indicates a bank and program number; the \u003ccode\u003eInstrument\u003c/code\u003e that has the matching \u003ccode\u003ePatch\u003c/code\u003e is loaded into that bank and program location.\n * @param soundbank the \u003ccode\u003eSoundbank\u003c/code\u003e containing the instruments to load\n * @param patchList list of patches for which instruments should be loaded\n * @return \u003ccode\u003etrue\u003c/code\u003e if the instruments are all successfully loaded (oralready had been), \u003ccode\u003efalse\u003c/code\u003e if any instrument could not be loaded (for example, if the \u003ccode\u003eSynthesizer\u003c/code\u003e had insufficient memory)\n * @throws IllegalArgumentException thrown if the soundbank is not supported.\n * @see #isSoundbankSupported\n * @see Instrument#getPatch\n * @see #loadAllInstruments\n * @see #loadInstrument\n * @see Soundbank#getInstrument(Patch)\n * @see Sequence#getPatchList()\n */\n","tf":{"freq":{"fals":1,"memori":1,"object":1,"soundbank":6,"specifi":2,"referenc":1,"indic":1,"sequenc":1,"bank":2,"argument":1,"oralreadi":1,"thrown":1,"except":1,"locat":1,"support":2,"synthes":1,"true":1,"number":1,"list":3,"instrument":11,"illeg":1,"insuffici":1,"program":2,"contain":1,"exampl":1,"load":9,"match":1,"success":1,"patch":8},"maxFreq":11,"totalTerms":65},"loc":0}