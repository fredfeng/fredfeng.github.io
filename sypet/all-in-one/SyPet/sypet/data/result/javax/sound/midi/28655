{"id":28655,"className":"javax.sound.midi.MidiFileFormat","methodName":"MidiFileFormat","signature":"\u003cjavax.sound.midi.MidiFileFormat: void MidiFileFormat(int,float,int,int,long,java.util.Map)\u003e","javadoc":"/** \n * Construct a \u003ccode\u003eMidiFileFormat\u003c/code\u003e with a set of properties.\n * @param type         the MIDI file type (0, 1, or 2)\n * @param divisionType the timing division type(PPQ or one of the SMPTE types)\n * @param resolution   the timing resolution\n * @param bytes the length of the MIDI file in bytes,or UNKNOWN_LENGTH if not known\n * @param microseconds the duration of the file in microseconds,or UNKNOWN_LENGTH if not known\n * @param properties  a \u003ccode\u003eMap\u0026lt;String,Object\u0026gt;\u003c/code\u003e objectwith properties\n * @see #UNKNOWN_LENGTH\n * @see Sequence#PPQ\n * @see Sequence#SMPTE_24\n * @see Sequence#SMPTE_25\n * @see Sequence#SMPTE_30DROP\n * @see Sequence#SMPTE_30\n * @since 1.5\n */\n","tf":{"freq":{"one":1,"object":1,"format":2,"type":5,"objectwith":1,"durat":1,"microsecond":2,"resolut":2,"midi":2,"time":2,"sequenc":5,"file":5,"string":1,"map":1,"length":1,"construct":1,"properti":3,"known":2,"divis":2},"maxFreq":5,"totalTerms":40},"loc":4}