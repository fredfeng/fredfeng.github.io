{"id":28831,"className":"javax.sound.midi.Sequencer","methodName":"setLoopCount","signature":"\u003cjavax.sound.midi.Sequencer: void setLoopCount(int)\u003e","javadoc":"/** \n * Sets the number of repetitions of the loop for playback. When the playback position reaches the loop end point, it will loop back to the loop start point \u003ccode\u003ecount\u003c/code\u003e times, after which playback will continue to play to the end of the sequence. \u003cp\u003e If the current position when this method is invoked is greater than the loop end point, playback continues to the end of the sequence without looping, unless the loop end point is changed subsequently. \u003cp\u003e A \u003ccode\u003ecount\u003c/code\u003e value of 0 disables looping: playback will continue at the loop end point, and it will not loop back to the loop start point. This is a sequencer\u0027s default. \u003cp\u003eIf playback is stopped during looping, the current loop status is cleared; subsequent start requests are not affected by an interrupted loop operation.\n * @param count the number of times playback shouldloop back from the loop\u0027s end position to the loop\u0027s start position, or \u003ccode\u003e {@link #LOOP_CONTINUOUSLY}\u003c/code\u003e to indicate that looping should continue until interrupted\n * @throws IllegalArgumentException if \u003ccode\u003ecount\u003c/code\u003e isnegative and not equal to  {@link #LOOP_CONTINUOUSLY}\n * @see #setLoopStartPoint\n * @see #setLoopEndPoint\n * @see #getLoopCount\n * @see #start\n * @since 1.5\n */\n","tf":{"freq":{"stop":1,"greater":1,"count":6,"link":2,"isneg":1,"affect":1,"clear":1,"reach":1,"time":2,"indic":1,"unless":1,"oper":1,"sequenc":3,"request":1,"loop":21,"current":2,"valu":1,"shouldloop":1,"subsequ":2,"end":8,"argument":1,"except":1,"status":1,"invok":1,"play":1,"back":3,"equal":1,"number":2,"illeg":1,"without":1,"interrupt":2,"continu":4,"point":8,"disabl":1,"playback":7,"repetit":1,"start":6,"will":4,"method":1,"chang":1,"posit":4},"maxFreq":21,"totalTerms":110},"loc":0}