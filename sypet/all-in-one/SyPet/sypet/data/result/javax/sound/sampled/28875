{"id":28875,"className":"javax.sound.sampled.AudioSystem","methodName":"getAudioFileFormat","signature":"\u003cjavax.sound.sampled.AudioSystem: javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)\u003e","javadoc":"/** \n * Obtains the audio file format of the provided input stream.  The stream must point to valid audio file data.  The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream\u0027s read pointer to its original position.  If the input stream does not support these operations, this method may fail with an \u003ccode\u003eIOException\u003c/code\u003e.\n * @param stream the input stream from which file format information should beextracted\n * @return an \u003ccode\u003eAudioFileFormat\u003c/code\u003e object describing the stream\u0027s audio file format\n * @throws UnsupportedAudioFileException if the stream does not point to valid audiofile data recognized by the system\n * @throws IOException if an input/output exception occurs\n * @see InputStream#markSupported\n * @see InputStream#mark\n */\n","tf":{"freq":{"audiofil":1,"valid":2,"unsupport":1,"stream":13,"data":3,"object":1,"abl":1,"enough":1,"must":2,"whether":2,"requir":1,"fail":1,"oper":1,"file":7,"reset":1,"read":2,"recogn":1,"examin":1,"except":4,"may":2,"support":4,"audio":6,"multipl":1,"beextract":1,"origin":1,"describ":1,"mark":3,"format":5,"provid":1,"inform":1,"point":2,"system":1,"input":6,"obtain":1,"determin":2,"pointer":1,"method":2,"output":1,"posit":1,"parser":2,"occur":1},"maxFreq":13,"totalTerms":92},"loc":21}