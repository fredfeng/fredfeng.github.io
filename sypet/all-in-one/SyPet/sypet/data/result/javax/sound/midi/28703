{"id":28703,"className":"javax.sound.midi.MidiSystem","methodName":"getMidiFileFormat","signature":"\u003cjavax.sound.midi.MidiSystem: javax.sound.midi.MidiFileFormat getMidiFileFormat(java.net.URL)\u003e","javadoc":"/** \n * Obtains the MIDI file format of the data in the specified URL.  The URL must point to valid MIDI file data for a file type recognized by the system. \u003cp\u003e This operation can only succeed for files of a type which can be parsed by an installed file reader.  It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed.  It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while determining the file format.\n * @param url the URL from which file format information should beextracted\n * @return a \u003ccode\u003eMidiFileFormat\u003c/code\u003e object describing the MIDI fileformat\n * @throws InvalidMidiDataException if the URL does not point to valid MIDIfile data recognized by the system\n * @throws IOException if an I/O exception occurs while accessing the URL\n * @see #getMidiFileFormat(InputStream)\n * @see #getMidiFileFormat(File)\n */\n","tf":{"freq":{"valid":3,"stream":1,"data":6,"object":1,"type":2,"must":1,"specifi":1,"midi":7,"fail":2,"invalid":3,"oper":1,"file":15,"recogn":2,"fileformat":1,"may":1,"except":5,"succeed":1,"error":1,"difil":1,"instal":3,"beextract":1,"describ":1,"format":7,"access":1,"url":1,"inform":1,"point":2,"input":1,"system":2,"obtain":1,"reader":3,"encount":1,"determin":1,"will":1,"even":1,"also":1,"pars":1,"occur":1,"compat":2},"maxFreq":15,"totalTerms":88},"loc":21}