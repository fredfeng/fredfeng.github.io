{"id":29015,"className":"javax.sound.sampled.DataLine","methodName":"isActive","signature":"\u003cjavax.sound.sampled.DataLine: boolean isActive()\u003e","javadoc":"/** \n * Indicates whether the line is engaging in active I/O (such as playback or capture).  When an inactive line becomes active, it sends a \u003ccode\u003e {@link LineEvent.Type#START START}\u003c/code\u003e event to its listeners.  Similarly, when an active line becomes inactive, it sends a \u003ccode\u003e {@link LineEvent.Type#STOP STOP}\u003c/code\u003e event.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the line is actively capturing or renderingsound, otherwise \u003ccode\u003efalse\u003c/code\u003e\n * @see #isOpen\n * @see #addLineListener\n * @see #removeLineListener\n * @see LineEvent\n * @see LineListener\n */\n","tf":{"freq":{"fals":1,"otherwis":1,"send":2,"link":2,"remov":1,"true":1,"line":10,"add":1,"type":2,"activ":5,"inact":2,"whether":1,"renderingsound":1,"open":1,"becom":2,"indic":1,"playback":1,"event":5,"engag":1,"captur":2,"listen":4,"similar":1},"maxFreq":10,"totalTerms":48},"loc":0}