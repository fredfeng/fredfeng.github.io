{"id":29011,"className":"javax.sound.sampled.DataLine","methodName":"flush","signature":"\u003cjavax.sound.sampled.DataLine: void flush()\u003e","javadoc":"/** \n * Flushes queued data from the line.  The flushed data is discarded. In some cases, not all queued data can be discarded.  For example, a mixer can flush data from the buffer for a specific input line, but any unplayed data already in the output buffer (the result of the mix) will still be played.  You can invoke this method after pausing a line (the normal case) if you want to skip the \"stale\" data when you restart playback or capture. (It is legal to flush a line that is not stopped, but doing so on an active line is likely to cause a discontinuity in the data, resulting in a perceptible click.)\n * @see #stop()\n * @see #drain()\n */\n","tf":{"freq":{"legal":1,"stop":2,"result":2,"normal":1,"percept":1,"data":7,"click":1,"line":5,"activ":1,"discard":2,"skip":1,"buffer":2,"unplay":1,"mixer":1,"captur":1,"want":1,"restart":1,"invok":1,"queu":2,"play":1,"still":1,"like":1,"drain":1,"mix":1,"input":1,"specif":1,"caus":1,"flush":5,"playback":1,"paus":1,"discontinu":1,"exampl":1,"will":1,"alreadi":1,"method":1,"output":1,"stale":1},"maxFreq":7,"totalTerms":56},"loc":0}