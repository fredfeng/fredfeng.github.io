{"id":22210,"className":"javax.swing.text.AbstractDocument","methodName":"readUnlock","signature":"\u003cjavax.swing.text.AbstractDocument: void readUnlock()\u003e","javadoc":"/** \n * Does a read unlock.  This signals that one of the readers is done.  If there are no more readers then writing can begin again.  This should be balanced with a readLock, and should occur in a finally statement so that the balance is guaranteed.  The following is an example. \u003cpre\u003e\u003ccode\u003e \u0026nbsp;   readLock(); \u0026nbsp;   try { \u0026nbsp;       // do something \u0026nbsp;   } finally { \u0026nbsp;       readUnlock(); \u0026nbsp;   } \u003c/code\u003e\u003c/pre\u003e\n * @see #readLock\n */\n","tf":{"freq":{"balanc":2,"unlock":3,"guarante":1,"one":1,"done":1,"lock":3,"signal":1,"someth":1,"begin":1,"statement":1,"reader":2,"pre":2,"exampl":1,"write":1,"read":6,"nbsp":6,"follow":1,"occur":1},"maxFreq":6,"totalTerms":35},"loc":12}