{"id":14391,"className":"javax.swing.JList","methodName":"getPreferredScrollableViewportSize","signature":"\u003cjavax.swing.JList: java.awt.Dimension getPreferredScrollableViewportSize()\u003e","javadoc":"/** \n * Computes the size of viewport needed to display  {@code visibleRowCount}rows. The value returned by this method depends on the layout orientation: \u003cp\u003e \u003cb\u003e {@code VERTICAL}:\u003c/b\u003e \u003cbr\u003e This is trivial if both  {@code fixedCellWidth} and {@code fixedCellHeight}have been set (either explicitly or by specifying a prototype cell value). The width is simply the  {@code fixedCellWidth} plus the list\u0027s horizontalinsets. The height is the  {@code fixedCellHeight} multiplied by the{@code visibleRowCount}, plus the list\u0027s vertical insets. \u003cp\u003e If either  {@code fixedCellWidth} or {@code fixedCellHeight} haven\u0027t beenspecified, heuristics are used. If the model is empty, the width is the  {@code fixedCellWidth}, if greater than  {@code 0}, or a hard-coded value of  {@code 256}. The height is the  {@code fixedCellHeight} multipliedby  {@code visibleRowCount}, if  {@code fixedCellHeight} is greater than{@code 0}, otherwise it is a hard-coded value of  {@code 16} multiplied by{@code visibleRowCount}. \u003cp\u003e If the model isn\u0027t empty, the width is the preferred size\u0027s width, typically the width of the widest list element. The height is the {@code fixedCellHeight} multiplied by the {@code visibleRowCount}, plus the list\u0027s vertical insets. \u003cp\u003e \u003cb\u003e {@code VERTICAL_WRAP} or {@code HORIZONTAL_WRAP}:\u003c/b\u003e \u003cbr\u003e This method simply returns the value from  {@code getPreferredSize}. The list\u0027s  {@code ListUI} is expected to override {@code getPreferredSize}to return an appropriate value.\n * @return a dimension containing the size of the viewport neededto display  {@code visibleRowCount} rows\n * @see #getPreferredScrollableViewportSize\n * @see #setPrototypeCellValue\n */\n","tf":{"freq":{"otherwis":1,"need":1,"model":2,"simpli":2,"greater":2,"scrollabl":2,"count":6,"visibl":6,"trivial":1,"typic":1,"use":1,"prototyp":2,"specifi":1,"expect":1,"widest":1,"height":9,"fix":10,"neededto":1,"layout":1,"multipli":3,"valu":7,"hard":2,"heurist":1,"element":1,"plus":3,"viewport":4,"vertic":2,"inset":2,"depend":1,"cell":12,"width":9,"horizontalinset":1,"list":6,"display":2,"dimens":1,"row":8,"empti":2,"size":7,"either":2,"orient":1,"explicit":1,"appropri":1,"contain":1,"comput":1,"method":2,"prefer":5,"multipliedbi":1,"beenspecifi":1},"maxFreq":12,"totalTerms":141},"loc":36}