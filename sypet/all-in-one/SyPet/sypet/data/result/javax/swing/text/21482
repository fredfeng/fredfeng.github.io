{"id":21482,"className":"javax.swing.text.CompositeView","methodName":"replace","signature":"\u003cjavax.swing.text.CompositeView: void replace(int,int,javax.swing.text.View[])\u003e","javadoc":"/** \n * Replaces child views.  If there are no views to remove this acts as an insert.  If there are no views to add this acts as a remove.  Views being removed will have the parent set to \u003ccode\u003enull\u003c/code\u003e, and the internal reference to them removed so that they may be garbage collected.\n * @param offset the starting index into the child views to insertthe new views; \u003e\u003d 0 and \u003c\u003d getViewCount\n * @param length the number of existing child views to remove;this should be a value \u003e\u003d 0 and \u003c\u003d (getViewCount() - offset)\n * @param views the child views to add; this value can be\u003ccode\u003enull\u003c/code\u003e to indicate no children are being added (useful to remove)\n */\n","tf":{"freq":{"count":2,"use":1,"children":1,"garbag":1,"add":2,"child":4,"indic":1,"refer":1,"length":1,"valu":2,"offset":2,"insertth":1,"exist":1,"may":1,"index":1,"remov":6,"parent":1,"number":1,"start":1,"replac":2,"intern":1,"will":1,"ad":1,"view":11,"insert":1,"act":2,"collect":1},"maxFreq":11,"totalTerms":51},"loc":41}