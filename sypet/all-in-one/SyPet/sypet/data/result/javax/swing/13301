{"id":13301,"className":"javax.swing.JSlider","methodName":"createStandardLabels","signature":"\u003cjavax.swing.JSlider: java.util.Hashtable createStandardLabels(int,int)\u003e","javadoc":"/** \n * Creates a  {@code Hashtable} of numerical text labels, starting at thestarting point specified, and using the increment specified. For example, if you call \u003ccode\u003ecreateStandardLabels( 10, 2 )\u003c/code\u003e, then labels will be created for the values 2, 12, 22, 32, and so on. \u003cp\u003e For the labels to be drawn on the slider, the returned  {@code Hashtable}must be passed into  {@code setLabelTable}, and  {@code setPaintLabels}must be set to  {@code true}. \u003cp\u003e For further details on the makeup of the returned  {@code Hashtable}, see the  {@code setLabelTable} documentation.\n * @param increment  distance between labels in the generated hashtable\n * @param start      value at which the labels will begin\n * @return a new {@code Hashtable} of labels\n * @see #setLabelTable\n * @see #setPaintLabels\n * @exception IllegalArgumentException if {@code start} isout of range, or if  {@code increment} is less than or equalto zero\n */\n","tf":{"freq":{"slider":1,"call":1,"detail":1,"makeup":1,"isout":1,"use":1,"zero":1,"must":2,"specifi":2,"document":1,"rang":1,"valu":2,"less":1,"drawn":1,"argument":1,"thestart":1,"increment":3,"except":2,"text":1,"standard":2,"numer":1,"hashtabl":5,"creat":4,"true":1,"label":13,"paint":2,"illeg":1,"begin":1,"pass":1,"point":1,"start":3,"tabl":3,"generat":1,"distanc":1,"exampl":1,"will":2,"equalto":1},"maxFreq":13,"totalTerms":69},"loc":101}