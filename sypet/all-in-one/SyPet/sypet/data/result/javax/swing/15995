{"id":15995,"className":"javax.swing.TransferHandler","methodName":"importData","signature":"\u003cjavax.swing.TransferHandler: boolean importData(javax.swing.TransferHandler$TransferSupport)\u003e","javadoc":"/** \n * Causes a transfer to occur from a clipboard or a drag and drop operation. The \u003ccode\u003eTransferable\u003c/code\u003e to be imported and the component to transfer to are contained within the \u003ccode\u003eTransferSupport\u003c/code\u003e. \u003cp\u003e While the drag and drop implementation calls  {@code canImport}to determine the suitability of a transfer before calling this method, the implementation of paste does not. As such, it cannot be assumed that the transfer is acceptable upon a call to this method for paste. It is recommended that  {@code canImport} beexplicitly called to cover this case. \u003cp\u003e Note: The \u003ccode\u003eTransferSupport\u003c/code\u003e object passed to this method is only valid for the duration of the method call. It is undefined what values it may contain after this method returns.\n * @param support the object containing the details ofthe transfer, not \u003ccode\u003enull\u003c/code\u003e.\n * @return true if the data was inserted into the component,false otherwise\n * @throws NullPointerException if \u003ccode\u003esupport\u003c/code\u003e is {@code null}\n * @see #canImport(TransferHandler.TransferSupport)\n * @since 1.6\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"valid":1,"call":5,"detail":1,"drop":2,"accept":1,"suitabl":1,"data":2,"object":2,"beexplicit":1,"recommend":1,"durat":1,"cover":1,"oper":1,"ofth":1,"valu":1,"undefin":1,"note":1,"except":1,"may":1,"transfer":10,"support":5,"assum":1,"drag":2,"true":1,"past":2,"pass":1,"caus":1,"compon":2,"contain":3,"determin":1,"pointer":1,"method":5,"within":1,"insert":1,"clipboard":1,"handler":1,"occur":1,"upon":1},"maxFreq":10,"totalTerms":69},"loc":5}