{"id":21184,"className":"javax.swing.text.JTextComponent","methodName":"loadKeymap","signature":"\u003cjavax.swing.text.JTextComponent: void loadKeymap(javax.swing.text.Keymap,javax.swing.text.JTextComponent.KeyBinding[],javax.swing.Action[])\u003e","javadoc":"/** \n * \u003cp\u003e Loads a keymap with a bunch of bindings.  This can be used to take a static table of definitions and load them into some keymap.  The following example illustrates an example of binding some keys to the cut, copy, and paste actions associated with a JTextComponent.  A code fragment to accomplish this might look as follows: \u003cpre\u003e\u003ccode\u003e static final JTextComponent.KeyBinding[] defaultBindings \u003d { new JTextComponent.KeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_MASK), DefaultEditorKit.copyAction), new JTextComponent.KeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_V, InputEvent.CTRL_MASK), DefaultEditorKit.pasteAction), new JTextComponent.KeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_MASK), DefaultEditorKit.cutAction), }; JTextComponent c \u003d new JTextPane(); Keymap k \u003d c.getKeymap(); JTextComponent.loadKeymap(k, defaultBindings, c.getActions()); \u003c/code\u003e\u003c/pre\u003e The sets of bindings and actions may be empty but must be non-\u003ccode\u003enull\u003c/code\u003e.\n * @param map the keymap\n * @param bindings the bindings\n * @param actions the set of actions\n */\n","tf":{"freq":{"might":1,"accomplish":1,"keymap":7,"use":1,"must":1,"copi":2,"stroke":6,"associ":1,"event":6,"map":1,"action":8,"bunch":1,"fragment":1,"kit":3,"key":14,"follow":2,"look":1,"may":1,"past":2,"non":1,"empti":1,"pane":1,"editor":3,"input":3,"jtext":8,"compon":7,"tabl":1,"take":1,"pre":2,"definit":1,"exampl":2,"load":4,"cut":2,"bind":11,"illustr":1},"maxFreq":14,"totalTerms":109},"loc":13}