{"id":15357,"className":"javax.swing.JRootPane","methodName":"setGlassPane","signature":"\u003cjavax.swing.JRootPane: void setGlassPane(java.awt.Component)\u003e","javadoc":"/** \n * Sets a specified \u003ccode\u003eComponent\u003c/code\u003e to be the glass pane for this root pane.  The glass pane should normally be a lightweight, transparent component, because it will be made visible when ever the root pane needs to grab input events. \u003cp\u003e The new glass pane\u0027s visibility is changed to match that of the current glass pane.  An implication of this is that care must be taken when you want to replace the glass pane and make it visible.  Either of the following will work: \u003cpre\u003e root.setGlassPane(newGlassPane); newGlassPane.setVisible(true); \u003c/pre\u003e or: \u003cpre\u003e root.getGlassPane().setVisible(true); root.setGlassPane(newGlassPane); \u003c/pre\u003e\n * @param glass the \u003ccode\u003eComponent\u003c/code\u003e to use as the glass panefor this \u003ccode\u003eJRootPane\u003c/code\u003e\n * @exception NullPointerException if the \u003ccode\u003eglass\u003c/code\u003e parameter is\u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"need":1,"grab":1,"root":5,"visibl":5,"normal":1,"made":1,"use":1,"must":1,"specifi":1,"transpar":1,"event":1,"glass":15,"current":1,"care":1,"taken":1,"want":1,"follow":1,"work":1,"panefor":1,"except":2,"implic":1,"paramet":1,"true":2,"jroot":1,"pane":15,"either":1,"input":1,"compon":3,"pre":4,"replac":1,"will":2,"pointer":1,"lightweight":1,"chang":1,"match":1,"make":1,"ever":1},"maxFreq":15,"totalTerms":81},"loc":21}