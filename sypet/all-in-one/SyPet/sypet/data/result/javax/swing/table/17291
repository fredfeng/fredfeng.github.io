{"id":17291,"className":"javax.swing.table.TableColumnModel","methodName":"moveColumn","signature":"\u003cjavax.swing.table.TableColumnModel: void moveColumn(int,int)\u003e","javadoc":"/** \n * Moves the column and its header at \u003ccode\u003ecolumnIndex\u003c/code\u003e to \u003ccode\u003enewIndex\u003c/code\u003e.  The old column at \u003ccode\u003ecolumnIndex\u003c/code\u003e will now be found at \u003ccode\u003enewIndex\u003c/code\u003e.  The column that used to be at \u003ccode\u003enewIndex\u003c/code\u003e is shifted left or right to make room.  This will not move any columns if \u003ccode\u003ecolumnIndex\u003c/code\u003e equals \u003ccode\u003enewIndex\u003c/code\u003e.  This method posts a \u003ccode\u003ecolumnMoved\u003c/code\u003e event to its listeners.\n * @param columnIndex                     the index of column to be moved\n * @param newIndex                        index of the column\u0027s new location\n * @exception IllegalArgumentException      if \u003ccode\u003ecolumnIndex\u003c/code\u003e or\u003ccode\u003enewIndex\u003c/code\u003e are not in the valid range\n */\n","tf":{"freq":{"valid":1,"old":1,"use":1,"rang":1,"event":1,"left":1,"right":1,"listen":1,"move":5,"argument":1,"index":13,"locat":1,"except":2,"post":1,"equal":1,"illeg":1,"header":1,"now":1,"will":2,"column":13,"method":1,"make":1,"shift":1,"found":1,"room":1},"maxFreq":13,"totalTerms":55},"loc":0}