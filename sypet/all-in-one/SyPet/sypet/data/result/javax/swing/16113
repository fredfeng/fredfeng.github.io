{"id":16113,"className":"javax.swing.RowFilter","methodName":"dateFilter","signature":"\u003cjavax.swing.RowFilter: javax.swing.RowFilter\u003cM,I\u003e dateFilter(javax.swing.ComparisonType,java.util.Date,int[])\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eRowFilter\u003c/code\u003e that includes entries that have at least one \u003ccode\u003eDate\u003c/code\u003e value meeting the specified criteria.  For example, the following \u003ccode\u003eRowFilter\u003c/code\u003e includes only entries with at least one date value after the current date: \u003cpre\u003e RowFilter.dateFilter(ComparisonType.AFTER, new Date()); \u003c/pre\u003e\n * @param type the type of comparison to perform\n * @param date the date to compare against\n * @param indices the indices of the values to check.  If not supplied allvalues are evaluated\n * @return a \u003ccode\u003eRowFilter\u003c/code\u003e implementing the specified criteria\n * @throws NullPointerException if \u003ccode\u003edate\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if any of the \u003ccode\u003eindices\u003c/code\u003eare \u0026lt; 0 or \u003ccode\u003etype\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @see java.util.Calendar\n * @see java.util.Date\n */\n","tf":{"freq":{"allvalu":1,"least":2,"one":2,"perform":1,"date":10,"type":4,"specifi":2,"indic":3,"current":1,"valu":3,"calendar":1,"follow":1,"argument":1,"except":2,"includ":2,"criteria":2,"check":1,"entri":2,"suppli":1,"evalu":1,"meet":1,"illeg":1,"row":4,"comparison":2,"pre":2,"exampl":1,"pointer":1,"java":2,"compar":1,"util":2,"filter":6},"maxFreq":10,"totalTerms":66},"loc":3}