{"id":19954,"className":"javax.swing.plaf.synth.SynthGraphicsUtils","methodName":"drawLine","signature":"\u003cjavax.swing.plaf.synth.SynthGraphicsUtils: void drawLine(javax.swing.plaf.synth.SynthContext,java.lang.Object,java.awt.Graphics,int,int,int,int,java.lang.Object)\u003e","javadoc":"/** \n * Draws a line between the two end points. \u003cp\u003eThis implementation supports only one line style key, \u003ccode\u003e\"dashed\"\u003c/code\u003e. The \u003ccode\u003e\"dashed\"\u003c/code\u003e line style is applied only to vertical and horizontal lines. \u003cp\u003eSpecifying \u003ccode\u003enull\u003c/code\u003e or any key different from \u003ccode\u003e\"dashed\"\u003c/code\u003e will draw solid lines.\n * @param context identifies hosting region\n * @param paintKey identifies the portion of the component being askedto paint, may be null\n * @param g Graphics object to paint to\n * @param x1 x origin\n * @param y1 y origin\n * @param x2 x destination\n * @param y2 y destination\n * @param styleKey identifies the requested style of the line (e.g. \"dashed\")\n * @since 1.6\n */\n","tf":{"freq":{"region":1,"graphic":1,"one":1,"line":7,"identifi":3,"object":1,"specifi":1,"draw":3,"style":4,"request":1,"horizont":1,"key":4,"end":1,"portion":1,"may":1,"support":1,"host":1,"vertic":1,"origin":2,"paint":3,"point":1,"two":1,"differ":1,"solid":1,"appli":1,"dash":4,"compon":1,"askedto":1,"will":1,"context":1,"destin":2},"maxFreq":7,"totalTerms":54},"loc":22}