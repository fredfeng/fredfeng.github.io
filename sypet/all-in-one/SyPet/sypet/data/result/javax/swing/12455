{"id":12455,"className":"javax.swing.DefaultListSelectionModel","methodName":"isLeadAnchorNotificationEnabled","signature":"\u003cjavax.swing.DefaultListSelectionModel: boolean isLeadAnchorNotificationEnabled()\u003e","javadoc":"/** \n * Returns the value of the \u003ccode\u003eleadAnchorNotificationEnabled\u003c/code\u003e flag. When \u003ccode\u003eleadAnchorNotificationEnabled\u003c/code\u003e is true the model generates notification events with bounds that cover all the changes to the selection plus the changes to the lead and anchor indices. Setting the flag to false causes a narrowing of the event\u0027s bounds to include only the elements that have been selected or deselected since the last change. Either way, the model continues to maintain the lead and anchor variables internally. The default is true. \u003cp\u003e Note: It is possible for the lead or anchor to be changed without a change to the selection. Notification of these changes is often important, such as when the new lead or anchor needs to be updated in the view. Therefore, caution is urged when changing the default value.\n * @return  the value of the \u003ccode\u003eleadAnchorNotificationEnabled\u003c/code\u003e flag\n * @see #setLeadAnchorNotificationEnabled(boolean)\n */\n","tf":{"freq":{"need":1,"fals":1,"model":2,"last":1,"caution":1,"variabl":1,"maintain":1,"possibl":1,"way":1,"lead":9,"deselect":1,"therefor":1,"anchor":9,"notif":7,"cover":1,"indic":1,"event":2,"valu":3,"note":1,"plus":1,"element":1,"includ":1,"enabl":5,"select":3,"true":2,"urg":1,"without":1,"continu":1,"narrow":1,"either":1,"flag":3,"caus":1,"updat":1,"often":1,"generat":1,"intern":1,"view":1,"chang":7,"bound":2},"maxFreq":9,"totalTerms":81},"loc":3}