{"id":13442,"className":"javax.swing.SizeSequence","methodName":"insertEntries","signature":"\u003cjavax.swing.SizeSequence: void insertEntries(int,int,int)\u003e","javadoc":"/** \n * Adds a contiguous group of entries to this \u003ccode\u003eSizeSequence\u003c/code\u003e. Note that the values of \u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003elength\u003c/code\u003e must satisfy the following conditions:  \u003ccode\u003e(0 \u003c\u003d start \u003c getSizes().length) AND (length \u003e\u003d 0)\u003c/code\u003e.  If these conditions are not met, the behavior is unspecified and an exception may be thrown.\n * @param start   the index to be assigned to the first entryin the group\n * @param length  the number of entries in the group\n * @param value   the size to be assigned to each new entry\n * @exception ArrayIndexOutOfBoundsException if the parametersare outside of the range: (\u003ccode\u003e0 \u003c\u003d start \u003c (getSizes().length)) AND (length \u003e\u003d 0)\u003c/code\u003e\n */\n","tf":{"freq":{"unspecifi":1,"assign":2,"behavior":1,"entryin":1,"add":1,"must":1,"met":1,"rang":1,"sequenc":1,"length":6,"valu":2,"note":1,"follow":1,"condit":2,"except":3,"may":1,"thrown":1,"index":2,"entri":4,"number":1,"contigu":1,"parametersar":1,"size":4,"outsid":1,"start":4,"satisfi":1,"group":3,"insert":1,"first":1,"bound":1,"array":1},"maxFreq":6,"totalTerms":53},"loc":16}