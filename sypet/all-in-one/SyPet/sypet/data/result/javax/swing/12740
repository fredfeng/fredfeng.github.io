{"id":12740,"className":"javax.swing.JTree","methodName":"getClosestRowForLocation","signature":"\u003cjavax.swing.JTree: int getClosestRowForLocation(int,int)\u003e","javadoc":"/** \n * Returns the row to the node that is closest to x,y.  If no nodes are viewable or there is no model, returns -1. Otherwise, it always returns a valid row.  To test if the returned object is exactly at x, y, get the bounds for the node at the returned row and test x, y against that.\n * @param x an integer giving the number of pixels horizontally fromthe left edge of the display area, minus any left margin\n * @param y an integer giving the number of pixels vertically fromthe top of the display area, minus any top margin\n * @return the row closest to the location, -1 if nothing isviewable or there is no model\n * @see #getRowForLocation\n * @see #getRowBounds\n */\n","tf":{"freq":{"otherwis":1,"valid":1,"model":2,"edg":1,"test":2,"give":2,"pixel":2,"object":1,"area":2,"viewabl":1,"isview":1,"exact":1,"noth":1,"closest":3,"margin":2,"horizont":1,"left":2,"fromth":2,"top":2,"locat":3,"minus":2,"vertic":1,"alway":1,"number":2,"display":2,"row":7,"node":3,"integ":2,"bound":2},"maxFreq":7,"totalTerms":55},"loc":3}