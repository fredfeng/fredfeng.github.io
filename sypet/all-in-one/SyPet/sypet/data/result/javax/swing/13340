{"id":13340,"className":"javax.swing.RowSorter","methodName":"rowsInserted","signature":"\u003cjavax.swing.RowSorter: void rowsInserted(int,int)\u003e","javadoc":"/** \n * Invoked when rows have been inserted into the underlying model in the specified range (inclusive). \u003cp\u003e The arguments give the indices of the effected range. The first argument is in terms of the model before the change, and must be less than or equal to the size of the model before the change. The second argument is in terms of the model after the change and must be less than the size of the model after the change. For example, if you have a 5-row model and add 3 items to the end of the model the indices are 5, 7. \u003cp\u003e You normally do not call this method.  This method is public to allow view classes to call it.\n * @param firstRow the first row\n * @param endRow the last row\n * @throws IndexOutOfBoundsException if either argument is invalid, or\u003ccode\u003efirstRow\u003c/code\u003e \u0026gt; \u003ccode\u003eendRow\u003c/code\u003e\n */\n","tf":{"freq":{"call":2,"model":7,"last":1,"allow":1,"second":1,"give":1,"normal":1,"add":1,"must":2,"specifi":1,"inclus":1,"invalid":1,"indic":2,"rang":2,"less":2,"end":3,"argument":4,"except":1,"index":1,"invok":1,"equal":1,"row":9,"size":2,"either":1,"effect":1,"term":2,"item":1,"exampl":1,"method":2,"view":1,"chang":4,"insert":2,"first":4,"bound":1},"maxFreq":9,"totalTerms":68},"loc":0}