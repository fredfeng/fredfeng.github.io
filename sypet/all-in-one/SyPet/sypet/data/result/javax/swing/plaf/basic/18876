{"id":18876,"className":"javax.swing.plaf.basic.BasicListUI","methodName":"getPreferredSize","signature":"\u003cjavax.swing.plaf.basic.BasicListUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)\u003e","javadoc":"/** \n * The preferredSize of the list depends upon the layout orientation. \u003ctable summary\u003d\"Describes the preferred size for each layout orientation\"\u003e \u003ctr\u003e\u003cth\u003eLayout Orientation\u003c/th\u003e\u003cth\u003ePreferred Size\u003c/th\u003e\u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eJList.VERTICAL \u003ctd\u003eThe preferredSize of the list is total height of the rows and the maximum width of the cells.  If JList.fixedCellHeight is specified then the total height of the rows is just (cellVerticalMargins + fixedCellHeight) * model.getSize() where rowVerticalMargins is the space we allocate for drawing the yellow focus outline.  Similarly if fixedCellWidth is specified then we just use that. \u003c/td\u003e \u003ctr\u003e \u003ctd\u003eJList.VERTICAL_WRAP \u003ctd\u003eIf the visible row count is greater than zero, the preferredHeight is the maximum cell height * visibleRowCount. If the visible row count is \u003c\u003d 0, the preferred height is either the current height of the list, or the maximum cell height, whichever is bigger. The preferred width is than the maximum cell width  number of columns needed. Where the number of columns needs is list.height / max cell height. Max cell height is either the fixed cell height, or is determined by iterating through all the cells to find the maximum height from the ListCellRenderer. \u003ctr\u003e \u003ctd\u003eJList.HORIZONTAL_WRAP \u003ctd\u003eIf the visible row count is greater than zero, the preferredHeight is the maximum cell height * adjustedRowCount.  Where visibleRowCount is used to determine the number of columns. Because this lays out horizontally the number of rows is then determined from the column count.  For example, lets say you have a model with 10 items and the visible row count is 8. The number of columns needed to display this is 2, but you no longer need 8 rows to display this, you only need 5, thus the adjustedRowCount is 5. \u003cp\u003eIf the visible row count is \u003c\u003d 0, the preferred height is dictated by the number of columns, which will be as many as can fit in the width of the \u003ccode\u003eJList\u003c/code\u003e (width / max cell width), with at least one column.  The preferred height then becomes the model size / number of columns * maximum cell height. Max cell height is either the fixed cell height, or is determined by iterating through all the cells to find the maximum height from the ListCellRenderer. \u003c/table\u003e The above specifies the raw preferred width and height. The resulting preferred width is the above width + insets.left + insets.right and the resulting preferred height is the above height + insets.top + insets.bottom. Where the \u003ccode\u003eInsets\u003c/code\u003e are determined from \u003ccode\u003elist.getInsets()\u003c/code\u003e.\n * @param c The JList component.\n * @return The total size of the list.\n */\n","tf":{"freq":{"total":3,"need":5,"greater":2,"outlin":1,"count":10,"least":1,"yellow":1,"zero":2,"specifi":3,"draw":1,"whichev":1,"becom":1,"height":25,"longer":1,"margin":2,"focus":1,"right":1,"mani":1,"vertic":2,"cell":20,"width":10,"describ":1,"display":2,"number":7,"row":14,"size":8,"render":2,"summari":1,"maximum":8,"determin":5,"bottom":1,"will":1,"say":1,"column":8,"jlist":6,"prefer":14,"upon":1,"alloc":1,"raw":1,"result":2,"model":3,"bigger":1,"visibl":7,"one":1,"use":2,"space":1,"fit":1,"fix":5,"layout":3,"current":1,"adjust":2,"left":1,"horizont":1,"dictat":1,"find":2,"top":1,"similar":1,"just":2,"max":4,"thus":1,"inset":6,"lay":1,"depend":1,"list":8,"either":3,"orient":3,"compon":1,"tabl":2,"item":1,"exampl":1,"iter":2},"maxFreq":25,"totalTerms":248},"loc":27}