{"id":16596,"className":"javax.swing.border.AbstractBorder","methodName":"getBaseline","signature":"\u003cjavax.swing.border.AbstractBorder: int getBaseline(java.awt.Component,int,int)\u003e","javadoc":"/** \n * Returns the baseline.  A return value less than 0 indicates the border does not have a reasonable baseline. \u003cp\u003e The default implementation returns -1.  Subclasses that support baseline should override appropriately.  If a value \u0026gt;\u003d 0 is returned, then the component has a valid baseline for any size \u0026gt;\u003d the minimum size and \u003ccode\u003egetBaselineResizeBehavior\u003c/code\u003e can be used to determine how the baseline changes with size.\n * @param c \u003ccode\u003eComponent\u003c/code\u003e baseline is being requested for\n * @param width the width to get the baseline for\n * @param height the height to get the baseline for\n * @return the baseline or \u0026lt; 0 indicating there is no reasonablebaseline\n * @throws IllegalArgumentException if width or height is \u0026lt; 0\n * @see java.awt.Component#getBaseline(int,int)\n * @see java.awt.Component#getBaselineResizeBehavior()\n * @since 1.6\n */\n","tf":{"freq":{"valid":1,"reason":1,"minimum":1,"behavior":2,"use":1,"resiz":2,"height":3,"indic":2,"request":1,"valu":2,"border":1,"less":1,"argument":1,"except":1,"support":1,"width":3,"baselin":13,"reasonablebaselin":1,"illeg":1,"size":3,"awt":2,"compon":4,"appropri":1,"determin":1,"subclass":1,"java":2,"chang":1},"maxFreq":13,"totalTerms":54},"loc":7}