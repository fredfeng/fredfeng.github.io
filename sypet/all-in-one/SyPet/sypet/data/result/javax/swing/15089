{"id":15089,"className":"javax.swing.ListSelectionModel","methodName":"addSelectionInterval","signature":"\u003cjavax.swing.ListSelectionModel: void addSelectionInterval(int,int)\u003e","javadoc":"/** \n * Changes the selection to be the set union of the current selection and the indices between  {@code index0} and {@code index1} inclusive.{@code index0} doesn\u0027t have to be less than or equal to {@code index1}. \u003cp\u003e In  {@code SINGLE_SELECTION} selection mode, this is equivalentto calling  {@code setSelectionInterval}, and only the second index is used. In  {@code SINGLE_INTERVAL_SELECTION} selection mode, thismethod behaves like  {@code setSelectionInterval}, unless the given interval is immediately adjacent to or overlaps the existing selection, and can therefore be used to grow the selection. \u003cp\u003e If this represents a change to the current selection, then each {@code ListSelectionListener} is notified of the change.\n * @param index0 one end of the interval.\n * @param index1 other end of the interval\n * @see #addListSelectionListener\n * @see #setSelectionInterval\n */\n","tf":{"freq":{"call":1,"second":1,"behav":1,"one":1,"use":2,"therefor":1,"add":2,"mode":2,"inclus":1,"indic":1,"thismethod":1,"unless":1,"given":1,"union":1,"current":2,"immedi":1,"equivalentto":1,"listen":2,"exist":1,"end":2,"less":1,"notifi":1,"adjac":1,"index":7,"overlap":1,"repres":1,"select":13,"list":2,"equal":1,"like":1,"interv":7,"grow":1,"chang":3},"maxFreq":13,"totalTerms":66},"loc":0}