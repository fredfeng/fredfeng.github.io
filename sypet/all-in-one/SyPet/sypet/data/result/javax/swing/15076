{"id":15076,"className":"javax.swing.DefaultListModel","methodName":"insertElementAt","signature":"\u003cjavax.swing.DefaultListModel: void insertElementAt(E,int)\u003e","javadoc":"/** \n * Inserts the specified element as a component in this list at the specified \u003ccode\u003eindex\u003c/code\u003e. \u003cp\u003e Throws an \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e if the index is invalid. \u003cblockquote\u003e \u003cb\u003eNote:\u003c/b\u003e Although this method is not deprecated, the preferred method to use is \u003ccode\u003eadd(int,Object)\u003c/code\u003e, which implements the \u003ccode\u003eList\u003c/code\u003e interface defined in the 1.2 Collections framework. \u003c/blockquote\u003e\n * @param element the component to insert\n * @param index   where to insert the new component\n * @exception ArrayIndexOutOfBoundsException  if the index was invalid\n * @see #add(int,Object)\n * @see Vector#insertElementAt(Object,int)\n */\n","tf":{"freq":{"defin":1,"element":4,"deprec":1,"index":6,"except":3,"use":1,"list":2,"object":3,"add":2,"framework":1,"specifi":2,"although":1,"compon":3,"invalid":2,"vector":1,"blockquot":2,"method":2,"prefer":1,"insert":5,"bound":2,"note":1,"collect":1,"array":2},"maxFreq":6,"totalTerms":49},"loc":4}