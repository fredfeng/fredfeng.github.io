{"id":12920,"className":"javax.swing.JPasswordField","methodName":"JPasswordField","signature":"\u003cjavax.swing.JPasswordField: void JPasswordField(javax.swing.text.Document,java.lang.String,int)\u003e","javadoc":"/** \n * Constructs a new \u003ccode\u003eJPasswordField\u003c/code\u003e that uses the given text storage model and the given number of columns. This is the constructor through which the other constructors feed. The echo character is set to \u0027*\u0027, but may be changed by the current Look and Feel.  If the document model is \u003ccode\u003enull\u003c/code\u003e, a default one will be created.\n * @param doc  the text storage to use\n * @param txt the text to be displayed, \u003ccode\u003enull\u003c/code\u003e if none\n * @param columns  the number of columns to use to calculatethe preferred width \u003e\u003d 0; if columns is set to zero, the preferred width will be whatever naturally results from the component implementation\n */\n","tf":{"freq":{"result":1,"model":2,"one":1,"natur":1,"use":3,"zero":1,"password":1,"echo":1,"txt":1,"document":1,"given":2,"current":1,"none":1,"feed":1,"whatev":1,"constructor":2,"look":1,"feel":1,"text":3,"may":1,"charact":1,"creat":1,"width":2,"display":1,"number":2,"storag":2,"field":2,"compon":1,"calculateth":1,"column":4,"will":2,"construct":1,"chang":1,"prefer":2,"jpassword":1},"maxFreq":4,"totalTerms":51},"loc":7}