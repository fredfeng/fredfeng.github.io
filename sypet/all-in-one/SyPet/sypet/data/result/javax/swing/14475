{"id":14475,"className":"javax.swing.SpinnerDateModel","methodName":"SpinnerDateModel","signature":"\u003cjavax.swing.SpinnerDateModel: void SpinnerDateModel(java.util.Date,java.lang.Comparable,java.lang.Comparable,int)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eSpinnerDateModel\u003c/code\u003e that represents a sequence of dates between \u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003eend\u003c/code\u003e.  The \u003ccode\u003enextValue\u003c/code\u003e and \u003ccode\u003epreviousValue\u003c/code\u003e methods compute elements of the sequence by advancing or reversing the current date \u003ccode\u003evalue\u003c/code\u003e by the \u003ccode\u003ecalendarField\u003c/code\u003e time unit.  For a precise description of what it means to increment or decrement a \u003ccode\u003eCalendar\u003c/code\u003e \u003ccode\u003efield\u003c/code\u003e, see the \u003ccode\u003eadd\u003c/code\u003e method in \u003ccode\u003ejava.util.Calendar\u003c/code\u003e. \u003cp\u003e The \u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003eend\u003c/code\u003e parameters can be \u003ccode\u003enull\u003c/code\u003e to indicate that the range doesn\u0027t have an upper or lower bound.  If \u003ccode\u003evalue\u003c/code\u003e or \u003ccode\u003ecalendarField\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, or if both \u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003eend\u003c/code\u003e are specified and \u003ccode\u003emininum \u0026gt; maximum\u003c/code\u003e then an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown. Similarly if \u003ccode\u003e(minimum \u0026lt;\u003d value \u0026lt;\u003d maximum)\u003c/code\u003e is false, an IllegalArgumentException is thrown.\n * @param value the current (non \u003ccode\u003enull\u003c/code\u003e) value of the model\n * @param start the first date in the sequence or \u003ccode\u003enull\u003c/code\u003e\n * @param end the last date in the sequence or \u003ccode\u003enull\u003c/code\u003e\n * @param calendarField one of\u003cul\u003e \u003cli\u003e\u003ccode\u003eCalendar.ERA\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.YEAR\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.MONTH\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.WEEK_OF_YEAR\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.WEEK_OF_MONTH\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.DAY_OF_MONTH\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.DAY_OF_YEAR\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.DAY_OF_WEEK\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.DAY_OF_WEEK_IN_MONTH\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.AM_PM\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.HOUR\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.HOUR_OF_DAY\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.MINUTE\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.SECOND\u003c/code\u003e \u003cli\u003e\u003ccode\u003eCalendar.MILLISECOND\u003c/code\u003e \u003c/ul\u003e\n * @throws IllegalArgumentException if \u003ccode\u003evalue\u003c/code\u003e or\u003ccode\u003ecalendarField\u003c/code\u003e are \u003ccode\u003enull\u003c/code\u003e, if \u003ccode\u003ecalendarField\u003c/code\u003e isn\u0027t valid, or if the following expression is false: \u003ccode\u003e(start \u0026lt;\u003d value \u0026lt;\u003d end)\u003c/code\u003e.\n * @see Calendar#add\n * @see #setValue\n * @see #setStart\n * @see #setEnd\n * @see #setCalendarField\n */\n","tf":{"freq":{"fals":2,"lower":1,"last":1,"specifi":1,"time":1,"sequenc":4,"rang":1,"precis":1,"follow":1,"decrement":1,"argument":3,"element":1,"increment":1,"except":3,"thrown":2,"creat":1,"descript":1,"non":1,"spinner":2,"advanc":1,"start":6,"maximum":2,"comput":1,"util":1,"mininum":1,"valid":1,"model":3,"minimum":1,"one":1,"next":1,"express":1,"date":6,"add":2,"upper":1,"revers":1,"indic":1,"current":2,"mean":1,"valu":10,"end":6,"calendar":24,"similar":1,"previous":1,"repres":1,"paramet":1,"illeg":3,"field":7,"unit":1,"method":2,"java":1,"first":1,"bound":1},"maxFreq":24,"totalTerms":123},"loc":18}