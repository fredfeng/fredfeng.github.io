{"id":14208,"className":"javax.swing.JViewport","methodName":"setBorder","signature":"\u003cjavax.swing.JViewport: void setBorder(javax.swing.border.Border)\u003e","javadoc":"/** \n * The viewport \"scrolls\" its child (called the \"view\") by the normal parent/child clipping (typically the view is moved in the opposite direction of the scroll).  A non-\u003ccode\u003enull\u003c/code\u003e border, or non-zero insets, isn\u0027t supported, to prevent the geometry of this component from becoming complex enough to inhibit subclassing.  To create a \u003ccode\u003eJViewport\u003c/code\u003e with a border, add it to a \u003ccode\u003eJPanel\u003c/code\u003e that has a border. \u003cp\u003eNote:  If \u003ccode\u003eborder\u003c/code\u003e is non-\u003ccode\u003enull\u003c/code\u003e, this method will throw an exception as borders are not supported on a \u003ccode\u003eJViewPort\u003c/code\u003e.\n * @param border the \u003ccode\u003eBorder\u003c/code\u003e to set\n * @exception IllegalArgumentException this method is not implemented\n */\n","tf":{"freq":{"port":1,"call":1,"complex":1,"normal":1,"typic":1,"jpanel":1,"add":1,"opposit":1,"zero":1,"enough":1,"child":2,"becom":1,"inhibit":1,"border":8,"note":1,"move":1,"argument":1,"clip":1,"direct":1,"viewport":1,"except":3,"support":2,"creat":1,"scroll":2,"inset":1,"jview":1,"parent":1,"prevent":1,"illeg":1,"non":3,"compon":1,"will":1,"subclass":1,"jviewport":1,"method":2,"view":2,"geometri":1},"maxFreq":8,"totalTerms":53},"loc":5}