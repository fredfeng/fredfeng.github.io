{"id":21466,"className":"javax.swing.text.Utilities","methodName":"getTabbedTextOffset","signature":"\u003cjavax.swing.text.Utilities: int getTabbedTextOffset(javax.swing.text.Segment,java.awt.FontMetrics,int,int,javax.swing.text.TabExpander,int)\u003e","javadoc":"/** \n * Determines the relative offset into the given text that best represents the given span in the view coordinate system.  This is implemented in a 1.1 style coordinate system where ints are used and 72dpi is assumed.\n * @param s  the source of the text\n * @param metrics the font metrics to use for the calculation\n * @param x0 the starting view location representing the startof the given text \u003e\u003d 0.\n * @param x  the target view location to translate to anoffset into the text \u003e\u003d 0.\n * @param e  how to expand the tabs.  If this value is null,tabs will be expanded as a space character.\n * @param startOffset starting offset of the text in the document \u003e\u003d 0\n * @return  the offset into the text \u003e\u003d 0\n */\n","tf":{"freq":{"tab":3,"use":2,"space":1,"document":1,"startof":1,"given":3,"style":1,"relat":1,"expand":2,"best":1,"valu":1,"dpi":1,"offset":5,"coordin":2,"text":7,"locat":2,"assum":1,"charact":1,"repres":2,"font":1,"calcul":1,"translat":1,"system":2,"anoffset":1,"start":3,"metric":2,"determin":1,"will":1,"target":1,"sourc":1,"view":3,"span":1},"maxFreq":7,"totalTerms":57},"loc":3}