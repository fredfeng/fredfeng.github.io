{"id":19438,"className":"javax.swing.plaf.metal.MetalLookAndFeel","methodName":"setCurrentTheme","signature":"\u003cjavax.swing.plaf.metal.MetalLookAndFeel: void setCurrentTheme(javax.swing.plaf.metal.MetalTheme)\u003e","javadoc":"/** \n * Set the theme used by \u003ccode\u003eMetalLookAndFeel\u003c/code\u003e. \u003cp\u003e After the theme is set,  {@code MetalLookAndFeel} needs to bere-installed and the uis need to be recreated. The following shows how to do this: \u003cpre\u003e MetalLookAndFeel.setCurrentTheme(theme); // re-install the Metal Look and Feel UIManager.setLookAndFeel(new MetalLookAndFeel()); // Update the ComponentUIs for all Components. This // needs to be invoked for all windows. SwingUtilities.updateComponentTreeUI(rootComponent); \u003c/pre\u003e If this is not done the results are undefined.\n * @param theme the theme to use\n * @throws NullPointerException if {@code theme} is {@code null}\n * @see #getCurrentTheme\n */\n","tf":{"freq":{"need":3,"result":1,"root":1,"use":2,"show":1,"bere":1,"tree":1,"metal":5,"current":3,"undefin":1,"recreat":1,"swing":1,"follow":1,"ui":2,"look":6,"feel":6,"except":1,"manag":1,"invok":1,"instal":2,"theme":9,"done":1,"updat":2,"compon":4,"window":1,"pre":2,"pointer":1,"util":1},"maxFreq":9,"totalTerms":62},"loc":9}