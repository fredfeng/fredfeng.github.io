{"id":21221,"className":"javax.swing.text.JTextComponent","methodName":"getScrollableUnitIncrement","signature":"\u003cjavax.swing.text.JTextComponent: int getScrollableUnitIncrement(java.awt.Rectangle,int,int)\u003e","javadoc":"/** \n * Components that display logical rows or columns should compute the scroll increment that will completely expose one new row or column, depending on the value of orientation.  Ideally, components should handle a partially exposed row or column by returning the distance required to completely expose the item. \u003cp\u003e The default implementation of this is to simply return 10% of the visible area.  Subclasses are likely to be able to provide a much more reasonable value.\n * @param visibleRect the view area visible within the viewport\n * @param orientation either \u003ccode\u003eSwingConstants.VERTICAL\u003c/code\u003e or\u003ccode\u003eSwingConstants.HORIZONTAL\u003c/code\u003e\n * @param direction less than zero to scroll up/left, greater thanzero for down/right\n * @return the \"unit\" increment for scrolling in the specified direction\n * @exception IllegalArgumentException for an invalid orientation\n * @see JScrollBar#setUnitIncrement\n */\n","tf":{"freq":{"greater":1,"reason":1,"abl":1,"zero":1,"specifi":1,"requir":1,"invalid":1,"jscroll":1,"swing":2,"right":1,"argument":1,"increment":4,"except":2,"scroll":3,"display":1,"partial":1,"like":1,"rect":1,"provid":1,"logic":1,"row":3,"much":1,"thanzero":1,"distanc":1,"column":3,"will":1,"subclass":1,"comput":1,"view":1,"bar":1,"simpli":1,"scrollabl":1,"visibl":3,"one":1,"area":2,"valu":2,"expos":3,"left":1,"less":1,"complet":2,"direct":2,"viewport":1,"constant":2,"depend":1,"ideal":1,"illeg":1,"handl":1,"unit":3,"either":1,"orient":3,"compon":2,"item":1,"within":1},"maxFreq":4,"totalTerms":78},"loc":10}