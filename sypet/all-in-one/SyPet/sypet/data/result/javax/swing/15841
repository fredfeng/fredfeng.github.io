{"id":15841,"className":"javax.swing.JScrollPane","methodName":"setCorner","signature":"\u003cjavax.swing.JScrollPane: void setCorner(java.lang.String,java.awt.Component)\u003e","javadoc":"/** \n * Adds a child that will appear in one of the scroll panes corners, if there\u0027s room.   For example with both scrollbars showing (on the right and bottom edges of the scrollpane) the lower left corner component will be shown in the space between ends of the two scrollbars. Legal values for the \u003cb\u003ekey\u003c/b\u003e are: \u003cul\u003e \u003cli\u003eScrollPaneConstants.LOWER_LEFT_CORNER \u003cli\u003eScrollPaneConstants.LOWER_RIGHT_CORNER \u003cli\u003eScrollPaneConstants.UPPER_LEFT_CORNER \u003cli\u003eScrollPaneConstants.UPPER_RIGHT_CORNER \u003cli\u003eScrollPaneConstants.LOWER_LEADING_CORNER \u003cli\u003eScrollPaneConstants.LOWER_TRAILING_CORNER \u003cli\u003eScrollPaneConstants.UPPER_LEADING_CORNER \u003cli\u003eScrollPaneConstants.UPPER_TRAILING_CORNER \u003c/ul\u003e \u003cp\u003e Although \"corner\" doesn\u0027t match any beans property signature, \u003ccode\u003ePropertyChange\u003c/code\u003e events are generated with the property name set to the corner key.\n * @param key identifies which corner the component will appear in\n * @param corner one of the following components:\u003cul\u003e \u003cli\u003elowerLeft \u003cli\u003elowerRight \u003cli\u003eupperLeft \u003cli\u003eupperRight \u003c/ul\u003e\n * @exception IllegalArgumentException if corner key is invalid\n */\n","tf":{"freq":{"legal":1,"appear":2,"lower":3,"edg":1,"one":2,"identifi":1,"show":1,"add":1,"space":1,"signatur":1,"child":1,"upper":2,"although":1,"invalid":1,"event":1,"scrollbar":2,"name":1,"valu":1,"left":3,"right":3,"key":4,"end":1,"follow":1,"argument":1,"except":2,"constant":8,"bean":1,"corner":8,"scroll":9,"shown":1,"illeg":1,"pane":9,"two":1,"scrollpan":1,"compon":3,"generat":1,"exampl":1,"will":3,"bottom":1,"chang":1,"properti":3,"match":1,"room":1},"maxFreq":9,"totalTerms":93},"loc":41}