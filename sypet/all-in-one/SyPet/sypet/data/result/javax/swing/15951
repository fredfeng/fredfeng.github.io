{"id":15951,"className":"javax.swing.SpinnerNumberModel","methodName":"setValue","signature":"\u003cjavax.swing.SpinnerNumberModel: void setValue(java.lang.Object)\u003e","javadoc":"/** \n * Sets the current value for this sequence.  If \u003ccode\u003evalue\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, or not a \u003ccode\u003eNumber\u003c/code\u003e, an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown.  No bounds checking is done here; the new value may invalidate the \u003ccode\u003e(minimum \u0026lt;\u003d value \u0026lt;\u003d maximum)\u003c/code\u003e invariant enforced by the constructors.   It\u0027s also possible to set the value to be something that wouldn\u0027t naturally occur in the sequence, i.e. a value that\u0027s not modulo the \u003ccode\u003estepSize\u003c/code\u003e. This is to simplify updating the model, and to accommodate spinners that don\u0027t want to restrict values that have been directly entered by the user. Naturally, one should ensure that the \u003ccode\u003e(minimum \u0026lt;\u003d value \u0026lt;\u003d maximum)\u003c/code\u003e invariant is true before calling the \u003ccode\u003enext\u003c/code\u003e, \u003ccode\u003eprevious\u003c/code\u003e, or \u003ccode\u003esetValue\u003c/code\u003e methods. \u003cp\u003e This method fires a \u003ccode\u003eChangeEvent\u003c/code\u003e if the value has changed.\n * @param value the current (non \u003ccode\u003enull\u003c/code\u003e) \u003ccode\u003eNumber\u003c/code\u003efor this sequence\n * @throws IllegalArgumentException if \u003ccode\u003evalue\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e or not a \u003ccode\u003eNumber\u003c/code\u003e\n * @see #getNumber\n * @see #getValue\n * @see SpinnerModel#addChangeListener\n */\n","tf":{"freq":{"call":1,"model":2,"minimum":2,"next":1,"one":1,"possibl":1,"natur":2,"add":1,"someth":1,"ensur":1,"accommod":1,"invalid":1,"event":1,"sequenc":3,"current":2,"valu":14,"listen":1,"want":1,"constructor":1,"direct":1,"argument":2,"may":1,"thrown":1,"except":2,"previous":1,"check":1,"enforc":1,"done":1,"true":1,"enter":1,"number":4,"illeg":2,"fire":1,"restrict":1,"invari":2,"non":1,"size":1,"spinner":2,"simplifi":1,"updat":1,"maximum":2,"modulo":1,"method":2,"chang":3,"user":1,"also":1,"step":1,"bound":1,"occur":1},"maxFreq":14,"totalTerms":80},"loc":9}