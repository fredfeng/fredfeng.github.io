{"id":13385,"className":"javax.swing.JEditorPane","methodName":"setText","signature":"\u003cjavax.swing.JEditorPane: void setText(java.lang.String)\u003e","javadoc":"/** \n * Sets the text of this \u003ccode\u003eTextComponent\u003c/code\u003e to the specified content, which is expected to be in the format of the content type of this editor.  For example, if the type is set to \u003ccode\u003etext/html\u003c/code\u003e the string should be specified in terms of HTML. \u003cp\u003e This is implemented to remove the contents of the current document, and replace them by parsing the given string using the current \u003ccode\u003eEditorKit\u003c/code\u003e.  This gives the semantics of the superclass by not changing out the model, while supporting the content type currently set on this component.  The assumption is that the previous content is relatively small, and that the previous content doesn\u0027t have side effects. Both of those assumptions can be violated and cause undesirable results. To avoid this, create a new document, \u003ccode\u003egetEditorKit().createDefaultDocument()\u003c/code\u003e, and replace the existing \u003ccode\u003eDocument\u003c/code\u003e with the new one. You are then assured the previous \u003ccode\u003eDocument\u003c/code\u003e won\u0027t have any lingering state. \u003col\u003e \u003cli\u003e Leaving the existing model in place means that the old view will be torn down, and a new view created, where replacing the document would avoid the tear down of the old view. \u003cli\u003e Some formats (such as HTML) can install things into the document that can influence future contents.  HTML can have style information embedded that would influence the next content installed unexpectedly. \u003c/ol\u003e \u003cp\u003e An alternative way to load this component with a string would be to create a StringReader and call the read method.  In this case the model would be replaced after it was initialized with the contents of the string.\n * @param t the new text to be set; if \u003ccode\u003enull\u003c/code\u003e the oldtext will be deleted\n * @see #getText\n * @beaninfo description: the text of this component\n */\n","tf":{"freq":{"old":2,"type":3,"violat":1,"specifi":2,"expect":1,"avoid":2,"altern":1,"given":1,"tear":1,"relat":1,"place":1,"kit":2,"text":7,"support":1,"creat":4,"descript":1,"remov":1,"format":2,"embed":1,"content":9,"inform":1,"editor":3,"reader":1,"superclass":1,"will":2,"leav":1,"load":1,"view":3,"small":1,"thing":1,"call":1,"result":1,"model":3,"unexpect":1,"beaninfo":1,"delet":1,"give":1,"oldtext":1,"next":1,"one":1,"state":1,"way":1,"use":1,"document":7,"style":1,"side":1,"linger":1,"semant":1,"current":3,"read":1,"mean":1,"initi":1,"undesir":1,"exist":2,"futur":1,"previous":3,"assur":1,"instal":2,"torn":1,"caus":1,"compon":4,"effect":1,"term":1,"replac":4,"string":5,"exampl":1,"influenc":2,"method":1,"html":1,"chang":1,"pars":1,"assumpt":2},"maxFreq":9,"totalTerms":127},"loc":16}