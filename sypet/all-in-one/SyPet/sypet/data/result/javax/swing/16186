{"id":16186,"className":"javax.swing.Spring","methodName":"sum","signature":"\u003cjavax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)\u003e","javadoc":"/** \n * Returns \u003ccode\u003es1+s2\u003c/code\u003e: a spring representing \u003ccode\u003es1\u003c/code\u003e and \u003ccode\u003es2\u003c/code\u003e in series. In a sum, \u003ccode\u003es3\u003c/code\u003e, of two springs, \u003ccode\u003es1\u003c/code\u003e and \u003ccode\u003es2\u003c/code\u003e, the \u003cem\u003estrains\u003c/em\u003e of \u003ccode\u003es1\u003c/code\u003e, \u003ccode\u003es2\u003c/code\u003e, and \u003ccode\u003es3\u003c/code\u003e are maintained at the same level (to within the precision implied by their integer \u003cem\u003evalue\u003c/em\u003es). The strain of a spring in compression is: \u003cpre\u003e value - pref ------------ pref - min \u003c/pre\u003e and the strain of a spring in tension is: \u003cpre\u003e value - pref ------------ max - pref \u003c/pre\u003e When \u003ccode\u003esetValue\u003c/code\u003e is called on the sum spring, \u003ccode\u003es3\u003c/code\u003e, the strain in \u003ccode\u003es3\u003c/code\u003e is calculated using one of the formulas above. Once the strain of the sum is known, the \u003cem\u003evalue\u003c/em\u003es of \u003ccode\u003es1\u003c/code\u003e and \u003ccode\u003es2\u003c/code\u003e are then set so that they are have a strain equal to that of the sum. The formulas are evaluated so as to take rounding errors into account and ensure that the sum of the \u003cem\u003evalue\u003c/em\u003es of \u003ccode\u003es1\u003c/code\u003e and \u003ccode\u003es2\u003c/code\u003e is exactly equal to the \u003cem\u003evalue\u003c/em\u003e of \u003ccode\u003es3\u003c/code\u003e.\n * @return \u003ccode\u003es1+s2\u003c/code\u003e: a spring representing \u003ccode\u003es1\u003c/code\u003e and \u003ccode\u003es2\u003c/code\u003e in series\n * @see Spring\n */\n","tf":{"freq":{"call":1,"seri":2,"strain":6,"maintain":1,"one":1,"sum":6,"use":1,"round":1,"spring":7,"ensur":1,"level":1,"exact":1,"impli":1,"precis":1,"valu":7,"min":1,"max":1,"error":1,"repres":2,"calcul":1,"equal":2,"evalu":1,"compress":1,"two":1,"take":1,"pre":4,"account":1,"known":1,"within":1,"integ":1,"tension":1,"pref":4,"formula":2},"maxFreq":7,"totalTerms":65},"loc":3}