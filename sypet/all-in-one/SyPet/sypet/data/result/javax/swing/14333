{"id":14333,"className":"javax.swing.JList","methodName":"setCellRenderer","signature":"\u003cjavax.swing.JList: void setCellRenderer(javax.swing.ListCellRenderer)\u003e","javadoc":"/** \n * Sets the delegate that is used to paint each cell in the list. The job of a cell renderer is discussed in detail in the \u003ca href\u003d\"#renderer\"\u003eclass level documentation\u003c/a\u003e. \u003cp\u003e If the  {@code prototypeCellValue} property is {@code non-null}, setting the cell renderer also causes the  {@code fixedCellWidth} and{@code fixedCellHeight} properties to be re-calculated. Only one\u003ccode\u003ePropertyChangeEvent\u003c/code\u003e is generated however - for the \u003ccode\u003ecellRenderer\u003c/code\u003e property. \u003cp\u003e The default value of this property is provided by the  {@code ListUI}delegate, i.e. by the look and feel implementation. \u003cp\u003e This is a JavaBeans bound property.\n * @param cellRenderer the \u003ccode\u003eListCellRenderer\u003c/code\u003ethat paints list cells\n * @see #getCellRenderer\n * @beaninfo bound: true attribute: visualUpdate true description: The component used to draw the cells.\n */\n","tf":{"freq":{"detail":1,"beaninfo":1,"one":1,"use":2,"prototyp":1,"draw":1,"document":1,"attribut":1,"level":1,"deleg":2,"height":1,"fix":2,"event":1,"valu":2,"howev":1,"href":1,"look":1,"feel":1,"bean":1,"cell":13,"width":1,"calcul":1,"descript":1,"true":2,"job":1,"list":4,"paint":2,"provid":1,"render":8,"non":1,"visual":1,"caus":1,"compon":1,"updat":1,"discuss":1,"generat":1,"java":1,"properti":6,"chang":1,"also":1,"bound":2},"maxFreq":13,"totalTerms":75},"loc":13}