{"id":22709,"className":"javax.swing.text.html.InlineView","methodName":"getBreakWeight","signature":"\u003cjavax.swing.text.html.InlineView: int getBreakWeight(int,float,float)\u003e","javadoc":"/** \n * Determines how attractive a break opportunity in this view is.  This can be used for determining which view is the most attractive to call \u003ccode\u003ebreakView\u003c/code\u003e on in the process of formatting.  A view that represents text that has whitespace in it might be more attractive than a view that has no whitespace, for example.  The higher the weight, the more attractive the break.  A value equal to or lower than \u003ccode\u003eBadBreakWeight\u003c/code\u003e should not be considered for a break.  A value greater than or equal to \u003ccode\u003eForcedBreakWeight\u003c/code\u003e should be broken. \u003cp\u003e This is implemented to provide the default behavior of returning \u003ccode\u003eBadBreakWeight\u003c/code\u003e unless the length is greater than the length of the view in which case the entire view represents the fragment.  Unless a view has been written to support breaking behavior, it is not attractive to try and break the view.  An example of a view that does support breaking is \u003ccode\u003eLabelView\u003c/code\u003e. An example of a view that uses break weight is \u003ccode\u003eParagraphView\u003c/code\u003e.\n * @param axis may be either View.X_AXIS or View.Y_AXIS\n * @param pos the potential location of the start of thebroken view \u003e\u003d 0.  This may be useful for calculating tab positions.\n * @param len specifies the relative length from \u003cem\u003epos\u003c/em\u003ewhere a potential break is desired \u003e\u003d 0.\n * @return the weight, which should be a value betweenForcedBreakWeight and BadBreakWeight.\n * @see LabelView\n * @see ParagraphView\n * @see javax.swing.text.View#BadBreakWeight\n * @see javax.swing.text.View#GoodBreakWeight\n * @see javax.swing.text.View#ExcellentBreakWeight\n * @see javax.swing.text.View#ForcedBreakWeight\n */\n","tf":{"freq":{"greater":2,"lower":1,"paragraph":2,"higher":1,"tab":1,"good":1,"desir":1,"pos":2,"specifi":1,"javax":4,"relat":1,"swing":4,"text":5,"support":2,"calcul":1,"label":2,"bad":4,"format":1,"attract":5,"provid":1,"opportun":1,"start":1,"determin":2,"view":22,"entir":1,"posit":1,"might":1,"call":1,"weight":13,"axi":1,"behavior":2,"use":3,"consid":1,"thebroken":1,"unless":2,"written":1,"length":3,"valu":3,"forc":3,"fragment":1,"may":2,"locat":1,"repres":2,"whitespac":2,"excel":1,"equal":2,"len":1,"potenti":2,"broken":1,"process":1,"either":1,"exampl":3},"maxFreq":22,"totalTerms":125},"loc":6}