{"id":15997,"className":"javax.swing.TransferHandler","methodName":"canImport","signature":"\u003cjavax.swing.TransferHandler: boolean canImport(javax.swing.TransferHandler$TransferSupport)\u003e","javadoc":"/** \n * This method is called repeatedly during a drag and drop operation to allow the developer to configure properties of, and to return the acceptability of transfers; with a return value of  {@code true}indicating that the transfer represented by the given {@code TransferSupport} (which contains all of the details of thetransfer) is acceptable at the current time, and a value of  {@code false}rejecting the transfer. \u003cp\u003e For those components that automatically display a drop location during drag and drop, accepting the transfer, by default, tells them to show the drop location. This can be changed by calling {@code setShowDropLocation} on the {@code TransferSupport}. \u003cp\u003e By default, when the transfer is accepted, the chosen drop action is that picked by the user via their drag gesture. The developer can override this and choose a different action, from the supported source actions, by calling  {@code setDropAction} on the {@code TransferSupport}. \u003cp\u003e On every call to  {@code canImport}, the  {@code TransferSupport} containsfresh state. As such, any properties set on it must be set on every call. Upon a drop,  {@code canImport} is called one final time beforecalling into  {@code importData}. Any state set on the {@code TransferSupport} during that last call will be available in{@code importData}. \u003cp\u003e This method is not called internally in response to paste operations. As such, it is recommended that implementations of  {@code importData}explicitly call this method for such cases and that this method be prepared to return the suitability of paste operations as well. \u003cp\u003e Note: The \u003ccode\u003eTransferSupport\u003c/code\u003e object passed to this method is only valid for the duration of the method call. It is undefined what values it may contain after this method returns.\n * @param support the object containing the details ofthe transfer, not \u003ccode\u003enull\u003c/code\u003e.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the import can happen,\u003ccode\u003efalse\u003c/code\u003e otherwise\n * @throws NullPointerException if \u003ccode\u003esupport\u003c/code\u003e is {@code null}\n * @see #importData(TransferHandler.TransferSupport)\n * @see javax.swing.TransferHandler.TransferSupport#setShowDropLocation\n * @see javax.swing.TransferHandler.TransferSupport#setDropAction\n * @since 1.6\n */\n","tf":{"freq":{"fals":2,"thetransf":1,"detail":2,"via":1,"last":1,"drop":10,"accept":4,"suitabl":1,"show":3,"must":1,"time":2,"given":1,"oper":3,"javax":2,"action":5,"swing":2,"happen":1,"undefin":1,"everi":2,"except":1,"transfer":18,"support":12,"respons":1,"avail":1,"display":1,"prepar":1,"configur":1,"explicit":1,"contain":3,"will":1,"pointer":1,"sourc":1,"properti":2,"upon":1,"otherwis":1,"valid":1,"call":10,"reject":1,"allow":1,"one":1,"data":4,"state":2,"object":2,"well":1,"repeat":1,"chosen":1,"recommend":1,"automat":1,"durat":1,"indic":1,"ofth":1,"current":1,"choos":1,"valu":3,"tell":1,"pick":1,"develop":2,"gestur":1,"note":1,"may":1,"locat":4,"beforecal":1,"repres":1,"containsfresh":1,"drag":3,"true":2,"past":2,"pass":1,"differ":1,"compon":1,"intern":1,"method":7,"chang":1,"user":1,"handler":3},"maxFreq":18,"totalTerms":164},"loc":5}