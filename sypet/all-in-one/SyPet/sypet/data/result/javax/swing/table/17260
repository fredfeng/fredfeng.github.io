{"id":17260,"className":"javax.swing.table.TableColumn","methodName":"getCellRenderer","signature":"\u003cjavax.swing.table.TableColumn: javax.swing.table.TableCellRenderer getCellRenderer()\u003e","javadoc":"/** \n * Returns the \u003ccode\u003eTableCellRenderer\u003c/code\u003e used by the \u003ccode\u003eJTable\u003c/code\u003e to draw values for this column.  The \u003ccode\u003ecellRenderer\u003c/code\u003e of the column not only controls the visual look for the column, but is also used to interpret the value object supplied by the \u003ccode\u003eTableModel\u003c/code\u003e. When the \u003ccode\u003ecellRenderer\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, the \u003ccode\u003eJTable\u003c/code\u003e uses a default renderer based on the class of the cells in that column. The default value for a \u003ccode\u003ecellRenderer\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @return  the \u003ccode\u003ecellRenderer\u003c/code\u003e property\n * @see #setCellRenderer\n * @see JTable#setDefaultRenderer\n */\n","tf":{"freq":{"jtabl":3,"look":1,"control":1,"model":1,"cell":8,"interpret":1,"use":3,"suppli":1,"object":1,"render":9,"draw":1,"visual":1,"tabl":2,"base":1,"column":4,"valu":3,"properti":1,"also":1},"maxFreq":9,"totalTerms":43},"loc":3}