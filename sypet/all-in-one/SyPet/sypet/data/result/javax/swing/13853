{"id":13853,"className":"javax.swing.JComponent","methodName":"setComponentPopupMenu","signature":"\u003cjavax.swing.JComponent: void setComponentPopupMenu(javax.swing.JPopupMenu)\u003e","javadoc":"/** \n * Sets the \u003ccode\u003eJPopupMenu\u003c/code\u003e for this \u003ccode\u003eJComponent\u003c/code\u003e. The UI is responsible for registering bindings and adding the necessary listeners such that the \u003ccode\u003eJPopupMenu\u003c/code\u003e will be shown at the appropriate time. When the \u003ccode\u003eJPopupMenu\u003c/code\u003e is shown depends upon the look and feel: some may show it on a mouse event, some may enable a key binding. \u003cp\u003e If \u003ccode\u003epopup\u003c/code\u003e is null, and \u003ccode\u003egetInheritsPopupMenu\u003c/code\u003e returns true, then \u003ccode\u003egetComponentPopupMenu\u003c/code\u003e will be delegated to the parent. This provides for a way to make all child components inherit the popupmenu of the parent. \u003cp\u003e This is a bound property.\n * @param popup - the popup that will be assigned to this componentmay be null\n * @see #getComponentPopupMenu\n * @beaninfo bound: true preferred: true description: Popup to show\n * @since 1.5\n */\n","tf":{"freq":{"assign":1,"beaninfo":1,"way":1,"show":2,"necessari":1,"mous":1,"child":1,"jcompon":1,"time":1,"deleg":1,"popup":8,"event":1,"regist":1,"listen":1,"jpopup":3,"key":1,"look":1,"feel":1,"may":2,"respons":1,"depend":1,"enabl":1,"menu":7,"descript":1,"parent":2,"true":3,"shown":2,"provid":1,"popupmenu":1,"compon":4,"appropri":1,"componentmay":1,"will":3,"ad":1,"properti":1,"prefer":1,"make":1,"bind":2,"bound":2,"upon":1},"maxFreq":8,"totalTerms":68},"loc":8}