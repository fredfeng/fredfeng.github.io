{"id":14381,"className":"javax.swing.JList","methodName":"setValueIsAdjusting","signature":"\u003cjavax.swing.JList: void setValueIsAdjusting(boolean)\u003e","javadoc":"/** \n * Sets the selection model\u0027s  {@code valueIsAdjusting} property. When{@code true}, upcoming changes to selection should be considered part of a single change. This property is used internally and developers typically need not call this method. For example, when the model is being updated in response to a user drag, the value of the property is set to  {@code true} when the drag is initiated and set to {@code false}when the drag is finished. This allows listeners to update only when a change has been finalized, rather than handling all of the intermediate values. \u003cp\u003e You may want to use this directly if making a series of changes that should be considered part of a single change. \u003cp\u003e This is a cover method that delegates to the method of the same name on the list\u0027s selection model. See the documentation for {@link javax.swing.ListSelectionModel#setValueIsAdjusting} formore details.\n * @param b the new value for the property\n * @see ListSelectionModel#setValueIsAdjusting\n * @see javax.swing.event.ListSelectionEvent#getValueIsAdjusting\n * @see #getValueIsAdjusting\n */\n","tf":{"freq":{"fals":1,"need":1,"call":1,"detail":1,"formor":1,"model":5,"seri":1,"allow":1,"singl":2,"link":1,"typic":1,"use":2,"upcom":1,"consid":2,"intermedi":1,"document":1,"cover":1,"deleg":1,"event":2,"javax":2,"name":1,"adjust":6,"rather":1,"valu":9,"develop":1,"initi":1,"swing":2,"listen":1,"want":1,"direct":1,"may":1,"respons":1,"select":6,"drag":3,"true":2,"list":4,"handl":1,"finish":1,"updat":2,"intern":1,"exampl":1,"method":3,"chang":5,"properti":4,"part":2,"make":1,"user":1},"maxFreq":9,"totalTerms":92},"loc":3}