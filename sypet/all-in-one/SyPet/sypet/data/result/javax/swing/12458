{"id":12458,"className":"javax.swing.DefaultListSelectionModel","methodName":"addSelectionInterval","signature":"\u003cjavax.swing.DefaultListSelectionModel: void addSelectionInterval(int,int)\u003e","javadoc":"/** \n * Changes the selection to be the set union of the current selection and the indices between  {@code index0} and {@code index1} inclusive.\u003cp\u003e In  {@code SINGLE_SELECTION} selection mode, this is equivalentto calling  {@code setSelectionInterval}, and only the second index is used. In  {@code SINGLE_INTERVAL_SELECTION} selection mode, thismethod behaves like  {@code setSelectionInterval}, unless the given interval is immediately adjacent to or overlaps the existing selection, and can therefore be used to grow it. \u003cp\u003e If this represents a change to the current selection, then each {@code ListSelectionListener} is notified of the change. Note that{@code index0} doesn\u0027t have to be less than or equal to {@code index1}. \u003cp\u003e If either index is  {@code -1}, this method does nothing and returns without exception. Otherwise, if either index is less than  {@code -1}, an  {@code IndexOutOfBoundsException} is thrown.\n * @param index0 one end of the interval.\n * @param index1 other end of the interval\n * @throws IndexOutOfBoundsException if either index is less than {@code -1}(and neither index is  {@code -1})\n * @see #addListSelectionListener\n * @see #setSelectionInterval\n */\n","tf":{"freq":{"otherwis":1,"call":1,"second":1,"behav":1,"one":1,"use":2,"therefor":1,"add":2,"mode":2,"inclus":1,"indic":1,"thismethod":1,"unless":1,"given":1,"union":1,"current":2,"noth":1,"immedi":1,"equivalentto":1,"listen":2,"exist":1,"end":2,"less":3,"note":1,"notifi":1,"adjac":1,"thrown":1,"except":3,"index":13,"overlap":1,"repres":1,"select":12,"equal":1,"list":2,"like":1,"without":1,"neither":1,"interv":7,"either":3,"grow":1,"method":1,"chang":3,"bound":2},"maxFreq":13,"totalTerms":88},"loc":31}