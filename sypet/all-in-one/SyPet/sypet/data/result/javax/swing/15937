{"id":15937,"className":"javax.swing.SpinnerNumberModel","methodName":"SpinnerNumberModel","signature":"\u003cjavax.swing.SpinnerNumberModel: void SpinnerNumberModel(java.lang.Number,java.lang.Comparable,java.lang.Comparable,java.lang.Number)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eSpinnerModel\u003c/code\u003e that represents a closed sequence of numbers from \u003ccode\u003eminimum\u003c/code\u003e to \u003ccode\u003emaximum\u003c/code\u003e.  The \u003ccode\u003enextValue\u003c/code\u003e and \u003ccode\u003epreviousValue\u003c/code\u003e methods compute elements of the sequence by adding or subtracting \u003ccode\u003estepSize\u003c/code\u003e respectively.  All of the parameters must be mutually \u003ccode\u003eComparable\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e and \u003ccode\u003estepSize\u003c/code\u003e must be instances of \u003ccode\u003eInteger\u003c/code\u003e \u003ccode\u003eLong\u003c/code\u003e, \u003ccode\u003eFloat\u003c/code\u003e, or \u003ccode\u003eDouble\u003c/code\u003e. \u003cp\u003e The \u003ccode\u003eminimum\u003c/code\u003e and \u003ccode\u003emaximum\u003c/code\u003e parameters can be \u003ccode\u003enull\u003c/code\u003e to indicate that the range doesn\u0027t have an upper or lower bound. If \u003ccode\u003evalue\u003c/code\u003e or \u003ccode\u003estepSize\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, or if both \u003ccode\u003eminimum\u003c/code\u003e and \u003ccode\u003emaximum\u003c/code\u003e are specified and \u003ccode\u003emininum \u0026gt; maximum\u003c/code\u003e then an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown. Similarly if \u003ccode\u003e(minimum \u0026lt;\u003d value \u0026lt;\u003d maximum\u003c/code\u003e) is false, an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown.\n * @param value the current (non \u003ccode\u003enull\u003c/code\u003e) value of the model\n * @param minimum the first number in the sequence or \u003ccode\u003enull\u003c/code\u003e\n * @param maximum the last number in the sequence or \u003ccode\u003enull\u003c/code\u003e\n * @param stepSize the difference between elements of the sequence\n * @throws IllegalArgumentException if stepSize or value is\u003ccode\u003enull\u003c/code\u003e or if the following expression is false: \u003ccode\u003eminimum \u0026lt;\u003d value \u0026lt;\u003d maximum\u003c/code\u003e\n */\n","tf":{"freq":{"fals":2,"model":3,"lower":1,"last":1,"minimum":6,"next":1,"express":1,"must":2,"specifi":1,"close":1,"upper":1,"indic":1,"rang":1,"sequenc":5,"current":1,"valu":9,"follow":1,"similar":1,"argument":3,"element":2,"thrown":2,"except":3,"previous":1,"repres":1,"paramet":2,"number":4,"illeg":3,"non":1,"instanc":1,"size":5,"spinner":2,"differ":1,"subtract":1,"mutual":1,"maximum":7,"comput":1,"ad":1,"method":1,"construct":1,"first":1,"integ":1,"compar":1,"bound":1,"step":5,"respect":1,"mininum":1},"maxFreq":9,"totalTerms":94},"loc":13}