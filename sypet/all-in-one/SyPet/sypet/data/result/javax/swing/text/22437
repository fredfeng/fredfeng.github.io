{"id":22437,"className":"javax.swing.text.DefaultFormatter","methodName":"stringToValue","signature":"\u003cjavax.swing.text.DefaultFormatter: java.lang.Object stringToValue(java.lang.String)\u003e","javadoc":"/** \n * Converts the passed in String into an instance of \u003ccode\u003egetValueClass\u003c/code\u003e by way of the constructor that takes a String argument. If \u003ccode\u003egetValueClass\u003c/code\u003e returns null, the Class of the current value in the \u003ccode\u003eJFormattedTextField\u003c/code\u003e will be used. If this is null, a String will be returned. If the constructor thows an exception, a \u003ccode\u003eParseException\u003c/code\u003e will be thrown. If there is no single argument String constructor, \u003ccode\u003estring\u003c/code\u003e will be returned.\n * @throws ParseException if there is an error in the conversion\n * @param string String to convert\n * @return Object representation of text\n */\n","tf":{"freq":{"thow":1,"argument":2,"thrown":1,"except":3,"text":2,"error":1,"singl":1,"convers":1,"use":1,"convert":2,"way":1,"object":1,"represent":1,"pass":1,"instanc":1,"field":1,"take":1,"string":8,"jformat":1,"will":4,"current":1,"valu":4,"pars":2,"constructor":3},"maxFreq":8,"totalTerms":45},"loc":31}