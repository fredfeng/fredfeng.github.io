{"id":16873,"className":"javax.swing.tree.DefaultMutableTreeNode","methodName":"insert","signature":"\u003cjavax.swing.tree.DefaultMutableTreeNode: void insert(javax.swing.tree.MutableTreeNode,int)\u003e","javadoc":"/** \n * Removes \u003ccode\u003enewChild\u003c/code\u003e from its present parent (if it has a parent), sets the child\u0027s parent to this node, and then adds the child to this node\u0027s child array at index \u003ccode\u003echildIndex\u003c/code\u003e. \u003ccode\u003enewChild\u003c/code\u003e must not be null and must not be an ancestor of this node.\n * @param newChild        the MutableTreeNode to insert under this node\n * @param childIndex      the index in this node\u0027s child arraywhere this node is to be inserted\n * @exception ArrayIndexOutOfBoundsException  if\u003ccode\u003echildIndex\u003c/code\u003e is out of bounds\n * @exception IllegalArgumentException        if\u003ccode\u003enewChild\u003c/code\u003e is null or is an ancestor of this node\n * @exception IllegalStateException   if this node does not allowchildren\n * @see #isNodeDescendant\n */\n","tf":{"freq":{"allowchildren":1,"argument":1,"except":6,"index":6,"mutabl":1,"state":1,"remov":1,"arraywher":1,"parent":3,"add":1,"illeg":2,"must":2,"child":11,"present":1,"node":10,"tree":1,"descend":1,"insert":3,"ancestor":2,"bound":2,"array":2},"maxFreq":11,"totalTerms":59},"loc":20}