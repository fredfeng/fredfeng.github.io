{"id":14004,"className":"javax.swing.AbstractAction","methodName":"addPropertyChangeListener","signature":"\u003cjavax.swing.AbstractAction: void addPropertyChangeListener(java.beans.PropertyChangeListener)\u003e","javadoc":"/** \n * Adds a \u003ccode\u003ePropertyChangeListener\u003c/code\u003e to the listener list. The listener is registered for all properties. \u003cp\u003e A \u003ccode\u003ePropertyChangeEvent\u003c/code\u003e will get fired in response to setting a bound property, e.g. \u003ccode\u003esetFont\u003c/code\u003e, \u003ccode\u003esetBackground\u003c/code\u003e, or \u003ccode\u003esetForeground\u003c/code\u003e. Note that if the current component is inheriting its foreground, background, or font from its container, then no event will be fired in response to a change in the inherited property.\n * @param listener  The \u003ccode\u003ePropertyChangeListener\u003c/code\u003e to be added\n * @see Action#addPropertyChangeListener\n */\n","tf":{"freq":{"respons":2,"font":2,"list":1,"add":3,"fire":2,"compon":1,"event":2,"contain":1,"background":2,"action":1,"current":1,"will":2,"ad":1,"regist":1,"properti":8,"chang":6,"listen":7,"note":1,"foreground":2,"bound":1},"maxFreq":8,"totalTerms":47},"loc":6}