{"id":22623,"className":"javax.swing.text.html.HTMLDocument","methodName":"insertAfterStart","signature":"\u003cjavax.swing.text.html.HTMLDocument: void insertAfterStart(javax.swing.text.Element,java.lang.String)\u003e","javadoc":"/** \n * Inserts the HTML specified as a string at the start of the element. \u003cp\u003eConsider the following structure (the \u003ccode\u003eelem\u003c/code\u003e parameter is \u003cb\u003ein bold\u003c/b\u003e).\u003c/p\u003e \u003cpre\u003e \u0026lt;body\u003e | \u003cb\u003e\u0026lt;div\u003e\u003c/b\u003e /  \\ \u0026lt;p\u003e   \u0026lt;p\u003e \u003c/pre\u003e \u003cp\u003eInvoking \u003ccode\u003einsertAfterStart(elem, \"\u0026lt;ul\u003e\u0026lt;li\u003e\")\u003c/code\u003e results in the following structure (new elements are \u003cfont color\u003d\"red\"\u003ein red\u003c/font\u003e).\u003c/p\u003e \u003cpre\u003e \u0026lt;body\u003e | \u003cb\u003e\u0026lt;div\u003e\u003c/b\u003e /  |  \\ \u003cfont color\u003d\"red\"\u003e\u0026lt;ul\u003e\u003c/font\u003e \u0026lt;p\u003e \u0026lt;p\u003e / \u003cfont color\u003d\"red\"\u003e\u0026lt;li\u003e\u003c/font\u003e \u003c/pre\u003e \u003cp\u003eUnlike the \u003ccode\u003einsertBeforeStart\u003c/code\u003e method, new elements become \u003cem\u003echildren\u003c/em\u003e of the specified element, not siblings.\u003c/p\u003e \u003cp\u003eParameter \u003ccode\u003eelem\u003c/code\u003e must not be a leaf element, otherwise an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown. If either \u003ccode\u003eelem\u003c/code\u003e or \u003ccode\u003ehtmlText\u003c/code\u003e parameter is \u003ccode\u003enull\u003c/code\u003e, no changes are made to the document.\u003c/p\u003e \u003cp\u003eFor this to work correcty, the document must have an \u003ccode\u003eHTMLEditorKit.Parser\u003c/code\u003e set. This will be the case if the document was created from an HTMLEditorKit via the \u003ccode\u003ecreateDefaultDocument\u003c/code\u003e method.\u003c/p\u003e\n * @param elem the branch element to be the root for the new text\n * @param htmlText the string to be parsed and assigned to \u003ccode\u003eelem\u003c/code\u003e\n * @throws IllegalArgumentException if \u003ccode\u003eelem\u003c/code\u003e is a leaf\n * @throws IllegalStateException if an HTMLEditorKit.Parser has notbeen set on the document\n * @since 1.3\n */\n","tf":{"freq":{"assign":1,"via":1,"root":1,"leaf":2,"correcti":1,"must":2,"specifi":2,"bold":1,"becom":1,"kit":3,"follow":2,"argument":2,"work":1,"element":6,"except":3,"thrown":1,"text":3,"sibl":1,"creat":2,"font":6,"invok":1,"bodi":2,"editor":3,"start":4,"will":1,"notbeen":1,"branch":1,"parser":2,"otherwis":1,"result":1,"structur":2,"state":1,"div":2,"made":1,"children":1,"consid":1,"document":5,"unlik":1,"paramet":3,"illeg":3,"elem":7,"either":1,"red":4,"color":3,"pre":4,"string":2,"method":2,"html":2,"chang":1,"insert":4,"pars":1},"maxFreq":7,"totalTerms":110},"loc":8}