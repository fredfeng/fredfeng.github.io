{"id":15102,"className":"javax.swing.ListSelectionModel","methodName":"setValueIsAdjusting","signature":"\u003cjavax.swing.ListSelectionModel: void setValueIsAdjusting(boolean)\u003e","javadoc":"/** \n * Sets the  {@code valueIsAdjusting} property, which indicates whetheror not upcoming selection changes should be considered part of a single change. The value of this property is used to initialize the {@code valueIsAdjusting} property of the {@code ListSelectionEvent}s that are generated. \u003cp\u003e For example, if the selection is being updated in response to a user drag, this property can be set to  {@code true} when the drag is initiatedand set to  {@code false} when the drag is finished. During the drag,listeners receive events with a  {@code valueIsAdjusting} propertyset to  {@code true}. At the end of the drag, when the change is finalized, listeners receive an event with the value set to  {@code false}. Listeners can use this pattern if they wish to update only when a change has been finalized. \u003cp\u003e Setting this property to  {@code true} begins a series of changes thatis to be considered part of a single change. When the property is changed back to  {@code false}, an event is sent out characterizing the entire selection change (if there was one), with the event\u0027s {@code valueIsAdjusting} property set to {@code false}.\n * @param valueIsAdjusting the new value of the property\n * @see #getValueIsAdjusting\n * @see javax.swing.event.ListSelectionEvent#getValueIsAdjusting\n */\n","tf":{"freq":{"fals":4,"seri":1,"wish":1,"singl":2,"whetheror":1,"one":1,"use":2,"upcom":1,"consid":2,"character":1,"thati":1,"sent":1,"indic":1,"javax":1,"event":7,"adjust":8,"valu":11,"initi":1,"swing":1,"listen":3,"end":1,"respons":1,"select":5,"drag":5,"back":1,"true":3,"receiv":2,"list":2,"begin":1,"finish":1,"pattern":1,"propertyset":1,"updat":2,"generat":1,"initiatedand":1,"exampl":1,"chang":8,"properti":8,"part":2,"entir":1,"user":1},"maxFreq":11,"totalTerms":100},"loc":0}