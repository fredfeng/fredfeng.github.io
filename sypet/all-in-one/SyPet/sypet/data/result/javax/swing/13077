{"id":13077,"className":"javax.swing.JTabbedPane","methodName":"JTabbedPane","signature":"\u003cjavax.swing.JTabbedPane: void JTabbedPane(int,int)\u003e","javadoc":"/** \n * Creates an empty \u003ccode\u003eTabbedPane\u003c/code\u003e with the specified tab placement and tab layout policy.  Tab placement may be either: \u003ccode\u003eJTabbedPane.TOP\u003c/code\u003e, \u003ccode\u003eJTabbedPane.BOTTOM\u003c/code\u003e, \u003ccode\u003eJTabbedPane.LEFT\u003c/code\u003e, or \u003ccode\u003eJTabbedPane.RIGHT\u003c/code\u003e. Tab layout policy may be either: \u003ccode\u003eJTabbedPane.WRAP_TAB_LAYOUT\u003c/code\u003e or \u003ccode\u003eJTabbedPane.SCROLL_TAB_LAYOUT\u003c/code\u003e.\n * @param tabPlacement the placement for the tabs relative to the content\n * @param tabLayoutPolicy the policy for laying out tabs when all tabs will not fit on one run\n * @exception IllegalArgumentException if tab placement or tab layout policy are notone of the above supported values\n * @see #addTab\n * @since 1.4\n */\n","tf":{"freq":{"placement":5,"one":1,"tab":14,"add":1,"run":1,"specifi":1,"fit":1,"layout":4,"relat":1,"valu":1,"noton":1,"argument":1,"may":2,"except":2,"support":1,"creat":1,"lay":1,"polici":5,"illeg":1,"empti":1,"pane":8,"content":1,"jtab":6,"either":2,"will":1},"maxFreq":14,"totalTerms":64},"loc":7}