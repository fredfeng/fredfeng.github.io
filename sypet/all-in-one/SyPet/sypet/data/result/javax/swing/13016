{"id":13016,"className":"javax.swing.JSpinner$DateEditor","methodName":"DateEditor","signature":"\u003cjavax.swing.JSpinner$DateEditor: void DateEditor(javax.swing.JSpinner,java.lang.String)\u003e","javadoc":"/** \n * Construct a \u003ccode\u003eJSpinner\u003c/code\u003e editor that supports displaying and editing the value of a \u003ccode\u003eSpinnerDateModel\u003c/code\u003e with a \u003ccode\u003eJFormattedTextField\u003c/code\u003e.  \u003ccode\u003eThis\u003c/code\u003e \u003ccode\u003eDateEditor\u003c/code\u003e becomes both a \u003ccode\u003eChangeListener\u003c/code\u003e on the spinner and a \u003ccode\u003ePropertyChangeListener\u003c/code\u003e on the new \u003ccode\u003eJFormattedTextField\u003c/code\u003e.\n * @param spinner the spinner whose model \u003ccode\u003ethis\u003c/code\u003e editor will monitor\n * @param dateFormatPattern the initial pattern for the\u003ccode\u003eSimpleDateFormat\u003c/code\u003e object that\u0027s used to display and parse the value of the text field.\n * @exception IllegalArgumentException if the spinners model is notan instance of \u003ccode\u003eSpinnerDateModel\u003c/code\u003e\n * @see #getModel\n * @see #getFormat\n * @see SpinnerDateModel\n * @see java.text.SimpleDateFormat\n */\n","tf":{"freq":{"model":6,"simpl":2,"use":1,"object":1,"date":8,"becom":1,"jformat":2,"valu":2,"initi":1,"listen":2,"argument":1,"except":2,"text":4,"support":1,"monitor":1,"whose":1,"edit":1,"display":2,"format":4,"jspinner":1,"illeg":1,"instanc":1,"spinner":7,"field":3,"editor":4,"notan":1,"pattern":2,"will":1,"java":1,"construct":1,"chang":2,"properti":1,"pars":1},"maxFreq":8,"totalTerms":70},"loc":4}