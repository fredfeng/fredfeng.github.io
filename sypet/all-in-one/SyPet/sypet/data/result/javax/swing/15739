{"id":15739,"className":"javax.swing.SizeRequirements","methodName":"calculateAlignedPositions","signature":"\u003cjavax.swing.SizeRequirements: void calculateAlignedPositions(int,javax.swing.SizeRequirements,javax.swing.SizeRequirements[],int[],int[])\u003e","javadoc":"/** \n * Creates a bunch of offset/span pairs specifying how to lay out a set of components with the specified alignments. The resulting span allocations will overlap, with each one fitting as well as possible into the given total allocation. This method requires that you specify the total amount of space to be allocated, the size requirements for each component to be placed (specified as an array of SizeRequirements), and the total size requirements of the set of components (only the alignment field of which is actually used). You can get the total size requirement by invoking getAlignedSizeRequirements. Normal alignment will be done with an alignment value of 0.0f representing the left/top edge of a component.\n * @param allocated the total span to be allocated \u003e\u003d 0.\n * @param total     the total of the children requests.\n * @param children  the size requirements for each component.\n * @param offsets   the offset from 0 for each child wherethe spans were allocated (determines placement of the span).\n * @param spans     the span allocated for each child to make thetotal target span.\n */\n","tf":{"freq":{"placement":1,"total":7,"result":1,"edg":1,"pair":1,"normal":1,"one":1,"children":2,"use":1,"possibl":1,"well":1,"space":1,"specifi":4,"child":2,"amount":1,"fit":1,"whereth":1,"requir":7,"given":1,"request":1,"left":1,"valu":1,"bunch":1,"place":1,"offset":3,"top":1,"overlap":1,"repres":1,"creat":1,"invok":1,"lay":1,"done":1,"align":6,"calcul":1,"size":6,"field":1,"compon":5,"determin":1,"target":1,"thetot":1,"will":2,"actual":1,"method":1,"make":1,"posit":1,"array":1,"span":8,"alloc":7},"maxFreq":8,"totalTerms":95},"loc":3}