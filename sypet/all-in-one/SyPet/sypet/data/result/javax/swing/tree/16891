{"id":16891,"className":"javax.swing.tree.DefaultMutableTreeNode","methodName":"getSharedAncestor","signature":"\u003cjavax.swing.tree.DefaultMutableTreeNode: javax.swing.tree.TreeNode getSharedAncestor(javax.swing.tree.DefaultMutableTreeNode)\u003e","javadoc":"/** \n * Returns the nearest common ancestor to this node and \u003ccode\u003eaNode\u003c/code\u003e. Returns null, if no such ancestor exists -- if this node and \u003ccode\u003eaNode\u003c/code\u003e are in different trees or if \u003ccode\u003eaNode\u003c/code\u003e is null.  A node is considered an ancestor of itself.\n * @see #isNodeAncestor\n * @see #isNodeDescendant\n * @param aNode   node to find common ancestor with\n * @return  nearest ancestor common to this node and \u003ccode\u003eaNode\u003c/code\u003e,or null if none\n */\n","tf":{"freq":{"differ":1,"node":12,"share":1,"tree":1,"common":3,"none":1,"descend":1,"exist":1,"nearest":2,"ancestor":7,"find":1,"consid":1},"maxFreq":12,"totalTerms":32},"loc":49}