{"id":15631,"className":"javax.swing.UIDefaults","methodName":"getUI","signature":"\u003cjavax.swing.UIDefaults: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)\u003e","javadoc":"/** \n * Creates an \u003ccode\u003eComponentUI\u003c/code\u003e implementation for the specified component.  In other words create the look and feel specific delegate object for \u003ccode\u003etarget\u003c/code\u003e. This is done in two steps: \u003cul\u003e \u003cli\u003e Look up the name of the \u003ccode\u003eComponentUI\u003c/code\u003e implementation class under the value returned by \u003ccode\u003etarget.getUIClassID()\u003c/code\u003e. \u003cli\u003e Use the implementation classes static \u003ccode\u003ecreateUI()\u003c/code\u003e method to construct a look and feel delegate. \u003c/ul\u003e\n * @param target  the \u003ccode\u003eJComponent\u003c/code\u003e which needs a UI\n * @return the \u003ccode\u003eComponentUI\u003c/code\u003e object\n */\n","tf":{"freq":{"need":1,"look":3,"feel":2,"creat":3,"done":1,"use":1,"object":2,"specifi":1,"two":1,"jcompon":1,"specif":1,"deleg":2,"compon":4,"name":1,"target":3,"method":1,"valu":1,"word":1,"construct":1,"step":1},"maxFreq":4,"totalTerms":32},"loc":30}