{"id":16497,"className":"javax.swing.UIManager","methodName":"setLookAndFeel","signature":"\u003cjavax.swing.UIManager: void setLookAndFeel(javax.swing.LookAndFeel)\u003e","javadoc":"/** \n * Sets the current look and feel to  {@code newLookAndFeel}. If the current look and feel is  {@code non-null} {@code uninitialize} is invoked on it. If {@code newLookAndFeel} is{@code non-null},  {@code initialize} is invoked on it followedby  {@code getDefaults}. The defaults returned from  {@code newLookAndFeel.getDefaults()} replace those of the defaultsfrom the previous look and feel. If the  {@code newLookAndFeel} is{@code null}, the look and feel defaults are set to  {@code null}. \u003cp\u003e A value of  {@code null} can be used to set the look and feelto  {@code null}. As the  {@code LookAndFeel} is required formost of Swing to function, setting the  {@code LookAndFeel} to{@code null} is strongly discouraged.\u003cp\u003e This is a JavaBeans bound property.\n * @param newLookAndFeel {@code LookAndFeel} to install\n * @throws UnsupportedLookAndFeelException if{@code newLookAndFeel} is {@code non-null} and{@code newLookAndFeel.isSupportedLookAndFeel()} returns{@code false}\n * @see #getLookAndFeel\n */\n","tf":{"freq":{"fals":1,"unsupport":1,"use":1,"function":1,"requir":1,"current":2,"valu":1,"initi":1,"swing":1,"look":19,"feel":18,"except":1,"support":1,"followedbi":1,"previous":1,"bean":1,"invok":2,"instal":1,"discourag":1,"formost":1,"non":3,"feelto":1,"defaultsfrom":1,"uniniti":1,"strong":1,"replac":1,"java":1,"properti":1,"bound":1},"maxFreq":19,"totalTerms":68},"loc":29}