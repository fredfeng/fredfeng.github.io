{"id":12739,"className":"javax.swing.JTree","methodName":"getClosestPathForLocation","signature":"\u003cjavax.swing.JTree: javax.swing.tree.TreePath getClosestPathForLocation(int,int)\u003e","javadoc":"/** \n * Returns the path to the node that is closest to x,y.  If no nodes are currently viewable, or there is no model, returns \u003ccode\u003enull\u003c/code\u003e, otherwise it always returns a valid path.  To test if the node is exactly at x, y, get the node\u0027s bounds and test x, y against that.\n * @param x an integer giving the number of pixels horizontally fromthe left edge of the display area, minus any left margin\n * @param y an integer giving the number of pixels vertically fromthe top of the display area, minus any top margin\n * @return  the \u003ccode\u003eTreePath\u003c/code\u003e for the node closest to that location,\u003ccode\u003enull\u003c/code\u003e if nothing is viewable or there is no model\n * @see #getPathForLocation\n * @see #getPathBounds\n */\n","tf":{"freq":{"otherwis":1,"valid":1,"model":2,"edg":1,"test":2,"give":2,"pixel":2,"area":2,"tree":1,"viewabl":2,"exact":1,"current":1,"path":6,"noth":1,"closest":3,"margin":2,"horizont":1,"left":2,"fromth":2,"top":2,"locat":3,"minus":2,"vertic":1,"alway":1,"number":2,"display":2,"node":5,"integ":2,"bound":2},"maxFreq":6,"totalTerms":57},"loc":7}