{"id":13362,"className":"javax.swing.JEditorPane","methodName":"setPage","signature":"\u003cjavax.swing.JEditorPane: void setPage(java.net.URL)\u003e","javadoc":"/** \n * Sets the current URL being displayed.  The content type of the pane is set, and if the editor kit for the pane is non-\u003ccode\u003enull\u003c/code\u003e, then a new default document is created and the URL is read into it. If the URL contains and reference location, the location will be scrolled to by calling the \u003ccode\u003escrollToReference\u003c/code\u003e method. If the desired URL is the one currently being displayed, the document will not be reloaded. To force a document reload it is necessary to clear the stream description property of the document. The following code shows how this can be done: \u003cpre\u003e Document doc \u003d jEditorPane.getDocument(); doc.putProperty(Document.StreamDescriptionProperty, null); \u003c/pre\u003e If the desired URL is not the one currently being displayed, the \u003ccode\u003egetStream\u003c/code\u003e method is called to give subclasses control over the stream provided. \u003cp\u003e This may load either synchronously or asynchronously depending upon the document returned by the \u003ccode\u003eEditorKit\u003c/code\u003e. If the \u003ccode\u003eDocument\u003c/code\u003e is of type \u003ccode\u003eAbstractDocument\u003c/code\u003e and has a value returned by \u003ccode\u003eAbstractDocument.getAsynchronousLoadPriority\u003c/code\u003e that is greater than or equal to zero, the page will be loaded on a separate thread using that priority. \u003cp\u003e If the document is loaded synchronously, it will be filled in with the stream prior to being installed into the editor with a call to \u003ccode\u003esetDocument\u003c/code\u003e, which is bound and will fire a property change event.  If an \u003ccode\u003eIOException\u003c/code\u003e is thrown the partially loaded document will be discarded and neither the document or page property change events will be fired.  If the document is successfully loaded and installed, a view will be built for it by the UI which will then be scrolled if necessary, and then the page property change event will be fired. \u003cp\u003e If the document is loaded asynchronously, the document will be installed into the editor immediately using a call to \u003ccode\u003esetDocument\u003c/code\u003e which will fire a document property change event, then a thread will be created which will begin doing the actual loading. In this case, the page property change event will not be fired by the call to this method directly, but rather will be fired when the thread doing the loading has finished. It will also be fired on the event-dispatch thread. Since the calling thread can not throw an \u003ccode\u003eIOException\u003c/code\u003e in the event of failure on the other thread, the page property change event will be fired when the other thread is done whether the load was successful or not.\n * @param page the URL of the page\n * @exception IOException for a \u003ccode\u003enull\u003c/code\u003e or invalidpage specification, or exception from the stream being read\n * @see #getPage\n * @beaninfo description: the URL used to set content bound: true expert: true\n */\n","tf":{"freq":{"greater":1,"show":1,"desir":2,"type":2,"zero":1,"necessari":2,"whether":1,"prior":1,"refer":2,"page":9,"event":8,"thread":7,"kit":2,"follow":1,"control":1,"thrown":1,"except":5,"invalidpag":1,"scroll":3,"creat":2,"prioriti":2,"done":2,"descript":3,"display":3,"partial":1,"provid":1,"non":1,"content":2,"finish":1,"editor":5,"separ":1,"contain":1,"will":18,"subclass":1,"load":10,"view":1,"properti":9,"reload":2,"upon":1,"expert":1,"call":6,"asynchron":3,"stream":6,"put":1,"beaninfo":1,"give":1,"one":2,"use":3,"discard":1,"clear":1,"document":20,"current":3,"rather":1,"read":2,"dispatch":1,"immedi":1,"valu":1,"built":1,"forc":1,"direct":1,"locat":2,"may":1,"failur":1,"depend":1,"instal":3,"fill":1,"true":2,"equal":1,"fire":8,"begin":1,"pane":3,"neither":1,"specif":1,"either":1,"pre":2,"actual":1,"method":3,"chang":6,"also":1,"success":2,"bound":2},"maxFreq":20,"totalTerms":220},"loc":71}