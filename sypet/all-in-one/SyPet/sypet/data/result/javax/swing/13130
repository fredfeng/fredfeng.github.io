{"id":13130,"className":"javax.swing.JTabbedPane","methodName":"setDisplayedMnemonicIndexAt","signature":"\u003cjavax.swing.JTabbedPane: void setDisplayedMnemonicIndexAt(int,int)\u003e","javadoc":"/** \n * Provides a hint to the look and feel as to which character in the text should be decorated to represent the mnemonic. Not all look and feels may support this. A value of -1 indicates either there is no mnemonic for this tab, or you do not wish the mnemonic to be displayed for this tab. \u003cp\u003e The value of this is updated as the properties relating to the mnemonic change (such as the mnemonic itself, the text...). You should only ever have to call this if you do not wish the default character to be underlined. For example, if the text at tab index 3 was \u0027Apple Price\u0027, with a mnemonic of \u0027p\u0027, and you wanted the \u0027P\u0027 to be decorated, as \u0027Apple \u003cu\u003eP\u003c/u\u003erice\u0027, you would have to invoke \u003ccode\u003esetDisplayedMnemonicIndex(3, 6)\u003c/code\u003e after invoking \u003ccode\u003esetMnemonicAt(3, KeyEvent.VK_P)\u003c/code\u003e. \u003cp\u003eNote that it is the programmer\u0027s responsibility to ensure that each tab has a unique mnemonic or unpredictable results may occur.\n * @since 1.4\n * @param tabIndex the index of the tab that the mnemonic refers to\n * @param mnemonicIndex index into the \u003ccode\u003eString\u003c/code\u003e to underline\n * @exception IndexOutOfBoundsException if \u003ccode\u003etabIndex\u003c/code\u003e isout of range (\u003ccode\u003etabIndex \u003c 0 || tabIndex \u003e\u003d tab count\u003c/code\u003e)\n * @exception IllegalArgumentException will be thrown if\u003ccode\u003emnemonicIndex\u003c/code\u003e is \u0026gt;\u003d length of the tab title , or \u0026lt; -1\n * @see #setMnemonicAt(int,int)\n * @see #getDisplayedMnemonicIndexAt(int)\n * @beaninfo bound: true attribute: visualUpdate true description: the index into the String to draw the keyboard character mnemonic at\n */\n","tf":{"freq":{"count":1,"wish":2,"mnemon":16,"isout":1,"tab":11,"draw":1,"decor":2,"uniqu":1,"refer":1,"event":1,"rang":1,"relat":1,"key":1,"argument":1,"thrown":1,"index":14,"text":3,"except":4,"support":1,"respons":1,"charact":3,"invok":2,"programm":1,"descript":1,"display":4,"provid":1,"appl":2,"visual":1,"price":1,"updat":2,"will":1,"properti":1,"ever":1,"call":1,"result":1,"beaninfo":1,"ensur":1,"attribut":1,"underlin":2,"indic":1,"length":1,"unpredict":1,"valu":2,"want":1,"note":1,"look":2,"feel":2,"keyboard":1,"may":2,"rice":1,"repres":1,"titl":1,"true":2,"hint":1,"illeg":1,"either":1,"string":2,"exampl":1,"chang":1,"bound":2,"occur":1},"maxFreq":16,"totalTerms":122},"loc":7}