{"id":14508,"className":"javax.swing.PopupFactory","methodName":"getPopup","signature":"\u003cjavax.swing.PopupFactory: javax.swing.Popup getPopup(java.awt.Component,java.awt.Component,int,int)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003ePopup\u003c/code\u003e for the Component \u003ccode\u003eowner\u003c/code\u003e containing the Component \u003ccode\u003econtents\u003c/code\u003e. \u003ccode\u003eowner\u003c/code\u003e is used to determine which \u003ccode\u003eWindow\u003c/code\u003e the new \u003ccode\u003ePopup\u003c/code\u003e will parent the \u003ccode\u003eComponent\u003c/code\u003e the \u003ccode\u003ePopup\u003c/code\u003e creates to. A null \u003ccode\u003eowner\u003c/code\u003e implies there is no valid parent. \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e specify the preferred initial location to place the \u003ccode\u003ePopup\u003c/code\u003e at. Based on screen size, or other paramaters, the \u003ccode\u003ePopup\u003c/code\u003e may not display at \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e.\n * @param owner    Component mouse coordinates are relative to, may be null\n * @param contents Contents of the Popup\n * @param x        Initial x screen coordinate\n * @param y        Initial y screen coordinate\n * @exception IllegalArgumentException if contents is null\n * @return Popup containing Contents\n */\n","tf":{"freq":{"valid":1,"use":1,"mous":1,"specifi":1,"paramat":1,"popup":8,"relat":1,"impli":1,"initi":3,"place":1,"argument":1,"coordin":3,"screen":3,"except":2,"locat":1,"may":2,"creat":2,"parent":2,"display":1,"illeg":1,"size":1,"content":5,"window":1,"compon":4,"determin":1,"contain":2,"will":1,"owner":4,"base":1,"prefer":1},"maxFreq":8,"totalTerms":58},"loc":15}