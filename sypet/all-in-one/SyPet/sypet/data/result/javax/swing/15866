{"id":15866,"className":"javax.swing.GroupLayout","methodName":"createParallelGroup","signature":"\u003cjavax.swing.GroupLayout: javax.swing.GroupLayout$ParallelGroup createParallelGroup(javax.swing.Alignment,boolean)\u003e","javadoc":"/** \n * Creates and returns a  {@code ParallelGroup} with the specifiedalignment and resize behavior. The  {@code alignment} argument specifies how children elements arepositioned that do not fill the group. For example, if a  {@code ParallelGroup} with an alignment of {@code TRAILING} is given100 and a child only needs 50, the child is positioned at the position 50 (with a component orientation of left-to-right). \u003cp\u003e Baseline alignment is only useful when used along the vertical axis. A  {@code ParallelGroup} created with a baseline alignmentalong the horizontal axis is treated as  {@code LEADING}. \u003cp\u003e Refer to  {@link GroupLayout.ParallelGroup ParallelGroup} for details onthe behavior of baseline groups.\n * @param alignment the alignment for the elements of the group\n * @param resizable {@code true} if the group is resizable; if the groupis not resizable the preferred size is used for the minimum and maximum size of the group\n * @throws IllegalArgumentException if {@code alignment} is {@code null}\n * @return a new {@code ParallelGroup}\n * @see #createBaselineGroup\n * @see GroupLayout.ParallelGroup\n */\n","tf":{"freq":{"need":1,"groupi":1,"detail":1,"axi":2,"specifiedalign":1,"minimum":1,"behavior":2,"link":1,"children":1,"use":3,"specifi":1,"resiz":4,"child":2,"given":1,"refer":1,"layout":2,"horizont":1,"left":1,"along":1,"right":1,"argument":2,"element":2,"parallel":8,"except":1,"vertic":1,"creat":4,"alignmentalong":1,"align":6,"fill":1,"onth":1,"true":1,"baselin":4,"illeg":1,"size":2,"orient":1,"compon":1,"maximum":1,"areposit":1,"exampl":1,"prefer":1,"group":16,"posit":2,"treat":1},"maxFreq":16,"totalTerms":89},"loc":10}