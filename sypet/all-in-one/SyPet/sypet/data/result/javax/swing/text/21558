{"id":21558,"className":"javax.swing.text.MaskFormatter","methodName":"setValueContainsLiteralCharacters","signature":"\u003cjavax.swing.text.MaskFormatter: void setValueContainsLiteralCharacters(boolean)\u003e","javadoc":"/** \n * If true, the returned value and set value will also contain the literal characters in mask. \u003cp\u003e For example, if the mask is \u003ccode\u003e\u0027(###) ###-####\u0027\u003c/code\u003e, the current value is \u003ccode\u003e\u0027(415) 555-1212\u0027\u003c/code\u003e, and \u003ccode\u003evalueContainsLiteralCharacters\u003c/code\u003e is true \u003ccode\u003estringToValue\u003c/code\u003e will return \u003ccode\u003e\u0027(415) 555-1212\u0027\u003c/code\u003e. On the other hand, if \u003ccode\u003evalueContainsLiteralCharacters\u003c/code\u003e is false, \u003ccode\u003estringToValue\u003c/code\u003e will return \u003ccode\u003e\u00274155551212\u0027\u003c/code\u003e.\n * @param containsLiteralChars Used to indicate if literal characters inmask should be returned in stringToValue\n */\n","tf":{"freq":{"fals":1,"liter":6,"charact":5,"use":1,"true":2,"mask":2,"hand":1,"indic":1,"contain":5,"string":3,"will":3,"exampl":1,"current":1,"valu":9,"inmask":1,"also":1},"maxFreq":9,"totalTerms":43},"loc":3}