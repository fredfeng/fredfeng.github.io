{"id":17497,"className":"javax.swing.plaf.ComponentUI","methodName":"getMaximumSize","signature":"\u003cjavax.swing.plaf.ComponentUI: java.awt.Dimension getMaximumSize(javax.swing.JComponent)\u003e","javadoc":"/** \n * Returns the specified component\u0027s maximum size appropriate for the look and feel.  If \u003ccode\u003enull\u003c/code\u003e is returned, the maximum size will be calculated by the component\u0027s layout manager instead (this is the preferred approach for any component with a specific layout manager installed).  The default implementation of this method invokes \u003ccode\u003egetPreferredSize\u003c/code\u003e and returns that value.\n * @param c the component whose maximum size is being queried;this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components\n * @return a \u003ccode\u003eDimension\u003c/code\u003e object or \u003ccode\u003enull\u003c/code\u003e\n * @see javax.swing.JComponent#getMaximumSize\n * @see java.awt.LayoutManager2#maximumLayoutSize\n */\n","tf":{"freq":{"might":1,"use":1,"object":2,"specifi":1,"jcompon":1,"share":1,"javax":1,"layout":4,"stateless":1,"valu":1,"swing":1,"look":1,"argument":1,"feel":1,"ignor":1,"multipl":1,"whose":1,"manag":3,"invok":1,"calcul":1,"instal":1,"dimens":1,"size":7,"queri":1,"awt":1,"specif":1,"compon":5,"appropri":1,"maximum":6,"often":1,"instead":1,"will":1,"approach":1,"java":1,"method":1,"prefer":2},"maxFreq":7,"totalTerms":58},"loc":3}