{"id":14392,"className":"javax.swing.JList","methodName":"getScrollableUnitIncrement","signature":"\u003cjavax.swing.JList: int getScrollableUnitIncrement(java.awt.Rectangle,int,int)\u003e","javadoc":"/** \n * Returns the distance to scroll to expose the next or previous row (for vertical scrolling) or column (for horizontal scrolling). \u003cp\u003e For horizontal scrolling, if the layout orientation is  {@code VERTICAL}, then the list\u0027s font size is returned (or  {@code 1} if the font is{@code null}).\n * @param visibleRect the view area visible within the viewport\n * @param orientation {@code SwingConstants.HORIZONTAL} or{@code SwingConstants.VERTICAL}\n * @param direction less or equal to zero to scroll up/back,greater than zero for down/forward\n * @return the \"unit\" increment for scrolling in the specified direction;always positive\n * @see #getScrollableBlockIncrement\n * @see Scrollable#getScrollableUnitIncrement\n * @throws IllegalArgumentException if {@code visibleRect} is {@code null}, or {@code orientation} isn\u0027t one of {@code SwingConstants.VERTICAL} or{@code SwingConstants.HORIZONTAL}\n */\n","tf":{"freq":{"greater":1,"scrollabl":4,"visibl":3,"one":1,"next":1,"block":1,"zero":2,"specifi":1,"area":1,"forward":1,"layout":1,"horizont":2,"expos":1,"swing":4,"less":1,"argument":1,"direct":2,"increment":4,"viewport":1,"except":1,"constant":4,"vertic":1,"previous":1,"scroll":6,"alway":1,"font":2,"back":1,"equal":1,"list":1,"rect":2,"illeg":1,"row":1,"size":1,"unit":3,"orient":3,"column":1,"distanc":1,"view":1,"within":1,"posit":1},"maxFreq":6,"totalTerms":68},"loc":101}