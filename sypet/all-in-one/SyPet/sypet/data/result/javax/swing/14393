{"id":14393,"className":"javax.swing.JList","methodName":"getScrollableBlockIncrement","signature":"\u003cjavax.swing.JList: int getScrollableBlockIncrement(java.awt.Rectangle,int,int)\u003e","javadoc":"/** \n * Returns the distance to scroll to expose the next or previous block. \u003cp\u003e For vertical scrolling, the following rules are used: \u003cul\u003e \u003cli\u003eif scrolling down, returns the distance to scroll so that the last visible element becomes the first completely visible element \u003cli\u003eif scrolling up, returns the distance to scroll so that the first visible element becomes the last completely visible element \u003cli\u003ereturns  {@code visibleRect.height} if the list is empty\u003c/ul\u003e \u003cp\u003e For horizontal scrolling, when the layout orientation is either {@code VERTICAL_WRAP} or {@code HORIZONTAL_WRAP}: \u003cul\u003e \u003cli\u003eif scrolling right, returns the distance to scroll so that the last visible element becomes the first completely visible element \u003cli\u003eif scrolling left, returns the distance to scroll so that the first visible element becomes the last completely visible element \u003cli\u003ereturns  {@code visibleRect.width} if the list is empty\u003c/ul\u003e \u003cp\u003e For horizontal scrolling and  {@code VERTICAL} orientation,returns  {@code visibleRect.width}. \u003cp\u003e Note that the value of  {@code visibleRect} must be the equal to{@code this.getVisibleRect()}.\n * @param visibleRect the view area visible within the viewport\n * @param orientation {@code SwingConstants.HORIZONTAL} or{@code SwingConstants.VERTICAL}\n * @param direction less or equal to zero to scroll up/back,greater than zero for down/forward\n * @return the \"block\" increment for scrolling in the specified direction;always positive\n * @see #getScrollableUnitIncrement\n * @see Scrollable#getScrollableBlockIncrement\n * @throws IllegalArgumentException if {@code visibleRect} is {@code null}, or {@code orientation} isn\u0027t one of {@code SwingConstants.VERTICAL} or{@code SwingConstants.HORIZONTAL}\n */\n","tf":{"freq":{"greater":1,"last":4,"zero":2,"must":1,"specifi":1,"height":1,"becom":4,"forward":1,"swing":4,"right":1,"follow":1,"argument":1,"element":8,"increment":4,"except":1,"vertic":1,"scroll":14,"alway":1,"width":2,"rect":7,"distanc":5,"view":1,"posit":1,"scrollabl":4,"visibl":16,"one":1,"next":1,"block":4,"use":1,"area":1,"layout":1,"rule":1,"horizont":2,"expos":1,"left":1,"valu":1,"note":1,"less":1,"complet":4,"direct":2,"viewport":1,"constant":4,"previous":1,"back":1,"list":2,"equal":2,"illeg":1,"empti":2,"unit":1,"either":1,"orient":4,"within":1,"first":4},"maxFreq":16,"totalTerms":135},"loc":115}