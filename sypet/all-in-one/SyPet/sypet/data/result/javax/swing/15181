{"id":15181,"className":"javax.swing.AbstractButton","methodName":"setHorizontalAlignment","signature":"\u003cjavax.swing.AbstractButton: void setHorizontalAlignment(int)\u003e","javadoc":"/** \n * Sets the horizontal alignment of the icon and text. {@code AbstractButton}\u0027s default is  {@code SwingConstants.CENTER}, but subclasses such as  {@code JCheckBox} may use a different default.\n * @param alignment the alignment value, one of the following values:\u003cul\u003e \u003cli\u003e {@code SwingConstants.RIGHT}\u003cli\u003e {@code SwingConstants.LEFT}\u003cli\u003e {@code SwingConstants.CENTER}\u003cli\u003e {@code SwingConstants.LEADING}\u003cli\u003e {@code SwingConstants.TRAILING}\u003c/ul\u003e\n * @throws IllegalArgumentException if the alignment is not one of thevalid values\n * @beaninfo bound: true enum: LEFT     SwingConstants.LEFT CENTER   SwingConstants.CENTER RIGHT    SwingConstants.RIGHT LEADING  SwingConstants.LEADING TRAILING SwingConstants.TRAILING attribute: visualUpdate true description: The horizontal alignment of the icon and text.\n */\n","tf":{"freq":{"beaninfo":1,"one":2,"use":1,"attribut":1,"thevalid":1,"button":1,"jcheck":1,"horizont":3,"valu":3,"swing":11,"follow":1,"argument":1,"icon":2,"may":1,"text":2,"except":1,"constant":11,"align":6,"descript":1,"true":2,"illeg":1,"differ":1,"visual":1,"updat":1,"subclass":1,"box":1,"bound":1},"maxFreq":11,"totalTerms":60},"loc":9}