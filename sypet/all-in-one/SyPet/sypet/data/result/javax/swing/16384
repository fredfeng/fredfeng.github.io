{"id":16384,"className":"javax.swing.JToolBar","methodName":"setMargin","signature":"\u003cjavax.swing.JToolBar: void setMargin(java.awt.Insets)\u003e","javadoc":"/** \n * Sets the margin between the tool bar\u0027s border and its buttons. Setting to \u003ccode\u003enull\u003c/code\u003e causes the tool bar to use the default margins. The tool bar\u0027s default \u003ccode\u003eBorder\u003c/code\u003e object uses this value to create the proper margin. However, if a non-default border is set on the tool bar, it is that \u003ccode\u003eBorder\u003c/code\u003e object\u0027s responsibility to create the appropriate margin space (otherwise this property will effectively be ignored).\n * @param m an \u003ccode\u003eInsets\u003c/code\u003e object that defines the spacebetween the border and the buttons\n * @see Insets\n * @beaninfo description: The margin between the tool bar\u0027s border and contents bound: true expert: true\n */\n","tf":{"freq":{"expert":1,"otherwis":1,"defin":1,"beaninfo":1,"tool":5,"use":2,"object":3,"space":1,"button":2,"valu":1,"margin":6,"proper":1,"howev":1,"border":6,"ignor":1,"respons":1,"creat":2,"inset":2,"descript":1,"true":2,"non":1,"content":1,"caus":1,"spacebetween":1,"effect":1,"appropri":1,"will":1,"properti":1,"bar":5,"bound":1},"maxFreq":6,"totalTerms":55},"loc":7}