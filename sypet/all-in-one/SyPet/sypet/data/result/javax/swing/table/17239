{"id":17239,"className":"javax.swing.table.TableRowSorter","methodName":"getComparator","signature":"\u003cjavax.swing.table.TableRowSorter: java.util.Comparator\u003c?\u003e getComparator(int)\u003e","javadoc":"/** \n * Returns the \u003ccode\u003eComparator\u003c/code\u003e for the specified column.  If a \u003ccode\u003eComparator\u003c/code\u003e has not been specified using the \u003ccode\u003esetComparator\u003c/code\u003e method a \u003ccode\u003eComparator\u003c/code\u003e will be returned based on the column class (\u003ccode\u003eTableModel.getColumnClass\u003c/code\u003e) of the specified column. If the column class is \u003ccode\u003eString\u003c/code\u003e, \u003ccode\u003eCollator.getInstance\u003c/code\u003e is returned.  If the column class implements \u003ccode\u003eComparable\u003c/code\u003e a private \u003ccode\u003eComparator\u003c/code\u003e is returned that invokes the \u003ccode\u003ecompareTo\u003c/code\u003e method.  Otherwise \u003ccode\u003eCollator.getInstance\u003c/code\u003e is returned.\n * @throws IndexOutOfBoundsException {@inheritDoc}\n */\n","tf":{"freq":{"otherwis":1,"except":1,"index":1,"model":1,"collat":2,"invok":1,"use":1,"specifi":3,"instanc":2,"tabl":1,"string":1,"column":6,"will":1,"base":1,"method":2,"compar":8,"bound":1},"maxFreq":8,"totalTerms":34},"loc":14}