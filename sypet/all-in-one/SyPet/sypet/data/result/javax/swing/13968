{"id":13968,"className":"javax.swing.JComponent","methodName":"setOpaque","signature":"\u003cjavax.swing.JComponent: void setOpaque(boolean)\u003e","javadoc":"/** \n * If true the component paints every pixel within its bounds. Otherwise, the component may not paint some or all of its pixels, allowing the underlying pixels to show through. \u003cp\u003e The default value of this property is false for \u003ccode\u003eJComponent\u003c/code\u003e. However, the default value for this property on most standard \u003ccode\u003eJComponent\u003c/code\u003e subclasses (such as \u003ccode\u003eJButton\u003c/code\u003e and \u003ccode\u003eJTree\u003c/code\u003e) is look-and-feel dependent.\n * @param isOpaque  true if this component should be opaque\n * @see #isOpaque\n * @beaninfo bound: true expert: true description: The component\u0027s opacity\n */\n","tf":{"freq":{"expert":1,"otherwis":1,"fals":1,"allow":1,"beaninfo":1,"pixel":3,"show":1,"jtree":1,"opaqu":4,"jcompon":2,"jbutton":1,"valu":2,"howev":1,"everi":1,"look":1,"feel":1,"may":1,"standard":1,"depend":1,"opac":1,"descript":1,"true":4,"paint":2,"compon":4,"subclass":1,"within":1,"properti":2,"bound":2},"maxFreq":4,"totalTerms":44},"loc":6}