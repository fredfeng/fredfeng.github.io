{"id":17077,"className":"javax.swing.table.TableCellEditor","methodName":"getTableCellEditorComponent","signature":"\u003cjavax.swing.table.TableCellEditor: java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)\u003e","javadoc":"/** \n * Sets an initial \u003ccode\u003evalue\u003c/code\u003e for the editor.  This will cause the editor to \u003ccode\u003estopEditing\u003c/code\u003e and lose any partially edited value if the editor is editing when this method is called. \u003cp\u003e Returns the component that should be added to the client\u0027s \u003ccode\u003eComponent\u003c/code\u003e hierarchy.  Once installed in the client\u0027s hierarchy this component will then be able to draw and receive user input.\n * @param table           the \u003ccode\u003eJTable\u003c/code\u003e that is asking theeditor to edit; can be \u003ccode\u003enull\u003c/code\u003e\n * @param value           the value of the cell to be edited; it isup to the specific editor to interpret and draw the value.  For example, if value is the string \"true\", it could be rendered as a string or it could be rendered as a check box that is checked.  \u003ccode\u003enull\u003c/code\u003e is a valid value\n * @param isSelected      true if the cell is to be rendered withhighlighting\n * @param row             the row of the cell being edited\n * @param column          the column of the cell being edited\n * @return  the component for editing\n */\n","tf":{"freq":{"isup":1,"jtabl":1,"valid":1,"stop":1,"call":1,"client":2,"interpret":1,"withhighlight":1,"hierarchi":2,"abl":1,"theeditor":1,"draw":2,"valu":7,"initi":1,"check":2,"select":1,"cell":5,"instal":1,"edit":8,"true":2,"receiv":1,"partial":1,"row":2,"render":3,"lose":1,"specif":1,"editor":5,"input":1,"caus":1,"compon":5,"tabl":2,"string":2,"column":2,"exampl":1,"will":2,"ad":1,"box":1,"method":1,"ask":1,"user":1},"maxFreq":8,"totalTerms":77},"loc":0}