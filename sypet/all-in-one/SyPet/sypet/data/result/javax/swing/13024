{"id":13024,"className":"javax.swing.JSpinner$NumberEditor","methodName":"NumberEditor","signature":"\u003cjavax.swing.JSpinner$NumberEditor: void NumberEditor(javax.swing.JSpinner,java.lang.String)\u003e","javadoc":"/** \n * Construct a \u003ccode\u003eJSpinner\u003c/code\u003e editor that supports displaying and editing the value of a \u003ccode\u003eSpinnerNumberModel\u003c/code\u003e with a \u003ccode\u003eJFormattedTextField\u003c/code\u003e.  \u003ccode\u003eThis\u003c/code\u003e \u003ccode\u003eNumberEditor\u003c/code\u003e becomes both a \u003ccode\u003eChangeListener\u003c/code\u003e on the spinner and a \u003ccode\u003ePropertyChangeListener\u003c/code\u003e on the new \u003ccode\u003eJFormattedTextField\u003c/code\u003e.\n * @param spinner the spinner whose model \u003ccode\u003ethis\u003c/code\u003e editor will monitor\n * @param decimalFormatPattern the initial pattern for the\u003ccode\u003eDecimalFormat\u003c/code\u003e object that\u0027s used to display and parse the value of the text field.\n * @exception IllegalArgumentException if the spinners model is notan instance of \u003ccode\u003eSpinnerNumberModel\u003c/code\u003e or if \u003ccode\u003edecimalFormatPattern\u003c/code\u003e is not a legal argument to \u003ccode\u003eDecimalFormat\u003c/code\u003e\n * @see #getTextField\n * @see SpinnerNumberModel\n * @see java.text.DecimalFormat\n */\n","tf":{"freq":{"legal":1,"model":5,"use":1,"object":1,"decim":5,"becom":1,"jformat":2,"valu":2,"initi":1,"listen":2,"argument":2,"except":2,"text":5,"support":1,"monitor":1,"whose":1,"edit":1,"display":2,"number":5,"format":5,"jspinner":1,"illeg":1,"instanc":1,"spinner":7,"field":4,"editor":4,"notan":1,"pattern":3,"will":1,"java":1,"construct":1,"chang":2,"properti":1,"pars":1},"maxFreq":7,"totalTerms":75},"loc":3}