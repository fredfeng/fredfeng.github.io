{"id":23385,"className":"javax.swing.colorchooser.AbstractColorChooserPanel","methodName":"getMnemonic","signature":"\u003cjavax.swing.colorchooser.AbstractColorChooserPanel: int getMnemonic()\u003e","javadoc":"/** \n * Provides a hint to the look and feel as to the \u003ccode\u003eKeyEvent.VK\u003c/code\u003e constant that can be used as a mnemonic to access the panel. A return value \u003c\u003d 0 indicates there is no mnemonic. \u003cp\u003e The return value here is a hint, it is ultimately up to the look and feel to honor the return value in some meaningful way. \u003cp\u003e This implementation returns 0, indicating the \u003ccode\u003eAbstractColorChooserPanel\u003c/code\u003e does not support a mnemonic, subclasses wishing a mnemonic will need to override this.\n * @return KeyEvent.VK constant identifying the mnemonic; \u003c\u003d 0 for nomnemonic\n * @see #getDisplayedMnemonicIndex\n * @since 1.4\n */\n","tf":{"freq":{"panel":2,"need":1,"ultim":1,"wish":1,"mnemon":7,"use":1,"way":1,"chooser":1,"identifi":1,"indic":2,"event":2,"valu":3,"key":2,"look":2,"feel":2,"index":1,"constant":2,"support":1,"honor":1,"display":1,"hint":2,"meaning":1,"access":1,"provid":1,"nomnemon":1,"color":1,"subclass":1,"will":1},"maxFreq":7,"totalTerms":44},"loc":3}