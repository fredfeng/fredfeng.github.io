{"id":14207,"className":"javax.swing.JViewport","methodName":"scrollRectToVisible","signature":"\u003cjavax.swing.JViewport: void scrollRectToVisible(java.awt.Rectangle)\u003e","javadoc":"/** \n * Scrolls the view so that \u003ccode\u003eRectangle\u003c/code\u003e within the view becomes visible. \u003cp\u003e This attempts to validate the view before scrolling if the view is currently not valid - \u003ccode\u003eisValid\u003c/code\u003e returns false. To avoid excessive validation when the containment hierarchy is being created this will not validate if one of the ancestors does not have a peer, or there is no validate root ancestor, or one of the ancestors is not a \u003ccode\u003eWindow\u003c/code\u003e or \u003ccode\u003eApplet\u003c/code\u003e. \u003cp\u003e Note that this method will not scroll outside of the valid viewport; for example, if \u003ccode\u003econtentRect\u003c/code\u003e is larger than the viewport, scrolling will be confined to the viewport\u0027s bounds.\n * @param contentRect the \u003ccode\u003eRectangle\u003c/code\u003e to display\n * @see JComponent#isValidateRoot\n * @see java.awt.Component#isValid\n * @see java.awt.Component#getPeer\n */\n","tf":{"freq":{"fals":1,"attempt":1,"valid":9,"root":2,"visibl":2,"one":2,"excess":1,"hierarchi":1,"rectangl":2,"avoid":1,"jcompon":1,"confin":1,"becom":1,"current":1,"applet":1,"ancestor":3,"note":1,"peer":2,"viewport":3,"scroll":5,"creat":1,"larger":1,"display":1,"rect":3,"content":2,"awt":2,"compon":2,"window":1,"outsid":1,"contain":1,"exampl":1,"will":3,"java":2,"method":1,"within":1,"view":4,"bound":1},"maxFreq":9,"totalTerms":69},"loc":80}