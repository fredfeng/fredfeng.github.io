{"id":15811,"className":"javax.swing.JScrollPane","methodName":"setLayout","signature":"\u003cjavax.swing.JScrollPane: void setLayout(java.awt.LayoutManager)\u003e","javadoc":"/** \n * Sets the layout manager for this \u003ccode\u003eJScrollPane\u003c/code\u003e. This method overrides \u003ccode\u003esetLayout\u003c/code\u003e in \u003ccode\u003ejava.awt.Container\u003c/code\u003e to ensure that only \u003ccode\u003eLayoutManager\u003c/code\u003es which are subclasses of \u003ccode\u003eScrollPaneLayout\u003c/code\u003e can be used in a \u003ccode\u003eJScrollPane\u003c/code\u003e. If \u003ccode\u003elayout\u003c/code\u003e is non-null, this will invoke \u003ccode\u003esyncWithScrollPane\u003c/code\u003e on it.\n * @param layout the specified layout manager\n * @exception ClassCastException if layout is not a\u003ccode\u003eScrollPaneLayout\u003c/code\u003e\n * @see java.awt.Container#getLayout\n * @see java.awt.Container#setLayout\n * @beaninfo hidden: true\n */\n","tf":{"freq":{"except":2,"beaninfo":1,"scroll":3,"invok":1,"manag":3,"true":1,"use":1,"specifi":1,"non":1,"pane":5,"ensur":1,"awt":3,"cast":1,"sync":1,"hidden":1,"layout":12,"contain":3,"will":1,"subclass":1,"method":1,"java":3,"jscroll":2},"maxFreq":12,"totalTerms":49},"loc":13}