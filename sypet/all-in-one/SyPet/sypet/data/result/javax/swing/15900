{"id":15900,"className":"javax.swing.GroupLayout$SequentialGroup","methodName":"addPreferredGap","signature":"\u003cjavax.swing.GroupLayout$SequentialGroup: javax.swing.GroupLayout$SequentialGroup addPreferredGap(javax.swing.LayoutStyle$ComponentPlacement,int,int)\u003e","javadoc":"/** \n * Adds an element representing the preferred gap between the nearest components.  During layout, neighboring components are found, and the minimum of this gap is set based on the size of the preferred gap between the neighboring components.  If no neighboring components are found the minimum size is set to 0.\n * @param type the type of gap; one of{@code LayoutStyle.ComponentPlacement.RELATED} or{@code LayoutStyle.ComponentPlacement.UNRELATED}\n * @param pref the preferred size of the grap; one of{@code DEFAULT_SIZE} or a value \u0026gt;\u003d 0\n * @param max the maximum size of the gap; one of{@code DEFAULT_SIZE},  {@code PREFERRED_SIZE}or a value \u0026gt;\u003d 0\n * @return this {@code SequentialGroup}\n * @throws IllegalArgumentException if {@code type} is not one of{@code LayoutStyle.ComponentPlacement.RELATED} or{@code LayoutStyle.ComponentPlacement.UNRELATED}\n * @see LayoutStyle\n */\n","tf":{"freq":{"placement":4,"minimum":2,"one":4,"neighbor":3,"add":2,"type":3,"style":5,"grap":1,"layout":6,"valu":2,"sequenti":1,"argument":1,"element":1,"except":1,"max":1,"repres":1,"illeg":1,"nearest":1,"size":4,"compon":8,"maximum":1,"base":1,"prefer":4,"group":1,"pref":1,"found":2,"gap":6},"maxFreq":8,"totalTerms":68},"loc":13}