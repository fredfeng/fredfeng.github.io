{"id":23164,"className":"javax.swing.text.html.HTML","methodName":"getAttributeKey","signature":"\u003cjavax.swing.text.html.HTML: javax.swing.text.html.HTML$Attribute getAttributeKey(java.lang.String)\u003e","javadoc":"/** \n * Fetches an attribute constant for a well-known attribute name (i.e. one of the attributes in the set {FACE, COMMENT, SIZE, COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK, WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET, SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE, USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE, TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE, STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD, ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS, DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN, COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N, FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE, MEDIA, ENDTAG}). If the given name does not represent one of the well-known attributes, then \u003ccode\u003enull\u003c/code\u003e will be returned.\n * @param attName the \u003ccode\u003eString\u003c/code\u003e requested\n * @return the \u003ccode\u003eAttribute\u003c/code\u003e corresponding to \u003ccode\u003eattName\u003c/code\u003e\n */\n","tf":{"freq":{"fetch":1,"constant":1,"repres":1,"correspond":1,"one":2,"att":2,"well":2,"attribut":6,"given":1,"request":1,"string":1,"name":4,"will":1,"known":2,"key":1},"maxFreq":6,"totalTerms":27},"loc":7}