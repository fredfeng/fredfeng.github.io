{"id":17400,"className":"javax.swing.plaf.TextUI","methodName":"getNextVisualPositionFrom","signature":"\u003cjavax.swing.plaf.TextUI: int getNextVisualPositionFrom(javax.swing.text.JTextComponent,int,javax.swing.text.Position$Bias,int,javax.swing.text.Position.Bias[])\u003e","javadoc":"/** \n * Provides a way to determine the next visually represented model location that one might place a caret.  Some views may not be visible, they might not be in the same order found in the model, or they just might not allow access to some of the locations in the model.\n * @param t the text component for which this UI is installed\n * @param pos the position to convert \u003e\u003d 0\n * @param b the bias for the position\n * @param direction the direction from the current position that canbe thought of as the arrow keys typically found on a keyboard. This may be SwingConstants.WEST, SwingConstants.EAST, SwingConstants.NORTH, or SwingConstants.SOUTH\n * @param biasRet an array to contain the bias for the returned position\n * @return the location within the model that best represents the nextlocation visual position\n * @exception BadLocationException\n * @exception IllegalArgumentException for an invalid direction\n */\n","tf":{"freq":{"ret":1,"canb":1,"might":3,"model":4,"allow":1,"arrow":1,"visibl":1,"one":1,"next":2,"typic":1,"thought":1,"convert":1,"way":1,"pos":1,"invalid":1,"order":1,"nextloc":1,"current":1,"best":1,"swing":4,"bias":3,"place":1,"key":1,"argument":1,"direct":3,"just":1,"except":4,"keyboard":1,"locat":4,"may":2,"text":1,"constant":4,"repres":2,"instal":1,"bad":1,"access":1,"illeg":1,"provid":1,"caret":1,"visual":3,"compon":1,"contain":1,"determin":1,"within":1,"view":1,"posit":6,"array":1,"found":2},"maxFreq":6,"totalTerms":80},"loc":0}