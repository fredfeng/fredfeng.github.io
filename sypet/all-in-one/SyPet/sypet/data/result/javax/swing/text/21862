{"id":21862,"className":"javax.swing.text.AsyncBoxView$ChildState","methodName":"run","signature":"\u003cjavax.swing.text.AsyncBoxView$ChildState: void run()\u003e","javadoc":"/** \n * Update the child state.  This should be called by the thread that desires to spend time updating the child state (intended to be the layout thread). \u003cp\u003e This aquires a read lock on the associated document for the duration of the update to ensure the model is not changed while it is operating.  The first thing to do would be to see if any work actually needs to be done. The following could have conceivably happened while the state was waiting to be updated: \u003col\u003e \u003cli\u003eThe child may have been removed from the view hierarchy. \u003cli\u003eThe child may have been updated by a higher priority operation (i.e. the child may have become visible). \u003c/ol\u003e\n */\n","tf":{"freq":{"need":1,"call":1,"model":1,"conceiv":1,"visibl":1,"higher":1,"state":3,"hierarchi":1,"wait":1,"desir":1,"run":1,"ensur":1,"child":5,"durat":1,"time":1,"document":1,"becom":1,"associ":1,"oper":2,"layout":1,"thread":2,"read":1,"happen":1,"follow":1,"work":1,"may":3,"prioriti":1,"done":1,"remov":1,"lock":1,"spend":1,"updat":5,"aquir":1,"actual":1,"view":1,"chang":1,"intend":1,"first":1,"thing":1},"maxFreq":5,"totalTerms":53},"loc":30}