{"id":16000,"className":"javax.swing.TransferHandler","methodName":"getVisualRepresentation","signature":"\u003cjavax.swing.TransferHandler: javax.swing.Icon getVisualRepresentation(java.awt.datatransfer.Transferable)\u003e","javadoc":"/** \n * Returns an object that establishes the look of a transfer.  This is useful for both providing feedback while performing a drag operation and for representing the transfer in a clipboard implementation that has a visual appearance.  The implementation of the \u003ccode\u003eIcon\u003c/code\u003e interface should not alter the graphics clip or alpha level. The icon implementation need not be rectangular or paint all of the bounding rectangle and logic that calls the icons paint method should not assume the all bits are painted. \u003ccode\u003enull\u003c/code\u003e is a valid return value for this method and indicates there is no visual representation provided. In that case, the calling logic is free to represent the transferable however it wants. \u003cp\u003e The default Swing logic will not do an alpha blended drag animation if the return is \u003ccode\u003enull\u003c/code\u003e.\n * @param t  the data to be transferred; this value is expected to have beencreated by the \u003ccode\u003ecreateTransferable\u003c/code\u003e method\n * @return  \u003ccode\u003enull\u003c/code\u003e, indicatingthere is no default visual representation\n */\n","tf":{"freq":{"need":1,"valid":1,"call":2,"rectangular":1,"anim":1,"graphic":1,"beencreat":1,"appear":1,"data":1,"use":1,"perform":1,"object":1,"rectangl":1,"expect":1,"feedback":1,"free":1,"level":1,"indic":1,"oper":1,"blend":1,"alpha":2,"valu":2,"swing":1,"howev":1,"want":1,"look":1,"clip":1,"icon":3,"transfer":5,"assum":1,"creat":1,"repres":2,"drag":2,"establish":1,"paint":3,"provid":2,"logic":3,"alter":1,"represent":3,"bit":1,"indicatingther":1,"visual":4,"will":1,"method":3,"clipboard":1,"bound":1},"maxFreq":5,"totalTerms":69},"loc":3}