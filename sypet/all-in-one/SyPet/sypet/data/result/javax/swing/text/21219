{"id":21219,"className":"javax.swing.text.JTextComponent","methodName":"getToolTipText","signature":"\u003cjavax.swing.text.JTextComponent: java.lang.String getToolTipText(java.awt.event.MouseEvent)\u003e","javadoc":"/** \n * Returns the string to be used as the tooltip for \u003ccode\u003eevent\u003c/code\u003e. This will return one of: \u003col\u003e \u003cli\u003eIf \u003ccode\u003esetToolTipText\u003c/code\u003e has been invoked with a non-\u003ccode\u003enull\u003c/code\u003e value, it will be returned, otherwise \u003cli\u003eThe value from invoking \u003ccode\u003egetToolTipText\u003c/code\u003e on the UI will be returned. \u003c/ol\u003e By default \u003ccode\u003eJTextComponent\u003c/code\u003e does not register itself with the \u003ccode\u003eToolTipManager\u003c/code\u003e. This means that tooltips will NOT be shown from the \u003ccode\u003eTextUI\u003c/code\u003e unless \u003ccode\u003eregisterComponent\u003c/code\u003e has been invoked on the \u003ccode\u003eToolTipManager\u003c/code\u003e.\n * @param event the event in question\n * @return the string to be used as the tooltip for \u003ccode\u003eevent\u003c/code\u003e\n * @see javax.swing.JComponent#setToolTipText\n * @see javax.swing.plaf.TextUI#getToolTipText\n * @see javax.swing.ToolTipManager#registerComponent\n */\n","tf":{"freq":{"otherwis":1,"one":1,"tool":8,"use":2,"tip":8,"jcompon":1,"unless":1,"event":4,"javax":3,"regist":3,"mean":1,"valu":2,"question":1,"swing":3,"text":7,"invok":3,"manag":3,"shown":1,"non":1,"jtext":1,"compon":3,"string":2,"will":4,"plaf":1,"tooltip":3},"maxFreq":8,"totalTerms":68},"loc":12}