{"id":14341,"className":"javax.swing.JList","methodName":"setLayoutOrientation","signature":"\u003cjavax.swing.JList: void setLayoutOrientation(int)\u003e","javadoc":"/** \n * Defines the way list cells are layed out. Consider a  {@code JList}with five cells. Cells can be layed out in one of the following ways: \u003cp\u003e \u003cpre\u003e VERTICAL:          0 1 2 3 4 HORIZONTAL_WRAP:   0  1  2 3  4 VERTICAL_WRAP:     0  3 1  4 2 \u003c/pre\u003e \u003cp\u003e A description of these layouts follows: \u003ctable border\u003d\"1\" summary\u003d\"Describes layouts VERTICAL, HORIZONTAL_WRAP, and VERTICAL_WRAP\"\u003e \u003ctr\u003e\u003cth\u003e\u003cp align\u003d\"left\"\u003eValue\u003c/p\u003e\u003c/th\u003e\u003cth\u003e\u003cp align\u003d\"left\"\u003eDescription\u003c/p\u003e\u003c/th\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003e\u003ccode\u003eVERTICAL\u003c/code\u003e \u003ctd\u003eCells are layed out vertically in a single column. \u003ctr\u003e\u003ctd\u003e\u003ccode\u003eHORIZONTAL_WRAP\u003c/code\u003e \u003ctd\u003eCells are layed out horizontally, wrapping to a new row as necessary. If the  {@code visibleRowCount} property is less thanor equal to zero, wrapping is determined by the width of the list; otherwise wrapping is done in such a way as to ensure {@code visibleRowCount} rows in the list.\u003ctr\u003e\u003ctd\u003e\u003ccode\u003eVERTICAL_WRAP\u003c/code\u003e \u003ctd\u003eCells are layed out vertically, wrapping to a new column as necessary. If the  {@code visibleRowCount} property is less thanor equal to zero, wrapping is determined by the height of the list; otherwise wrapping is done at  {@code visibleRowCount} rows.\u003c/table\u003e \u003cp\u003e The default value of this property is \u003ccode\u003eVERTICAL\u003c/code\u003e.\n * @param layoutOrientation the new layout orientation, one of:{@code VERTICAL},  {@code HORIZONTAL_WRAP} or {@code VERTICAL_WRAP}\n * @see #getLayoutOrientation\n * @see #setVisibleRowCount\n * @see #getScrollableTracksViewportHeight\n * @see #getScrollableTracksViewportWidth\n * @throws IllegalArgumentException if {@code layoutOrientation} isn\u0027t one of theallowable values\n * @since 1.4\n * @beaninfo bound: true attribute: visualUpdate true description: Defines the way list cells are layed out. enum: VERTICAL JList.VERTICAL HORIZONTAL_WRAP JList.HORIZONTAL_WRAP VERTICAL_WRAP JList.VERTICAL_WRAP\n */\n","tf":{"freq":{"count":5,"thanor":2,"singl":1,"zero":2,"necessari":2,"height":2,"border":1,"follow":2,"argument":1,"wrap":6,"except":1,"vertic":2,"align":2,"cell":7,"width":2,"done":2,"descript":3,"describ":1,"row":8,"visual":1,"summari":1,"updat":1,"determin":2,"column":2,"jlist":4,"properti":3,"otherwis":2,"defin":2,"scrollabl":2,"beaninfo":1,"visibl":5,"one":3,"way":4,"consid":1,"ensur":1,"attribut":1,"theallow":1,"layout":7,"valu":3,"left":2,"horizont":1,"less":2,"viewport":2,"five":1,"lay":6,"track":2,"true":2,"list":5,"equal":2,"illeg":1,"orient":5,"tabl":2,"pre":2,"bound":1},"maxFreq":8,"totalTerms":135},"loc":13}