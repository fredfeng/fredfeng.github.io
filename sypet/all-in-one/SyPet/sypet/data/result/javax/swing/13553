{"id":13553,"className":"javax.swing.SpringLayout$Constraints","methodName":"Constraints","signature":"\u003cjavax.swing.SpringLayout$Constraints: void Constraints(java.awt.Component)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eConstraints\u003c/code\u003e object with suitable \u003ccode\u003ex\u003c/code\u003e, \u003ccode\u003ey\u003c/code\u003e, \u003ccode\u003ewidth\u003c/code\u003e and \u003ccode\u003eheight\u003c/code\u003e springs for component, \u003ccode\u003ec\u003c/code\u003e. The \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e springs are constant springs  initialised with the component\u0027s location at the time this method is called. The \u003ccode\u003ewidth\u003c/code\u003e and \u003ccode\u003eheight\u003c/code\u003e springs are special springs, created by the \u003ccode\u003eSpring.width()\u003c/code\u003e and \u003ccode\u003eSpring.height()\u003c/code\u003e methods, which track the size characteristics of the component when they change.\n * @param c  the component whose characteristics will be reflected by this Constraints object\n * @throws NullPointerException if \u003ccode\u003ec\u003c/code\u003e is null.\n * @since 1.5\n */\n","tf":{"freq":{"characterist":2,"call":1,"except":1,"locat":1,"constant":1,"initialis":1,"whose":1,"creat":2,"suitabl":1,"width":3,"track":1,"constraint":3,"object":2,"spring":7,"size":1,"time":1,"height":3,"compon":4,"will":1,"pointer":1,"special":1,"method":2,"chang":1,"reflect":1},"maxFreq":7,"totalTerms":43},"loc":7}