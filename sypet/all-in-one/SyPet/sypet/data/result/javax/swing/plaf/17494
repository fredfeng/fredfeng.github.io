{"id":17494,"className":"javax.swing.plaf.ComponentUI","methodName":"update","signature":"\u003cjavax.swing.plaf.ComponentUI: void update(java.awt.Graphics,javax.swing.JComponent)\u003e","javadoc":"/** \n * Notifies this UI delegate that it is time to paint the specified component.  This method is invoked by \u003ccode\u003eJComponent\u003c/code\u003e when the specified component is being painted. \u003cp\u003eBy default this method fills the specified component with its background color if its  {@code opaque} property is {@code true}, and then immediately calls  {@code paint}. In general this method need not be overridden by subclasses; all look-and-feel rendering code should reside in the  {@code paint} method.\n * @param g the \u003ccode\u003eGraphics\u003c/code\u003e context in which to paint\n * @param c the component being painted;this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components\n * @see #paint\n * @see javax.swing.JComponent#paintComponent\n */\n","tf":{"freq":{"need":1,"might":1,"call":1,"graphic":1,"overridden":1,"use":1,"object":1,"specifi":3,"opaqu":1,"share":1,"jcompon":2,"time":1,"deleg":1,"javax":1,"stateless":1,"immedi":1,"swing":1,"argument":1,"notifi":1,"look":1,"feel":1,"ignor":1,"resid":1,"multipl":1,"invok":1,"fill":1,"true":1,"paint":8,"general":1,"render":1,"compon":6,"updat":1,"color":1,"often":1,"background":1,"context":1,"subclass":1,"method":4,"properti":1},"maxFreq":8,"totalTerms":57},"loc":7}