{"id":14749,"className":"javax.swing.JTable","methodName":"doLayout","signature":"\u003cjavax.swing.JTable: void doLayout()\u003e","javadoc":"/** \n * Causes this table to lay out its rows and columns.  Overridden so that columns can be resized to accomodate a change in the size of a containing parent. Resizes one or more of the columns in the table so that the total width of all of this \u003ccode\u003eJTable\u003c/code\u003e\u0027s columns is equal to the width of the table. \u003cp\u003e Before the layout begins the method gets the \u003ccode\u003eresizingColumn\u003c/code\u003e of the \u003ccode\u003etableHeader\u003c/code\u003e. When the method is called as a result of the resizing of an enclosing window, the \u003ccode\u003eresizingColumn\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e. This means that resizing has taken place \"outside\" the \u003ccode\u003eJTable\u003c/code\u003e and the change - or \"delta\" - should be distributed to all of the columns regardless of this \u003ccode\u003eJTable\u003c/code\u003e\u0027s automatic resize mode. \u003cp\u003e If the \u003ccode\u003eresizingColumn\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e, it is one of the columns in the table that has changed size rather than the table itself. In this case the auto-resize modes govern the way the extra (or deficit) space is distributed amongst the available columns. \u003cp\u003e The modes are: \u003cul\u003e \u003cli\u003e  AUTO_RESIZE_OFF: Don\u0027t automatically adjust the column\u0027s widths at all. Use a horizontal scrollbar to accomodate the columns when their sum exceeds the width of the \u003ccode\u003eViewport\u003c/code\u003e.  If the \u003ccode\u003eJTable\u003c/code\u003e is not enclosed in a \u003ccode\u003eJScrollPane\u003c/code\u003e this may leave parts of the table invisible. \u003cli\u003e  AUTO_RESIZE_NEXT_COLUMN: Use just the column after the resizing column. This results in the \"boundary\" or divider between adjacent cells being independently adjustable. \u003cli\u003e  AUTO_RESIZE_SUBSEQUENT_COLUMNS: Use all columns after the one being adjusted to absorb the changes.  This is the default behavior. \u003cli\u003e  AUTO_RESIZE_LAST_COLUMN: Automatically adjust the size of the last column only. If the bounds of the last column prevent the desired size from being allocated, set the width of the last column to the appropriate limit and make no further adjustments. \u003cli\u003e  AUTO_RESIZE_ALL_COLUMNS: Spread the delta amongst all the columns in the \u003ccode\u003eJTable\u003c/code\u003e, including the one that is being adjusted. \u003c/ul\u003e \u003cp\u003e \u003cbold\u003eNote:\u003c/bold\u003e When a \u003ccode\u003eJTable\u003c/code\u003e makes adjustments to the widths of the columns it respects their minimum and maximum values absolutely.  It is therefore possible that, even after this method is called, the total width of the columns is still not equal to the width of the table. When this happens the \u003ccode\u003eJTable\u003c/code\u003e does not put itself in AUTO_RESIZE_OFF mode to bring up a scroll bar, or break other commitments of its current auto-resize mode -- instead it allows its bounds to be set larger (or smaller) than the total of the column minimum or maximum, meaning, either that there will not be enough room to display all of the columns, or that the columns will not fill the \u003ccode\u003eJTable\u003c/code\u003e\u0027s bounds. These respectively, result in the clipping of some columns or an area being painted in the \u003ccode\u003eJTable\u003c/code\u003e\u0027s background color during painting. \u003cp\u003e The mechanism for distributing the delta amongst the available columns is provided in a private method in the \u003ccode\u003eJTable\u003c/code\u003e class: \u003cpre\u003e adjustSizes(long targetSize, final Resizable3 r, boolean inverse) \u003c/pre\u003e an explanation of which is provided in the following section. \u003ccode\u003eResizable3\u003c/code\u003e is a private interface that allows any data structure containing a collection of elements with a size, preferred size, maximum size and minimum size to have its elements manipulated by the algorithm. \u003cp\u003e \u003cH3\u003e Distributing the delta \u003c/H3\u003e \u003cp\u003e \u003cH4\u003e Overview \u003c/H4\u003e \u003cP\u003e Call \"DELTA\" the difference between the target size and the sum of the preferred sizes of the elements in r. The individual sizes are calculated by taking the original preferred sizes and adding a share of the DELTA - that share being based on how far each preferred size is from its limiting bound (minimum or maximum). \u003cp\u003e \u003cH4\u003eDefinition\u003c/H4\u003e \u003cP\u003e Call the individual constraints min[i], max[i], and pref[i]. \u003cp\u003e Call their respective sums: MIN, MAX, and PREF. \u003cp\u003e Each new size will be calculated using: \u003cp\u003e \u003cpre\u003e size[i] \u003d pref[i] + delta[i] \u003c/pre\u003e where each individual delta[i] is calculated according to: \u003cp\u003e If (DELTA \u003c 0) we are in shrink mode where: \u003cp\u003e \u003cPRE\u003e DELTA delta[i] \u003d ------------ * (pref[i] - min[i]) (PREF - MIN) \u003c/PRE\u003e If (DELTA \u003e 0) we are in expand mode where: \u003cp\u003e \u003cPRE\u003e DELTA delta[i] \u003d ------------ * (max[i] - pref[i]) (MAX - PREF) \u003c/PRE\u003e \u003cP\u003e The overall effect is that the total size moves that same percentage, k, towards the total minimum or maximum and that percentage guarantees accomodation of the required space, DELTA. \u003cH4\u003eDetails\u003c/H4\u003e \u003cP\u003e Naive evaluation of the formulae presented here would be subject to the aggregated rounding errors caused by doing this operation in finite precision (using ints). To deal with this, the multiplying factor above, is constantly recalculated and this takes account of the rounding errors in the previous iterations. The result is an algorithm that produces a set of integers whose values exactly sum to the supplied \u003ccode\u003etargetSize\u003c/code\u003e, and does so by spreading the rounding errors evenly over the given elements. \u003cH4\u003eWhen the MAX and MIN bounds are hit\u003c/H4\u003e \u003cP\u003e When \u003ccode\u003etargetSize\u003c/code\u003e is outside the [MIN, MAX] range, the algorithm sets all sizes to their appropriate limiting value (maximum or minimum).\n */\n","tf":{"freq":{"total":5,"govern":1,"deficit":1,"distribut":4,"bring":1,"desir":1,"given":1,"oper":1,"rang":1,"finit":1,"place":1,"happen":1,"move":1,"limit":3,"element":4,"extra":1,"calcul":3,"delta":8,"cell":1,"parent":1,"avail":2,"prevent":1,"absolut":1,"provid":2,"row":1,"header":1,"present":1,"enclos":2,"will":3,"shrink":1,"auto":2,"bar":1,"pref":4,"put":1,"structur":1,"minimum":6,"subject":1,"behavior":1,"data":1,"constraint":1,"use":5,"therefor":1,"space":2,"algorithm":3,"mode":7,"invers":1,"scrollbar":1,"adjust":8,"current":1,"rather":1,"horizont":1,"note":1,"individu":3,"regardless":1,"min":2,"just":1,"viewport":1,"may":1,"max":2,"previous":1,"invis":1,"larger":1,"exceed":1,"divid":1,"factor":1,"differ":1,"either":1,"overview":1,"mechan":1,"tabl":8,"appropri":2,"naiv":1,"background":1,"base":1,"account":1,"method":4,"iter":1,"part":1,"percentag":2,"explan":1,"bound":5,"respect":3,"detail":1,"manipul":1,"last":3,"overridden":1,"amongst":3,"possibl":1,"round":3,"enough":1,"resiz":13,"independ":1,"bold":2,"requir":1,"deal":1,"toward":1,"hit":1,"commit":1,"exact":1,"precis":1,"expand":1,"taken":1,"jscroll":1,"follow":1,"adjac":1,"whose":1,"scroll":1,"width":8,"far":1,"paint":2,"display":1,"size":21,"window":1,"outsid":2,"maximum":6,"definit":1,"contain":2,"column":26,"leav":1,"even":2,"prefer":4,"boundari":1,"make":2,"collect":1,"room":1,"alloc":1,"jtabl":10,"call":5,"result":4,"accomod":3,"allow":2,"one":4,"sum":4,"way":1,"aggreg":1,"automat":3,"smaller":1,"share":2,"area":1,"layout":2,"multipli":1,"mean":2,"valu":3,"clip":1,"recalcul":1,"constant":1,"includ":1,"error":3,"guarante":1,"lay":1,"fill":1,"origin":1,"suppli":1,"produc":1,"equal":2,"still":1,"evalu":1,"accord":1,"section":1,"begin":1,"pane":1,"caus":2,"effect":1,"absorb":1,"color":1,"take":2,"pre":4,"target":4,"instead":1,"ad":1,"chang":4,"spread":2,"integ":1,"formula":1},"maxFreq":26,"totalTerms":382},"loc":42}