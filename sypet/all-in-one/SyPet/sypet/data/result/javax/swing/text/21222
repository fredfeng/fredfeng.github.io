{"id":21222,"className":"javax.swing.text.JTextComponent","methodName":"getScrollableBlockIncrement","signature":"\u003cjavax.swing.text.JTextComponent: int getScrollableBlockIncrement(java.awt.Rectangle,int,int)\u003e","javadoc":"/** \n * Components that display logical rows or columns should compute the scroll increment that will completely expose one block of rows or columns, depending on the value of orientation. \u003cp\u003e The default implementation of this is to simply return the visible area.  Subclasses will likely be able to provide a much more reasonable value.\n * @param visibleRect the view area visible within the viewport\n * @param orientation either \u003ccode\u003eSwingConstants.VERTICAL\u003c/code\u003e or\u003ccode\u003eSwingConstants.HORIZONTAL\u003c/code\u003e\n * @param direction less than zero to scroll up/left, greater than zerofor down/right\n * @return the \"block\" increment for scrolling in the specified direction\n * @exception IllegalArgumentException for an invalid orientation\n * @see JScrollBar#setBlockIncrement\n */\n","tf":{"freq":{"simpli":1,"greater":1,"scrollabl":1,"reason":1,"visibl":3,"one":1,"block":4,"zerofor":1,"abl":1,"zero":1,"specifi":1,"area":2,"invalid":1,"left":1,"expos":1,"valu":2,"jscroll":1,"swing":2,"right":1,"less":1,"complet":1,"argument":1,"direct":2,"viewport":1,"increment":4,"except":2,"constant":2,"scroll":3,"depend":1,"display":1,"rect":1,"like":1,"illeg":1,"provid":1,"much":1,"row":2,"logic":1,"either":1,"orient":3,"compon":1,"will":2,"column":2,"subclass":1,"comput":1,"within":1,"view":1,"bar":1},"maxFreq":4,"totalTerms":68},"loc":10}