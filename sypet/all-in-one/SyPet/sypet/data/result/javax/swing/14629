{"id":14629,"className":"javax.swing.Scrollable","methodName":"getScrollableUnitIncrement","signature":"\u003cjavax.swing.Scrollable: int getScrollableUnitIncrement(java.awt.Rectangle,int,int)\u003e","javadoc":"/** \n * Components that display logical rows or columns should compute the scroll increment that will completely expose one new row or column, depending on the value of orientation.  Ideally, components should handle a partially exposed row or column by returning the distance required to completely expose the item. \u003cp\u003e Scrolling containers, like JScrollPane, will use this method each time the user requests a unit scroll.\n * @param visibleRect The view area visible within the viewport\n * @param orientation Either SwingConstants.VERTICAL or SwingConstants.HORIZONTAL.\n * @param direction Less than zero to scroll up/left, greater than zero for down/right.\n * @return The \"unit\" increment for scrolling in the specified direction.This value should always be positive.\n * @see JScrollBar#setUnitIncrement\n */\n","tf":{"freq":{"greater":1,"zero":2,"specifi":1,"time":1,"requir":1,"request":1,"jscroll":2,"swing":2,"right":1,"increment":4,"scroll":5,"alway":1,"display":1,"partial":1,"like":1,"rect":1,"logic":1,"row":3,"contain":1,"distanc":1,"column":3,"will":2,"comput":1,"view":1,"bar":1,"posit":1,"scrollabl":1,"visibl":2,"one":1,"use":1,"area":1,"valu":2,"expos":3,"left":1,"less":1,"complet":2,"direct":2,"viewport":1,"constant":2,"depend":1,"ideal":1,"handl":1,"pane":1,"unit":4,"either":1,"orient":2,"compon":2,"item":1,"method":1,"within":1,"user":1},"maxFreq":5,"totalTerms":78},"loc":0}