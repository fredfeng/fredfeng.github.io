{"id":18433,"className":"javax.swing.plaf.basic.BasicTextUI","methodName":"getRootView","signature":"\u003cjavax.swing.plaf.basic.BasicTextUI: javax.swing.text.View getRootView(javax.swing.text.JTextComponent)\u003e","javadoc":"/** \n * Fetches a View with the allocation of the associated text component (i.e. the root of the hierarchy) that can be traversed to determine how the model is being represented spatially. \u003cp\u003e \u003cfont color\u003dred\u003e\u003cb\u003eNOTE:\u003c/b\u003eThe View hierarchy can be traversed from the root view, and other things can be done as well.  Things done in this way cannot be protected like simple method calls through the TextUI. Therefore, proper operation in the presence of concurrency must be arranged by any logic that calls this method! \u003c/font\u003e\n * @param tc the text component for which this UI is installed\n * @return the view\n * @see TextUI#getRootView\n */\n","tf":{"freq":{"call":2,"model":1,"simpl":1,"root":4,"concurr":1,"way":1,"hierarchi":2,"therefor":1,"well":1,"must":1,"oper":1,"associ":1,"proper":1,"travers":2,"presenc":1,"fetch":1,"text":4,"spatial":1,"repres":1,"font":2,"instal":1,"done":2,"like":1,"logic":1,"arrang":1,"red":1,"compon":2,"color":1,"determin":1,"method":2,"view":6,"alloc":1,"thing":2},"maxFreq":6,"totalTerms":52},"loc":3}