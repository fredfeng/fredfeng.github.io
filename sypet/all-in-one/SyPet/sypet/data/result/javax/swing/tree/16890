{"id":16890,"className":"javax.swing.tree.DefaultMutableTreeNode","methodName":"isNodeDescendant","signature":"\u003cjavax.swing.tree.DefaultMutableTreeNode: boolean isNodeDescendant(javax.swing.tree.DefaultMutableTreeNode)\u003e","javadoc":"/** \n * Returns true if \u003ccode\u003eanotherNode\u003c/code\u003e is a descendant of this node -- if it is this node, one of this node\u0027s children, or a descendant of one of this node\u0027s children.  Note that a node is considered a descendant of itself.  If \u003ccode\u003eanotherNode\u003c/code\u003e is null, returns false.  This operation is at worst O(h) where h is the distance from the root to \u003ccode\u003eanotherNode\u003c/code\u003e.\n * @see #isNodeAncestor\n * @see #getSharedAncestor\n * @param anotherNode     node to test as descendant of this node\n * @return  true if this node is an ancestor of \u003ccode\u003eanotherNode\u003c/code\u003e\n */\n","tf":{"freq":{"fals":1,"test":1,"root":1,"worst":1,"one":2,"true":2,"children":2,"anoth":5,"consid":1,"share":1,"node":15,"oper":1,"distanc":1,"descend":5,"ancestor":3,"note":1},"maxFreq":15,"totalTerms":43},"loc":6}