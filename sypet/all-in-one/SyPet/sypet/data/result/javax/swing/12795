{"id":12795,"className":"javax.swing.JTree$DynamicUtilTreeNode","methodName":"DynamicUtilTreeNode","signature":"\u003cjavax.swing.JTree$DynamicUtilTreeNode: void DynamicUtilTreeNode(java.lang.Object,java.lang.Object)\u003e","javadoc":"/** \n * Creates a node with the specified object as its value and with the specified children. For the node to allow children, the children-object must be an array of objects, a \u003ccode\u003eVector\u003c/code\u003e, or a \u003ccode\u003eHashtable\u003c/code\u003e -- even if empty. Otherwise, the node is not allowed to have children.\n * @param value  the \u003ccode\u003eObject\u003c/code\u003e that is the value for thenew node\n * @param children an array of \u003ccode\u003eObject\u003c/code\u003es, a\u003ccode\u003eVector\u003c/code\u003e, or a \u003ccode\u003eHashtable\u003c/code\u003e used to create the child nodes; if any other object is specified, or if the value is \u003ccode\u003enull\u003c/code\u003e, then the node is not allowed to have children\n */\n","tf":{"freq":{"otherwis":1,"thenew":1,"allow":3,"hashtabl":2,"creat":2,"use":1,"children":6,"object":6,"must":1,"empti":1,"specifi":3,"child":1,"node":7,"tree":1,"vector":2,"even":1,"valu":4,"dynam":1,"util":1,"array":2},"maxFreq":7,"totalTerms":47},"loc":17}