{"id":14316,"className":"javax.swing.JList","methodName":"JList","signature":"\u003cjavax.swing.JList: void JList(java.util.Vector)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eJList\u003c/code\u003e that displays the elements in the specified \u003ccode\u003eVector\u003c/code\u003e. This constructor creates a read-only model for the given  {@code Vector}, and then delegates to the constructor that takes a  {@code ListModel}. \u003cp\u003e Attempts to pass a  {@code null} value to this method results inundefined behavior and, most likely, exceptions. The created model references the given  {@code Vector} directly. Attempts to modify the{@code Vector} after constructing the list results in undefined behavior.\n * @param listData  the \u003ccode\u003eVector\u003c/code\u003e to be loaded into thedata model,  {@code non-null}\n */\n","tf":{"freq":{"attempt":2,"result":2,"model":4,"behavior":2,"data":1,"specifi":1,"deleg":1,"given":2,"refer":1,"vector":5,"thedata":1,"read":1,"valu":1,"undefin":1,"constructor":2,"direct":1,"element":1,"except":1,"creat":2,"display":1,"list":4,"inundefin":1,"like":1,"non":1,"pass":1,"take":1,"modifi":1,"jlist":1,"load":1,"method":1,"construct":2},"maxFreq":5,"totalTerms":48},"loc":8}