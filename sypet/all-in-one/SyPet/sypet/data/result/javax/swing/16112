{"id":16112,"className":"javax.swing.RowFilter","methodName":"regexFilter","signature":"\u003cjavax.swing.RowFilter: javax.swing.RowFilter\u003cM,I\u003e regexFilter(java.lang.String,int[])\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eRowFilter\u003c/code\u003e that uses a regular expression to determine which entries to include.  Only entries with at least one matching value are included.  For example, the following creates a \u003ccode\u003eRowFilter\u003c/code\u003e that includes entries with at least one value starting with \"a\": \u003cpre\u003e RowFilter.regexFilter(\"^a\"); \u003c/pre\u003e \u003cp\u003e The returned filter uses  {@link java.util.regex.Matcher#find}to test for inclusion.  To test for exact matches use the characters \u0027^\u0027 and \u0027$\u0027 to match the beginning and end of the string respectively.  For example, \"^foo$\" includes only rows whose string is exactly \"foo\" and not, for example, \"food\".  See {@link java.util.regex.Pattern} for a complete description ofthe supported regular-expression constructs.\n * @param regex the regular expression to filter on\n * @param indices the indices of the values to check.  If not supplied allvalues are evaluated\n * @return a \u003ccode\u003eRowFilter\u003c/code\u003e implementing the specified criteria\n * @throws NullPointerException if \u003ccode\u003eregex\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if any of the \u003ccode\u003eindices\u003c/code\u003eare \u0026lt; 0\n * @throws PatternSyntaxException if \u003ccode\u003eregex\u003c/code\u003e isnot a valid regular expression.\n * @see java.util.regex.Pattern\n */\n","tf":{"freq":{"allvalu":1,"test":2,"least":2,"foo":2,"specifi":1,"matcher":1,"exact":2,"follow":1,"argument":1,"except":3,"support":1,"creat":1,"charact":1,"whose":1,"regex":8,"descript":1,"row":5,"syntax":1,"start":1,"food":1,"determin":1,"pointer":1,"match":3,"util":3,"filter":8,"valid":1,"link":2,"one":2,"use":3,"express":4,"inclus":1,"isnot":1,"indic":3,"ofth":1,"valu":3,"find":1,"end":1,"complet":1,"includ":4,"check":1,"criteria":1,"regular":4,"entri":3,"suppli":1,"evalu":1,"illeg":1,"begin":1,"pattern":3,"pre":2,"string":2,"exampl":3,"java":3,"construct":1,"respect":1},"maxFreq":8,"totalTerms":109},"loc":4}