{"id":14700,"className":"javax.swing.JTable","methodName":"setRowSorter","signature":"\u003cjavax.swing.JTable: void setRowSorter(javax.swing.RowSorter)\u003e","javadoc":"/** \n * Sets the \u003ccode\u003eRowSorter\u003c/code\u003e.  \u003ccode\u003eRowSorter\u003c/code\u003e is used to provide sorting and filtering to a \u003ccode\u003eJTable\u003c/code\u003e. \u003cp\u003e This method clears the selection and resets any variable row heights. \u003cp\u003e This method fires a \u003ccode\u003ePropertyChangeEvent\u003c/code\u003e when appropriate, with the property name \u003ccode\u003e\"rowSorter\"\u003c/code\u003e.  For backward-compatibility, this method fires an additional event with the property name \u003ccode\u003e\"sorter\"\u003c/code\u003e. \u003cp\u003e If the underlying model of the \u003ccode\u003eRowSorter\u003c/code\u003e differs from that of this \u003ccode\u003eJTable\u003c/code\u003e undefined behavior will result.\n * @param sorter the \u003ccode\u003eRowSorter\u003c/code\u003e; \u003ccode\u003enull\u003c/code\u003e turnssorting off\n * @see javax.swing.table.TableRowSorter\n * @beaninfo bound: true description: The table\u0027s RowSorter\n * @since 1.6\n */\n","tf":{"freq":{"jtabl":2,"result":1,"model":1,"sort":1,"beaninfo":1,"backward":1,"behavior":1,"variabl":1,"use":1,"clear":1,"height":1,"javax":1,"sorter":10,"event":2,"name":2,"reset":1,"swing":1,"undefin":1,"addit":1,"turnssort":1,"select":1,"descript":1,"true":1,"provid":1,"row":9,"fire":2,"differ":1,"tabl":3,"appropri":1,"will":1,"method":3,"properti":3,"chang":1,"bound":1,"filter":1,"compat":1},"maxFreq":10,"totalTerms":63},"loc":16}