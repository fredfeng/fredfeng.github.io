{"id":14846,"className":"javax.swing.JTable","methodName":"getPrintable","signature":"\u003cjavax.swing.JTable: java.awt.print.Printable getPrintable(javax.swing.PrintMode,java.text.MessageFormat,java.text.MessageFormat)\u003e","javadoc":"/** \n * Return a \u003ccode\u003ePrintable\u003c/code\u003e for use in printing this JTable. \u003cp\u003e This method is meant for those wishing to customize the default \u003ccode\u003ePrintable\u003c/code\u003e implementation used by \u003ccode\u003eJTable\u003c/code\u003e\u0027s \u003ccode\u003eprint\u003c/code\u003e methods. Developers wanting simply to print the table should use one of those methods directly. \u003cp\u003e The \u003ccode\u003ePrintable\u003c/code\u003e can be requested in one of two printing modes. In both modes, it spreads table rows naturally in sequence across multiple pages, fitting as many rows as possible per page. \u003ccode\u003ePrintMode.NORMAL\u003c/code\u003e specifies that the table be printed at its current size. In this mode, there may be a need to spread columns across pages in a similar manner to that of the rows. When the need arises, columns are distributed in an order consistent with the table\u0027s \u003ccode\u003eComponentOrientation\u003c/code\u003e. \u003ccode\u003ePrintMode.FIT_WIDTH\u003c/code\u003e specifies that the output be scaled smaller, if necessary, to fit the table\u0027s entire width (and thereby all columns) on each page. Width and height are scaled equally, maintaining the aspect ratio of the output. \u003cp\u003e The \u003ccode\u003ePrintable\u003c/code\u003e heads the portion of table on each page with the appropriate section from the table\u0027s \u003ccode\u003eJTableHeader\u003c/code\u003e, if it has one. \u003cp\u003e Header and footer text can be added to the output by providing \u003ccode\u003eMessageFormat\u003c/code\u003e arguments. The printing code requests Strings from the formats, providing a single item which may be included in the formatted string: an \u003ccode\u003eInteger\u003c/code\u003e representing the current page number. \u003cp\u003e You are encouraged to read the documentation for \u003ccode\u003eMessageFormat\u003c/code\u003e as some characters, such as single-quote, are special and need to be escaped. \u003cp\u003e Here\u0027s an example of creating a \u003ccode\u003eMessageFormat\u003c/code\u003e that can be used to print \"Duke\u0027s Table: Page - \" and the current page number: \u003cp\u003e \u003cpre\u003e // notice the escaping of the single quote // notice how the page number is included with \"{0}\" MessageFormat format \u003d new MessageFormat(\"Duke\u0027\u0027s Table: Page - {0}\"); \u003c/pre\u003e \u003cp\u003e The \u003ccode\u003ePrintable\u003c/code\u003e constrains what it draws to the printable area of each page that it prints. Under certain circumstances, it may find it impossible to fit all of a page\u0027s content into that area. In these cases the output may be clipped, but the implementation makes an effort to do something reasonable. Here are a few situations where this is known to occur, and how they may be handled by this particular implementation: \u003cul\u003e \u003cli\u003eIn any mode, when the header or footer text is too wide to fit completely in the printable area -- print as much of the text as possible starting from the beginning, as determined by the table\u0027s \u003ccode\u003eComponentOrientation\u003c/code\u003e. \u003cli\u003eIn any mode, when a row is too tall to fit in the printable area -- print the upper-most portion of the row and paint no lower border on the table. \u003cli\u003eIn \u003ccode\u003ePrintMode.NORMAL\u003c/code\u003e when a column is too wide to fit in the printable area -- print the center portion of the column and leave the left and right borders off the table. \u003c/ul\u003e \u003cp\u003e It is entirely valid for this \u003ccode\u003ePrintable\u003c/code\u003e to be wrapped inside another in order to create complex reports and documents. You may even request that different pages be rendered into different sized printable areas. The implementation must be prepared to handle this (possibly by doing its layout calculations on the fly). However, providing different heights to each page will likely not work well with \u003ccode\u003ePrintMode.NORMAL\u003c/code\u003e when it has to spread columns across pages. \u003cp\u003e As far as customizing how the table looks in the printed result, \u003ccode\u003eJTable\u003c/code\u003e itself will take care of hiding the selection and focus during printing. For additional customizations, your renderers or painting code can customize the look based on the value of  {@link javax.swing.JComponent#isPaintingForPrint()}\u003cp\u003e Also, \u003ci\u003ebefore\u003c/i\u003e calling this method you may wish to \u003ci\u003efirst\u003c/i\u003e modify the state of the table, such as to cancel cell editing or have the user size the table appropriately. However, you must not modify the state of the table \u003ci\u003eafter\u003c/i\u003e this \u003ccode\u003ePrintable\u003c/code\u003e has been fetched (invalid modifications include changes in size or underlying data). The behavior of the returned \u003ccode\u003ePrintable\u003c/code\u003e is undefined once the table has been changed.\n * @param printMode     the printing mode that the printable should use\n * @param headerFormat  a \u003ccode\u003eMessageFormat\u003c/code\u003e specifying the text tobe used in printing a header, or null for none\n * @param footerFormat  a \u003ccode\u003eMessageFormat\u003c/code\u003e specifying the text tobe used in printing a footer, or null for none\n * @return a \u003ccode\u003ePrintable\u003c/code\u003e for printing this JTable\n * @see #print(JTable.PrintMode,MessageFormat,MessageFormat,boolean,PrintRequestAttributeSet,boolean)\n * @see Printable\n * @see PrinterJob\n * @since 1.5\n */\n","tf":{"freq":{"need":3,"lower":1,"reason":1,"singl":3,"maintain":1,"distribut":1,"particular":1,"therebi":1,"specifi":4,"center":1,"draw":1,"jcompon":1,"hide":1,"page":15,"sequenc":1,"encourag":1,"report":1,"focus":1,"tobe":2,"undefin":1,"border":2,"right":1,"quot":2,"fetch":1,"mani":1,"multipl":1,"charact":1,"cell":1,"calcul":1,"job":1,"number":3,"wide":2,"like":1,"provid":3,"prepar":1,"row":5,"header":5,"content":1,"aspect":1,"start":1,"ratio":1,"will":2,"entir":2,"complex":1,"simpli":1,"behavior":1,"link":1,"data":1,"use":7,"anoth":1,"someth":1,"across":3,"mode":12,"document":2,"attribut":1,"current":3,"left":1,"want":1,"complet":1,"aris":1,"similar":1,"portion":3,"look":2,"direct":1,"addit":1,"may":7,"repres":1,"messag":9,"printer":1,"footer":4,"differ":3,"compon":2,"per":1,"tabl":17,"appropri":2,"string":2,"item":1,"base":1,"exampl":1,"method":4,"imposs":1,"modif":1,"constrain":1,"wish":2,"possibl":3,"natur":1,"cancel":1,"necessari":1,"notic":2,"must":2,"situat":1,"height":2,"invalid":1,"javax":1,"request":4,"care":1,"none":2,"duke":2,"swing":1,"howev":2,"head":1,"custom":4,"work":1,"argument":1,"wrap":1,"text":5,"fli":1,"consist":1,"creat":2,"select":1,"width":2,"far":1,"meant":1,"effort":1,"paint":3,"circumst":1,"format":14,"much":1,"render":2,"size":4,"determin":1,"leav":1,"column":6,"even":1,"known":1,"output":4,"make":1,"jtabl":6,"call":1,"result":1,"valid":1,"scale":2,"one":3,"state":2,"well":1,"smaller":1,"escap":2,"upper":1,"fit":6,"area":6,"order":2,"layout":1,"read":1,"valu":1,"develop":1,"tall":1,"find":1,"clip":1,"includ":3,"edit":1,"equal":1,"print":26,"printabl":17,"section":1,"begin":1,"handl":2,"two":1,"orient":2,"take":1,"pre":2,"modifi":2,"ad":1,"insid":1,"manner":1,"special":1,"chang":2,"certain":1,"spread":3,"user":1,"first":1,"also":1,"integ":1,"occur":1},"maxFreq":26,"totalTerms":397},"loc":4}