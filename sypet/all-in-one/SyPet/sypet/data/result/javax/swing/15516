{"id":15516,"className":"javax.swing.JComboBox","methodName":"addItem","signature":"\u003cjavax.swing.JComboBox: void addItem(E)\u003e","javadoc":"/** \n * Adds an item to the item list. This method works only if the \u003ccode\u003eJComboBox\u003c/code\u003e uses a mutable data model. \u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Focus and keyboard navigation problems may arise if you add duplicate String objects. A workaround is to add new objects instead of String objects and make sure that the toString() method is defined. For example: \u003cpre\u003e comboBox.addItem(makeObj(\"Item 1\")); comboBox.addItem(makeObj(\"Item 1\")); ... private Object makeObj(final String item)  { return new Object() { public String toString() { return item; } }; } \u003c/pre\u003e\n * @param item the item to add to the list\n * @see MutableComboBoxModel\n */\n","tf":{"freq":{"warn":1,"defin":1,"model":2,"jcombo":1,"mutabl":2,"data":1,"use":1,"combo":3,"object":5,"add":7,"navig":1,"focus":1,"sure":1,"aris":1,"work":1,"keyboard":1,"may":1,"list":2,"problem":1,"workaround":1,"strong":2,"pre":2,"item":11,"string":6,"exampl":1,"duplic":1,"instead":1,"obj":3,"box":4,"method":2,"make":4},"maxFreq":11,"totalTerms":72},"loc":4}