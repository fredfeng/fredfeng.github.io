{"id":17500,"className":"javax.swing.plaf.ComponentUI","methodName":"getBaseline","signature":"\u003cjavax.swing.plaf.ComponentUI: int getBaseline(javax.swing.JComponent,int,int)\u003e","javadoc":"/** \n * Returns the baseline.  The baseline is measured from the top of the component.  This method is primarily meant for \u003ccode\u003eLayoutManager\u003c/code\u003es to align components along their baseline.  A return value less than 0 indicates this component does not have a reasonable baseline and that \u003ccode\u003eLayoutManager\u003c/code\u003es should not align this component on its baseline. \u003cp\u003e This method returns -1.  Subclasses that have a meaningful baseline should override appropriately.\n * @param c \u003ccode\u003eJComponent\u003c/code\u003e baseline is being requested for\n * @param width the width to get the baseline for\n * @param height the height to get the baseline for\n * @throws NullPointerException if \u003ccode\u003ec\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if width or height is \u0026lt; 0\n * @return baseline or a value \u0026lt; 0 indicating there is no reasonablebaseline\n * @see javax.swing.JComponent#getBaseline(int,int)\n * @since 1.6\n */\n","tf":{"freq":{"reason":1,"primarili":1,"jcompon":2,"height":3,"indic":2,"javax":1,"layout":2,"request":1,"valu":2,"along":1,"swing":1,"less":1,"top":1,"argument":1,"except":2,"manag":2,"align":2,"width":3,"meant":1,"baselin":12,"meaning":1,"reasonablebaselin":1,"illeg":1,"compon":4,"appropri":1,"subclass":1,"pointer":1,"method":2,"measur":1},"maxFreq":12,"totalTerms":55},"loc":10}