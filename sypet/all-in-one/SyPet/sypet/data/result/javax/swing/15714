{"id":15714,"className":"javax.swing.MenuElement","methodName":"processMouseEvent","signature":"\u003cjavax.swing.MenuElement: void processMouseEvent(java.awt.event.MouseEvent,javax.swing.MenuElement[],javax.swing.MenuSelectionManager)\u003e","javadoc":"/** \n * Processes a mouse event. \u003ccode\u003eevent\u003c/code\u003e is a \u003ccode\u003eMouseEvent\u003c/code\u003e with source being the receiving element\u0027s component. \u003ccode\u003epath\u003c/code\u003e is the path of the receiving element in the menu hierarchy including the receiving element itself. \u003ccode\u003emanager\u003c/code\u003e is the \u003ccode\u003eMenuSelectionManager\u003c/code\u003e for the menu hierarchy. This method should process the \u003ccode\u003eMouseEvent\u003c/code\u003e and change the menu selection if necessary by using \u003ccode\u003eMenuSelectionManager\u003c/code\u003e\u0027s API Note: you do not have to forward the event to sub-components. This is done automatically by the \u003ccode\u003eMenuSelectionManager\u003c/code\u003e.\n */\n","tf":{"freq":{"element":3,"sub":1,"includ":1,"select":4,"manag":4,"done":1,"menu":6,"use":1,"receiv":3,"hierarchi":2,"automat":1,"necessari":1,"mous":4,"process":3,"compon":2,"forward":1,"event":6,"path":2,"method":1,"sourc":1,"chang":1,"note":1},"maxFreq":6,"totalTerms":50},"loc":0}