{"id":21217,"className":"javax.swing.text.JTextComponent","methodName":"select","signature":"\u003cjavax.swing.text.JTextComponent: void select(int,int)\u003e","javadoc":"/** \n * Selects the text between the specified start and end positions. \u003cp\u003e This method sets the start and end positions of the selected text, enforcing the restriction that the start position must be greater than or equal to zero.  The end position must be greater than or equal to the start position, and less than or equal to the length of the text component\u0027s text. \u003cp\u003e If the caller supplies values that are inconsistent or out of bounds, the method enforces these constraints silently, and without failure. Specifically, if the start position or end position is greater than the length of the text, it is reset to equal the text length. If the start position is less than zero, it is reset to zero, and if the end position is less than the start position, it is reset to the start position. \u003cp\u003e This call is provided for backward compatibility. It is routed to a call to \u003ccode\u003esetCaretPosition\u003c/code\u003e followed by a call to \u003ccode\u003emoveCaretPosition\u003c/code\u003e. The preferred way to manage selection is by calling those methods directly.\n * @param selectionStart the start position of the text\n * @param selectionEnd the end position of the text\n * @see #setCaretPosition\n * @see #moveCaretPosition\n */\n","tf":{"freq":{"caller":1,"silent":1,"call":4,"inconsist":1,"greater":3,"backward":1,"way":1,"constraint":1,"zero":3,"must":2,"specifi":1,"length":3,"reset":3,"valu":1,"move":2,"end":7,"less":3,"follow":1,"direct":1,"text":8,"failur":1,"enforc":2,"manag":1,"select":6,"equal":4,"suppli":1,"provid":1,"without":1,"rout":1,"restrict":1,"caret":4,"specif":1,"compon":1,"start":10,"method":3,"prefer":1,"posit":17,"bound":1,"compat":1},"maxFreq":17,"totalTerms":106},"loc":20}