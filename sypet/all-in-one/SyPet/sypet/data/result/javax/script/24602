{"id":24602,"className":"javax.script.ScriptEngine","methodName":"getBindings","signature":"\u003cjavax.script.ScriptEngine: javax.script.Bindings getBindings(int)\u003e","javadoc":"/** \n * Returns a scope of named values.  The possible scopes are: \u003cbr\u003e\u003cbr\u003e \u003cul\u003e \u003cli\u003e\u003ccode\u003eScriptContext.GLOBAL_SCOPE\u003c/code\u003e - The set of named values representing global scope. If this \u003ccode\u003eScriptEngine\u003c/code\u003e is created by a \u003ccode\u003eScriptEngineManager\u003c/code\u003e, then the manager sets global scope bindings. This may be \u003ccode\u003enull\u003c/code\u003e if no global scope is associated with this \u003ccode\u003eScriptEngine\u003c/code\u003e\u003c/li\u003e \u003cli\u003e\u003ccode\u003eScriptContext.ENGINE_SCOPE\u003c/code\u003e - The set of named values representing the state of this \u003ccode\u003eScriptEngine\u003c/code\u003e.  The values are generally visible in scripts using the associated keys as variable names.\u003c/li\u003e \u003cli\u003eAny other value of scope defined in the default \u003ccode\u003eScriptContext\u003c/code\u003e of the \u003ccode\u003eScriptEngine\u003c/code\u003e. \u003c/li\u003e \u003c/ul\u003e \u003cbr\u003e\u003cbr\u003e The \u003ccode\u003eBindings\u003c/code\u003e instances that are returned must be identical to those returned by the \u003ccode\u003egetBindings\u003c/code\u003e method of \u003ccode\u003eScriptContext\u003c/code\u003e called with corresponding arguments on the default \u003ccode\u003eScriptContext\u003c/code\u003e of the \u003ccode\u003eScriptEngine\u003c/code\u003e.\n * @param scope Either \u003ccode\u003eScriptContext.ENGINE_SCOPE\u003c/code\u003e or \u003ccode\u003eScriptContext.GLOBAL_SCOPE\u003c/code\u003ewhich specifies the \u003ccode\u003eBindings\u003c/code\u003e to return.  Implementations of \u003ccode\u003eScriptContext\u003c/code\u003e may define additional scopes.  If the default \u003ccode\u003eScriptContext\u003c/code\u003e of the \u003ccode\u003eScriptEngine\u003c/code\u003e defines additional scopes, any of them can be passed to get the corresponding \u003ccode\u003eBindings\u003c/code\u003e.\n * @return The \u003ccode\u003eBindings\u003c/code\u003e with the specified scope.\n * @throws IllegalArgumentException if specified scope is invalid\n */\n","tf":{"freq":{"call":1,"defin":3,"scope":11,"correspond":2,"visibl":1,"variabl":1,"engin":7,"state":1,"possibl":1,"use":1,"must":1,"specifi":3,"invalid":1,"ident":1,"associ":2,"name":4,"valu":5,"key":1,"argument":2,"addit":2,"except":1,"may":2,"creat":1,"repres":2,"manag":2,"global":3,"script":17,"illeg":1,"general":1,"pass":1,"instanc":1,"either":1,"context":9,"method":1,"bind":7},"maxFreq":17,"totalTerms":101},"loc":0}