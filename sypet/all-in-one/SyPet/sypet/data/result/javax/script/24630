{"id":24630,"className":"javax.script.AbstractScriptEngine","methodName":"eval","signature":"\u003cjavax.script.AbstractScriptEngine: java.lang.Object eval(java.io.Reader,javax.script.Bindings)\u003e","javadoc":"/** \n * \u003ccode\u003eeval(Reader, Bindings)\u003c/code\u003e calls the abstract \u003ccode\u003eeval(Reader, ScriptContext)\u003c/code\u003e method, passing it a \u003ccode\u003eScriptContext\u003c/code\u003e whose Reader, Writers and Bindings for scopes other that \u003ccode\u003eENGINE_SCOPE\u003c/code\u003e are identical to those members of the protected \u003ccode\u003econtext\u003c/code\u003e field.  The specified \u003ccode\u003eBindings\u003c/code\u003e is used instead of the \u003ccode\u003eENGINE_SCOPE\u003c/code\u003e \u003ccode\u003eBindings\u003c/code\u003e of the \u003ccode\u003econtext\u003c/code\u003e field.\n * @param reader A \u003ccode\u003eReader\u003c/code\u003e containing the source of the script.\n * @param bindings A \u003ccode\u003eBindings\u003c/code\u003e to use for the \u003ccode\u003eENGINE_SCOPE\u003c/code\u003ewhile the script executes.\n * @return The return value from \u003ccode\u003eeval(Reader, ScriptContext)\u003c/code\u003e\n * @throws ScriptException if an error occurs in script.\n * @throws NullPointerException if any of the parameters is null.\n */\n","tf":{"freq":{"member":1,"call":1,"except":2,"scope":1,"error":1,"whose":1,"eval":4,"paramet":1,"use":2,"script":7,"specifi":1,"pass":1,"field":2,"reader":6,"ident":1,"contain":1,"instead":1,"context":5,"pointer":1,"valu":1,"sourc":1,"method":1,"execut":1,"writer":1,"bind":6,"occur":1},"maxFreq":7,"totalTerms":52},"loc":6}