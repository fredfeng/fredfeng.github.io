{"id":24641,"className":"javax.script.ScriptEngineFactory","methodName":"getParameter","signature":"\u003cjavax.script.ScriptEngineFactory: java.lang.Object getParameter(java.lang.String)\u003e","javadoc":"/** \n * Returns the value of an attribute whose meaning may be implementation-specific. Keys for which the value is defined in all implementations are: \u003cul\u003e \u003cli\u003eScriptEngine.ENGINE\u003c/li\u003e \u003cli\u003eScriptEngine.ENGINE_VERSION\u003c/li\u003e \u003cli\u003eScriptEngine.NAME\u003c/li\u003e \u003cli\u003eScriptEngine.LANGUAGE\u003c/li\u003e \u003cli\u003eScriptEngine.LANGUAGE_VERSION\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e The values for these keys are the Strings returned by \u003ccode\u003egetEngineName\u003c/code\u003e, \u003ccode\u003egetEngineVersion\u003c/code\u003e, \u003ccode\u003egetName\u003c/code\u003e, \u003ccode\u003egetLanguageName\u003c/code\u003e and \u003ccode\u003egetLanguageVersion\u003c/code\u003e respectively.\u003cbr\u003e\u003cbr\u003e A reserved key, \u003ccode\u003e\u003cb\u003eTHREADING\u003c/b\u003e\u003c/code\u003e, whose value describes the behavior of the engine with respect to concurrent execution of scripts and maintenance of state is also defined. These values for the \u003ccode\u003e\u003cb\u003eTHREADING\u003c/b\u003e\u003c/code\u003e key are:\u003cbr\u003e\u003cbr\u003e \u003cul\u003e \u003cli\u003e\u003ccode\u003enull\u003c/code\u003e - The engine implementation is not thread safe, and cannot be used to execute scripts concurrently on multiple threads. \u003cli\u003e\u003ccode\u003e\u0026quot;MULTITHREADED\u0026quot;\u003c/code\u003e - The engine implementation is internally thread-safe and scripts may execute concurrently although effects of script execution on one thread may be visible to scripts on other threads. \u003cli\u003e\u003ccode\u003e\u0026quot;THREAD-ISOLATED\u0026quot;\u003c/code\u003e - The implementation satisfies the requirements of \u0026quot;MULTITHREADED\u0026quot;, and also, the engine maintains independent values for symbols in scripts executing on different threads. \u003cli\u003e\u003ccode\u003e\u0026quot;STATELESS\u0026quot;\u003c/code\u003e - The implementation satisfies the requirements of \u003cli\u003e\u003ccode\u003e\u0026quot;THREAD-ISOLATED\u0026quot;\u003c/code\u003e.  In addition, script executions do not alter the mappings in the \u003ccode\u003eBindings\u003c/code\u003e which is the engine scope of the \u003ccode\u003eScriptEngine\u003c/code\u003e.  In particular, the keys in the \u003ccode\u003eBindings\u003c/code\u003e and their associated values are the same before and after the execution of the script. \u003c/ul\u003e \u003cbr\u003e\u003cbr\u003e Implementations may define implementation-specific keys.\n * @param key The name of the parameter\n * @return The value for the given parameter. Returns \u003ccode\u003enull\u003c/code\u003e if novalue is assigned to the key.\n */\n","tf":{"freq":{"assign":1,"mainten":1,"maintain":1,"particular":1,"languag":2,"although":1,"independ":1,"requir":2,"given":1,"thread":6,"quot":10,"key":8,"multipl":1,"symbol":1,"whose":2,"describ":1,"script":14,"execut":7,"defin":3,"scope":1,"concurr":3,"behavior":1,"visibl":1,"one":1,"state":1,"engin":13,"use":1,"version":2,"attribut":1,"reserv":1,"associ":1,"name":4,"map":1,"mean":1,"valu":8,"safe":2,"addit":1,"may":4,"paramet":3,"novalu":1,"alter":1,"differ":1,"specif":2,"effect":1,"string":1,"satisfi":2,"intern":1,"also":2,"bind":2,"respect":2},"maxFreq":14,"totalTerms":131},"loc":0}