{"id":24651,"className":"javax.script.Invocable","methodName":"invokeMethod","signature":"\u003cjavax.script.Invocable: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])\u003e","javadoc":"/** \n * Calls a method on a script object compiled during a previous script execution, which is retained in the state of the \u003ccode\u003eScriptEngine\u003c/code\u003e.\n * @param name The name of the procedure to be called.\n * @param thiz If the procedure is a member  of a classdefined in the script and thiz is an instance of that class returned by a previous execution or invocation, the named method is called through that instance.\n * @param args Arguments to pass to the procedure.  The rules for convertingthe arguments to scripting variables are implementation-specific.\n * @return The value returned by the procedure.  The rules for converting the scriptingvariable returned by the script method to a Java Object are implementation-specific.\n * @throws ScriptException if an error occurrs during invocation of the method.\n * @throws NoSuchMethodException if method with given name or matching argument types cannot be found.\n * @throws NullPointerException if the method name is null.\n * @throws IllegalArgumentException if the specified thiz is null or the specified Object isdoes not represent a scripting object.\n */\n","tf":{"freq":{"call":3,"scriptingvari":1,"thiz":3,"variabl":1,"engin":1,"state":1,"convert":1,"isdo":1,"object":4,"type":1,"specifi":2,"occurr":1,"arg":1,"given":1,"name":5,"rule":2,"valu":1,"member":1,"argument":4,"except":4,"error":1,"previous":2,"repres":1,"invok":1,"script":8,"illeg":1,"procedur":4,"invoc":2,"instanc":2,"pass":1,"convertingth":1,"specif":2,"pointer":1,"retain":1,"java":1,"method":8,"match":1,"execut":2,"classdefin":1,"found":1,"compil":1},"maxFreq":8,"totalTerms":82},"loc":0}