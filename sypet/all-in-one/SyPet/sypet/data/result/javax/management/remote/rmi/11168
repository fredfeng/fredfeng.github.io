{"id":11168,"className":"javax.management.remote.rmi.RMIConnection","methodName":"unregisterMBean","signature":"\u003cjavax.management.remote.rmi.RMIConnection: void unregisterMBean(javax.management.ObjectName,javax.security.auth.Subject)\u003e","javadoc":"/** \n * Handles the method {@link javax.management.MBeanServerConnection#unregisterMBean(ObjectName)}.\n * @param name The object name of the MBean to be unregistered.\n * @param delegationSubject The \u003ccode\u003eSubject\u003c/code\u003e containing thedelegation principals or \u003ccode\u003enull\u003c/code\u003e if the authentication principal is used instead.\n * @throws InstanceNotFoundException The MBean specified is notregistered in the MBean server.\n * @throws MBeanRegistrationException The preDeregister((\u003ccode\u003eMBeanRegistration\u003c/code\u003e interface) method of the MBean has thrown an exception.\n * @throws RuntimeOperationsException Wraps a\u003ccode\u003ejava.lang.IllegalArgumentException\u003c/code\u003e: The object name in parameter is null or the MBean you are when trying to unregister is the  {@link javax.management.MBeanServerDelegate MBeanServerDelegate} MBean.\n * @throws SecurityException if the client, or the delegated Subjectif any, does not have permission to perform this operation.\n * @throws IOException if a general communication exception occurred.\n */\n","tf":{"freq":{"mbean":13,"client":1,"connect":1,"subject":2,"link":2,"use":1,"perform":1,"object":3,"lang":1,"specifi":1,"authent":1,"subjectif":1,"deleg":4,"oper":2,"deregist":1,"javax":2,"name":4,"permiss":1,"argument":1,"notregist":1,"wrap":1,"thrown":1,"except":8,"manag":2,"runtim":1,"paramet":1,"registr":2,"illeg":1,"general":1,"handl":1,"instanc":1,"secur":1,"communic":1,"pre":1,"contain":1,"instead":1,"java":1,"server":4,"method":2,"unregist":4,"thedeleg":1,"occur":1,"princip":2,"found":1},"maxFreq":13,"totalTerms":85},"loc":0}