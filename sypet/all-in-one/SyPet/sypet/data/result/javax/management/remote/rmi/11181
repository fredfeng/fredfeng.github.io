{"id":11181,"className":"javax.management.remote.rmi.RMIConnection","methodName":"getMBeanInfo","signature":"\u003cjavax.management.remote.rmi.RMIConnection: javax.management.MBeanInfo getMBeanInfo(javax.management.ObjectName,javax.security.auth.Subject)\u003e","javadoc":"/** \n * Handles the method {@link javax.management.MBeanServerConnection#getMBeanInfo(ObjectName)}.\n * @param name The name of the MBean to analyze\n * @param delegationSubject The \u003ccode\u003eSubject\u003c/code\u003e containing thedelegation principals or \u003ccode\u003enull\u003c/code\u003e if the authentication principal is used instead.\n * @return An instance of \u003ccode\u003eMBeanInfo\u003c/code\u003e allowing theretrieval of all attributes and operations of this MBean.\n * @throws IntrospectionException An exception occurred duringintrospection.\n * @throws InstanceNotFoundException The MBean specified wasnot found.\n * @throws ReflectionException An exception occurred whentrying to invoke the getMBeanInfo of a Dynamic MBean.\n * @throws SecurityException if the client, or the delegated Subjectif any, does not have permission to perform this operation.\n * @throws IOException if a general communication exception occurred.\n * @throws RuntimeOperationsException Wraps a\u003ccode\u003ejava.lang.IllegalArgumentException\u003c/code\u003e: The object name in parameter is null.\n */\n","tf":{"freq":{"mbean":9,"introspect":1,"client":1,"connect":1,"allow":1,"subject":2,"link":1,"use":1,"perform":1,"object":2,"lang":1,"specifi":1,"info":4,"authent":1,"subjectif":1,"deleg":2,"attribut":1,"oper":3,"javax":1,"name":4,"permiss":1,"dynam":1,"duringintrospect":1,"argument":1,"wrap":1,"except":10,"theretriev":1,"invok":1,"manag":1,"runtim":1,"paramet":1,"analyz":1,"illeg":1,"general":1,"handl":1,"instanc":2,"secur":1,"communic":1,"contain":1,"whentri":1,"instead":1,"java":1,"server":1,"method":1,"wasnot":1,"thedeleg":1,"reflect":1,"found":2,"occur":3,"princip":2},"maxFreq":10,"totalTerms":83},"loc":0}