{"id":11366,"className":"javax.management.modelmbean.ModelMBeanConstructorInfo","methodName":"ModelMBeanConstructorInfo","signature":"\u003cjavax.management.modelmbean.ModelMBeanConstructorInfo: void ModelMBeanConstructorInfo(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor)\u003e","javadoc":"/** \n * Constructs a ModelMBeanConstructorInfo object.\n * @param name The name of the constructor.\n * @param description A human readable description of the constructor.\n * @param signature MBeanParameterInfo objects describing the parameters(arguments) of the constructor.\n * @param descriptor An instance of Descriptor containing the appropriate metadatafor this instance of the MBeanConstructorInfo. If it is null then a default descriptor will be created. If the descriptor does not contain the field \"displayName\" this field is added in the descriptor with its default value.\n * @exception RuntimeOperationsException Wraps anIllegalArgumentException. The descriptor is invalid, or descriptor field \"name\" is not equal to name parameter, or descriptor field \"descriptorType\" is not equal to \"operation\" or descriptor field \"role\" is present but not equal to \"constructor\".\n */\n","tf":{"freq":{"mbean":4,"model":2,"descriptor":10,"readabl":1,"object":2,"type":1,"signatur":1,"info":4,"invalid":1,"oper":2,"name":5,"role":1,"valu":1,"constructor":7,"argument":2,"wrap":1,"except":3,"metadatafor":1,"creat":1,"runtim":1,"paramet":3,"descript":2,"describ":1,"equal":3,"display":1,"illeg":1,"human":1,"instanc":2,"field":5,"present":1,"appropri":1,"contain":2,"will":1,"ad":1,"construct":1},"maxFreq":10,"totalTerms":77},"loc":11}