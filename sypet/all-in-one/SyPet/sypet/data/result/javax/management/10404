{"id":10404,"className":"javax.management.NotificationEmitter","methodName":"removeNotificationListener","signature":"\u003cjavax.management.NotificationEmitter: void removeNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)\u003e","javadoc":"/** \n * \u003cp\u003eRemoves a listener from this MBean.  The MBean must have a listener that exactly matches the given \u003ccode\u003elistener\u003c/code\u003e, \u003ccode\u003efilter\u003c/code\u003e, and \u003ccode\u003ehandback\u003c/code\u003e parameters.  If there is more than one such listener, only one is removed.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003efilter\u003c/code\u003e and \u003ccode\u003ehandback\u003c/code\u003e parameters may be null if and only if they are null in a listener to be removed.\u003c/p\u003e\n * @param listener A listener that was previously added to thisMBean.\n * @param filter The filter that was specified when the listenerwas added.\n * @param handback The handback that was specified when the listener wasadded.\n * @exception ListenerNotFoundException The listener is notregistered with the MBean, or it is not registered with the given filter and handback.\n */\n","tf":{"freq":{"notregist":1,"mbean":4,"except":2,"may":1,"previous":1,"one":2,"remov":4,"paramet":2,"wasad":1,"must":1,"specifi":2,"notif":1,"given":2,"exact":1,"handback":5,"regist":1,"ad":2,"match":1,"listenerwa":1,"listen":11,"filter":5,"found":1},"maxFreq":11,"totalTerms":52},"loc":0}