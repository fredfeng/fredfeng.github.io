{"id":10267,"className":"javax.management.StandardMBean","methodName":"postRegister","signature":"\u003cjavax.management.StandardMBean: void postRegister(java.lang.Boolean)\u003e","javadoc":"/** \n * \u003cp\u003eAllows the MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed.\u003c/p\u003e \u003cp\u003eThe default implementation of this method does nothing for Standard MBeans.  For MXBeans, it undoes any work done by {@link #preRegister preRegister} if registration fails.\u003c/p\u003e\u003cp\u003eIt is good practice for a subclass that overrides this method to call the overridden method via  {@code super.postRegister(...)}. This is necessary if this object is an MXBean that is referenced by attributes or operations in other MXBeans.\u003c/p\u003e\n * @param registrationDone Indicates whether or not the MBean hasbeen successfully registered in the MBean server. The value false means that the registration phase has failed.\n * @since 1.6\n */\n","tf":{"freq":{"fals":1,"need":1,"mbean":5,"call":1,"via":1,"allow":1,"undo":1,"overridden":1,"link":1,"perform":1,"good":1,"object":1,"necessari":1,"whether":1,"referenc":1,"hasbeen":1,"attribut":1,"indic":1,"fail":3,"oper":2,"practic":1,"mean":1,"noth":1,"regist":6,"valu":1,"work":1,"post":2,"standard":1,"bean":3,"done":2,"registr":4,"pre":2,"subclass":1,"method":3,"server":2,"phase":1,"success":1},"maxFreq":6,"totalTerms":60},"loc":4}