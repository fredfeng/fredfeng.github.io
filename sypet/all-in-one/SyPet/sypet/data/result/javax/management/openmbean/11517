{"id":11517,"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","methodName":"equals","signature":"\u003cjavax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * \u003cp\u003eCompares the specified  {@code obj} parameter with this {@code OpenMBeanParameterInfoSupport} instance for equality.\u003c/p\u003e\u003cp\u003eReturns  {@code true} if and only if all of the followingstatements are true: \u003cul\u003e \u003cli\u003e {@code obj} is non null,\u003c/li\u003e\u003cli\u003e {@code obj} also implements the {@code OpenMBeanParameterInfo}interface,\u003c/li\u003e \u003cli\u003etheir names are equal\u003c/li\u003e \u003cli\u003etheir open types are equal\u003c/li\u003e \u003cli\u003etheir default, min, max and legal values are equal.\u003c/li\u003e \u003c/ul\u003e This ensures that this  {@code equals} method works properly for{@code obj} parameters which are different implementations ofthe  {@code OpenMBeanParameterInfo} interface.\u003cp\u003eIf  {@code obj} also implements {@link DescriptorRead}, then its {@link DescriptorRead#getDescriptor() getDescriptor()} method mustalso return the same value as for this object.\u003c/p\u003e\n * @param obj the object to be compared for equality with this{@code OpenMBeanParameterInfoSupport} instance.\n * @return {@code true} if the specified object is equal to this{@code OpenMBeanParameterInfoSupport} instance.\n */\n","tf":{"freq":{"legal":1,"mbean":5,"descriptor":4,"link":2,"mustalso":1,"object":3,"type":1,"info":5,"specifi":2,"ensur":1,"open":6,"ofth":1,"name":1,"read":2,"valu":2,"proper":1,"min":1,"work":1,"support":3,"max":1,"paramet":7,"true":3,"equal":8,"instanc":3,"non":1,"differ":1,"followingstat":1,"obj":6,"method":2,"compar":2,"also":2},"maxFreq":8,"totalTerms":80},"loc":8}