{"id":10726,"className":"javax.management.relation.RelationServiceMBean","methodName":"findReferencingRelations","signature":"\u003cjavax.management.relation.RelationServiceMBean: java.util.Map\u003cjava.lang.String,java.util.List\u003cjava.lang.String\u003e\u003e findReferencingRelations(javax.management.ObjectName,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Retrieves the relations where a given MBean is referenced. \u003cP\u003eThis corresponds to the CIM \"References\" and \"ReferenceNames\" operations.\n * @param mbeanName  ObjectName of MBean\n * @param relationTypeName  can be null; if specified, only the relationsof that type will be considered in the search. Else all relation types are considered.\n * @param roleName  can be null; if specified, only the relationswhere the MBean is referenced in that role will be returned. Else all roles are considered.\n * @return an HashMap, where the keys are the relation ids of the relationswhere the MBean is referenced, and the value is, for each key, an ArrayList of role names (as an MBean can be referenced in several roles in the same relation).\n * @exception IllegalArgumentException  if null parameter\n */\n","tf":{"freq":{"mbean":6,"correspond":1,"object":1,"type":3,"consid":3,"specifi":2,"referenc":5,"id":1,"given":1,"oper":1,"refer":2,"search":1,"name":6,"relat":6,"map":1,"role":5,"valu":1,"find":1,"key":2,"argument":1,"except":2,"hash":1,"relationsof":1,"paramet":1,"list":1,"illeg":1,"sever":1,"els":2,"relationswher":2,"retriev":1,"will":2,"array":1},"maxFreq":6,"totalTerms":66},"loc":0}