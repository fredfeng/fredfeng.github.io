{"id":10965,"className":"javax.management.loading.ClassLoaderRepository","methodName":"loadClassWithout","signature":"\u003cjavax.management.loading.ClassLoaderRepository: java.lang.Class\u003c?\u003e loadClassWithout(java.lang.ClassLoader,java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003eLoad the given class name through the list of class loaders, excluding the given one.  Each ClassLoader in turn from the ClassLoaderRepository, except \u003ccode\u003eexclude\u003c/code\u003e, is asked to load the class via its  {@link ClassLoader#loadClass(String)}method.  If it successfully returns a  {@link Class} object,that is the result of this method.  If it throws a  {@link ClassNotFoundException}, the search continues with the next ClassLoader.  If it throws another exception, the exception is propagated from this method.  If the end of the list is reached, a  {@link ClassNotFoundException} is thrown.\u003c/p\u003e\u003cp\u003eBe aware that if a ClassLoader in the ClassLoaderRepository calls this method from its  {@link ClassLoader#loadClass(String) loadClass} method, it exposes itself to a deadlock if anotherClassLoader in the ClassLoaderRepository does the same thing at the same time.  The  {@link #loadClassBefore} method isrecommended to avoid the risk of deadlock.\u003c/p\u003e\n * @param className The name of the class to be loaded.\n * @param exclude The class loader to be excluded.  May be null,in which case this method is equivalent to  {@link #loadClass loadClass(className)}.\n * @return the loaded class.\n * @exception ClassNotFoundException The specified class could notbe found.\n */\n","tf":{"freq":{"call":1,"result":1,"notb":1,"via":1,"one":1,"link":7,"next":1,"exclud":4,"object":1,"anoth":2,"specifi":1,"risk":1,"avoid":1,"reach":1,"time":1,"given":2,"equival":1,"search":1,"name":4,"propag":1,"expos":1,"end":1,"deadlock":2,"turn":1,"may":1,"thrown":1,"except":7,"repositori":3,"isrecommend":1,"loader":11,"list":2,"without":1,"continu":1,"string":2,"awar":1,"load":11,"method":7,"ask":1,"success":1,"thing":1,"found":4},"maxFreq":11,"totalTerms":95},"loc":0}