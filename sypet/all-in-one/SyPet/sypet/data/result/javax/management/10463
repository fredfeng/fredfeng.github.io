{"id":10463,"className":"javax.management.ImmutableDescriptor","methodName":"hashCode","signature":"\u003cjavax.management.ImmutableDescriptor: int hashCode()\u003e","javadoc":"/** \n * \u003cp\u003eReturns the hash code value for this descriptor.  The hash code is computed as the sum of the hash codes for each field in the descriptor.  The hash code of a field with name  {@code n}and value  {@code v} is {@code n.toLowerCase().hashCode() ^ h}. Here  {@code h} is the hash code of {@code v}, computed as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003eIf  {@code v} is null then {@code h} is 0.\u003c/li\u003e\u003cli\u003eIf  {@code v} is a primitive array then {@code h} is computed usingthe appropriate overloading of  {@code java.util.Arrays.hashCode}.\u003c/li\u003e \u003cli\u003eIf  {@code v} is an object array then {@code h} is computed using{@link Arrays#deepHashCode(Object[])}.\u003c/li\u003e \u003cli\u003eOtherwise  {@code h} is {@code v.hashCode()}.\u003c/li\u003e \u003c/ul\u003e\n * @return A hash code value for this object.\n */\n","tf":{"freq":{"otherwis":1,"primit":1,"lower":1,"hash":11,"descriptor":2,"link":1,"use":1,"sum":1,"overload":1,"object":3,"usingth":1,"field":2,"appropri":1,"name":1,"comput":4,"java":1,"valu":3,"deep":1,"util":1,"follow":1,"array":4},"maxFreq":11,"totalTerms":43},"loc":6}