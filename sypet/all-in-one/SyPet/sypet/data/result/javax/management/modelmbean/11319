{"id":11319,"className":"javax.management.modelmbean.ModelMBeanNotificationBroadcaster","methodName":"sendAttributeChangeNotification","signature":"\u003cjavax.management.modelmbean.ModelMBeanNotificationBroadcaster: void sendAttributeChangeNotification(javax.management.Attribute,javax.management.Attribute)\u003e","javadoc":"/** \n * Sends an attributeChangeNotification which contains the old value and new value for the attribute to the registered AttributeChangeNotification listeners on the ModelMBean. \u003cP\u003e\n * @param oldValue The original value for the Attribute\n * @param newValue The current value for the Attribute\u003cP\u003e \u003cPRE\u003e The constructed attributeChangeNotification will be: type        \"jmx.attribute.change\" source      this ModelMBean instance sequence    1 attributeName oldValue.getName() attributeType oldValue\u0027s class attributeOldValue oldValue.getValue() attributeNewValue newValue.getValue() \u003c/PRE\u003e\n * @exception MBeanException Wraps a distributed communication Exception.\n * @exception RuntimeOperationsException Wraps an IllegalArgumentException: An Attribute object passed in parameter is nullor the names of the two Attribute objects in parameter are not the same.\n */\n","tf":{"freq":{"mbean":3,"model":2,"old":6,"send":2,"jmx":1,"distribut":1,"object":2,"type":2,"nullor":1,"notif":4,"attribut":14,"oper":1,"sequenc":1,"name":3,"current":1,"regist":1,"valu":14,"listen":1,"argument":1,"wrap":2,"except":6,"runtim":1,"paramet":2,"origin":1,"illeg":1,"pass":1,"instanc":1,"two":1,"communic":1,"contain":1,"will":1,"sourc":1,"chang":5,"construct":1},"maxFreq":14,"totalTerms":87},"loc":0}