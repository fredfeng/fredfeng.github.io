{"id":11577,"className":"javax.management.openmbean.OpenMBeanAttributeInfoSupport","methodName":"OpenMBeanAttributeInfoSupport","signature":"\u003cjavax.management.openmbean.OpenMBeanAttributeInfoSupport: void OpenMBeanAttributeInfoSupport(java.lang.String,java.lang.String,javax.management.openmbean.OpenType,boolean,boolean,boolean,T,java.lang.Comparable,java.lang.Comparable)\u003e","javadoc":"/** \n * Constructs an  {@code OpenMBeanAttributeInfoSupport} instance,which describes the attribute of an open MBean, with the specified  {@code name},  {@code openType},  {@code description}, {@code defaultValue},  {@code minValue} and {@code maxValue}. It is possible to specify minimal and maximal values only for an open type whose values are  {@code Comparable}.\n * @param name  cannot be a null or empty string.\n * @param description  cannot be a null or empty string.\n * @param openType  cannot be null.\n * @param isReadable {@code true} if the attribute has a getterexposed for management.\n * @param isWritable {@code true} if the attribute has a setterexposed for management.\n * @param isIs {@code true} if the attribute\u0027s getter is of theform \u003ctt\u003eis\u003ci\u003eXXX\u003c/i\u003e\u003c/tt\u003e.\n * @param defaultValue must be a valid value for the {@code openType} specified for this attribute; default value notsupported for  {@code ArrayType} and {@code TabularType}; can be null, in which case it means that no default value is set.\n * @param minValue must be valid for the {@code openType}specified for this attribute; can be null, in which case it means that no minimal value is set.\n * @param maxValue must be valid for the {@code openType}specified for this attribute; can be null, in which case it means that no maximal value is set.\n * @param \u003c T \u003e allows the compiler to check that the {@code defaultValue},  {@code minValue}, and  {@code maxValue}, if non-null, have the correct Java type for the given  {@code openType}.\n * @throws IllegalArgumentException if {@code name} or {@code description} are null or empty string, or {@code openType} isnull.\n * @throws OpenDataException if {@code defaultValue},  {@code minValue} or {@code maxValue} is not a valid value for thespecified  {@code openType}, or  {@code defaultValue} is non nulland  {@code openType} is an {@code ArrayType} or a {@code TabularType}, or both  {@code minValue} and {@code maxValue} arenon-null and  {@code minValue.compareTo(maxValue) \u003e 0} is {@code true}, or both  {@code defaultValue} and {@code minValue} arenon-null and  {@code minValue.compareTo(defaultValue) \u003e 0} is{@code true}, or both  {@code defaultValue} and {@code maxValue}are non-null and  {@code defaultValue.compareTo(maxValue) \u003e 0}is  {@code true}.\n */\n","tf":{"freq":{"mbean":3,"getter":1,"nulland":1,"possibl":1,"type":15,"must":3,"info":2,"specifi":5,"maxim":2,"open":14,"correct":1,"given":1,"isnul":1,"setterexpos":1,"thespecifi":1,"argument":1,"except":2,"support":2,"whose":1,"descript":3,"describ":1,"writabl":1,"instanc":1,"non":3,"theform":1,"compar":4,"array":2,"compil":1,"valid":4,"allow":1,"readabl":1,"data":1,"minim":2,"tabular":2,"attribut":9,"name":3,"mean":3,"valu":33,"getterexpos":1,"min":8,"max":8,"check":1,"manag":2,"true":6,"illeg":1,"empti":3,"notsupport":1,"string":3,"arenon":2,"java":1,"construct":1},"maxFreq":33,"totalTerms":172},"loc":4}