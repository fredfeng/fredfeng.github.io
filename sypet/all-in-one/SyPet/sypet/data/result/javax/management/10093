{"id":10093,"className":"javax.management.StandardEmitterMBean","methodName":"StandardEmitterMBean","signature":"\u003cjavax.management.StandardEmitterMBean: void StandardEmitterMBean(T,java.lang.Class,boolean,javax.management.NotificationEmitter)\u003e","javadoc":"/** \n * \u003cp\u003eMake an MBean whose management interface is specified by {@code mbeanInterface}, with the given implementation and where notifications are handled by the given  {@code NotificationEmitter}.  This constructor can be used to make either Standard MBeans or MXBeans.  The resultant MBean implements the  {@code NotificationEmitter} interface byforwarding its methods to  {@code emitter}.  It is legal and useful for  {@code implementation} and {@code emitter} to be thesame object.\u003c/p\u003e \u003cp\u003eIf  {@code emitter} is an instance of {@code NotificationBroadcasterSupport} then the MBean\u0027s {@link #sendNotification sendNotification} method will call {@code emitter.}{@link NotificationBroadcasterSupport#sendNotification sendNotification}.\u003c/p\u003e \u003cp\u003eThe array returned by  {@link #getNotificationInfo()} on thenew MBean is a copy of the array returned by {@code emitter.}{@link NotificationBroadcaster#getNotificationInfo getNotificationInfo()} at the time of construction.  If the arrayreturned by  {@code emitter.getNotificationInfo()} later changes,that will have no effect on this object\u0027s {@code getNotificationInfo()}.\u003c/p\u003e\n * @param implementation the implementation of the MBean interface.\n * @param mbeanInterface a Standard MBean interface.\n * @param isMXBean If true, the {@code mbeanInterface} parameternames an MXBean interface and the resultant MBean is an MXBean.\n * @param emitter the object that will handle notifications.\n * @throws IllegalArgumentException if the {@code mbeanInterface}does not follow JMX design patterns for Management Interfaces, or if the given  {@code implementation} does not implement thespecified interface, or if  {@code emitter} is null.\n */\n","tf":{"freq":{"legal":1,"call":1,"mbean":13,"result":2,"thenew":1,"send":4,"broadcast":3,"link":4,"use":2,"object":3,"copi":1,"info":5,"specifi":1,"notif":16,"time":1,"byforward":1,"given":3,"thespecifi":1,"thesam":1,"follow":1,"constructor":1,"argument":1,"except":1,"emitt":11,"support":2,"standard":3,"bean":4,"whose":1,"later":1,"manag":2,"arrayreturn":1,"true":1,"illeg":1,"handl":2,"instanc":1,"either":1,"pattern":1,"effect":1,"parameternam":1,"will":3,"method":2,"chang":1,"construct":1,"make":2,"design":1,"array":2},"maxFreq":16,"totalTerms":114},"loc":7}