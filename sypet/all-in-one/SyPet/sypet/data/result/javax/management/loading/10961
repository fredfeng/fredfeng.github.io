{"id":10961,"className":"javax.management.loading.MLet","methodName":"readExternal","signature":"\u003cjavax.management.loading.MLet: void readExternal(java.io.ObjectInput)\u003e","javadoc":"/** \n * \u003cp\u003eRestore this MLet\u0027s contents from the given  {@link ObjectInput}. Not all implementations support this method.  Those that do not throw  {@link UnsupportedOperationException}.  A subclass may override this method to support it or to change the format of the read data.\u003c/p\u003e \u003cp\u003eThe format of the read data is not specified, but if an implementation supports  {@link #readExternal} it must alsosupport  {@link #writeExternal} in such a way that what iswritten by the latter can be read by the former.\u003c/p\u003e\n * @param in The object input stream to read from.\n * @exception IOException if a problem occurred while reading.\n * @exception ClassNotFoundException if the class for the objectbeing restored cannot be found.\n * @exception UnsupportedOperationException if thisimplementation does not support this operation.\n */\n","tf":{"freq":{"stream":1,"unsupport":2,"link":4,"data":2,"way":1,"former":1,"objectb":1,"object":2,"must":1,"specifi":1,"latter":1,"given":1,"oper":3,"extern":3,"write":1,"read":7,"except":7,"may":1,"support":4,"thisimplement":1,"iswritten":1,"problem":1,"format":2,"content":1,"input":2,"restor":2,"subclass":1,"method":2,"chang":1,"alsosupport":1,"found":2,"occur":1,"mlet":1},"maxFreq":7,"totalTerms":63},"loc":3}