{"id":10327,"className":"javax.management.MBeanServerFactory","methodName":"findMBeanServer","signature":"\u003cjavax.management.MBeanServerFactory: java.util.ArrayList\u003cjavax.management.MBeanServer\u003e findMBeanServer(java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003eReturn a list of registered MBeanServer objects.  A registered MBeanServer object is one that was created by one of the \u003ccode\u003ecreateMBeanServer\u003c/code\u003e methods and not subsequently released with \u003ccode\u003ereleaseMBeanServer\u003c/code\u003e.\u003c/p\u003e\n * @param agentId The agent identifier of the MBeanServer toretrieve.  If this parameter is null, all registered MBeanServers in this JVM are returned.  Otherwise, only MBeanServers whose id is equal to \u003ccode\u003eagentId\u003c/code\u003e are returned.  The id of an MBeanServer is the \u003ccode\u003eMBeanServerId\u003c/code\u003e attribute of its delegate MBean.\n * @return A list of MBeanServer objects.\n * @exception SecurityException if there is a SecurityManager and thecaller\u0027s permissions do not include or imply \u003ccode\u003e {@link MBeanServerPermission}(\"findMBeanServer\")\u003c/code\u003e.\n */\n","tf":{"freq":{"otherwis":1,"mbean":14,"link":1,"one":2,"identifi":1,"object":3,"attribut":1,"deleg":1,"releas":2,"impli":1,"permiss":2,"regist":3,"subsequ":1,"find":2,"except":2,"includ":1,"thecal":1,"creat":2,"whose":1,"manag":1,"paramet":1,"list":2,"equal":1,"toretriev":1,"agent":3,"secur":2,"method":1,"server":13},"maxFreq":14,"totalTerms":67},"loc":15}