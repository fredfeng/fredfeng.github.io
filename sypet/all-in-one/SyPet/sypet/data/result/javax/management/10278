{"id":10278,"className":"javax.management.MBeanServerConnection","methodName":"unregisterMBean","signature":"\u003cjavax.management.MBeanServerConnection: void unregisterMBean(javax.management.ObjectName)\u003e","javadoc":"/** \n * Unregisters an MBean from the MBean server. The MBean is identified by its object name. Once the method has been invoked, the MBean may no longer be accessed by its object name.\n * @param name The object name of the MBean to be unregistered.\n * @exception InstanceNotFoundException The MBean specified is notregistered in the MBean server.\n * @exception MBeanRegistrationException The preDeregister((\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean has thrown an exception.\n * @exception RuntimeMBeanException If the \u003cCODE\u003epostDeregister\u003c/CODE\u003e(\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean throws a \u003cCODE\u003eRuntimeException\u003c/CODE\u003e, the \u003cCODE\u003eunregisterMBean\u003c/CODE\u003e method will throw a \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e, although the MBean unregistration succeeded. In such a case, the MBean will be actually unregistered even though the \u003cCODE\u003eunregisterMBean\u003c/CODE\u003e method threw an exception.  Note that \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e can also be thrown by \u003cCODE\u003epreDeregister\u003c/CODE\u003e, in which case the MBean will remain registered.\n * @exception RuntimeErrorException If the \u003cCODE\u003epostDeregister\u003c/CODE\u003e(\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean throws an \u003cCODE\u003eError\u003c/CODE\u003e, the \u003cCODE\u003eunregisterMBean\u003c/CODE\u003e method will throw a \u003cCODE\u003eRuntimeErrorException\u003c/CODE\u003e, although the MBean unregistration succeeded. In such a case, the MBean will be actually unregistered even though the \u003cCODE\u003eunregisterMBean\u003c/CODE\u003e method threw an exception.  Note that \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e can also be thrown by \u003cCODE\u003epreDeregister\u003c/CODE\u003e, in which case the MBean will remain registered.\n * @exception RuntimeOperationsException Wraps a\u003cCODE\u003ejava.lang.IllegalArgumentException\u003c/CODE\u003e: The object name in parameter is null or the MBean you are when trying to unregister is the  {@link javax.management.MBeanServerDelegate MBeanServerDelegate} MBean.\n * @exception IOException A communication problem occurred whentalking to the MBean server.\n * @see javax.management.MBeanRegistration\n */\n","tf":{"freq":{"mbean":35,"though":2,"specifi":1,"although":2,"oper":1,"deregist":5,"javax":2,"longer":1,"notregist":1,"argument":1,"wrap":1,"thrown":3,"except":21,"succeed":2,"invok":1,"runtim":8,"unregistr":2,"instanc":1,"threw":2,"whentalk":1,"will":6,"even":2,"link":1,"identifi":1,"object":4,"lang":1,"deleg":2,"name":5,"regist":2,"note":2,"may":1,"post":2,"error":3,"manag":2,"paramet":1,"problem":1,"registr":5,"access":1,"illeg":1,"remain":2,"communic":1,"pre":3,"actual":2,"server":5,"method":8,"java":1,"unregist":10,"also":2,"occur":1,"found":1},"maxFreq":35,"totalTerms":172},"loc":0}