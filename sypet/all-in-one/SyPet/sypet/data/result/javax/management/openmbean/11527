{"id":11527,"className":"javax.management.openmbean.ArrayType","methodName":"hashCode","signature":"\u003cjavax.management.openmbean.ArrayType: int hashCode()\u003e","javadoc":"/** \n * Returns the hash code value for this \u003ccode\u003eArrayType\u003c/code\u003e instance. \u003cp\u003e The hash code of an \u003ccode\u003eArrayType\u003c/code\u003e instance is the sum of the hash codes of all the elements of information used in \u003ccode\u003eequals\u003c/code\u003e comparisons (i.e. dimension, elements\u0027 open type and primitive array flag). The hashcode for a primitive value is the hashcode of the corresponding boxed object (e.g. the hashcode for \u003ctt\u003etrue\u003c/tt\u003e is \u003ctt\u003eBoolean.TRUE.hashCode()\u003c/tt\u003e). This ensures that \u003ccode\u003e t1.equals(t2) \u003c/code\u003e implies that \u003ccode\u003e t1.hashCode()\u003d\u003dt2.hashCode() \u003c/code\u003e for any two \u003ccode\u003eArrayType\u003c/code\u003e instances \u003ccode\u003et1\u003c/code\u003e and \u003ccode\u003et2\u003c/code\u003e, as required by the general contract of the method {@link Object#hashCode() Object.hashCode()}. \u003cp\u003e As \u003ccode\u003eArrayType\u003c/code\u003e instances are immutable, the hash code for this instance is calculated once, on the first call to \u003ccode\u003ehashCode\u003c/code\u003e, and then the same value is returned for subsequent calls.\n * @return  the hash code value for this \u003ccode\u003eArrayType\u003c/code\u003e instance\n */\n","tf":{"freq":{"call":2,"primit":2,"correspond":1,"link":1,"use":1,"sum":1,"object":3,"type":6,"ensur":1,"open":1,"requir":1,"impli":1,"valu":4,"subsequ":1,"element":2,"contract":1,"hash":12,"calcul":1,"immut":1,"hashcod":3,"true":1,"equal":2,"dimens":1,"general":1,"comparison":1,"instanc":6,"inform":1,"two":1,"flag":1,"method":1,"box":1,"first":1,"array":6},"maxFreq":12,"totalTerms":70},"loc":16}