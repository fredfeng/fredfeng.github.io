{"id":11430,"className":"javax.management.openmbean.OpenMBeanConstructorInfoSupport","methodName":"hashCode","signature":"\u003cjavax.management.openmbean.OpenMBeanConstructorInfoSupport: int hashCode()\u003e","javadoc":"/** \n * \u003cp\u003eReturns the hash code value for this  {@code OpenMBeanConstructorInfoSupport} instance.\u003c/p\u003e\u003cp\u003eThe hash code of an  {@code OpenMBeanConstructorInfoSupport}instance is the sum of the hash codes of all elements of information used in  {@code equals} comparisons (ie: its nameand signature, where the signature hashCode is calculated by a call to  {@code java.util.Arrays.asList(this.getSignature).hashCode()}).\u003c/p\u003e \u003cp\u003eThis ensures that  {@code t1.equals(t2)} implies that {@code t1.hashCode()\u003d\u003dt2.hashCode()} for any two {@code OpenMBeanConstructorInfoSupport} instances {@code t1} and{@code t2}, as required by the general contract of the method {@link Object#hashCode() Object.hashCode()}.\u003c/p\u003e \u003cp\u003eHowever, note that another instance of a class implementing the  {@code OpenMBeanConstructorInfo} interface may be equal tothis  {@code OpenMBeanConstructorInfoSupport} instance asdefined by  {@link #equals(java.lang.Object)}, but may have a different hash code if it is calculated differently.\u003c/p\u003e \u003cp\u003eAs  {@code OpenMBeanConstructorInfoSupport} instances areimmutable, the hash code for this instance is calculated once, on the first call to  {@code hashCode}, and then the same value is returned for subsequent calls.\u003c/p\u003e\n * @return the hash code value for this {@code OpenMBeanConstructorInfoSupport} instance\n */\n","tf":{"freq":{"mbean":7,"call":3,"link":2,"use":1,"sum":1,"areimmut":1,"anoth":1,"object":3,"lang":1,"signatur":3,"info":7,"ensur":1,"open":7,"requir":1,"impli":1,"valu":3,"subsequ":1,"howev":1,"nameand":1,"note":1,"constructor":7,"element":1,"may":2,"support":6,"tothi":1,"contract":1,"hash":14,"calcul":3,"equal":4,"list":1,"asdefin":1,"general":1,"comparison":1,"instanc":8,"differ":2,"two":1,"inform":1,"method":1,"java":2,"first":1,"util":1,"array":1},"maxFreq":14,"totalTerms":108},"loc":16}