{"id":11457,"className":"javax.management.openmbean.TabularDataSupport","methodName":"get","signature":"\u003cjavax.management.openmbean.TabularDataSupport: javax.management.openmbean.CompositeData get(java.lang.Object[])\u003e","javadoc":"/** \n * Returns the \u003ctt\u003eCompositeData\u003c/tt\u003e value whose index is \u003cvar\u003ekey\u003c/var\u003e, or \u003ctt\u003enull\u003c/tt\u003e if there is no value mapping to \u003cvar\u003ekey\u003c/var\u003e, in this \u003ctt\u003eTabularData\u003c/tt\u003e instance.\n * @param key the index of the value to get in this\u003ctt\u003eTabularData\u003c/tt\u003e instance; * must be valid with this \u003ctt\u003eTabularData\u003c/tt\u003e instance\u0027s row type definition; * must not be null.\n * @return the value corresponding to \u003cvar\u003ekey\u003c/var\u003e.\n * @throws NullPointerException  if the \u003cvar\u003ekey\u003c/var\u003e is \u003ctt\u003enull\u003c/tt\u003e\n * @throws InvalidKeyException   if the \u003cvar\u003ekey\u003c/var\u003e does not conform to this \u003ctt\u003eTabularData\u003c/tt\u003e instance\u0027s\u003ctt\u003eTabularType\u003c/tt\u003e type definition.\n */\n","tf":{"freq":{"valid":1,"except":2,"index":2,"composit":1,"whose":1,"correspond":1,"var":10,"data":5,"type":3,"row":1,"must":2,"instanc":4,"tabular":5,"invalid":1,"conform":1,"definit":2,"map":1,"pointer":1,"valu":4,"key":7},"maxFreq":10,"totalTerms":55},"loc":11}