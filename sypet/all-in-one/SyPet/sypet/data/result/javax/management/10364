{"id":10364,"className":"javax.management.MBeanRegistration","methodName":"preRegister","signature":"\u003cjavax.management.MBeanRegistration: javax.management.ObjectName preRegister(javax.management.MBeanServer,javax.management.ObjectName)\u003e","javadoc":"/** \n * Allows the MBean to perform any operations it needs before being registered in the MBean Server.  If the name of the MBean is not specified, the MBean can provide a name for its registration.  If any exception is raised, the MBean will not be registered in the MBean Server.\n * @param server The MBean Server in which the MBean will be registered.\n * @param name The object name of the MBean.  This name is null ifthe name parameter to one of the \u003ccode\u003ecreateMBean\u003c/code\u003e or \u003ccode\u003eregisterMBean\u003c/code\u003e methods in the  {@link MBeanServer}interface is null.  In that case, this method must return a non-null ObjectName for the new MBean.\n * @return The name under which the MBean is to be registered.This value must not be null.  If the \u003ccode\u003ename\u003c/code\u003e parameter is not null, it will usually but not necessarily be the returned value.\n * @exception java.lang.Exception This exception will be caught bythe MBean Server and re-thrown as an  {@link MBeanRegistrationException}.\n */\n","tf":{"freq":{"need":1,"mbean":16,"allow":1,"one":1,"link":2,"perform":1,"object":2,"lang":1,"must":2,"specifi":1,"rais":1,"oper":1,"byth":1,"name":9,"regist":6,"valu":2,"caught":1,"usual":1,"thrown":1,"except":5,"ifth":1,"creat":1,"paramet":2,"registr":2,"provid":1,"non":1,"pre":1,"will":4,"java":1,"server":6,"method":2,"necessarili":1},"maxFreq":16,"totalTerms":79},"loc":0}