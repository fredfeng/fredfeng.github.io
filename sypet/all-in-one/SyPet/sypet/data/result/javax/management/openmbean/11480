{"id":11480,"className":"javax.management.openmbean.CompositeData","methodName":"equals","signature":"\u003cjavax.management.openmbean.CompositeData: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares the specified \u003cvar\u003eobj\u003c/var\u003e parameter with this \u003ccode\u003eCompositeData\u003c/code\u003e instance for equality. \u003cp\u003e Returns \u003ctt\u003etrue\u003c/tt\u003e if and only if all of the following statements are true: \u003cul\u003e \u003cli\u003e\u003cvar\u003eobj\u003c/var\u003e is non null,\u003c/li\u003e \u003cli\u003e\u003cvar\u003eobj\u003c/var\u003e also implements the \u003ccode\u003eCompositeData\u003c/code\u003e interface,\u003c/li\u003e \u003cli\u003etheir composite types are equal\u003c/li\u003e \u003cli\u003etheir contents, i.e. (name, value) pairs are equal. If a value contained in the content is an array, the value comparison is done as if by calling the  {@link java.util.Arrays#deepEquals(Object[],Object[]) deepEquals} methodfor arrays of object reference types or the appropriate overloading of {@code Arrays.equals(e1,e2)} for arrays of primitive types\u003c/li\u003e\u003c/ul\u003e \u003cp\u003e This ensures that this \u003ctt\u003eequals\u003c/tt\u003e method works properly for \u003cvar\u003eobj\u003c/var\u003e parameters which are different implementations of the \u003ccode\u003eCompositeData\u003c/code\u003e interface, with the restrictions mentioned in the {@link java.util.Collection#equals(Object) equals}method of the \u003ctt\u003ejava.util.Collection\u003c/tt\u003e interface.\n * @param obj  the object to be compared for equality with this\u003ccode\u003eCompositeData\u003c/code\u003e instance.\n * @return  \u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this\u003ccode\u003eCompositeData\u003c/code\u003e instance.\n */\n","tf":{"freq":{"primit":1,"call":1,"pair":1,"var":8,"link":2,"data":5,"object":6,"type":3,"ensur":1,"specifi":2,"refer":1,"name":1,"mention":1,"valu":3,"proper":1,"deep":2,"follow":1,"work":1,"composit":6,"done":1,"paramet":2,"true":3,"overload":1,"equal":12,"restrict":1,"comparison":1,"instanc":3,"non":1,"statement":1,"content":2,"differ":1,"methodfor":1,"appropri":1,"contain":1,"method":2,"java":3,"obj":5,"compar":2,"also":1,"util":3,"collect":2,"array":5},"maxFreq":12,"totalTerms":102},"loc":0}