{"id":11175,"className":"javax.management.remote.rmi.RMIConnection","methodName":"getAttributes","signature":"\u003cjavax.management.remote.rmi.RMIConnection: javax.management.AttributeList getAttributes(javax.management.ObjectName,java.lang.String[],javax.security.auth.Subject)\u003e","javadoc":"/** \n * Handles the method  {@link javax.management.MBeanServerConnection#getAttributes(ObjectName,String[])}.\n * @param name The object name of the MBean from which theattributes are retrieved.\n * @param attributes A list of the attributes to be retrieved.\n * @param delegationSubject The \u003ccode\u003eSubject\u003c/code\u003e containing thedelegation principals or \u003ccode\u003enull\u003c/code\u003e if the authentication principal is used instead.\n * @return The list of the retrieved attributes.\n * @throws InstanceNotFoundException The MBean specified is notregistered in the MBean server.\n * @throws ReflectionException An exception occurred whentrying to invoke the getAttributes method of a Dynamic MBean.\n * @throws RuntimeOperationsException Wrap a\u003ccode\u003ejava.lang.IllegalArgumentException\u003c/code\u003e: The object name in parameter is null or attributes in parameter is null.\n * @throws SecurityException if the client, or the delegated Subjectif any, does not have permission to perform this operation.\n * @throws IOException if a general communication exception occurred.\n * @see #setAttributes\n */\n","tf":{"freq":{"mbean":5,"client":1,"connect":1,"subject":2,"link":1,"use":1,"perform":1,"object":3,"lang":1,"specifi":1,"authent":1,"subjectif":1,"attribut":8,"deleg":2,"oper":2,"javax":1,"name":4,"permiss":1,"dynam":1,"argument":1,"notregist":1,"wrap":1,"except":8,"invok":1,"manag":1,"runtim":1,"paramet":2,"list":2,"illeg":1,"general":1,"handl":1,"instanc":1,"secur":1,"communic":1,"retriev":3,"string":1,"contain":1,"whentri":1,"instead":1,"java":1,"server":2,"method":2,"thedeleg":1,"reflect":1,"theattribut":1,"occur":2,"found":1,"princip":2},"maxFreq":8,"totalTerms":82},"loc":0}