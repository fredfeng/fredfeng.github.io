{"id":11333,"className":"javax.management.modelmbean.RequiredModelMBean","methodName":"getAttribute","signature":"\u003cjavax.management.modelmbean.RequiredModelMBean: java.lang.Object getAttribute(java.lang.String)\u003e","javadoc":"/** \n * Returns the value of a specific attribute defined for this ModelMBean. The last value returned by an attribute may be cached in the attribute\u0027s descriptor. The valid value will be in the \u0027value\u0027 field if there is one. If the \u0027currencyTimeLimit\u0027 field in the descriptor is: \u003cUL\u003e \u003cLI\u003e  \u003cb\u003e\u0026lt;0\u003c/b\u003e Then the value is not cached and is never valid. The getter method is invoked for the attribute. The \u0027value\u0027 and \u0027lastUpdatedTimeStamp\u0027 fields are cleared.\u003c/LI\u003e \u003cLI\u003e  \u003cb\u003e\u003d0\u003c/b\u003e Then the value is always cached and always valid. The \u0027value\u0027 field is returned. If there is no\u0027value\u0027 field then the getter method is invoked for the attribute. The \u0027lastUpdatedTimeStamp\u0027 field and `value\u0027 fields are set to the attribute\u0027s value and the current time stamp.\u003c/LI\u003e \u003cLI\u003e  \u003cb\u003e\u0026gt;0\u003c/b\u003e Represents the number of seconds that the \u0027value\u0027 field is valid. The \u0027value\u0027 field is no longer valid when \u0027lastUpdatedTimeStamp\u0027 + \u0027currencyTimeLimit\u0027 \u0026gt; Now. \u003cUL\u003e \u003cLI\u003eWhen \u0027value\u0027 is valid, \u0027value\u0027 is returned.\u003c/LI\u003e \u003cLI\u003eWhen \u0027value\u0027 is no longer valid then the getter method is invoked for the attribute. The \u0027lastUpdatedTimeStamp\u0027 field and `value\u0027 fields are updated.\u003c/LI\u003e \u003c/UL\u003e\u003c/LI\u003e \u003c/UL\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e because of inconsistencies in previous versions of this specification, it is recommended not to use negative or zero values for \u003ccode\u003ecurrencyTimeLimit\u003c/code\u003e.  To indicate that a cached value is never valid, omit the \u003ccode\u003ecurrencyTimeLimit\u003c/code\u003e field.  To indicate that it is always valid, use a very large number for this field.\u003c/p\u003e \u003cp\u003eIf the \u0027getMethod\u0027 field contains the name of a valid operation descriptor, then the method described by the operation descriptor is executed.  The response from the method is returned as the value of the attribute.  If the operation fails or the returned value is not compatible with the declared type of the attribute, an exception will be thrown.\u003c/p\u003e \u003cp\u003eIf no \u0027getMethod\u0027 field is defined then the default value of the attribute is returned. If the returned value is not compatible with the declared type of the attribute, an exception will be thrown.\u003c/p\u003e \u003cp\u003eThe declared type of the attribute is the String returned by {@link ModelMBeanAttributeInfo#getType()}.  A value is compatible with this type if one of the following is true: \u003cul\u003e \u003cli\u003ethe value is null;\u003c/li\u003e \u003cli\u003ethe declared name is a primitive type name (such as \"int\") and the value is an instance of the corresponding wrapper type (such as java.lang.Integer);\u003c/li\u003e \u003cli\u003ethe name of the value\u0027s class is identical to the declared name;\u003c/li\u003e \u003cli\u003ethe declared name can be loaded by the value\u0027s class loader and produces a class to which the value can be assigned.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIn this implementation, in every case where the getMethod needs to be called, because the method is invoked through the standard \"invoke\" method and thus needs operationInfo, an operation must be specified for that getMethod so that the invocation works correctly.\u003c/p\u003e\n * @param attrName A String specifying the name of theattribute to be retrieved. It must match the name of a ModelMBeanAttributeInfo.\n * @return The value of the retrieved attribute from thedescriptor \u0027value\u0027 field or from the invocation of the operation in the \u0027getMethod\u0027 field of the descriptor.\n * @exception AttributeNotFoundException The specified attribute isnot accessible in the MBean. The following cases may result in an AttributeNotFoundException: \u003cUL\u003e \u003cLI\u003e No ModelMBeanInfo was found for the Model MBean.\u003c/LI\u003e \u003cLI\u003e No ModelMBeanAttributeInfo was found for the specified attribute name.\u003c/LI\u003e \u003cLI\u003e The ModelMBeanAttributeInfo isReadable method returns \u0027false\u0027.\u003c/LI\u003e \u003c/UL\u003e\n * @exception MBeanException  Wraps one of the following Exceptions:\u003cUL\u003e \u003cLI\u003e  {@link InvalidAttributeValueException}: A wrong value type was received from the attribute\u0027s getter method or no \u0027getMethod\u0027 field defined in the descriptor for the attribute and no default value exists.\u003c/LI\u003e \u003cLI\u003e  {@link ServiceNotFoundException}: No ModelMBeanOperationInfo defined for the attribute\u0027s getter method or no descriptor associated with the ModelMBeanOperationInfo or the managed resource is null.\u003c/LI\u003e \u003cLI\u003e  {@link InvalidTargetObjectTypeException} The \u0027targetType\u0027field value is not \u0027objectReference\u0027.\u003c/LI\u003e \u003cLI\u003e An Exception thrown by the managed object\u0027s getter.\u003c/LI\u003e \u003c/UL\u003e\n * @exception ReflectionException  Wraps an {@link java.lang.Exception}thrown while trying to invoke the getter.\n * @exception RuntimeOperationsException Wraps an{@link IllegalArgumentException}: The attribute name in parameter is null.\n * @see #setAttribute(javax.management.Attribute)\n */\n","tf":{"freq":{"need":2,"assign":1,"getter":7,"servic":1,"zero":1,"info":8,"specifi":4,"time":9,"fail":1,"wrapper":1,"correct":1,"refer":1,"oper":9,"limit":4,"respons":1,"alway":3,"invok":6,"loader":1,"runtim":1,"describ":1,"number":2,"attr":1,"invoc":2,"instanc":1,"now":1,"will":3,"load":1,"inconsist":1,"primit":1,"descriptor":7,"correspond":1,"link":6,"currenc":4,"use":2,"version":1,"clear":1,"attribut":29,"indic":2,"associ":1,"current":1,"note":1,"may":2,"previous":1,"repres":1,"true":1,"receiv":1,"thedescriptor":1,"access":1,"field":19,"larg":1,"omit":1,"retriev":2,"string":2,"method":16,"reflect":1,"fals":1,"mbean":11,"second":1,"last":5,"type":10,"must":2,"invalid":2,"javax":1,"longer":2,"everi":1,"follow":3,"argument":1,"work":1,"wrap":3,"except":18,"thrown":4,"updat":5,"contain":1,"negat":1,"match":1,"execut":1,"compat":3,"valid":10,"defin":4,"call":1,"result":1,"model":9,"one":3,"readabl":1,"object":3,"recommend":1,"lang":2,"resourc":1,"declar":6,"ident":1,"isnot":1,"name":11,"valu":35,"exist":1,"stamp":5,"standard":1,"thus":1,"manag":3,"paramet":1,"produc":1,"cach":4,"illeg":1,"specif":2,"never":2,"target":2,"java":2,"wrong":1,"integ":1,"theattribut":1,"found":5},"maxFreq":35,"totalTerms":384},"loc":248}