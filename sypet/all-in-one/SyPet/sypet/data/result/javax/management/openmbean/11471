{"id":11471,"className":"javax.management.openmbean.TabularDataSupport","methodName":"equals","signature":"\u003cjavax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares the specified \u003cvar\u003eobj\u003c/var\u003e parameter with this \u003ccode\u003eTabularDataSupport\u003c/code\u003e instance for equality. \u003cp\u003e Returns \u003ctt\u003etrue\u003c/tt\u003e if and only if all of the following statements are true: \u003cul\u003e \u003cli\u003e\u003cvar\u003eobj\u003c/var\u003e is non null,\u003c/li\u003e \u003cli\u003e\u003cvar\u003eobj\u003c/var\u003e also implements the \u003ccode\u003eTabularData\u003c/code\u003e interface,\u003c/li\u003e \u003cli\u003etheir tabular types are equal\u003c/li\u003e \u003cli\u003etheir contents (ie all CompositeData values) are equal.\u003c/li\u003e \u003c/ul\u003e This ensures that this \u003ctt\u003eequals\u003c/tt\u003e method works properly for \u003cvar\u003eobj\u003c/var\u003e parameters which are different implementations of the \u003ccode\u003eTabularData\u003c/code\u003e interface. \u003cbr\u003e\u0026nbsp;\n * @param obj  the object to be compared for equality with this \u003ccode\u003eTabularDataSupport\u003c/code\u003e instance;\n * @return  \u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this \u003ccode\u003eTabularDataSupport\u003c/code\u003e instance.\n */\n","tf":{"freq":{"var":8,"data":6,"object":2,"type":1,"specifi":2,"ensur":1,"tabular":6,"valu":1,"proper":1,"nbsp":1,"follow":1,"work":1,"support":3,"composit":1,"paramet":2,"true":3,"equal":7,"instanc":3,"non":1,"statement":1,"content":1,"differ":1,"obj":5,"method":1,"compar":2,"also":1},"maxFreq":8,"totalTerms":63},"loc":43}