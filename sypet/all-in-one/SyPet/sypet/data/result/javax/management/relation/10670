{"id":10670,"className":"javax.management.relation.RelationService","methodName":"updateRoleMap","signature":"\u003cjavax.management.relation.RelationService: void updateRoleMap(java.lang.String,javax.management.relation.Role,java.util.List)\u003e","javadoc":"/** \n * Handles update of the Relation Service role map for the update of given role in given relation. \u003cP\u003eIt is called in relation MBean setRole() (for given role) and setRoles() (for each role) methods (implementation provided in RelationSupport class). \u003cP\u003eIt is also called in Relation Service setRole() (for given role) and setRoles() (for each role) methods. \u003cP\u003eTo allow the Relation Service to maintain the consistency (in case of MBean unregistration) and to be able to perform queries, this method must be called when a role is updated.\n * @param relationId  relation identifier of the updated relation\n * @param newRole  new role (name and new value)\n * @param oldValue  old role value (List of ObjectName objects)\n * @exception IllegalArgumentException  if null parameter\n * @exception RelationServiceNotRegisteredException  if the RelationService is not registered in the MBean Server\n * @exception RelationNotFoundException  if no relation for given id.\n */\n","tf":{"freq":{"mbean":3,"call":3,"old":2,"allow":1,"servic":5,"maintain":1,"perform":1,"identifi":1,"object":2,"abl":1,"must":1,"given":5,"name":2,"relat":13,"map":2,"regist":2,"role":15,"valu":3,"argument":1,"except":6,"support":1,"consist":1,"paramet":1,"list":1,"unregistr":1,"illeg":1,"provid":1,"handl":1,"queri":1,"updat":5,"server":1,"method":3,"also":1,"found":1},"maxFreq":15,"totalTerms":90},"loc":90}