{"id":10326,"className":"javax.management.MBeanServerFactory","methodName":"newMBeanServer","signature":"\u003cjavax.management.MBeanServerFactory: javax.management.MBeanServer newMBeanServer(java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003eReturn a new object implementing the MBeanServer interface with the specified default domain name, without keeping an internal reference to this new object.  The given domain name is used as the domain part in the ObjectName of MBeans when the domain is specified by the user is null.\u003c/p\u003e \u003cp\u003eNo reference is kept. \u003cCODE\u003efindMBeanServer\u003c/CODE\u003e will not be able to return a reference to this MBeanServer object, but the garbage collector will be able to remove the MBeanServer object when it is no longer referenced.\u003c/p\u003e\n * @param domain the default domain name for the createdMBeanServer.  This is the value that will be returned by  {@link MBeanServer#getDefaultDomain}.\n * @return the newly created MBeanServer.\n * @exception SecurityException if there is a SecurityManager and thecaller\u0027s permissions do not include or imply \u003ccode\u003e {@link MBeanServerPermission}(\"newMBeanServer\")\u003c/code\u003e.\n * @exception JMRuntimeException if the property\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists but the class it names cannot be instantiated through a public no-argument constructor; or if the instantiated builder returns null from its  {@link MBeanServerBuilder#newMBeanServerDelegate newMBeanServerDelegate} or {@link MBeanServerBuilder#newMBeanServer newMBeanServer} methods.\n * @exception ClassCastException if the property\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists and can be instantiated but is not assignment compatible with  {@link MBeanServerBuilder}.\n */\n","tf":{"freq":{"mbean":18,"assign":1,"instanti":3,"link":5,"use":1,"object":5,"abl":2,"garbag":1,"specifi":2,"referenc":1,"collector":1,"deleg":2,"given":1,"refer":3,"javax":2,"name":5,"impli":1,"permiss":2,"domain":7,"longer":1,"valu":1,"initi":2,"exist":2,"find":1,"constructor":1,"kept":1,"argument":1,"except":6,"includ":1,"thecal":1,"creat":2,"manag":3,"runtim":1,"builder":6,"remov":1,"without":1,"newli":1,"secur":2,"cast":1,"intern":1,"will":3,"method":1,"server":17,"properti":2,"part":1,"user":1,"compat":1,"keep":1},"maxFreq":18,"totalTerms":127},"loc":27}