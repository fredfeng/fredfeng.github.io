{"id":10075,"className":"javax.management.NotificationBroadcasterSupport","methodName":"NotificationBroadcasterSupport","signature":"\u003cjavax.management.NotificationBroadcasterSupport: void NotificationBroadcasterSupport(java.util.concurrent.Executor,javax.management.MBeanNotificationInfo[])\u003e","javadoc":"/** \n * \u003cp\u003eConstructs a NotificationBroadcasterSupport with information about the notifications that may be sent, and where each listener is invoked using the given  {@link java.util.concurrent.Executor}.\u003c/p\u003e \u003cp\u003eWhen  {@link #sendNotification sendNotification} is called, alistener is selected if it was added with a null  {@link NotificationFilter}, or if  {@link NotificationFilter#isNotificationEnabled isNotificationEnabled}returns true for the notification being sent. The call to \u003ccode\u003eNotificationFilter.isNotificationEnabled\u003c/code\u003e takes place in the thread that called \u003ccode\u003esendNotification\u003c/code\u003e. Then, for each selected listener,  {@link Executor#execute executor.execute} is calledwith a command that calls the \u003ccode\u003ehandleNotification\u003c/code\u003e method.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003einfo\u003c/code\u003e array is not empty, then it is cloned by the constructor as if by  {@code info.clone()}, and each call to  {@link #getNotificationInfo()} returns a newclone.\u003c/p\u003e\n * @param executor an executor used by the method\u003ccode\u003esendNotification\u003c/code\u003e to send each notification. If it is null, the thread calling \u003ccode\u003esendNotification\u003c/code\u003e will invoke the \u003ccode\u003ehandleNotification\u003c/code\u003e method itself.\n * @param info an array indicating, for each notification thisMBean may send, the name of the Java class of the notification and the notification type.  Can be null, which is equivalent to an empty array.\n * @since 1.6\n */\n","tf":{"freq":{"mbean":1,"call":6,"send":7,"concurr":1,"link":6,"broadcast":2,"use":2,"type":1,"info":4,"notif":22,"sent":2,"indic":1,"given":1,"equival":1,"name":1,"thread":2,"command":1,"alisten":1,"place":1,"listen":2,"constructor":1,"clone":2,"calledwith":1,"may":2,"support":2,"invok":2,"select":2,"enabl":3,"executor":5,"true":1,"newclon":1,"empti":2,"handl":2,"inform":1,"take":1,"will":1,"ad":1,"method":3,"java":2,"construct":1,"execut":2,"util":1,"filter":3,"array":3},"maxFreq":22,"totalTerms":110},"loc":5}