{"id":10277,"className":"javax.management.MBeanServerConnection","methodName":"createMBean","signature":"\u003cjavax.management.MBeanServerConnection: javax.management.ObjectInstance createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object[],java.lang.String[])\u003e","javadoc":"/** \n * \u003cp\u003eInstantiates and registers an MBean in the MBean server.  The class loader to be used is identified by its object name. An object name is associated with the MBean. If the object name of the loader is not specified, the ClassLoader that loaded the MBean server will be used.  If the MBean object name given is null, the MBean must provide its own name by implementing the {@link javax.management.MBeanRegistration MBeanRegistration}interface and returning the name from the  {@link MBeanRegistration#preRegister preRegister} method.\n * @param className The class name of the MBean to be instantiated.\n * @param name The object name of the MBean. May be null.\n * @param params An array containing the parameters of theconstructor to be invoked.\n * @param signature An array containing the signature of theconstructor to be invoked.\n * @param loaderName The object name of the class loader to be used.\n * @return An \u003cCODE\u003eObjectInstance\u003c/CODE\u003e, containing the\u003cCODE\u003eObjectName\u003c/CODE\u003e and the Java class name of the newly instantiated MBean.  If the contained \u003ccode\u003eObjectName\u003c/code\u003e is \u003ccode\u003en\u003c/code\u003e, the contained Java class name is \u003ccode\u003e {@link #getMBeanInfo getMBeanInfo(n)}.getClassName()\u003c/code\u003e.\n * @exception ReflectionException Wraps a\u003cCODE\u003ejava.lang.ClassNotFoundException\u003c/CODE\u003e or a \u003cCODE\u003ejava.lang.Exception\u003c/CODE\u003e that occurred when trying to invoke the MBean\u0027s constructor.\n * @exception InstanceAlreadyExistsException The MBean is alreadyunder the control of the MBean server.\n * @exception MBeanRegistrationException The\u003cCODE\u003epreRegister\u003c/CODE\u003e (\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean has thrown an exception. The MBean will not be registered.\n * @exception RuntimeMBeanException The MBean\u0027s constructor or its{@code preRegister} or {@code postRegister} method threwa  {@code RuntimeException}. If the \u003cCODE\u003epostRegister\u003c/CODE\u003e (\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean throws a \u003cCODE\u003eRuntimeException\u003c/CODE\u003e, the \u003cCODE\u003ecreateMBean\u003c/CODE\u003e method will throw a \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e, although the MBean creation and registration succeeded. In such a case, the MBean will be actually registered even though the \u003cCODE\u003ecreateMBean\u003c/CODE\u003e method threw an exception.  Note that \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e can also be thrown by \u003cCODE\u003epreRegister\u003c/CODE\u003e, in which case the MBean will not be registered.\n * @exception RuntimeErrorException If the \u003cCODE\u003epostRegister\u003c/CODE\u003e method(\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean throws an \u003cCODE\u003eError\u003c/CODE\u003e, the \u003cCODE\u003ecreateMBean\u003c/CODE\u003e method will throw a \u003cCODE\u003eRuntimeErrorException\u003c/CODE\u003e, although the MBean creation and registration succeeded. In such a case, the MBean will be actually registered even though the \u003cCODE\u003ecreateMBean\u003c/CODE\u003e method threw an exception.  Note that \u003cCODE\u003eRuntimeErrorException\u003c/CODE\u003e can also be thrown by \u003cCODE\u003epreRegister\u003c/CODE\u003e, in which case the MBean will not be registered.\n * @exception MBeanException The constructor of the MBean hasthrown an exception\n * @exception NotCompliantMBeanException This class is not a JMXcompliant MBean\n * @exception InstanceNotFoundException The specified class loaderis not registered in the MBean server.\n * @exception RuntimeOperationsException Wraps a\u003cCODE\u003ejava.lang.IllegalArgumentException\u003c/CODE\u003e: The className passed in parameter is null, the \u003cCODE\u003eObjectName\u003c/CODE\u003e passed in parameter contains a pattern or no \u003cCODE\u003eObjectName\u003c/CODE\u003e is specified for the MBean.\n * @exception IOException A communication problem occurred whentalking to the MBean server.\n * @see javax.management.MBeanRegistration\n */\n","tf":{"freq":{"mbean":48,"instanti":3,"though":2,"must":1,"specifi":3,"info":2,"although":2,"given":1,"oper":1,"javax":2,"xcompliant":1,"argument":1,"wrap":2,"control":1,"except":33,"thrown":3,"succeed":2,"creat":5,"loader":5,"invok":3,"runtim":9,"provid":1,"instanc":3,"newli":1,"threw":2,"whentalk":1,"contain":6,"compliant":1,"will":8,"even":2,"load":1,"array":2,"creation":2,"link":3,"use":3,"identifi":1,"object":11,"theconstructor":2,"alreadyund":1,"signatur":2,"lang":3,"associ":1,"name":20,"regist":16,"exist":1,"note":2,"constructor":3,"may":1,"post":3,"error":4,"manag":2,"paramet":3,"problem":1,"registr":10,"illeg":1,"pass":2,"loaderi":1,"communic":1,"pattern":1,"hasthrown":1,"pre":6,"actual":2,"method":10,"server":5,"java":5,"alreadi":1,"threwa":1,"also":2,"reflect":1,"found":2,"occur":2},"maxFreq":48,"totalTerms":297},"loc":0}