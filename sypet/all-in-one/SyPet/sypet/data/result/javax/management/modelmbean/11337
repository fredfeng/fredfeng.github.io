{"id":11337,"className":"javax.management.modelmbean.RequiredModelMBean","methodName":"addNotificationListener","signature":"\u003cjavax.management.modelmbean.RequiredModelMBean: void addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)\u003e","javadoc":"/** \n * Registers an object which implements the NotificationListener interface as a listener.  This object\u0027s \u0027handleNotification()\u0027 method will be invoked when any notification is issued through or by the ModelMBean.  This does not include attributeChangeNotifications.  They must be registered for independently.\n * @param listener The listener object which will handlesnotifications emitted by the registered MBean.\n * @param filter The filter object. If null, no filtering will beperformed before handling notifications.\n * @param handback The context to be sent to the listener withthe notification when a notification is emitted.\n * @exception IllegalArgumentException The listener cannot be null.\n * @see #removeNotificationListener\n */\n","tf":{"freq":{"mbean":2,"model":1,"handlesnotif":1,"object":4,"add":1,"issu":1,"must":1,"notif":9,"independ":1,"sent":1,"attribut":1,"handback":1,"beperform":1,"regist":3,"listen":8,"argument":1,"emit":2,"except":2,"includ":1,"invok":1,"remov":1,"illeg":1,"handl":2,"withth":1,"will":3,"context":1,"method":1,"chang":1,"filter":3},"maxFreq":9,"totalTerms":57},"loc":25}