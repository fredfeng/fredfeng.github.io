{"id":11111,"className":"javax.management.remote.JMXConnectorServerMBean","methodName":"stop","signature":"\u003cjavax.management.remote.JMXConnectorServerMBean: void stop()\u003e","javadoc":"/** \n * \u003cp\u003eDeactivates the connector server, that is, stops listening for client connections.  Calling this method will also close all client connections that were made by this server.  After this method returns, whether normally or with an exception, the connector server will not create any new client connections.\u003c/p\u003e \u003cp\u003eOnce a connector server has been stopped, it cannot be started again.\u003c/p\u003e \u003cp\u003eCalling this method when the connector server has already been stopped has no effect.  Calling this method when the connector server has not yet been started will disable the connector server object permanently.\u003c/p\u003e \u003cp\u003eIf closing a client connection produces an exception, that exception is not thrown from this method.  A  {@link JMXConnectionNotification} with type {@link JMXConnectionNotification#FAILED} is emitted from this MBeanwith the connection ID of the connection that could not be closed.\u003c/p\u003e \u003cp\u003eClosing a connector server is a potentially slow operation. For example, if a client machine with an open connection has crashed, the close operation might have to wait for a network protocol timeout.  Callers that do not want to block in a close operation should do it in a separate thread.\u003c/p\u003e\n * @exception IOException if the server cannot be closed cleanly.When this exception is thrown, the server has already attempted to close all client connections.  All client connections are closed except possibly those that generated exceptions when the server attempted to close them.\n */\n","tf":{"freq":{"client":7,"normal":1,"possibl":1,"wait":1,"type":1,"whether":1,"close":10,"notif":2,"open":1,"oper":3,"thread":1,"slow":1,"crash":1,"except":8,"thrown":2,"creat":1,"xconnect":2,"mbeanwith":1,"machin":1,"disabl":1,"start":2,"separ":1,"will":3,"connector":7,"deactiv":1,"attempt":2,"caller":1,"stop":4,"call":3,"might":1,"connect":9,"link":2,"made":1,"block":1,"object":1,"network":1,"clean":1,"listen":1,"want":1,"emit":1,"protocol":1,"produc":1,"potenti":1,"effect":1,"generat":1,"exampl":1,"alreadi":2,"server":11,"method":5,"also":1,"timeout":1,"perman":1,"yet":1},"maxFreq":11,"totalTerms":119},"loc":0}