{"id":11122,"className":"javax.management.remote.rmi.NoCallStackClassLoader","methodName":"stringToBytes","signature":"\u003cjavax.management.remote.rmi.NoCallStackClassLoader: byte[] stringToBytes(java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003eConstruct a \u003ccode\u003ebyte[]\u003c/code\u003e using the characters of the given \u003ccode\u003eString\u003c/code\u003e.  Only the low-order byte of each character is used.  This method is useful to reduce the footprint of classes that include big byte arrays (e.g. the byte code of other classes), because a string takes up much less space in a class file than the byte code to initialize a \u003ccode\u003ebyte[]\u003c/code\u003e with the same number of bytes.\u003c/p\u003e \u003cp\u003eWe use just one byte per character even though characters contain two bytes.  The resultant output length is much the same: using one byte per character is shorter because it has more characters in the optimal 1-127 range but longer because it has more zero bytes (which are frequent, and are encoded as two bytes in classfile UTF-8).  But one byte per character has two key advantages: (1) you can see the string constants, which is reassuring, (2) you don\u0027t need to know whether the class file length is odd.\u003c/p\u003e \u003cp\u003eThis method differs from  {@link String#getBytes()} in thatit does not use any encoding.  So it is guaranteed that each byte of the result is numerically identical (mod 256) to the corresponding character of the input.\n */\n","tf":{"freq":{"need":1,"thatit":1,"zero":1,"reassur":1,"though":1,"whether":1,"given":1,"file":2,"rang":1,"longer":1,"key":1,"numer":1,"charact":8,"mod":1,"advantag":1,"number":1,"much":2,"input":1,"encod":2,"contain":1,"even":1,"low":1,"big":1,"output":1,"odd":1,"shorter":1,"array":1,"result":2,"correspond":1,"one":3,"link":1,"use":6,"footprint":1,"space":1,"ident":1,"order":1,"length":2,"initi":1,"less":1,"just":1,"includ":1,"constant":1,"optim":1,"guarante":1,"frequent":1,"know":1,"two":3,"differ":1,"per":3,"take":1,"string":5,"method":2,"construct":1,"reduc":1,"classfil":1},"maxFreq":8,"totalTerms":83},"loc":7}