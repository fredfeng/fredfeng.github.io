{"id":11428,"className":"javax.management.openmbean.OpenMBeanConstructorInfoSupport","methodName":"OpenMBeanConstructorInfoSupport","signature":"\u003cjavax.management.openmbean.OpenMBeanConstructorInfoSupport: void OpenMBeanConstructorInfoSupport(java.lang.String,java.lang.String,javax.management.openmbean.OpenMBeanParameterInfo[],javax.management.Descriptor)\u003e","javadoc":"/** \n * \u003cp\u003eConstructs an  {@code OpenMBeanConstructorInfoSupport}instance, which describes the constructor of a class of open MBeans with the specified  {@code name},  {@code description}, {@code signature}, and  {@code descriptor}.\u003c/p\u003e \u003cp\u003eThe  {@code signature} array parameter is internally copied,so that subsequent changes to the array referenced by  {@code signature} have no effect on this instance.\u003c/p\u003e\n * @param name cannot be a null or empty string.\n * @param description cannot be a null or empty string.\n * @param signature can be null or empty if there are noparameters to describe.\n * @param descriptor The descriptor for the constructor.  This maybe null which is equivalent to an empty descriptor.\n * @throws IllegalArgumentException if {@code name} or {@code description} are null or empty string.\n * @throws ArrayStoreException If {@code signature} is not anarray of instances of a subclass of  {@code MBeanParameterInfo}.\n * @since 1.6\n */\n","tf":{"freq":{"mbean":4,"store":1,"descriptor":4,"signatur":5,"copi":1,"specifi":1,"info":3,"referenc":1,"open":3,"equival":1,"name":3,"subsequ":1,"constructor":4,"argument":1,"except":2,"anarray":1,"support":2,"descript":3,"paramet":2,"describ":2,"illeg":1,"mayb":1,"instanc":3,"empti":5,"effect":1,"noparamet":1,"string":3,"subclass":1,"intern":1,"construct":1,"chang":1,"array":3},"maxFreq":5,"totalTerms":67},"loc":19}