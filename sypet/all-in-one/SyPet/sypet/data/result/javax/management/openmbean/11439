{"id":11439,"className":"javax.management.openmbean.TabularData","methodName":"put","signature":"\u003cjavax.management.openmbean.TabularData: void put(javax.management.openmbean.CompositeData)\u003e","javadoc":"/** \n * Adds \u003cvar\u003evalue\u003c/var\u003e to this \u003ctt\u003eTabularData\u003c/tt\u003e instance. The composite type of \u003cvar\u003evalue\u003c/var\u003e must be the same as this instance\u0027s row type (ie the composite type returned by \u003ctt\u003ethis.getTabularType(). {@link TabularType#getRowType getRowType()}\u003c/tt\u003e), and there must not already be an existing value in this \u003ctt\u003eTabularData\u003c/tt\u003e instance whose index is the same as the one calculated for the \u003cvar\u003evalue\u003c/var\u003e to be added. The index for \u003cvar\u003evalue\u003c/var\u003e is calculated according to this \u003ctt\u003eTabularData\u003c/tt\u003e instance\u0027s \u003ctt\u003eTabularType\u003c/tt\u003e definition (see \u003ctt\u003eTabularType. {@link TabularType#getIndexNames getIndexNames()}\u003c/tt\u003e).\n * @param value                      the composite data value to be added as a new row to this \u003ctt\u003eTabularData\u003c/tt\u003e instance;must be of the same composite type as this instance\u0027s row type; must not be null.\n * @throws NullPointerException       if \u003cvar\u003evalue\u003c/var\u003e is \u003ctt\u003enull\u003c/tt\u003e\n * @throws InvalidOpenTypeException   if \u003cvar\u003evalue\u003c/var\u003e does not conform to this \u003ctt\u003eTabularData\u003c/tt\u003e instance\u0027srow type definition.\n * @throws KeyAlreadyExistsException  if the index for \u003cvar\u003evalue\u003c/var\u003e, calculated according tothis \u003ctt\u003eTabularData\u003c/tt\u003e instance\u0027s \u003ctt\u003eTabularType\u003c/tt\u003e definition already maps to an existing value in the underlying HashMap.\n */\n","tf":{"freq":{"put":1,"var":14,"link":2,"one":1,"data":7,"type":15,"add":1,"must":4,"open":1,"tabular":12,"invalid":1,"name":2,"map":2,"valu":11,"srow":1,"exist":3,"key":1,"index":5,"except":3,"hash":1,"tothi":1,"composit":4,"whose":1,"calcul":3,"accord":2,"row":5,"instanc":8,"conform":1,"definit":3,"ad":2,"pointer":1,"alreadi":3},"maxFreq":15,"totalTerms":122},"loc":0}