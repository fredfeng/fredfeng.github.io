{"id":10462,"className":"javax.management.ImmutableDescriptor","methodName":"equals","signature":"\u003cjavax.management.ImmutableDescriptor: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares this descriptor to the given object.  The objects are equal if the given object is also a Descriptor, and if the two Descriptors have the same field names (possibly differing in case) and the same associated values.  The respective values for a field in the two Descriptors are equal if the following conditions hold:\u003c/p\u003e \u003cul\u003e \u003cli\u003eIf one value is null then the other must be too.\u003c/li\u003e \u003cli\u003eIf one value is a primitive array then the other must be a primitive array of the same type with the same elements.\u003c/li\u003e \u003cli\u003eIf one value is an object array then the other must be too and {@link Arrays#deepEquals(Object[],Object[])} must return true.\u003c/li\u003e\u003cli\u003eOtherwise  {@link Object#equals(Object)} must return true.\u003c/li\u003e\u003c/ul\u003e\n * @param o the object to compare with.\n * @return {@code true} if the objects are the same; {@code false}otherwise.\n */\n","tf":{"freq":{"fals":1,"otherwis":2,"primit":2,"descriptor":4,"one":3,"link":2,"possibl":1,"object":10,"type":1,"must":5,"given":2,"associ":1,"name":1,"valu":5,"deep":1,"follow":1,"condit":1,"element":1,"hold":1,"true":3,"equal":5,"field":2,"differ":1,"two":2,"also":1,"compar":2,"respect":1,"array":4},"maxFreq":10,"totalTerms":66},"loc":25}