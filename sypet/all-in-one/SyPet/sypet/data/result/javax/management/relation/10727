{"id":10727,"className":"javax.management.relation.RelationServiceMBean","methodName":"findAssociatedMBeans","signature":"\u003cjavax.management.relation.RelationServiceMBean: java.util.Map\u003cjavax.management.ObjectName,java.util.List\u003cjava.lang.String\u003e\u003e findAssociatedMBeans(javax.management.ObjectName,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Retrieves the MBeans associated to given one in a relation. \u003cP\u003eThis corresponds to CIM Associators and AssociatorNames operations.\n * @param mbeanName  ObjectName of MBean\n * @param relationTypeName  can be null; if specified, only the relationsof that type will be considered in the search. Else all relation types are considered.\n * @param roleName  can be null; if specified, only the relationswhere the MBean is referenced in that role will be considered. Else all roles are considered.\n * @return an HashMap, where the keys are the ObjectNames of the MBeansassociated to given MBean, and the value is, for each key, an ArrayList of the relation ids of the relations where the key MBean is associated to given one (as they can be associated in several different relations).\n * @exception IllegalArgumentException  if null parameter\n */\n","tf":{"freq":{"mbean":7,"correspond":1,"one":2,"object":2,"type":3,"consid":4,"specifi":2,"id":1,"referenc":1,"given":3,"oper":1,"associ":6,"search":1,"name":6,"relat":6,"map":1,"role":3,"valu":1,"find":1,"key":3,"argument":1,"except":2,"hash":1,"relationsof":1,"paramet":1,"list":1,"illeg":1,"sever":1,"els":2,"relationswher":1,"differ":1,"retriev":1,"will":2,"array":1,"mbeansassoci":1},"maxFreq":7,"totalTerms":73},"loc":0}