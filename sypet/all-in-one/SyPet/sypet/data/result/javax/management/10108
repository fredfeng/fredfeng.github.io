{"id":10108,"className":"javax.management.NotificationFilterSupport","methodName":"enableType","signature":"\u003cjavax.management.NotificationFilterSupport: void enableType(java.lang.String)\u003e","javadoc":"/** \n * Enables all the notifications the type of which starts with the specified prefix to be sent to the listener. \u003cBR\u003eIf the specified prefix is already in the list of enabled notification types, this method has no effect. \u003cP\u003e Example: \u003cBLOCKQUOTE\u003e \u003cPRE\u003e // Enables all notifications the type of which starts with \"my_example\" to be sent. myFilter.enableType(\"my_example\"); // Enables all notifications the type of which is \"my_example.my_type\" to be sent. myFilter.enableType(\"my_example.my_type\"); \u003c/PRE\u003e \u003c/BLOCKQUOTE\u003e Note that: \u003cBLOCKQUOTE\u003e\u003cCODE\u003e myFilter.enableType(\"my_example.*\"); \u003c/CODE\u003e\u003c/BLOCKQUOTE\u003e will no match any notification type.\n * @param prefix The prefix.\n * @exception java.lang.IllegalArgumentException The prefix parameter is null.\n */\n","tf":{"freq":{"argument":1,"except":2,"enabl":8,"paramet":1,"list":1,"type":11,"illeg":1,"lang":1,"specifi":2,"notif":5,"sent":3,"effect":1,"start":2,"prefix":5,"will":1,"exampl":6,"java":1,"alreadi":1,"method":1,"match":1,"listen":1,"note":1,"filter":3},"maxFreq":11,"totalTerms":60},"loc":9}