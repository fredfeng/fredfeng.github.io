{"id":11047,"className":"javax.management.remote.JMXConnector","methodName":"connect","signature":"\u003cjavax.management.remote.JMXConnector: void connect(java.util.Map)\u003e","javadoc":"/** \n * \u003cp\u003eEstablishes the connection to the connector server.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003econnect\u003c/code\u003e has already been called successfully on this object, calling it again has no effect.  If, however, {@link #close} was called after \u003ccode\u003econnect\u003c/code\u003e, the new\u003ccode\u003econnect\u003c/code\u003e will throw an \u003ccode\u003eIOException\u003c/code\u003e.\u003cp\u003e \u003cp\u003eOtherwise, either \u003ccode\u003econnect\u003c/code\u003e has never been called on this object, or it has been called but produced an exception.  Then calling \u003ccode\u003econnect\u003c/code\u003e will attempt to establish a connection to the connector server.\u003c/p\u003e\n * @param env the properties of the connection.  Properties inthis map override properties in the map specified when the \u003ccode\u003eJMXConnector\u003c/code\u003e was created, if any.  This parameter can be null, which is equivalent to an empty map.\n * @exception IOException if the connection could not be madebecause of a communication problem.\n * @exception SecurityException if the connection could not bemade for security reasons.\n */\n","tf":{"freq":{"otherwis":1,"attempt":1,"call":6,"inthi":1,"connect":11,"reason":1,"link":1,"object":2,"close":1,"specifi":1,"xconnector":1,"equival":1,"map":3,"howev":1,"bemad":1,"except":6,"madebecaus":1,"creat":1,"paramet":1,"establish":2,"problem":1,"produc":1,"env":1,"empti":1,"either":1,"never":1,"secur":2,"communic":1,"effect":1,"will":2,"connector":2,"alreadi":1,"server":2,"properti":3,"success":1},"maxFreq":11,"totalTerms":65},"loc":0}