{"id":10276,"className":"javax.management.MBeanServerConnection","methodName":"createMBean","signature":"\u003cjavax.management.MBeanServerConnection: javax.management.ObjectInstance createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object[],java.lang.String[])\u003e","javadoc":"/** \n * Instantiates and registers an MBean in the MBean server.  The MBean server will use its  {@link javax.management.loading.ClassLoaderRepository Default LoaderRepository} to load the class of the MBean.  An object name isassociated with the MBean.  If the object name given is null, the MBean must provide its own name by implementing the  {@link javax.management.MBeanRegistration MBeanRegistration} interfaceand returning the name from the  {@link MBeanRegistration#preRegister preRegister} method.\n * @param className The class name of the MBean to be instantiated.\n * @param name The object name of the MBean. May be null.\n * @param params An array containing the parameters of theconstructor to be invoked.\n * @param signature An array containing the signature of theconstructor to be invoked.\n * @return An \u003cCODE\u003eObjectInstance\u003c/CODE\u003e, containing the\u003cCODE\u003eObjectName\u003c/CODE\u003e and the Java class name of the newly instantiated MBean.  If the contained \u003ccode\u003eObjectName\u003c/code\u003e is \u003ccode\u003en\u003c/code\u003e, the contained Java class name is \u003ccode\u003e {@link #getMBeanInfo getMBeanInfo(n)}.getClassName()\u003c/code\u003e.\n * @exception ReflectionException Wraps a\u003cCODE\u003ejava.lang.ClassNotFoundException\u003c/CODE\u003e or a \u003cCODE\u003ejava.lang.Exception\u003c/CODE\u003e that occurred when trying to invoke the MBean\u0027s constructor.\n * @exception InstanceAlreadyExistsException The MBean is alreadyunder the control of the MBean server.\n * @exception MBeanRegistrationException The\u003cCODE\u003epreRegister\u003c/CODE\u003e (\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean has thrown an exception. The MBean will not be registered.\n * @exception RuntimeMBeanException If the MBean\u0027s constructor or its{@code preRegister} or {@code postRegister} method threwa  {@code RuntimeException}. If the \u003cCODE\u003epostRegister\u003c/CODE\u003e (\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean throws a \u003cCODE\u003eRuntimeException\u003c/CODE\u003e, the \u003cCODE\u003ecreateMBean\u003c/CODE\u003e method will throw a \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e, although the MBean creation and registration succeeded. In such a case, the MBean will be actually registered even though the \u003cCODE\u003ecreateMBean\u003c/CODE\u003e method threw an exception.  Note that \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e can also be thrown by \u003cCODE\u003epreRegister\u003c/CODE\u003e, in which case the MBean will not be registered.\n * @exception RuntimeErrorException If the \u003cCODE\u003epostRegister\u003c/CODE\u003e(\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean throws an \u003cCODE\u003eError\u003c/CODE\u003e, the \u003cCODE\u003ecreateMBean\u003c/CODE\u003e method will throw a \u003cCODE\u003eRuntimeErrorException\u003c/CODE\u003e, although the MBean creation and registration succeeded. In such a case, the MBean will be actually registered even though the \u003cCODE\u003ecreateMBean\u003c/CODE\u003e method threw an exception.  Note that \u003cCODE\u003eRuntimeErrorException\u003c/CODE\u003e can also be thrown by \u003cCODE\u003epreRegister\u003c/CODE\u003e, in which case the MBean will not be registered.\n * @exception MBeanException The constructor of the MBean hasthrown an exception\n * @exception NotCompliantMBeanException This class is not a JMXcompliant MBean\n * @exception RuntimeOperationsException Wraps a\u003cCODE\u003ejava.lang.IllegalArgumentException\u003c/CODE\u003e: The className passed in parameter is null, the \u003cCODE\u003eObjectName\u003c/CODE\u003e passed in parameter contains a pattern or no \u003cCODE\u003eObjectName\u003c/CODE\u003e is specified for the MBean.\n * @exception IOException A communication problem occurred whentalking to the MBean server.\n * @see javax.management.MBeanRegistration\n */\n","tf":{"freq":{"mbean":47,"instanti":3,"though":2,"must":1,"specifi":1,"info":2,"although":2,"given":1,"oper":1,"javax":3,"xcompliant":1,"argument":1,"wrap":2,"control":1,"repositori":2,"except":31,"thrown":3,"succeed":2,"creat":5,"loader":2,"invok":3,"interfaceand":1,"runtim":9,"provid":1,"instanc":2,"newli":1,"threw":2,"whentalk":1,"contain":6,"compliant":1,"will":8,"even":2,"load":2,"array":2,"creation":2,"isassoci":1,"link":4,"use":1,"object":8,"theconstructor":2,"alreadyund":1,"signatur":2,"lang":3,"name":16,"regist":15,"exist":1,"note":2,"constructor":3,"may":1,"post":3,"error":4,"manag":3,"paramet":3,"problem":1,"registr":10,"illeg":1,"pass":2,"communic":1,"pattern":1,"hasthrown":1,"pre":6,"actual":2,"method":9,"server":4,"java":5,"alreadi":1,"threwa":1,"also":2,"reflect":1,"found":1,"occur":2},"maxFreq":47,"totalTerms":280},"loc":0}