{"id":10575,"className":"javax.management.relation.RoleList","methodName":"asList","signature":"\u003cjavax.management.relation.RoleList: java.util.List\u003cjavax.management.relation.Role\u003e asList()\u003e","javadoc":"/** \n * Return a view of this list as a  {@code List\u003cRole\u003e}. Changes to the returned value are reflected by changes to the original  {@code RoleList} and vice versa.\n * @return a {@code List\u003cRole\u003e} whose contentsreflect the contents of this  {@code RoleList}. \u003cp\u003eIf this method has ever been called on a given {@code RoleList} instance, a subsequent attempt to addan object to that instance which is not a  {@code Role}will fail with an  {@code IllegalArgumentException}. For compatibility reasons, a  {@code RoleList} on which this method has neverbeen called does allow objects other than  {@code Role}s to be added.\u003c/p\u003e\n * @throws IllegalArgumentException if this {@code RoleList} containsan element that is not a  {@code Role}.\n * @since 1.6\n */\n","tf":{"freq":{"attempt":1,"call":2,"allow":1,"reason":1,"vice":1,"object":2,"given":1,"fail":1,"role":10,"valu":1,"subsequ":1,"argument":2,"versa":1,"element":1,"except":2,"whose":1,"origin":1,"contentsreflect":1,"list":9,"neverbeen":1,"illeg":2,"instanc":2,"containsan":1,"content":1,"addan":1,"will":1,"ad":1,"method":2,"chang":2,"view":1,"reflect":1,"ever":1,"compat":1},"maxFreq":10,"totalTerms":58},"loc":8}