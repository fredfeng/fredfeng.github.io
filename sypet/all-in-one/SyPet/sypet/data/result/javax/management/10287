{"id":10287,"className":"javax.management.MBeanServerConnection","methodName":"setAttributes","signature":"\u003cjavax.management.MBeanServerConnection: javax.management.AttributeList setAttributes(javax.management.ObjectName,javax.management.AttributeList)\u003e","javadoc":"/** \n * \u003cp\u003eSets the values of several attributes of a named MBean. The MBean is identified by its object name.\u003c/p\u003e \u003cp\u003eIf one or more attributes cannot be set for some reason, they will be omitted from the returned  {@code AttributeList}.  The caller should check that the input  {@code AttributeList} is the same size as the output one.To discover what problem prevented a given attribute from being retrieved, it will usually be possible to call  {@link #setAttribute setAttribute}for that attribute, although this is not guaranteed to work.  (For example, the values of two attributes may have been rejected because they were inconsistent with each other.  Setting one of them alone might be allowed.)\u003cp\u003e \u003cp\u003eHere is an example of calling this method and checking that it succeeded in setting all the requested attributes:\u003c/p\u003e \u003cpre\u003e AttributeList inputAttrs \u003d ...; AttributeList outputAttrs \u003d mbeanServerConnection.setAttributes(\u003c!-- --\u003eobjectName, inputAttrs); if (inputAttrs.size() \u003d\u003d outputAttrs.size()) System.out.println(\"All attributes were set successfully\"); else { {@code List\u003cString\u003e} missing \u003d new {@code ArrayList\u003cString\u003e}(); for (Attribute a : inputAttrs.asList()) missing.add(a.getName()); for (Attribute a : outputAttrs.asList()) missing.remove(a.getName()); System.out.println(\"Did not set: \" + missing); } \u003c/pre\u003e\n * @param name The object name of the MBean within which theattributes are to be set.\n * @param attributes A list of attributes: The identification ofthe attributes to be set and the values they are to be set to.\n * @return The list of attributes that were set, with their newvalues.\n * @exception InstanceNotFoundException The MBean specified is notregistered in the MBean server.\n * @exception ReflectionException An exception occurred whentrying to invoke the getAttributes method of a Dynamic MBean.\n * @exception RuntimeOperationsException Wraps a\u003cCODE\u003ejava.lang.IllegalArgumentException\u003c/CODE\u003e: The object name in parameter is null or attributes in parameter is null.\n * @exception IOException A communication problem occurred whentalking to the MBean server.\n * @see #getAttributes\n */\n","tf":{"freq":{"mbean":8,"reason":1,"possibl":1,"specifi":1,"although":1,"given":1,"oper":1,"println":2,"request":1,"dynam":1,"argument":1,"notregist":1,"work":1,"wrap":1,"except":10,"succeed":1,"invok":1,"runtim":1,"remov":1,"prevent":1,"attr":7,"els":1,"instanc":1,"size":3,"discov":1,"input":5,"system":2,"whentalk":1,"will":2,"output":4,"array":1,"caller":1,"call":2,"inconsist":1,"might":1,"reject":1,"allow":1,"connect":1,"one":3,"link":1,"identif":1,"identifi":1,"object":4,"add":1,"lang":1,"attribut":24,"ofth":1,"name":8,"valu":3,"usual":1,"may":1,"check":2,"guarante":1,"paramet":2,"problem":2,"list":10,"newvalu":1,"illeg":1,"sever":1,"two":1,"communic":1,"retriev":1,"omit":1,"pre":2,"string":2,"whentri":1,"exampl":2,"alon":1,"java":1,"method":2,"server":3,"within":1,"success":1,"reflect":1,"theattribut":1,"miss":4,"occur":2,"found":1},"maxFreq":24,"totalTerms":172},"loc":0}