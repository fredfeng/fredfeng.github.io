{"id":11182,"className":"javax.management.remote.rmi.RMIConnection","methodName":"isInstanceOf","signature":"\u003cjavax.management.remote.rmi.RMIConnection: boolean isInstanceOf(javax.management.ObjectName,java.lang.String,javax.security.auth.Subject)\u003e","javadoc":"/** \n * Handles the method  {@link javax.management.MBeanServerConnection#isInstanceOf(ObjectName,String)}.\n * @param name The \u003ccode\u003eObjectName\u003c/code\u003e of the MBean.\n * @param className The name of the class.\n * @param delegationSubject The \u003ccode\u003eSubject\u003c/code\u003e containing thedelegation principals or \u003ccode\u003enull\u003c/code\u003e if the authentication principal is used instead.\n * @return true if the MBean specified is an instance of thespecified class according to the rules above, false otherwise.\n * @throws InstanceNotFoundException The MBean specified is notregistered in the MBean server.\n * @throws SecurityException if the client, or the delegated Subjectif any, does not have permission to perform this operation.\n * @throws IOException if a general communication exception occurred.\n * @throws RuntimeOperationsException Wraps a\u003ccode\u003ejava.lang.IllegalArgumentException\u003c/code\u003e: The object name in parameter is null.\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"mbean":5,"client":1,"connect":1,"subject":2,"link":1,"use":1,"perform":1,"object":3,"lang":1,"specifi":2,"authent":1,"subjectif":1,"deleg":2,"oper":2,"javax":1,"rule":1,"name":6,"permiss":1,"thespecifi":1,"argument":1,"notregist":1,"wrap":1,"except":6,"manag":1,"runtim":1,"paramet":1,"true":1,"accord":1,"illeg":1,"general":1,"handl":1,"instanc":4,"secur":1,"communic":1,"string":1,"contain":1,"instead":1,"java":1,"server":2,"method":1,"thedeleg":1,"occur":1,"found":1,"princip":2},"maxFreq":6,"totalTerms":71},"loc":0}