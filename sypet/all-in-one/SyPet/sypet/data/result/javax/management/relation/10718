{"id":10718,"className":"javax.management.relation.RelationServiceMBean","methodName":"checkRoleReading","signature":"\u003cjavax.management.relation.RelationServiceMBean: java.lang.Integer checkRoleReading(java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Checks if given Role can be read in a relation of the given type.\n * @param roleName  name of role to be checked\n * @param relationTypeName  name of the relation type\n * @return an Integer wrapping an integer corresponding to possibleproblems represented as constants in RoleUnresolved: \u003cP\u003e- 0 if role can be read \u003cP\u003e- integer corresponding to RoleStatus.NO_ROLE_WITH_NAME \u003cP\u003e- integer corresponding to RoleStatus.ROLE_NOT_READABLE\n * @exception IllegalArgumentException  if null parameter\n * @exception RelationTypeNotFoundException  if the relation type is notknown in the Relation Service\n */\n","tf":{"freq":{"argument":1,"wrap":1,"except":4,"constant":1,"check":3,"status":2,"repres":1,"notknown":1,"correspond":3,"servic":1,"paramet":1,"type":5,"illeg":1,"unresolv":1,"given":2,"name":4,"relat":6,"role":8,"read":3,"possibleproblem":1,"integ":4,"found":1},"maxFreq":8,"totalTerms":55},"loc":0}