{"id":10254,"className":"javax.management.StandardMBean","methodName":"StandardMBean","signature":"\u003cjavax.management.StandardMBean: void StandardMBean(T,java.lang.Class)\u003e","javadoc":"/** \n * \u003cp\u003eMake a DynamicMBean out of the object \u003cvar\u003eimplementation\u003c/var\u003e, using the specified \u003cvar\u003embeanInterface\u003c/var\u003e class.\u003c/p\u003e\n * @param implementation The implementation of this MBean.\n * @param mbeanInterface The Management Interface exported by thisMBean\u0027s implementation. If \u003ccode\u003enull\u003c/code\u003e, then this object will use standard JMX design pattern to determine the management interface associated with the given implementation.\n * @param \u003c T \u003e Allows the compiler to checkthat  {@code implementation} does indeed implement the classdescribed by  {@code mbeanInterface}.  The compiler can only check this if  {@code mbeanInterface} is a class literal suchas  {@code MyMBean.class}.\n * @exception IllegalArgumentException if the given\u003cvar\u003eimplementation\u003c/var\u003e is null.\n * @exception NotCompliantMBeanException if the \u003cvar\u003embeanInterface\u003c/var\u003edoes not follow JMX design patterns for Management Interfaces, or if the given \u003cvar\u003eimplementation\u003c/var\u003e does not implement the specified interface.\n */\n","tf":{"freq":{"mbean":11,"allow":1,"classdescrib":1,"var":10,"use":2,"inde":1,"object":2,"specifi":2,"given":3,"associ":1,"checkthat":1,"dynam":1,"follow":1,"argument":1,"except":4,"export":1,"liter":1,"standard":2,"check":1,"manag":3,"illeg":1,"sucha":1,"pattern":2,"determin":1,"compliant":1,"will":1,"make":1,"design":2,"compil":2},"maxFreq":11,"totalTerms":62},"loc":3}