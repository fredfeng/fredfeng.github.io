{"id":11051,"className":"javax.management.remote.JMXConnector","methodName":"addConnectionNotificationListener","signature":"\u003cjavax.management.remote.JMXConnector: void addConnectionNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)\u003e","javadoc":"/** \n * \u003cp\u003eAdds a listener to be informed of changes in connection status.  The listener will receive notifications of type  {@link JMXConnectionNotification}.  An implementation can send other types of notifications too.\u003c/p\u003e \u003cp\u003eAny number of listeners can be added with this method.  The same listener can be added more than once with the same or different values for the filter and handback.  There is no special treatment of a duplicate entry.  For example, if a listener is registered twice with no filter, then its \u003ccode\u003ehandleNotification\u003c/code\u003e method will be called twice for each notification.\u003c/p\u003e\n * @param listener a listener to receive connection statusnotifications.\n * @param filter a filter to select which notifications are to bedelivered to the listener, or null if all notifications are to be delivered.\n * @param handback an object to be given to the listener alongwith each notification.  Can be null.\n * @exception NullPointerException if \u003ccode\u003elistener\u003c/code\u003e isnull.\n * @see #removeConnectionNotificationListener\n * @see javax.management.NotificationBroadcaster#addNotificationListener\n */\n","tf":{"freq":{"call":1,"send":1,"connect":4,"treatment":1,"broadcast":1,"link":1,"object":1,"type":2,"add":3,"notif":12,"statusnotif":1,"twice":2,"given":1,"javax":1,"isnul":1,"handback":2,"regist":1,"valu":1,"listen":13,"except":2,"alongwith":1,"xconnect":1,"status":1,"manag":1,"select":1,"entri":1,"remov":1,"receiv":2,"number":1,"handl":1,"inform":1,"differ":1,"deliv":1,"exampl":1,"will":2,"duplic":1,"pointer":1,"ad":2,"method":2,"special":1,"chang":1,"bedeliv":1,"filter":4},"maxFreq":13,"totalTerms":82},"loc":0}