{"id":10135,"className":"javax.management.MBeanServer","methodName":"registerMBean","signature":"\u003cjavax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)\u003e","javadoc":"/** \n * \u003cp\u003eRegisters a pre-existing object as an MBean with the MBean server. If the object name given is null, the MBean must provide its own name by implementing the  {@link javax.management.MBeanRegistration MBeanRegistration} interfaceand returning the name from the  {@link MBeanRegistration#preRegister preRegister} method.\u003cp\u003eIf this method successfully registers an MBean, a notification is sent as described \u003ca href\u003d\"#notif\"\u003eabove\u003c/a\u003e.\u003c/p\u003e\n * @param object The  MBean to be registered as an MBean.\n * @param name The object name of the MBean. May be null.\n * @return An \u003cCODE\u003eObjectInstance\u003c/CODE\u003e, containing the\u003cCODE\u003eObjectName\u003c/CODE\u003e and the Java class name of the newly registered MBean.  If the contained \u003ccode\u003eObjectName\u003c/code\u003e is \u003ccode\u003en\u003c/code\u003e, the contained Java class name is \u003ccode\u003e {@link #getMBeanInfo getMBeanInfo(n)}.getClassName()\u003c/code\u003e.\n * @exception InstanceAlreadyExistsException The MBean is alreadyunder the control of the MBean server.\n * @exception MBeanRegistrationException The\u003cCODE\u003epreRegister\u003c/CODE\u003e (\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean has thrown an exception. The MBean will not be registered.\n * @exception RuntimeMBeanException If the \u003cCODE\u003epostRegister\u003c/CODE\u003e(\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean throws a \u003cCODE\u003eRuntimeException\u003c/CODE\u003e, the \u003cCODE\u003eregisterMBean\u003c/CODE\u003e method will throw a \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e, although the MBean registration succeeded. In such a case, the MBean will be actually registered even though the \u003cCODE\u003eregisterMBean\u003c/CODE\u003e method threw an exception.  Note that \u003cCODE\u003eRuntimeMBeanException\u003c/CODE\u003e can also be thrown by \u003cCODE\u003epreRegister\u003c/CODE\u003e, in which case the MBean will not be registered.\n * @exception RuntimeErrorException If the \u003cCODE\u003epostRegister\u003c/CODE\u003e(\u003cCODE\u003eMBeanRegistration\u003c/CODE\u003e interface) method of the MBean throws an \u003cCODE\u003eError\u003c/CODE\u003e, the \u003cCODE\u003eregisterMBean\u003c/CODE\u003e method will throw a \u003cCODE\u003eRuntimeErrorException\u003c/CODE\u003e, although the MBean registration succeeded. In such a case, the MBean will be actually registered even though the \u003cCODE\u003eregisterMBean\u003c/CODE\u003e method threw an exception.  Note that \u003cCODE\u003eRuntimeErrorException\u003c/CODE\u003e can also be thrown by \u003cCODE\u003epreRegister\u003c/CODE\u003e, in which case the MBean will not be registered.\n * @exception NotCompliantMBeanException This object is not a JMXcompliant MBean\n * @exception RuntimeOperationsException Wraps a\u003cCODE\u003ejava.lang.IllegalArgumentException\u003c/CODE\u003e: The object passed in parameter is null or no object name is specified.\n * @see javax.management.MBeanRegistration\n */\n","tf":{"freq":{"mbean":40,"must":1,"though":2,"specifi":1,"info":2,"notif":2,"sent":1,"although":2,"given":1,"oper":1,"javax":2,"xcompliant":1,"href":1,"argument":1,"control":1,"wrap":1,"except":21,"thrown":3,"succeed":2,"interfaceand":1,"runtim":8,"describ":1,"provid":1,"instanc":2,"newli":1,"threw":2,"contain":3,"will":7,"compliant":1,"even":2,"link":3,"object":10,"alreadyund":1,"lang":1,"name":11,"regist":21,"exist":2,"note":2,"may":1,"post":2,"error":4,"manag":2,"paramet":1,"registr":10,"illeg":1,"pass":1,"pre":6,"actual":2,"method":9,"server":2,"java":3,"alreadi":1,"success":1,"also":2},"maxFreq":40,"totalTerms":214},"loc":0}