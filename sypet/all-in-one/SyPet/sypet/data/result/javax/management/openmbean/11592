{"id":11592,"className":"javax.management.openmbean.TabularType","methodName":"TabularType","signature":"\u003cjavax.management.openmbean.TabularType: void TabularType(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String[])\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eTabularType\u003c/code\u003e instance, checking for the validity of the given parameters. The validity constraints are described below for each parameter. \u003cp\u003e The Java class name of tabular data values this tabular type represents (ie the class name returned by the  {@link OpenType#getClassName() getClassName} method)is set to the string value returned by \u003ccode\u003eTabularData.class.getName()\u003c/code\u003e. \u003cp\u003e\n * @param typeName  The name given to the tabular type this instance represents; cannot be a null or empty string.\u003cbr\u003e\u0026nbsp;\n * @param description  The human readable description of the tabular type this instance represents;cannot be a null or empty string. \u003cbr\u003e\u0026nbsp;\n * @param rowType  The type of the row elements of tabular data values described by this tabular type instance;cannot be null. \u003cbr\u003e\u0026nbsp;\n * @param indexNames  The names of the items the values of which are used to uniquely index each row element in thetabular data values described by this tabular type instance; cannot be null or empty. Each element should be an item name defined in \u003cvar\u003erowType\u003c/var\u003e (no null or empty string allowed). It is important to note that the \u003cb\u003eorder\u003c/b\u003e of the item names in \u003cvar\u003eindexNames\u003c/var\u003e is used by the methods  {@link TabularData#get(java.lang.Object[]) \u003ccode\u003eget\u003c/code\u003e} and{@link TabularData#remove(java.lang.Object[]) \u003ccode\u003eremove\u003c/code\u003e} of class\u003ccode\u003eTabularData\u003c/code\u003e to match their array of values parameter to items. \u003cbr\u003e\u0026nbsp;\n * @throws IllegalArgumentException  if \u003cvar\u003erowType\u003c/var\u003e is null,or \u003cvar\u003eindexNames\u003c/var\u003e is a null or empty array, or an element in \u003cvar\u003eindexNames\u003c/var\u003e is a null or empty string, or \u003cvar\u003etypeName\u003c/var\u003e or \u003cvar\u003edescription\u003c/var\u003e is a null or empty string. \u003cbr\u003e\u0026nbsp;\n * @throws OpenDataException  if an element\u0027s value of \u003cvar\u003eindexNames\u003c/var\u003eis not an item name defined in \u003cvar\u003erowType\u003c/var\u003e.\n */\n","tf":{"freq":{"defin":2,"valid":2,"allow":1,"var":18,"link":3,"readabl":1,"data":8,"use":2,"constraint":1,"object":2,"type":15,"lang":2,"tabular":13,"open":2,"uniqu":1,"order":1,"given":2,"name":17,"valu":7,"note":1,"nbsp":5,"argument":1,"element":5,"except":2,"index":6,"check":1,"repres":3,"remov":2,"paramet":3,"descript":3,"describ":3,"illeg":1,"thetabular":1,"row":6,"instanc":5,"empti":7,"human":1,"item":5,"string":6,"java":3,"method":2,"match":1,"construct":1,"array":2},"maxFreq":18,"totalTerms":176},"loc":40}