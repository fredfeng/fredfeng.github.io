{"id":10429,"className":"javax.management.MBeanServerBuilder","methodName":"newMBeanServer","signature":"\u003cjavax.management.MBeanServerBuilder: javax.management.MBeanServer newMBeanServer(java.lang.String,javax.management.MBeanServer,javax.management.MBeanServerDelegate)\u003e","javadoc":"/** \n * This method creates a new MBeanServer implementation object. When creating a new MBeanServer the {@link javax.management.MBeanServerFactory} first calls\u003ccode\u003enewMBeanServerDelegate()\u003c/code\u003e in order to obtain a new {@link javax.management.MBeanServerDelegate} for the newMBeanServer. Then it calls \u003ccode\u003enewMBeanServer(defaultDomain,outer,delegate)\u003c/code\u003e passing the \u003cvar\u003edelegate\u003c/var\u003e that should be used by the MBeanServer implementation. \u003cp\u003eNote that the passed \u003cvar\u003edelegate\u003c/var\u003e might not be directly the MBeanServerDelegate that was returned by this implementation. It could be, for instance, a new object wrapping the previously returned delegate. \u003cp\u003eThe \u003cvar\u003eouter\u003c/var\u003e parameter is a pointer to the MBeanServer that should be passed to the  {@link javax.management.MBeanRegistration}interface when registering MBeans inside the MBeanServer. If \u003cvar\u003eouter\u003c/var\u003e is \u003ccode\u003enull\u003c/code\u003e, then the MBeanServer implementation must use its own \u003ccode\u003ethis\u003c/code\u003e reference when invoking the  {@link javax.management.MBeanRegistration} interface.\u003cp\u003eThis makes it possible for a MBeanServer implementation to wrap another MBeanServer implementation, in order to implement, e.g, security checks, or to prevent access to the actual MBeanServer implementation by returning a pointer to a wrapping object.\n * @param defaultDomain Default domain of the new MBeanServer.\n * @param outer A pointer to the MBeanServer object that must bepassed to the MBeans when invoking their {@link javax.management.MBeanRegistration} interface.\n * @param delegate A pointer to the MBeanServerDelegate associatedwith the new MBeanServer. The new MBeanServer must register this MBean in its MBean repository.\n * @return A new private implementation of an MBeanServer.\n */\n","tf":{"freq":{"call":2,"mbean":29,"might":1,"var":8,"link":5,"possibl":1,"use":2,"associatedwith":1,"anoth":1,"object":4,"must":3,"deleg":9,"order":2,"refer":1,"factori":1,"javax":5,"domain":3,"regist":2,"note":1,"direct":1,"wrap":3,"repositori":1,"check":1,"previous":1,"creat":2,"invok":2,"manag":5,"paramet":1,"bepass":1,"prevent":1,"access":1,"registr":3,"pass":3,"instanc":1,"obtain":1,"secur":1,"outer":4,"actual":1,"pointer":4,"insid":1,"method":1,"server":22,"make":1,"first":1},"maxFreq":29,"totalTerms":145},"loc":7}