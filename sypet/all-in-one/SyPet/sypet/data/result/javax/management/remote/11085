{"id":11085,"className":"javax.management.remote.JMXServiceURL","methodName":"JMXServiceURL","signature":"\u003cjavax.management.remote.JMXServiceURL: void JMXServiceURL(java.lang.String,java.lang.String,int,java.lang.String)\u003e","javadoc":"/** \n * \u003cp\u003eConstructs a \u003ccode\u003eJMXServiceURL\u003c/code\u003e with the given parts.\n * @param protocol the protocol part of the URL.  If null, defaultsto \u003ccode\u003ejmxmp\u003c/code\u003e.\n * @param host the host part of the URL.  If null, defaults to thelocal host name, as determined by \u003ccode\u003eInetAddress.getLocalHost().getHostName()\u003c/code\u003e.  If it is a numeric IPv6 address, it can optionally be enclosed in square brackets \u003ccode\u003e[]\u003c/code\u003e.\n * @param port the port part of the URL.\n * @param urlPath the URL path part of the URL.  If null, defaults tothe empty string.\n * @exception MalformedURLException if one of the parts issyntactically incorrect, or if \u003ccode\u003ehost\u003c/code\u003e is null and it is not possible to find the local host name, or if \u003ccode\u003eport\u003c/code\u003e is negative.\n */\n","tf":{"freq":{"port":3,"squar":1,"theloc":1,"ipv":1,"one":1,"servic":1,"lexcept":1,"possibl":1,"toth":1,"defaultsto":1,"bracket":1,"given":1,"name":3,"jmxmp":1,"path":2,"incorrect":1,"find":1,"option":1,"except":1,"protocol":2,"host":7,"numer":1,"url":1,"empti":1,"xservic":1,"malform":1,"address":2,"inet":1,"string":1,"determin":1,"enclos":1,"negat":1,"construct":1,"local":2,"part":6,"issyntact":1},"maxFreq":7,"totalTerms":55},"loc":61}