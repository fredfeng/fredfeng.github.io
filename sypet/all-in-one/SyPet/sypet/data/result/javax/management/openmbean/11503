{"id":11503,"className":"javax.management.openmbean.OpenMBeanParameterInfoSupport","methodName":"OpenMBeanParameterInfoSupport","signature":"\u003cjavax.management.openmbean.OpenMBeanParameterInfoSupport: void OpenMBeanParameterInfoSupport(java.lang.String,java.lang.String,javax.management.openmbean.OpenType,javax.management.Descriptor)\u003e","javadoc":"/** \n * \u003cp\u003eConstructs an  {@code OpenMBeanParameterInfoSupport} instance,which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified {@code name},  {@code openType},  {@code description}, and  {@code descriptor}.\u003c/p\u003e \u003cp\u003eThe  {@code descriptor} can contain entries that will definethe values returned by certain methods of this class, as explained in the  {@link \u003ca href\u003d\"package-summary.html#constraints\"\u003e\n     * package description\u003c/a\u003e}.\n * @param name  cannot be a null or empty string.\n * @param description  cannot be a null or empty string.\n * @param openType  cannot be null.\n * @param descriptor The descriptor for the parameter.  This may be nullwhich is equivalent to an empty descriptor.\n * @throws IllegalArgumentException if {@code name} or {@code description} are null or empty string, or {@code openType} isnull, or the descriptor entries are invalid as described in the {@link \u003ca href\u003d\"package-summary.html#constraints\"\u003epackage\n     * description\u003c/a\u003e}.\n * @since 1.6\n */\n","tf":{"freq":{"mbean":3,"descriptor":6,"link":2,"one":1,"constraint":2,"use":1,"type":3,"info":2,"specifi":1,"open":6,"invalid":1,"equival":1,"nullwhich":1,"oper":1,"isnul":1,"name":3,"valu":1,"href":2,"constructor":1,"argument":1,"except":1,"may":1,"support":2,"entri":2,"paramet":4,"descript":5,"describ":2,"illeg":1,"empti":4,"instanc":1,"summari":2,"defineth":1,"string":3,"contain":1,"will":1,"html":2,"method":1,"construct":1,"certain":1,"explain":1},"maxFreq":6,"totalTerms":77},"loc":27}