{"id":11261,"className":"javax.management.remote.rmi.RMIServerImpl","methodName":"newClient","signature":"\u003cjavax.management.remote.rmi.RMIServerImpl: javax.management.remote.rmi.RMIConnection newClient(java.lang.Object)\u003e","javadoc":"/** \n * \u003cp\u003eCreates a new client connection.  This method calls  {@link #makeClient makeClient} and adds the returned client connectionobject to an internal list.  When this \u003ccode\u003eRMIServerImpl\u003c/code\u003e is shut down via its  {@link #close()} method, the {@link RMIConnection#close() close()}method of each object remaining in the list is called.\u003c/p\u003e \u003cp\u003eThe fact that a client connection object is in this internal list does not prevent it from being garbage collected.\u003c/p\u003e\n * @param credentials this object specifies the user-definedcredentials to be passed in to the server in order to authenticate the caller before creating the \u003ccode\u003eRMIConnection\u003c/code\u003e.  Can be null.\n * @return the newly-created \u003ccode\u003eRMIConnection\u003c/code\u003e.  This isusually the object created by \u003ccode\u003emakeClient\u003c/code\u003e, though an implementation may choose to wrap that object in another object implementing \u003ccode\u003eRMIConnection\u003c/code\u003e.\n * @exception IOException if the new client object cannot becreated or exported.\n * @exception SecurityException if the given credentials do not allowthe server to authenticate the user successfully.\n * @exception IllegalStateException if {@link #getMBeanServer()}is null.\n */\n","tf":{"freq":{"mbean":1,"definedcredenti":1,"via":1,"client":8,"garbag":1,"isusu":1,"though":1,"close":3,"specifi":1,"becreat":1,"given":1,"wrap":1,"except":6,"creat":4,"prevent":1,"newli":1,"make":3,"collect":1,"connectionobject":1,"caller":1,"call":2,"connect":2,"link":4,"state":1,"object":7,"anoth":1,"add":1,"authent":2,"order":1,"shut":1,"iconnect":4,"choos":1,"may":1,"export":1,"credenti":2,"impl":1,"iserv":1,"list":3,"illeg":1,"pass":1,"fact":1,"secur":1,"remain":1,"intern":2,"method":3,"server":3,"user":2,"allowth":1,"success":1},"maxFreq":8,"totalTerms":92},"loc":3}