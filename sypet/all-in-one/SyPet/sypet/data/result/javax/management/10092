{"id":10092,"className":"javax.management.StandardEmitterMBean","methodName":"StandardEmitterMBean","signature":"\u003cjavax.management.StandardEmitterMBean: void StandardEmitterMBean(T,java.lang.Class,javax.management.NotificationEmitter)\u003e","javadoc":"/** \n * \u003cp\u003eMake an MBean whose management interface is specified by {@code mbeanInterface}, with the given implementation and where notifications are handled by the given  {@code NotificationEmitter}. The resultant MBean implements the  {@code NotificationEmitter} interfaceby forwarding its methods to  {@code emitter}.  It is legal and useful for  {@code implementation} and {@code emitter} to be the same object.\u003c/p\u003e\u003cp\u003eIf  {@code emitter} is an instance of {@code NotificationBroadcasterSupport} then the MBean\u0027s {@link #sendNotification sendNotification} method will call {@code emitter.}{@link NotificationBroadcasterSupport#sendNotification sendNotification}.\u003c/p\u003e \u003cp\u003eThe array returned by  {@link #getNotificationInfo()} on thenew MBean is a copy of the array returned by {@code emitter.}{@link NotificationBroadcaster#getNotificationInfo getNotificationInfo()} at the time of construction.  If the arrayreturned by  {@code emitter.getNotificationInfo()} later changes,that will have no effect on this object\u0027s {@code getNotificationInfo()}.\u003c/p\u003e\n * @param implementation the implementation of the MBean interface.\n * @param mbeanInterface a Standard MBean interface.\n * @param emitter the object that will handle notifications.\n * @throws IllegalArgumentException if the {@code mbeanInterface}does not follow JMX design patterns for Management Interfaces, or if the given  {@code implementation} does not implement thespecified interface, or if  {@code emitter} is null.\n */\n","tf":{"freq":{"interfacebi":1,"legal":1,"result":1,"mbean":10,"call":1,"thenew":1,"send":4,"broadcast":3,"link":4,"use":1,"object":3,"copi":1,"info":5,"specifi":1,"notif":16,"time":1,"given":3,"forward":1,"thespecifi":1,"follow":1,"argument":1,"except":1,"emitt":11,"support":2,"standard":2,"whose":1,"later":1,"manag":2,"arrayreturn":1,"illeg":1,"handl":2,"instanc":1,"pattern":1,"effect":1,"will":3,"method":2,"chang":1,"construct":1,"make":1,"design":1,"array":2},"maxFreq":16,"totalTerms":99},"loc":7}