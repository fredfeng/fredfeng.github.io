{"id":11185,"className":"javax.management.remote.rmi.RMIConnection","methodName":"removeNotificationListener","signature":"\u003cjavax.management.remote.rmi.RMIConnection: void removeNotificationListener(javax.management.ObjectName,javax.management.ObjectName,java.rmi.MarshalledObject,java.rmi.MarshalledObject,javax.security.auth.Subject)\u003e","javadoc":"/** \n * Handles the method  {@link javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,ObjectName,NotificationFilter,Object)}.  The \u003ccode\u003eNotificationFilter\u003c/code\u003e parameter is wrapped in a \u003ccode\u003eMarshalledObject\u003c/code\u003e.  The \u003ccode\u003eObject\u003c/code\u003e parameter is also wrapped in a \u003ccode\u003eMarshalledObject\u003c/code\u003e.\n * @param name The name of the MBean on which the listener shouldbe removed.\n * @param listener A listener that was previously added to thisMBean.\n * @param filter The filter that was specified when the listenerwas added, encapsulated into a \u003ccode\u003eMarshalledObject\u003c/code\u003e.\n * @param handback The handback that was specified when thelistener was added, encapsulated into a \u003ccode\u003eMarshalledObject\u003c/code\u003e.\n * @param delegationSubject The \u003ccode\u003eSubject\u003c/code\u003e containing thedelegation principals or \u003ccode\u003enull\u003c/code\u003e if the authentication principal is used instead.\n * @throws InstanceNotFoundException The MBean name provideddoes not match any of the registered MBeans.\n * @throws ListenerNotFoundException The listener is notregistered in the MBean, or it is not registered with the given filter and handback.\n * @throws SecurityException if the client, or the delegated Subjectif any, does not have permission to perform this operation.\n * @throws IOException if a general communication exception occurred.\n * @throws RuntimeOperationsException Wraps an {@link IllegalArgumentException} when \u003ccode\u003ename\u003c/code\u003e or\u003ccode\u003elistener\u003c/code\u003e is null.\n * @see #addNotificationListener\n */\n","tf":{"freq":{"mbean":6,"client":1,"perform":1,"specifi":2,"notif":5,"given":1,"oper":2,"javax":1,"permiss":1,"thelisten":1,"marshal":4,"argument":1,"notregist":1,"wrap":3,"except":7,"runtim":1,"remov":3,"instanc":1,"shouldb":1,"contain":1,"match":1,"filter":5,"princip":2,"connect":1,"subject":2,"link":2,"use":1,"object":8,"add":1,"authent":1,"deleg":2,"subjectif":1,"name":6,"handback":3,"regist":2,"listen":9,"previous":1,"manag":1,"paramet":2,"illeg":1,"general":1,"provideddo":1,"handl":1,"secur":1,"communic":1,"encapsul":2,"instead":1,"ad":3,"method":1,"server":1,"listenerwa":1,"also":1,"thedeleg":1,"occur":1,"found":2},"maxFreq":9,"totalTerms":115},"loc":0}