{"id":11169,"className":"javax.management.remote.rmi.RMIConnection","methodName":"getObjectInstance","signature":"\u003cjavax.management.remote.rmi.RMIConnection: javax.management.ObjectInstance getObjectInstance(javax.management.ObjectName,javax.security.auth.Subject)\u003e","javadoc":"/** \n * Handles the method {@link javax.management.MBeanServerConnection#getObjectInstance(ObjectName)}.\n * @param name The object name of the MBean.\n * @param delegationSubject The \u003ccode\u003eSubject\u003c/code\u003e containing thedelegation principals or \u003ccode\u003enull\u003c/code\u003e if the authentication principal is used instead.\n * @return The \u003ccode\u003eObjectInstance\u003c/code\u003e associated with the MBeanspecified by \u003cvar\u003ename\u003c/var\u003e.  The contained \u003ccode\u003eObjectName\u003c/code\u003e is \u003ccode\u003ename\u003c/code\u003e and the contained class name is \u003ccode\u003e {@link #getMBeanInfo getMBeanInfo(name)}.getClassName()\u003c/code\u003e.\n * @throws InstanceNotFoundException The MBean specified is notregistered in the MBean server.\n * @throws RuntimeOperationsException Wraps a\u003ccode\u003ejava.lang.IllegalArgumentException\u003c/code\u003e: The object name in parameter is null.\n * @throws SecurityException if the client, or the delegated Subjectif any, does not have permission to perform this operation.\n * @throws IOException if a general communication exception occurred.\n */\n","tf":{"freq":{"mbean":6,"client":1,"connect":1,"subject":2,"var":2,"link":2,"use":1,"perform":1,"object":7,"lang":1,"specifi":1,"info":2,"authent":1,"subjectif":1,"deleg":2,"oper":2,"associ":1,"javax":1,"name":10,"permiss":1,"argument":1,"notregist":1,"wrap":1,"except":6,"mbeanspecifi":1,"manag":1,"runtim":1,"paramet":1,"illeg":1,"general":1,"handl":1,"instanc":4,"secur":1,"communic":1,"contain":3,"instead":1,"java":1,"server":2,"method":1,"thedeleg":1,"occur":1,"princip":2,"found":1},"maxFreq":10,"totalTerms":81},"loc":0}