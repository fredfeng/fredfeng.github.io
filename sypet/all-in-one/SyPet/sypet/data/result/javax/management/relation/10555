{"id":10555,"className":"javax.management.relation.RoleInfo","methodName":"RoleInfo","signature":"\u003cjavax.management.relation.RoleInfo: void RoleInfo(java.lang.String,java.lang.String,boolean,boolean)\u003e","javadoc":"/** \n * Constructor.\n * @param roleName  name of the role\n * @param mbeanClassName  name of the class of MBean(s) expected tobe referenced in corresponding role.  If an MBean \u003cem\u003eM\u003c/em\u003e is in this role, then the MBean server must return true for {@link MBeanServer#isInstanceOf isInstanceOf(M, mbeanClassName)}.\n * @param read  flag to indicate if the corresponding rolecan be read\n * @param write  flag to indicate if the corresponding rolecan be set \u003cP\u003eMinimum and maximum degrees defaulted to 1. \u003cP\u003eDescription of role defaulted to null.\n * @exception IllegalArgumentException  if null parameter\n * @exception ClassNotFoundException As of JMX 1.2, this exceptioncan no longer be thrown.  It is retained in the declaration of this class for compatibility with existing code.\n * @exception NotCompliantMBeanException As of JMX 1.2, thisexception can no longer be thrown.  It is retained in the declaration of this class for compatibility with existing code.\n */\n","tf":{"freq":{"mbean":7,"minimum":1,"correspond":3,"link":1,"must":1,"info":1,"referenc":1,"expect":1,"declar":2,"indic":2,"rolecan":2,"exceptioncan":1,"name":5,"write":1,"longer":2,"role":6,"read":2,"tobe":1,"exist":2,"constructor":1,"argument":1,"thrown":2,"except":6,"paramet":1,"descript":1,"true":1,"illeg":1,"instanc":2,"degre":1,"flag":2,"thisexcept":1,"maximum":1,"compliant":1,"retain":2,"server":2,"compat":2,"found":1},"maxFreq":7,"totalTerms":71},"loc":17}