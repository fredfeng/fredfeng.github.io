{"id":27773,"className":"javax.smartcardio.CommandAPDU","methodName":"CommandAPDU","signature":"\u003cjavax.smartcardio.CommandAPDU: void CommandAPDU(int,int,int,int,byte[],int,int,int)\u003e","javadoc":"/** \n * Constructs a CommandAPDU from the four header bytes, command data, and expected response data length. This is case 4 in ISO 7816, command data and Le present. The value Nc is taken as \u003ccode\u003edataLength\u003c/code\u003e. If Ne or Nc are zero, the APDU is encoded as case 1, 2, or 3 per ISO 7816. \u003cp\u003eNote that the data bytes are copied to protect against subsequent modification.\n * @param cla the class byte CLA\n * @param ins the instruction byte INS\n * @param p1 the parameter byte P1\n * @param p2 the parameter byte P2\n * @param data the byte array containing the data bytes of the command body\n * @param dataOffset the offset in the byte array at which the databytes of the command body begin\n * @param dataLength the number of the data bytes in the command body\n * @param ne the maximum number of expected data bytes in a response APDU\n * @throws NullPointerException if data is null and dataLength is not 0\n * @throws IllegalArgumentException if dataOffset or dataLength arenegative or if dataOffset + dataLength are greater than data.length, or if ne is negative or greater than 65536, or if dataLength is greater than 65535\n */\n","tf":{"freq":{"greater":3,"data":19,"zero":1,"copi":1,"expect":2,"cla":1,"instruct":1,"length":8,"command":7,"taken":1,"valu":1,"four":1,"offset":4,"subsequ":1,"note":1,"argument":1,"except":2,"databyt":1,"respons":2,"paramet":2,"areneg":1,"number":2,"illeg":1,"header":1,"begin":1,"present":1,"encod":1,"bodi":3,"per":1,"maximum":1,"contain":1,"pointer":1,"negat":1,"construct":1,"modif":1,"array":2},"maxFreq":19,"totalTerms":80},"loc":92}