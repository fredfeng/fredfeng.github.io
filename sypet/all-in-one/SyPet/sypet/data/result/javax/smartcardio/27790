{"id":27790,"className":"javax.smartcardio.CardChannel","methodName":"transmit","signature":"\u003cjavax.smartcardio.CardChannel: javax.smartcardio.ResponseAPDU transmit(javax.smartcardio.CommandAPDU)\u003e","javadoc":"/** \n * Transmits the specified command APDU to the Smart Card and returns the response APDU. \u003cp\u003eThe CLA byte of the command APDU is automatically adjusted to match the channel number of this CardChannel. \u003cp\u003eNote that this method cannot be used to transmit \u003ccode\u003eMANAGE CHANNEL\u003c/code\u003e APDUs. Logical channels should be managed using the  {@linkplain Card#openLogicalChannel} and {@linkplain CardChannel#close CardChannel.close()} methods.\u003cp\u003eImplementations should transparently handle artifacts of the transmission protocol. For example, when using the T\u003d0 protocol, the following processing should occur as described in ISO/IEC 7816-4: \u003cul\u003e \u003cli\u003e\u003cp\u003eif the response APDU has an SW1 of \u003ccode\u003e61\u003c/code\u003e, the implementation should issue a \u003ccode\u003eGET RESPONSE\u003c/code\u003e command using \u003ccode\u003eSW2\u003c/code\u003e as the \u003ccode\u003eLe\u003c/code\u003efield. This process is repeated as long as an SW1 of \u003ccode\u003e61\u003c/code\u003e is received. The response body of these exchanges is concatenated to form the final response body. \u003cli\u003e\u003cp\u003eif the response APDU is \u003ccode\u003e6C XX\u003c/code\u003e, the implementation should reissue the command using \u003ccode\u003eXX\u003c/code\u003e as the \u003ccode\u003eLe\u003c/code\u003e field. \u003c/ul\u003e \u003cp\u003eThe ResponseAPDU returned by this method is the result after this processing has been performed.\n * @param command the command APDU\n * @return the response APDU received from the card\n * @throws IllegalStateException if this channel has been{@linkplain #close closed} or if the corresponding Card has been{@linkplain Card#disconnect disconnected}.\n * @throws IllegalArgumentException if the APDU encodes a\u003ccode\u003eMANAGE CHANNEL\u003c/code\u003e command\n * @throws NullPointerException if command is null\n * @throws CardException if the card operation failed\n */\n","tf":{"freq":{"result":1,"linkplain":4,"correspond":1,"state":1,"reissu":1,"use":5,"perform":1,"repeat":1,"issu":1,"automat":1,"transmiss":1,"specifi":1,"close":4,"open":1,"transpar":1,"fail":1,"oper":1,"adjust":1,"command":8,"card":10,"note":1,"follow":1,"argument":1,"transmit":3,"except":4,"protocol":2,"form":1,"respons":7,"manag":1,"concaten":1,"describ":1,"receiv":2,"number":1,"illeg":2,"exchang":1,"logic":2,"handl":1,"field":2,"process":3,"encod":1,"bodi":2,"artifact":1,"dus":1,"exampl":1,"pointer":1,"disconnect":2,"method":3,"match":1,"channel":7,"smart":1,"occur":1},"maxFreq":10,"totalTerms":105},"loc":0}