{"id":27761,"className":"javax.smartcardio.Card","methodName":"beginExclusive","signature":"\u003cjavax.smartcardio.Card: void beginExclusive()\u003e","javadoc":"/** \n * Requests exclusive access to this card. \u003cp\u003eOnce a thread has invoked \u003ccode\u003ebeginExclusive\u003c/code\u003e, only this thread is allowed to communicate with this card until it calls \u003ccode\u003eendExclusive\u003c/code\u003e. Other threads attempting communication will receive a CardException. \u003cp\u003eApplications have to ensure that exclusive access is correctly released. This can be achieved by executing the \u003ccode\u003ebeginExclusive()\u003c/code\u003e and \u003ccode\u003eendExclusive\u003c/code\u003e calls in a \u003ccode\u003etry ... finally\u003c/code\u003e block.\n * @throws SecurityException if a SecurityManager exists and thecaller does not have the required {@linkplain CardPermission permission}\n * @throws CardException if exclusive access has already been setor if exclusive access could not be established\n * @throws IllegalStateException if this card object has been disposed ofvia the  {@linkplain #disconnect disconnect()} method\n */\n","tf":{"freq":{"attempt":1,"linkplain":2,"call":2,"allow":1,"state":1,"block":1,"object":1,"applic":1,"ensur":1,"setor":1,"requir":1,"correct":1,"releas":1,"thread":3,"request":1,"permiss":2,"card":6,"exclus":9,"exist":1,"end":2,"except":4,"thecal":1,"invok":1,"manag":1,"establish":1,"receiv":1,"access":4,"illeg":1,"begin":3,"achiev":1,"secur":2,"communic":2,"ofvia":1,"will":1,"dispos":1,"method":1,"disconnect":2,"alreadi":1,"execut":1},"maxFreq":9,"totalTerms":69},"loc":0}