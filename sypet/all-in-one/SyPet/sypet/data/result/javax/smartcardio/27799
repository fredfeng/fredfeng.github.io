{"id":27799,"className":"javax.smartcardio.TerminalFactory","methodName":"getInstance","signature":"\u003cjavax.smartcardio.TerminalFactory: javax.smartcardio.TerminalFactory getInstance(java.lang.String,java.lang.Object,java.security.Provider)\u003e","javadoc":"/** \n * Returns a TerminalFactory of the specified type that is initialized with the specified parameters. \u003cp\u003e A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the specified provider object is returned. Note that the specified provider object does not have to be registered in the provider list. \u003cp\u003eThe \u003ccode\u003eTerminalFactory\u003c/code\u003e is initialized with the specified parameters Object. The type of parameters needed may vary between different types of \u003ccode\u003eTerminalFactory\u003c/code\u003es.\n * @param type the type of the requested TerminalFactory\n * @param params the parameters to pass to the TerminalFactorySpiimplementation, or null if no parameters are needed\n * @param provider the provider\n * @return a TerminalFactory of the specified type\n * @throws NullPointerException if type is null\n * @throws IllegalArgumentException if provider is null\n * @throws NoSuchAlgorithmException if a TerminalFactorySpi implementationof the specified type is not available from the specified Provider\n */\n","tf":{"freq":{"need":2,"object":4,"type":8,"algorithm":1,"specifi":8,"factori":9,"spi":2,"request":1,"regist":1,"initi":2,"spiimplement":1,"note":1,"argument":1,"may":1,"except":3,"implementationof":1,"paramet":5,"avail":1,"list":1,"provid":7,"illeg":1,"instanc":1,"pass":1,"differ":1,"termin":9,"encapsul":1,"pointer":1,"vari":1},"maxFreq":9,"totalTerms":76},"loc":6}