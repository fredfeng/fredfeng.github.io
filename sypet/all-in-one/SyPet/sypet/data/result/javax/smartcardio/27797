{"id":27797,"className":"javax.smartcardio.TerminalFactory","methodName":"getInstance","signature":"\u003cjavax.smartcardio.TerminalFactory: javax.smartcardio.TerminalFactory getInstance(java.lang.String,java.lang.Object)\u003e","javadoc":"/** \n * Returns a TerminalFactory of the specified type that is initialized with the specified parameters. \u003cp\u003e This method traverses the list of registered security Providers, starting with the most preferred Provider. A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the first Provider that supports the specified type is returned. \u003cp\u003e Note that the list of registered providers may be retrieved via the  {@linkplain Security#getProviders() Security.getProviders()} method.\u003cp\u003eThe \u003ccode\u003eTerminalFactory\u003c/code\u003e is initialized with the specified parameters Object. The type of parameters needed may vary between different types of \u003ccode\u003eTerminalFactory\u003c/code\u003es.\n * @param type the type of the requested TerminalFactory\n * @param params the parameters to pass to the TerminalFactorySpiimplementation, or null if no parameters are needed\n * @return a TerminalFactory of the specified type\n * @throws NullPointerException if type is null\n * @throws NoSuchAlgorithmException if no Provider supports aTerminalFactorySpi of the specified type\n */\n","tf":{"freq":{"need":2,"linkplain":1,"via":1,"object":2,"type":9,"algorithm":1,"specifi":6,"factori":9,"request":1,"spi":2,"regist":2,"initi":2,"spiimplement":1,"note":1,"travers":1,"except":2,"may":2,"support":2,"paramet":5,"list":2,"provid":7,"pass":1,"instanc":1,"differ":1,"termin":9,"secur":3,"start":1,"retriev":1,"encapsul":1,"pointer":1,"method":2,"prefer":1,"first":1,"vari":1},"maxFreq":9,"totalTerms":85},"loc":6}