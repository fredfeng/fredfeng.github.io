{"id":27751,"className":"javax.smartcardio.CardTerminals","methodName":"waitForChange","signature":"\u003cjavax.smartcardio.CardTerminals: boolean waitForChange(long)\u003e","javadoc":"/** \n * Waits for card insertion or removal in any of the terminals of this object or until the timeout expires. \u003cp\u003eThis method examines each CardTerminal of this object. If a card was inserted into or removed from a CardTerminal since the previous call to \u003ccode\u003ewaitForChange()\u003c/code\u003e, it returns immediately. Otherwise, or if this is the first call to \u003ccode\u003ewaitForChange()\u003c/code\u003e on this object, it blocks until a card is inserted into or removed from a CardTerminal. \u003cp\u003eIf \u003ccode\u003etimeout\u003c/code\u003e is greater than 0, the method returns after \u003ccode\u003etimeout\u003c/code\u003e milliseconds even if there is no change in state. In that case, this method returns \u003ccode\u003efalse\u003c/code\u003e; otherwise it returns \u003ccode\u003etrue\u003c/code\u003e. \u003cp\u003eThis method is often used in a loop in combination with {@link #list(CardTerminals.State) list(State.CARD_INSERTION)}, for example: \u003cpre\u003e TerminalFactory factory \u003d ...; CardTerminals terminals \u003d factory.terminals(); while (true) { for (CardTerminal terminal : terminals.list(CARD_INSERTION)) { // examine Card in terminal, return if it matches } terminals.waitForChange(); }\u003c/pre\u003e\n * @param timeout if positive, block for up to \u003ccode\u003etimeout\u003c/code\u003emilliseconds; if zero, block indefinitely; must not be negative\n * @return false if the method returns due to an expired timeout,true otherwise.\n * @throws IllegalStateException if this \u003ccode\u003eCardTerminals\u003c/code\u003eobject does not contain any terminals\n * @throws IllegalArgumentException if timeout is negative\n * @throws CardException if the card operation failed\n */\n","tf":{"freq":{"otherwis":3,"fals":2,"call":2,"greater":1,"link":1,"state":4,"use":1,"block":3,"object":4,"wait":5,"zero":1,"must":1,"expir":2,"fail":1,"oper":1,"factori":3,"millisecond":2,"combin":1,"loop":1,"card":13,"immedi":1,"examin":2,"argument":1,"except":3,"previous":1,"remov":3,"true":3,"list":3,"illeg":2,"termin":16,"pre":2,"often":1,"contain":1,"exampl":1,"due":1,"negat":2,"indefinit":1,"method":5,"even":1,"match":1,"chang":5,"insert":3,"posit":1,"first":1,"timeout":7},"maxFreq":16,"totalTerms":120},"loc":0}