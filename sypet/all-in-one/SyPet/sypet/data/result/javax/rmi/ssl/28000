{"id":28000,"className":"javax.rmi.ssl.SslRMIClientSocketFactory","methodName":"createSocket","signature":"\u003cjavax.rmi.ssl.SslRMIClientSocketFactory: java.net.Socket createSocket(java.lang.String,int)\u003e","javadoc":"/** \n * \u003cp\u003eCreates an SSL socket.\u003c/p\u003e \u003cp\u003eIf the system property \u003ccode\u003ejavax.rmi.ssl.client.enabledCipherSuites\u003c/code\u003e is specified, this method will call  {@link SSLSocket#setEnabledCipherSuites(String[])} before returningthe socket. The value of this system property is a string that is a comma-separated list of SSL/TLS cipher suites to enable.\u003c/p\u003e \u003cp\u003eIf the system property \u003ccode\u003ejavax.rmi.ssl.client.enabledProtocols\u003c/code\u003e is specified, this method will call  {@link SSLSocket#setEnabledProtocols(String[])} before returning thesocket. The value of this system property is a string that is a comma-separated list of SSL/TLS protocol versions to enable.\u003c/p\u003e\n */\n","tf":{"freq":{"call":2,"client":2,"link":2,"ssl":2,"version":1,"specifi":2,"javax":2,"socket":3,"valu":2,"returningth":1,"lsocket":2,"comma":2,"protocol":3,"creat":2,"enabl":6,"list":2,"thesocket":1,"system":4,"separ":2,"string":4,"suit":3,"will":2,"cipher":3,"method":2,"properti":4,"rmi":2},"maxFreq":6,"totalTerms":63},"loc":48}