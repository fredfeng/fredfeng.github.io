{"id":27991,"className":"javax.rmi.ssl.SslRMIServerSocketFactory","methodName":"SslRMIServerSocketFactory","signature":"\u003cjavax.rmi.ssl.SslRMIServerSocketFactory: void SslRMIServerSocketFactory(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],boolean)\u003e","javadoc":"/** \n * \u003cp\u003eCreates a new \u003ccode\u003eSslRMIServerSocketFactory\u003c/code\u003e with the specified \u003ccode\u003eSSLContext\u003c/code\u003e and SSL socket configuration.\u003c/p\u003e\n * @param context the SSL context to be used for creating SSL sockets.If \u003ccode\u003econtext\u003c/code\u003e is null the default \u003ccode\u003eSSLSocketFactory\u003c/code\u003e or the default \u003ccode\u003eSSLServerSocketFactory\u003c/code\u003e will be used to create SSL sockets. Otherwise, the socket factory returned by \u003ccode\u003eSSLContext.getSocketFactory()\u003c/code\u003e or \u003ccode\u003eSSLContext.getServerSocketFactory()\u003c/code\u003e will be used instead.\n * @param enabledCipherSuites names of all the cipher suites toenable on SSL connections accepted by server sockets created by this factory, or \u003ccode\u003enull\u003c/code\u003e to use the cipher suites that are enabled by default\n * @param enabledProtocols names of all the protocol versions toenable on SSL connections accepted by server sockets created by this factory, or \u003ccode\u003enull\u003c/code\u003e to use the protocol versions that are enabled by default\n * @param needClientAuth \u003ccode\u003etrue\u003c/code\u003e to require clientauthentication on SSL connections accepted by server sockets created by this factory; \u003ccode\u003efalse\u003c/code\u003e to not require client authentication\n * @exception IllegalArgumentException when one or more of the ciphersuites named by the \u003ccode\u003eenabledCipherSuites\u003c/code\u003e parameter is not supported, when one or more of the protocols named by the \u003ccode\u003eenabledProtocols\u003c/code\u003e parameter is not supported or when a problem is encountered while trying to check if the supplied cipher suites and protocols to be enabled are supported.\n * @see SSLSocket#setEnabledCipherSuites\n * @see SSLSocket#setEnabledProtocols\n * @see SSLSocket#setNeedClientAuth\n * @since 1.7\n */\n","tf":{"freq":{"fals":1,"need":2,"otherwis":1,"client":3,"connect":3,"accept":3,"one":2,"lserver":1,"use":5,"ssl":2,"version":2,"specifi":1,"authent":1,"requir":2,"factori":10,"name":4,"socket":12,"argument":1,"lsocket":4,"except":2,"protocol":7,"support":3,"check":1,"creat":6,"enabl":9,"toenabl":2,"paramet":2,"ciphersuit":1,"iserv":2,"true":1,"suppli":1,"problem":1,"lcontext":3,"illeg":1,"configur":1,"encount":1,"context":3,"will":2,"instead":1,"suit":6,"server":4,"cipher":6,"clientauthent":1,"auth":2},"maxFreq":12,"totalTerms":129},"loc":42}