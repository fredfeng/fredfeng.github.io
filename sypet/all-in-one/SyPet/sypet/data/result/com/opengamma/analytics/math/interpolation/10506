{"id":10506,"className":"com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator","methodName":"getMatrixForFlattened","signature":"\u003ccom.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator: com.opengamma.analytics.math.matrix.DoubleMatrix2D getMatrixForFlattened(int[],com.opengamma.analytics.math.matrix.DoubleMatrix2D,int)\u003e","javadoc":"/** \n * Assume a tensor has been flattened to a vector as {A_{0,0}, A_{0,1},...._A_{0,m}, A_{1,0}, A_{1,1},...._A_{1,m},...,A_{n,0}, A_{n,1},...._A_{n,m}} (see  {@link flattenMatrix}) that is, the \u003cb\u003elast\u003c/b\u003e index changes most rapidly.  Given a matrix, M, that acts on the elements of one index only, i.e. $$y_{i, i_1, i_2, \\dots,i_{k-1}, i_{k+1},\\dots, i_n} \u003d  \\sum_{i_k\u003d0}^{N_k-1} M_{i,i_k}  x_{i_1, i_2, \\dots,i_k,\\dots, i_n} $$ form the larger matrix that acts on the flattened vector.  \n * @param numElements The number of elements in each index. In the example above, this would be {n,m} \n * @param m the matrix M\n * @param index Which index does the matrix act on \n * @return A (larger) matrix which acts on the flattened vector \n */\n","tf":{"freq":{"element":3,"index":5,"assum":1,"form":1,"last":1,"larger":2,"one":1,"matrix":7,"link":1,"sum":1,"number":1,"rapid":1,"dot":4,"num":1,"flatten":5,"given":1,"vector":3,"exampl":1,"chang":1,"tensor":1,"act":4},"maxFreq":7,"totalTerms":46},"loc":24}