{"id":11301,"className":"com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder","methodName":"getRoot","signature":"\u003ccom.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.DoubleFunction1D,java.lang.Double,java.lang.Double)\u003e","javadoc":"/** \n * Uses the  {@link com.opengamma.analytics.math.function.DoubleFunction1D#derivative()} method. \u003ci\u003ex\u003csub\u003e1\u003c/sub\u003e\u003c/i\u003e and \u003ci\u003ex\u003csub\u003e2\u003c/sub\u003e\u003c/i\u003e do not have to be increasing.\n * @param function The function, not null\n * @param x1 The first bound of the root, not null\n * @param x2 The second bound of the root, not null\n * @return The root\n * @throws MathException If the root is not found in 1000 attempts; if the Newton step takes the estimate for the root outside the original bounds.\n */\n","tf":{"freq":{"attempt":1,"increas":1,"analyt":1,"except":1,"sub":4,"com":1,"second":1,"root":6,"deriv":1,"link":1,"origin":1,"use":1,"function":4,"math":2,"newton":1,"estim":1,"outsid":1,"take":1,"opengamma":1,"method":1,"first":1,"step":1,"bound":3,"found":1},"maxFreq":6,"totalTerms":38},"loc":4}