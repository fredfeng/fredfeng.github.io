{"id":12546,"className":"com.opengamma.analytics.math.cube.CubeShiftFunction","methodName":"evaluate","signature":"\u003ccom.opengamma.analytics.math.cube.CubeShiftFunction: T evaluate(T,double[],double[],double[],double[],java.lang.String)\u003e","javadoc":"/** \n * Returns a new cube shifted by amounts \u003ci\u003ev\u003c/i\u003e at points \u003ci\u003e(x, y, z)\u003c/i\u003e. The name of the new cube is supplied.\n * @param cube The cube, not null\n * @param xShift An array of \u003ci\u003ex\u003c/i\u003e values of the points to be shifted, not null. If this array is empty a new cube identical to the original will be returned\n * @param yShift An array of \u003ci\u003ey\u003c/i\u003e values of the points to be shifted, not null. Must contain the same number of points as the array of \u003ci\u003ex\u003c/i\u003e values\n * @param zShift An array of \u003ci\u003ez\u003c/i\u003e values of the points to be shifted, not null. Must contain the same number of points as the array of \u003ci\u003ex\u003c/i\u003e values\n * @param shift The amounts to shift the cube at each \u003ci\u003e(x, y)\u003c/i\u003e value, not null, must contain the same number of points as the array of \u003ci\u003ex\u003c/i\u003e values\n * @param newName The name of the shifted cube\n * @return A shifted cube\n */\n","tf":{"freq":{"origin":1,"number":3,"suppli":1,"evalu":1,"must":3,"empti":1,"amount":2,"point":7,"ident":1,"contain":3,"name":3,"will":1,"valu":7,"cube":8,"shift":11,"array":7},"maxFreq":11,"totalTerms":60},"loc":0}