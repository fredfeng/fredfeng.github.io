{"id":10374,"className":"com.opengamma.analytics.math.interpolation.PSplineFitter","methodName":"solve","signature":"\u003ccom.opengamma.analytics.math.interpolation.PSplineFitter: com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults\u003cjava.lang.Double\u003e solve(java.util.List,java.util.List,java.util.List,double,double,int,int,double,int)\u003e","javadoc":"/** \n * Fits a curve to x-y data\n * @param x The independent variables \n * @param y The dependent variables \n * @param sigma The error (or tolerance) on the y variables \n * @param xa The lowest value of x \n * @param xb The highest value of x \n * @param nKnots Number of knots (note, the actual number of basis splines and thus fitted weights, equals nKnots + degree-1)\n * @param degree The degree of the basis function - 0 is piecewise constant, 1 is a sawtooth function (i.e. two straight lines joined in the middle), 2 gives three quadratic sections joined together, etc. For a large value of degree, the basis function tends to a gaussian \n * @param lambda The weight given to the penalty function \n * @param differenceOrder applies the penalty the the nth order difference in the weights, so a differenceOrder of 2 will penalise large 2nd derivatives etc\n * @return The results of the fit\n */\n","tf":{"freq":{"deriv":1,"piecewis":1,"variabl":3,"etc":2,"tend":1,"function":4,"lambda":1,"independ":1,"given":1,"three":1,"nth":1,"curv":1,"number":2,"togeth":1,"solv":1,"degre":4,"appli":1,"spline":1,"will":1,"straight":1,"result":1,"weight":3,"give":1,"highest":1,"data":1,"line":1,"fit":3,"order":3,"sigma":1,"gaussian":1,"valu":3,"middl":1,"quadrat":1,"penalis":1,"note":1,"toler":1,"penalti":2,"constant":1,"error":1,"thus":1,"depend":1,"equal":1,"join":2,"knot":3,"section":1,"two":1,"differ":3,"sawtooth":1,"larg":2,"actual":1,"basi":3,"lowest":1},"maxFreq":4,"totalTerms":79},"loc":4}