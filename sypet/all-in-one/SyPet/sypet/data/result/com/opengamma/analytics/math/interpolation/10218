{"id":10218,"className":"com.opengamma.analytics.math.interpolation.CubicSplineSolver","methodName":"solveWithSensitivity","signature":"\u003ccom.opengamma.analytics.math.interpolation.CubicSplineSolver: com.opengamma.analytics.math.matrix.DoubleMatrix2D[] solveWithSensitivity(double[],double[])\u003e","javadoc":"/** \n * One-dimensional cubic spline If (xValues length) \u003d (yValues length), Not-A-Knot endpoint conditions are used If (xValues length) + 2 \u003d (yValues length), Clamped endpoint conditions are used \n * @param xValues X values of data\n * @param yValues Y values of data\n * @return Array of  matrices: the 0-th element is Coefficient Matrix (same as the solve method above), the i-th element is \\frac{\\partial a^{i-1}_j}{\\partial yValues_k} where a_0^i,a_1^i,... are coefficients of f^i(x) \u003d a_0^i + a_1^i (x - xValues_{i}) + .... with x \\in [xValues_{i}, xValues_{i+1}]\n */\n","tf":{"freq":{"condit":2,"element":2,"sensit":1,"matrix":1,"one":1,"cubic":1,"data":2,"use":2,"partial":2,"matric":1,"solv":2,"knot":1,"endpoint":2,"frac":1,"dimension":1,"spline":1,"clamp":1,"length":4,"method":1,"valu":12,"coeffici":2,"array":1},"maxFreq":12,"totalTerms":44},"loc":0}