{"id":27590,"className":"org.ietf.jgss.GSSContext","methodName":"requestConf","signature":"\u003corg.ietf.jgss.GSSContext: void requestConf(boolean)\u003e","javadoc":"/** \n * Requests that data confidentiality be enabled for the \u003ccode\u003ewrap\u003c/code\u003e method. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to \u003ccode\u003einitSecContext\u003c/code\u003e. Not all mechanisms support confidentiality and other mechanisms might enable it even if the application doesn\u0027t request it. The application may check to see if the request was honored with the  {@link #getConfState() getConfState} method. If confidentialityis enabled, only then will the mechanism honor a request for privacy in the  {@link MessageProp#MessageProp(int,boolean) MessageProp}object that is passed in to the \u003ccode\u003ewrap\u003c/code\u003e method.\u003cp\u003e Enabling confidentiality will also automatically enable integrity.\u003cp\u003e\n * @param state a boolean value indicating whether confidentialityshould be enabled or not.\n * @see #getConfState()\n * @see #getIntegState()\n * @see #requestInteg(boolean)\n * @see MessageProp\n * @throws GSSException containing the followingmajor error codes: {@link GSSException#FAILURE GSSException.FAILURE}\n */\n","tf":{"freq":{"call":1,"might":1,"integr":1,"link":3,"state":5,"made":1,"data":1,"sexcept":3,"object":1,"conf":4,"automat":1,"whether":1,"applic":2,"prior":1,"indic":1,"side":1,"privaci":1,"followingmajor":1,"request":7,"valu":1,"initi":1,"wrap":2,"confidenti":3,"may":1,"support":1,"error":1,"check":1,"honor":2,"messag":4,"enabl":6,"done":1,"prop":4,"init":1,"confidentialityi":1,"pass":1,"sec":1,"mechan":3,"contain":1,"will":2,"context":2,"method":3,"even":1,"integ":2,"also":1,"first":1,"confidentialityshould":1},"maxFreq":7,"totalTerms":86},"loc":0}