{"id":27537,"className":"org.ietf.jgss.GSSManager","methodName":"addProviderAtFront","signature":"\u003corg.ietf.jgss.GSSManager: void addProviderAtFront(java.security.Provider,org.ietf.jgss.Oid)\u003e","javadoc":"/** \n * This method is used to indicate to the GSSManager that the application would like a particular provider to be used ahead of all others when support is desired for the given mechanism. When a value of null is used instead of an \u003ccode\u003eOid\u003c/code\u003e for the mechanism, the GSSManager must use the indicated provider ahead of all others no matter what the mechanism is. Only when the indicated provider does not support the needed mechanism should the GSSManager move on to a different provider.\u003cp\u003e Calling this method repeatedly preserves the older settings but lowers them in preference thus forming an ordered list of provider and \u003ccode\u003eOid\u003c/code\u003e pairs that grows at the top.\u003cp\u003e Calling addProviderAtFront with a null \u003ccode\u003eOid\u003c/code\u003e will remove all previous preferences that were set for this provider in the GSSManager instance. Calling addProviderAtFront with a non-null \u003ccode\u003eOid\u003c/code\u003e will remove any previous preference that was set using this mechanism and this provider together.\u003cp\u003e If the GSSManager implementation does not support an SPI with a pluggable provider architecture it should throw a GSSException with the status code GSSException.UNAVAILABLE to indicate that the operation is unavailable.\u003cp\u003e Suppose an application desired that the provider A always be checked first when any mechanism is needed, it would call:\u003cp\u003e \u003cpre\u003e GSSManager mgr \u003d GSSManager.getInstance(); // mgr may at this point have its own pre-configured list // of provider preferences. The following will prepend to // any such list: mgr.addProviderAtFront(A, null); \u003c/pre\u003e Now if it also desired that the mechanism of Oid m1 always be obtained from the provider B before the previously set A was checked, it would call:\u003cp\u003e \u003cpre\u003e mgr.addProviderAtFront(B, m1); \u003c/pre\u003e The GSSManager would then first check with B if m1 was needed. In case B did not provide support for m1, the GSSManager would continue on to check with A.  If any mechanism m2 is needed where m2 is different from m1 then the GSSManager would skip B and check with A directly.\u003cp\u003e Suppose at a later time the following call is made to the same GSSManager instance:\u003cp\u003e \u003cpre\u003e mgr.addProviderAtFront(B, null) \u003c/pre\u003e then the previous setting with the pair (B, m1) is subsumed by this and should be removed. Effectively the list of preferences now becomes {(B, null), (A, null), ... //followed by the pre-configured list.\u003cp\u003e Please note, however, that the following call: \u003cpre\u003e mgr.addProviderAtFront(A, m3) \u003c/pre\u003e does not subsume the previous setting of (A, null) and the list will effectively become {(A, m3), (B, null), (A, null), ...}\n * @param p the provider instance that should be used whenever supportis needed for mech.\n * @param mech the mechanism for which the provider is being set\n * @throws GSSException containing the followingmajor error codes: {@link GSSException#UNAVAILABLE GSSException.UNAVAILABLE}, {@link GSSException#FAILURE GSSException.FAILURE}\n */\n","tf":{"freq":{"need":5,"lower":1,"subsum":2,"pluggabl":1,"particular":1,"sexcept":7,"skip":1,"desir":3,"smanag":11,"must":1,"time":1,"becom":2,"given":1,"oper":1,"unavail":1,"howev":1,"move":1,"follow":4,"support":4,"form":1,"status":1,"alway":2,"preserv":1,"remov":3,"like":1,"togeth":1,"provid":21,"continu":1,"mgr":6,"instanc":4,"non":1,"obtain":1,"configur":2,"now":2,"contain":1,"will":4,"prefer":5,"call":7,"pair":2,"link":2,"made":1,"use":6,"repeat":1,"add":7,"applic":2,"pleas":1,"indic":4,"order":1,"oid":5,"older":1,"followingmajor":1,"valu":1,"note":1,"top":1,"direct":1,"whenev":1,"mech":2,"may":1,"error":1,"check":5,"previous":5,"matter":1,"thus":1,"later":1,"prepend":1,"ahead":2,"suppos":2,"front":7,"list":6,"point":1,"differ":2,"effect":2,"architectur":1,"pre":10,"mechan":9,"grow":1,"instead":1,"supporti":1,"method":2,"also":1,"first":2},"maxFreq":21,"totalTerms":221},"loc":0}