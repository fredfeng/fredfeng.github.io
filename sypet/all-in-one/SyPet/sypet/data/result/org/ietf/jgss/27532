{"id":27532,"className":"org.ietf.jgss.GSSManager","methodName":"createCredential","signature":"\u003corg.ietf.jgss.GSSManager: org.ietf.jgss.GSSCredential createCredential(org.ietf.jgss.GSSName,int,org.ietf.jgss.Oid,int)\u003e","javadoc":"/** \n * Factory method for acquiring a single mechanism credential.\u003cp\u003e GSS-API mechanism providers must impose a local access-control policy on callers to prevent unauthorized callers from acquiring credentials to which they are not entitled. The kinds of permissions needed by different mechanism providers will be documented on a per-mechanism basis. A failed permission check might cause a  {@link java.lang.SecurityException SecurityException} to be thrown fromthis method. \u003cp\u003e Non-default values for lifetime cannot always be honored by the underlying mechanisms, thus applications should be prepared to call {@link GSSCredential#getRemainingLifetime() getRemainingLifetime}on the returned credential.\u003cp\u003e\n * @param name the name of the principal for whom this credential is to beacquired.  Use \u003ccode\u003enull\u003c/code\u003e to specify the default principal.\n * @param lifetime The number of seconds that credentials should remainvalid.  Use  {@link GSSCredential#INDEFINITE_LIFETIME GSSCredential.INDEFINITE_LIFETIME} to request that the credentialshave the maximum permitted lifetime.  Use  {@link GSSCredential#DEFAULT_LIFETIME GSSCredential.DEFAULT_LIFETIME} torequest default credential lifetime.\n * @param mech the Oid of the desired mechanism.  Use \u003ccode\u003e(Oid) null\u003c/code\u003e to request the default mechanism.\n * @param usage The intended usage for this credential object. The valueof this parameter must be one of: {@link GSSCredential#INITIATE_AND_ACCEPT GSSCredential.INITIATE_AND_ACCEPT}, {@link GSSCredential#ACCEPT_ONLY GSSCredential.ACCEPT_ONLY}, and {@link GSSCredential#INITIATE_ONLY GSSCredential.INITIATE_ONLY}.\n * @return a GSSCredential of the requested type.\n * @see GSSCredential\n * @throws GSSException containing the followingmajor error codes: {@link GSSException#BAD_MECH GSSException.BAD_MECH}, {@link GSSException#BAD_NAMETYPE GSSException.BAD_NAMETYPE}, {@link GSSException#BAD_NAME GSSException.BAD_NAME}, {@link GSSException#CREDENTIALS_EXPIRED GSSException.CREDENTIALS_EXPIRED}, {@link GSSException#NO_CRED GSSException.NO_CRED}, {@link GSSException#FAILURE GSSException.FAILURE}\n */\n","tf":{"freq":{"need":1,"acquir":2,"lifetim":6,"second":1,"singl":1,"permit":1,"sexcept":13,"credentialshav":1,"type":1,"desir":1,"must":2,"specifi":1,"remainvalid":1,"fail":1,"fromthi":1,"request":3,"permiss":2,"control":1,"except":2,"thrown":1,"torequest":1,"creat":1,"honor":1,"alway":1,"number":1,"prevent":1,"polici":1,"provid":2,"scredenti":13,"prepar":1,"non":1,"valueof":1,"entitl":1,"maximum":1,"contain":1,"will":1,"princip":2,"caller":2,"might":1,"call":1,"one":1,"link":13,"unauthor":1,"use":4,"beacquir":1,"object":1,"lang":1,"kind":1,"applic":1,"document":1,"oid":2,"factori":1,"followingmajor":1,"name":2,"valu":1,"mech":1,"error":1,"credenti":8,"check":1,"thus":1,"paramet":1,"access":1,"impos":1,"differ":1,"caus":1,"secur":2,"per":1,"remain":2,"mechan":7,"method":2,"java":1,"usag":2,"local":1,"intend":1,"basi":1},"maxFreq":13,"totalTerms":147},"loc":0}