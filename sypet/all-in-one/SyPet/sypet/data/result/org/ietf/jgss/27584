{"id":27584,"className":"org.ietf.jgss.GSSContext","methodName":"export","signature":"\u003corg.ietf.jgss.GSSContext: byte[] export()\u003e","javadoc":"/** \n * Exports this context so that another process may import it.. Provided to support the sharing of work between multiple processes. This routine will typically be used by the context-acceptor, in an application where a single process receives incoming connection requests and accepts security contexts over them, then passes the established context to one or more other processes for message exchange.\u003cp\u003e This method deactivates the security context and creates an interprocess token which, when passed to  {@link GSSManager#createContext(byte[]) GSSManager.createContext} inanother process, will re-activate the context in the second process. Only a single instantiation of a given context may be active at any one time; a subsequent attempt by a context exporter to access the exported security context will fail.\u003cp\u003e The implementation may constrain the set of processes by which the interprocess token may be imported, either as a function of local security policy, or as a result of implementation decisions.  For example, some implementations may constrain contexts to be passed only between processes that run under the same account, or which are part of the same process group.\u003cp\u003e The interprocess token may contain security-sensitive information (for example cryptographic keys).  While mechanisms are encouraged to either avoid placing such sensitive information within interprocess tokens, or to encrypt the token before returning it to the application, in a typical GSS-API implementation this may not be possible.  Thus the application must take care to protect the interprocess token, and ensure that any process to which the token is transferred is trustworthy. \u003cp\u003e Implementations are not required to support the inter-process transfer of security contexts.  Calling the  {@link #isTransferable() isTransferable} method will indicate if the context object istransferable.\u003cp\u003e Calling this method on a context that is not exportable will result in this exception being thrown with the error code  {@link GSSException#UNAVAILABLE GSSException.UNAVAILABLE}.\n * @return a byte[] containing the exported context\n * @see GSSManager#createContext(byte[])\n * @throws GSSException containing the followingmajor error codes: {@link GSSException#UNAVAILABLE GSSException.UNAVAILABLE}, {@link GSSException#CONTEXT_EXPIRED GSSException.CONTEXT_EXPIRED}, {@link GSSException#NO_CONTEXT GSSException.NO_CONTEXT}, {@link GSSException#FAILURE GSSException.FAILURE}\n */\n","tf":{"freq":{"constrain":2,"second":1,"singl":2,"accept":1,"instanti":1,"possibl":1,"sexcept":11,"smanag":3,"must":1,"function":1,"avoid":1,"time":1,"requir":1,"given":1,"fail":1,"encrypt":1,"cryptograph":1,"istransfer":1,"encourag":1,"request":1,"care":1,"place":1,"key":1,"work":1,"thrown":1,"except":1,"transfer":4,"sensit":2,"support":2,"multipl":1,"creat":4,"polici":1,"provid":1,"inform":2,"contain":3,"routin":1,"will":5,"deactiv":1,"incom":1,"attempt":1,"call":2,"result":2,"connect":1,"decis":1,"one":2,"link":7,"typic":2,"use":1,"object":1,"anoth":1,"run":1,"activ":2,"applic":3,"ensur":1,"acceptor":1,"share":1,"indic":1,"token":7,"followingmajor":1,"interprocess":5,"subsequ":1,"trustworthi":1,"export":6,"may":7,"error":2,"thus":1,"messag":1,"establish":1,"receiv":1,"access":1,"exchang":1,"pass":3,"inter":1,"process":11,"either":2,"secur":6,"take":1,"mechan":1,"exampl":2,"context":17,"account":1,"method":3,"within":1,"local":1,"group":1,"part":1,"inanoth":1},"maxFreq":17,"totalTerms":188},"loc":0}