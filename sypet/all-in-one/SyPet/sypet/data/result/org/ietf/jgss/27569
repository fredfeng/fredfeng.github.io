{"id":27569,"className":"org.ietf.jgss.GSSContext","methodName":"initSecContext","signature":"\u003corg.ietf.jgss.GSSContext: byte[] initSecContext(byte[],int,int)\u003e","javadoc":"/** \n * Called by the context initiator to start the context creation phase and process any tokens generated by the peer\u0027s \u003ccode\u003eacceptSecContext\u003c/code\u003e method. This method may return an output token which the application will need to send to the peer for processing by its \u003ccode\u003eacceptSecContext\u003c/code\u003e method. The application can call  {@link #isEstablished() isEstablished} to determine if the context establishment phase iscomplete on this side of the context.  A return value of \u003ccode\u003efalse\u003c/code\u003e from \u003ccode\u003eisEstablished\u003c/code\u003e indicates that more tokens are expected to be supplied to \u003ccode\u003einitSecContext\u003c/code\u003e.  Upon completion of the context establishment, the available context options may be queried through the get methods.\u003cp\u003e Note that it is possible that the \u003ccode\u003einitSecContext\u003c/code\u003e method return a token for the peer, and \u003ccode\u003eisEstablished\u003c/code\u003e return \u003ccode\u003etrue\u003c/code\u003e also. This indicates that the token needs to be sent to the peer, but the local end of the context is now fully established.\u003cp\u003e Some mechanism providers might require that the caller be granted permission to initiate a security context. A failed permission check might cause a  {@link java.lang.SecurityException SecurityException}to be thrown from this method.\u003cp\u003e\n * @return a byte[] containing the token to be sent to thepeer. \u003ccode\u003enull\u003c/code\u003e indicates that no token is generated.\n * @param inputBuf token generated by the peer. This parameter is ignoredon the first call since no token has been received from the peer.\n * @param offset the offset within the inputBuf where the token begins.\n * @param len the length of the token.\n * @throws GSSException containing the followingmajor error codes: {@link GSSException#DEFECTIVE_TOKEN GSSException.DEFECTIVE_TOKEN}, {@link GSSException#BAD_MIC GSSException.BAD_MIC}, {@link GSSException#NO_CRED GSSException.NO_CRED}, {@link GSSException#CREDENTIALS_EXPIRED GSSException.CREDENTIALS_EXPIRED}, {@link GSSException#BAD_BINDINGS GSSException.BAD_BINDINGS}, {@link GSSException#OLD_TOKEN GSSException.OLD_TOKEN}, {@link GSSException#DUPLICATE_TOKEN GSSException.DUPLICATE_TOKEN}, {@link GSSException#BAD_NAMETYPE GSSException.BAD_NAMETYPE}, {@link GSSException#BAD_MECH GSSException.BAD_MECH}, {@link GSSException#FAILURE GSSException.FAILURE}\n */\n","tf":{"freq":{"need":2,"fals":1,"send":1,"grant":1,"accept":2,"possibl":1,"sexcept":21,"expect":1,"sent":2,"requir":1,"ignoredon":1,"fail":1,"permiss":2,"iscomplet":1,"option":1,"thrown":1,"except":2,"init":3,"avail":1,"provid":1,"thepeer":1,"queri":1,"input":2,"start":1,"now":1,"contain":2,"determin":1,"will":1,"output":1,"phase":2,"upon":1,"caller":1,"call":3,"creation":1,"might":2,"link":12,"lang":1,"applic":2,"indic":3,"token":11,"side":1,"followingmajor":1,"length":1,"valu":1,"initi":2,"offset":2,"note":1,"end":1,"complet":1,"peer":6,"may":2,"error":1,"check":1,"paramet":1,"establish":7,"true":1,"receiv":1,"suppli":1,"fulli":1,"len":1,"begin":1,"process":2,"caus":1,"secur":3,"sec":5,"mechan":1,"generat":3,"context":13,"java":1,"method":6,"within":1,"local":1,"first":1,"also":1,"buf":2},"maxFreq":21,"totalTerms":173},"loc":0}