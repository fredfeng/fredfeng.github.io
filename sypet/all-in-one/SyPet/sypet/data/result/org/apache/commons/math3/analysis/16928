{"id":16928,"className":"org.apache.commons.math3.analysis.FunctionUtils","methodName":"toMultivariateDifferentiableVectorFunction","signature":"\u003corg.apache.commons.math3.analysis.FunctionUtils: org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction toMultivariateDifferentiableVectorFunction(org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction)\u003e","javadoc":"/** \n * Convert a  {@link DifferentiableMultivariateVectorFunction} into a {@link MultivariateDifferentiableVectorFunction}. \u003cp\u003e Note that the converted function is able to handle  {@link DerivativeStructure} elementsthat all have the same number of free parameters and order, and with order at most 1. If the function is called with inconsistent numbers of free parameters or higher order, a {@link DimensionMismatchException} or a {@link NumberIsTooLargeException} will be thrown.\u003c/p\u003e\n * @param f function to convert\n * @return converted function\n * @deprecated this conversion method is temporary in version 3.1, as the {@link DifferentiableMultivariateFunction} interface itself is deprecated\n */\n","tf":{"freq":{"call":1,"inconsist":1,"deprec":2,"structur":1,"deriv":1,"link":6,"convers":1,"higher":1,"convert":4,"abl":1,"version":1,"function":8,"free":2,"order":3,"vector":3,"temporari":1,"note":1,"thrown":1,"except":2,"paramet":2,"number":3,"dimens":1,"handl":1,"multivari":4,"larg":1,"will":1,"method":1,"elementsthat":1,"mismatch":1,"differenti":4},"maxFreq":8,"totalTerms":61},"loc":64}