{"id":26646,"className":"org.apache.commons.math.complex.Complex","methodName":"pow","signature":"\u003corg.apache.commons.math.complex.Complex: org.apache.commons.math.complex.Complex pow(org.apache.commons.math.complex.Complex)\u003e","javadoc":"/** \n * Returns of value of this complex number raised to the power of \u003ccode\u003ex\u003c/code\u003e. \u003cp\u003e Implements the formula: \u003cpre\u003e \u003ccode\u003e y\u003csup\u003ex\u003c/sup\u003e \u003d exp(x\u0026middot;log(y))\u003c/code\u003e\u003c/pre\u003e where \u003ccode\u003eexp\u003c/code\u003e and \u003ccode\u003elog\u003c/code\u003e are  {@link #exp} and{@link #log}, respectively.\u003c/p\u003e \u003cp\u003e Returns  {@link Complex#NaN} if either real or imaginary part of theinput argument is \u003ccode\u003eNaN\u003c/code\u003e or infinite, or if \u003ccode\u003ey\u003c/code\u003e equals  {@link Complex#ZERO}.\u003c/p\u003e\n * @param x the exponent.\n * @return \u003ccode\u003ethis\u003c/code\u003e\u003csup\u003e\u003ccode\u003ex\u003c/code\u003e\u003c/sup\u003e\n * @throws NullPointerException if x is null\n * @since 1.2\n */\n","tf":{"freq":{"complex":3,"pow":1,"link":4,"sup":4,"theinput":1,"real":1,"infinit":1,"rais":1,"power":1,"valu":1,"imaginari":1,"argument":1,"expon":1,"except":1,"middot":1,"number":1,"equal":1,"log":3,"exp":3,"either":1,"pre":2,"pointer":1,"part":1,"respect":1,"formula":1},"maxFreq":4,"totalTerms":38},"loc":6}