{"id":18460,"className":"org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest","methodName":"monteCarloP","signature":"\u003corg.apache.commons.math3.stat.inference.KolmogorovSmirnovTest: double monteCarloP(double,int,int,boolean,int)\u003e","javadoc":"/** \n * Uses Monte Carlo simulation to approximate \\(P(D_{n,m} \u003e d)\\) where \\(D_{n,m}\\) is the 2-sample Kolmogorov-Smirnov statistic. See {@link #kolmogorovSmirnovStatistic(double[],double[])} for the definition of \\(D_{n,m}\\).\u003cp\u003e The simulation generates  {@code iterations} random partitions of {@code m + n} into an{@code n} set and an {@code m} set, computing \\(D_{n,m}\\) for each partition and returningthe proportion of values that are greater than  {@code d}, or greater than or equal to {@code d} if {@code strict} is {@code false}. \u003c/p\u003e\n * @param d D-statistic value\n * @param n first sample size\n * @param m second sample size\n * @param iterations number of random partitions to generate\n * @param strict whether or not the probability to compute is expressed as a strict inequality\n * @return proportion of randomly generated m-n partitions of m + n that result in \\(D_{n,m}\\)greater than (resp. greater than or equal to)  {@code d}\n */\n","tf":{"freq":{"fals":1,"result":1,"greater":4,"second":1,"link":1,"carlo":2,"partit":4,"proport":2,"use":1,"approxim":1,"express":1,"whether":1,"inequ":1,"probabl":1,"smirnov":2,"valu":2,"returningth":1,"random":3,"number":1,"equal":2,"statist":3,"size":2,"kolmogorov":2,"simul":2,"mont":2,"generat":3,"definit":1,"comput":2,"iter":2,"strict":3,"first":1,"sampl":3,"resp":1},"maxFreq":4,"totalTerms":60},"loc":18}