{"id":15470,"className":"org.apache.commons.math3.distribution.EnumeratedRealDistribution","methodName":"EnumeratedRealDistribution","signature":"\u003corg.apache.commons.math3.distribution.EnumeratedRealDistribution: void EnumeratedRealDistribution(org.apache.commons.math3.random.RandomGenerator,double[],double[])\u003e","javadoc":"/** \n * Create a discrete distribution using the given random number generator and probability mass function enumeration.\n * @param rng random number generator.\n * @param singletons array of random variable values.\n * @param probabilities array of probabilities.\n * @throws DimensionMismatchException if{@code singletons.length !\u003d probabilities.length}\n * @throws NotPositiveException if any of the probabilities are negative.\n * @throws NotFiniteNumberException if any of the probabilities are infinite.\n * @throws NotANumberException if any of the probabilities are NaN.\n * @throws MathArithmeticException all of the probabilities are 0.\n */\n","tf":{"freq":{"discret":1,"variabl":1,"arithmet":1,"distribut":2,"use":1,"function":1,"mass":1,"real":1,"infinit":1,"probabl":8,"given":1,"finit":1,"rng":1,"length":2,"valu":1,"except":5,"creat":1,"singleton":2,"random":3,"number":3,"dimens":1,"math":1,"generat":2,"negat":1,"anumb":1,"mismatch":1,"posit":1,"array":2},"maxFreq":8,"totalTerms":48},"loc":14}