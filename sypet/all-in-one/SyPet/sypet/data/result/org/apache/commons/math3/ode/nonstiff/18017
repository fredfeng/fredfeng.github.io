{"id":18017,"className":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator","methodName":"RungeKuttaStepInterpolator","signature":"\u003corg.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator: void RungeKuttaStepInterpolator(org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator)\u003e","javadoc":"/** \n * Copy constructor. \u003cp\u003eThe copied interpolator should have been finalized before the copy, otherwise the copy will not be able to perform correctly any interpolation and will throw a  {@link NullPointerException}later. Since we don\u0027t want this constructor to throw the exceptions finalization may involve and since we don\u0027t want this method to modify the state of the copied interpolator, finalization is \u003cstrong\u003enot\u003c/strong\u003e done automatically, it remains under user control.\u003c/p\u003e \u003cp\u003eThe copy is a deep copy: its arrays are separated from the original arrays of the instance.\u003c/p\u003e\n * @param interpolator interpolator to copy from.\n */\n","tf":{"freq":{"otherwis":1,"link":1,"rung":1,"state":1,"perform":1,"abl":1,"automat":1,"copi":8,"correct":1,"interpol":6,"deep":1,"want":2,"constructor":2,"control":1,"except":2,"may":1,"later":1,"done":1,"origin":1,"involv":1,"kutta":1,"instanc":1,"remain":1,"separ":1,"strong":2,"will":2,"modifi":1,"pointer":1,"method":1,"user":1,"step":1,"array":2},"maxFreq":8,"totalTerms":50},"loc":23}