{"id":17425,"className":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm","methodName":"PolynomialFunctionNewtonForm","signature":"\u003corg.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm: void PolynomialFunctionNewtonForm(double[],double[])\u003e","javadoc":"/** \n * Construct a Newton polynomial with the given a[] and c[]. The order of centers are important in that if c[] shuffle, then values of a[] would completely change, not just a permutation of old a[]. \u003cp\u003e The constructor makes copy of the input arrays and assigns them.\u003c/p\u003e\n * @param a Coefficients in Newton form formula.\n * @param c Centers.\n * @throws NullArgumentException if any argument is {@code null}.\n * @throws NoDataException if any array has zero length.\n * @throws DimensionMismatchException if the size difference between{@code a} and {@code c} is not equal to 1.\n */\n","tf":{"freq":{"old":1,"assign":1,"data":1,"permut":1,"zero":1,"copi":1,"function":1,"center":2,"order":1,"given":1,"length":1,"valu":1,"complet":1,"constructor":1,"just":1,"argument":2,"except":3,"form":2,"equal":1,"dimens":1,"size":1,"shuffl":1,"differ":1,"newton":3,"input":1,"chang":1,"construct":1,"coeffici":1,"mismatch":1,"polynomi":2,"make":1,"array":2,"formula":1},"maxFreq":3,"totalTerms":42},"loc":9}