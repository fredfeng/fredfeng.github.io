{"id":22091,"className":"org.apache.commons.math3.complex.Complex","methodName":"log","signature":"\u003corg.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex log()\u003e","javadoc":"/** \n * Compute the \u003ca href\u003d\"http://mathworld.wolfram.com/NaturalLogarithm.html\" TARGET\u003d\"_top\"\u003e natural logarithm\u003c/a\u003e of this complex number. Implements the formula: \u003cpre\u003e \u003ccode\u003e log(a + bi) \u003d ln(|a + bi|) + arg(a + bi)i \u003c/code\u003e \u003c/pre\u003e where ln on the right hand side is  {@link FastMath#log}, {@code |a + bi|} is the modulus, {@link Complex#abs},  and {@code arg(a + bi) \u003d }{@link FastMath#atan2}(b, a). \u003cbr/\u003e Returns  {@link Complex#NaN} if either real or imaginary part of theinput argument is  {@code NaN}. \u003cbr/\u003e Infinite (or critical) values in real or imaginary parts of the input may result in infinite or NaN values returned in parts of the result. \u003cpre\u003e Examples: \u003ccode\u003e log(1 \u0026plusmn; INFINITY i) \u003d INFINITY \u0026plusmn; (\u0026pi;/2)i log(INFINITY + i) \u003d INFINITY + 0i log(-INFINITY + i) \u003d INFINITY + \u0026pi;i log(INFINITY \u0026plusmn; INFINITY i) \u003d INFINITY \u0026plusmn; (\u0026pi;/4)i log(-INFINITY \u0026plusmn; INFINITY i) \u003d INFINITY \u0026plusmn; (3\u0026pi;/4)i log(0 + 0i) \u003d -INFINITY + 0i \u003c/code\u003e \u003c/pre\u003e\n * @return the value \u003ccode\u003eln \u0026nbsp; this\u003c/code\u003e, the natural logarithmof  {@code this}.\n * @since 1.2\n */\n","tf":{"freq":{"result":2,"atan":1,"complex":3,"com":1,"link":4,"natur":3,"theinput":1,"hand":1,"real":2,"arg":2,"infinit":2,"side":1,"plusmn":6,"wolfram":1,"valu":3,"imaginari":2,"href":1,"right":1,"nbsp":1,"top":1,"argument":1,"may":1,"logarithmof":1,"number":1,"log":9,"math":2,"input":1,"either":1,"logarithm":2,"http":1,"pre":4,"exampl":1,"mathworld":1,"comput":1,"html":1,"ab":1,"part":3,"fast":2,"modulus":1,"critic":1,"formula":1},"maxFreq":9,"totalTerms":76},"loc":8}