{"id":19248,"className":"org.apache.commons.math3.util.ArithmeticUtils","methodName":"lcm","signature":"\u003corg.apache.commons.math3.util.ArithmeticUtils: int lcm(int,int)\u003e","javadoc":"/** \n * \u003cp\u003e Returns the least common multiple of the absolute value of two numbers, using the formula  {@code lcm(a,b) \u003d (a / gcd(a,b)) * b}. \u003c/p\u003e Special cases: \u003cul\u003e \u003cli\u003eThe invocations  {@code lcm(Integer.MIN_VALUE, n)} and{@code lcm(n, Integer.MIN_VALUE)}, where  {@code abs(n)} is apower of 2, throw an  {@code ArithmeticException}, because the result would be 2^31, which is too large for an int value.\u003c/li\u003e \u003cli\u003eThe result of  {@code lcm(0, x)} and {@code lcm(x, 0)} is{@code 0} for any {@code x}. \u003c/ul\u003e\n * @param a Number.\n * @param b Number.\n * @return the least common multiple, never negative.\n * @throws MathArithmeticException if the result cannot be represented asa non-negative  {@code int} value.\n * @since 1.1\n */\n","tf":{"freq":{"result":3,"common":2,"least":2,"arithmet":2,"use":1,"apow":1,"lcm":6,"valu":3,"except":2,"multipl":2,"repres":1,"number":3,"asa":1,"absolut":1,"invoc":1,"non":1,"math":1,"two":1,"never":1,"larg":1,"special":1,"negat":2,"ab":1,"integ":2,"gcd":1,"formula":1},"maxFreq":6,"totalTerms":44},"loc":11}