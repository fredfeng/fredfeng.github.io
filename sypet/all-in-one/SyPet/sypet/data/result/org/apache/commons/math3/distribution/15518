{"id":15518,"className":"org.apache.commons.math3.distribution.FDistribution","methodName":"FDistribution","signature":"\u003corg.apache.commons.math3.distribution.FDistribution: void FDistribution(double,double,double)\u003e","javadoc":"/** \n * Creates an F distribution using the given degrees of freedom and inverse cumulative probability accuracy. \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e this constructor will implicitly create an instance of {@link Well19937c} as random generator to be used for sampling only (see{@link #sample()} and {@link #sample(int)}). In case no sampling is needed for the created distribution, it is advised to pass  {@code null}as random generator via the appropriate constructors to avoid the additional initialisation overhead.\n * @param numeratorDegreesOfFreedom Numerator degrees of freedom.\n * @param denominatorDegreesOfFreedom Denominator degrees of freedom.\n * @param inverseCumAccuracy the maximum absolute error in inversecumulative probability estimates.\n * @throws NotStrictlyPositiveException if{@code numeratorDegreesOfFreedom \u003c\u003d 0} or{@code denominatorDegreesOfFreedom \u003c\u003d 0}.\n * @since 2.1\n */\n","tf":{"freq":{"need":1,"via":1,"freedom":7,"cum":1,"link":3,"distribut":3,"implicit":1,"use":2,"denomin":3,"well":1,"advis":1,"avoid":1,"estim":1,"overhead":1,"invers":2,"probabl":2,"given":1,"note":1,"constructor":2,"addit":1,"except":1,"error":1,"initialis":1,"numer":3,"creat":3,"random":2,"absolut":1,"accuraci":2,"instanc":1,"pass":1,"degre":7,"cumul":1,"inversecumul":1,"maximum":1,"appropri":1,"generat":2,"will":1,"strict":1,"posit":1,"sampl":4},"maxFreq":7,"totalTerms":72},"loc":4}