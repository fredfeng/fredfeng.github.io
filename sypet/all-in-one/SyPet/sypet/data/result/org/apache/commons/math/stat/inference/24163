{"id":24163,"className":"org.apache.commons.math.stat.inference.TTest","methodName":"t","signature":"\u003corg.apache.commons.math.stat.inference.TTest: double t(org.apache.commons.math.stat.descriptive.StatisticalSummary,org.apache.commons.math.stat.descriptive.StatisticalSummary)\u003e","javadoc":"/** \n * Computes a 2-sample t statistic \u003c/a\u003e, comparing the means of the datasets described by two  {@link StatisticalSummary} instances, without theassumption of equal subpopulation variances.  Use {@link #homoscedasticT(StatisticalSummary,StatisticalSummary)} tocompute a t-statistic under the equal variances assumption. \u003cp\u003e This statistic can be used to perform a two-sample t-test to compare sample means.\u003c/p\u003e \u003cp\u003e The returned  t-statisitc is\u003c/p\u003e \u003cp\u003e \u0026nbsp;\u0026nbsp; \u003ccode\u003e  t \u003d (m1 - m2) / sqrt(var1/n1 + var2/n2)\u003c/code\u003e \u003c/p\u003e\u003cp\u003e where \u003cstrong\u003e\u003ccode\u003en1\u003c/code\u003e\u003c/strong\u003e is the size of the first sample; \u003cstrong\u003e\u003ccode\u003e n2\u003c/code\u003e\u003c/strong\u003e is the size of the second sample; \u003cstrong\u003e\u003ccode\u003e m1\u003c/code\u003e\u003c/strong\u003e is the mean of the first sample; \u003cstrong\u003e\u003ccode\u003e m2\u003c/code\u003e\u003c/strong\u003e is the mean of the second sample \u003cstrong\u003e\u003ccode\u003e var1\u003c/code\u003e\u003c/strong\u003e is the variance of the first sample; \u003cstrong\u003e\u003ccode\u003e var2\u003c/code\u003e\u003c/strong\u003e is the variance of the second sample \u003c/p\u003e\u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eThe datasets described by the two Univariates must each contain at least 2 observations. \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\n * @param sampleStats1 StatisticalSummary describing data from the first sample\n * @param sampleStats2 StatisticalSummary describing data from the second sample\n * @return t statistic\n * @throws IllegalArgumentException if the precondition is not met\n */\n","tf":{"freq":{"second":4,"test":1,"least":1,"var":4,"link":2,"homoscedast":1,"data":2,"precondit":2,"use":2,"perform":1,"must":1,"met":1,"observ":1,"univari":1,"mean":4,"subpopul":1,"nbsp":2,"argument":1,"except":1,"sqrt":1,"statisitc":1,"describ":4,"equal":2,"illeg":1,"without":1,"stat":2,"statist":9,"tocomput":1,"size":2,"instanc":1,"two":3,"varianc":4,"summari":5,"strong":14,"dataset":2,"contain":1,"comput":1,"theassumpt":1,"first":4,"compar":2,"sampl":13,"assumpt":1},"maxFreq":14,"totalTerms":109},"loc":0}