{"id":24743,"className":"org.apache.commons.math.stat.descriptive.summary.Sum","methodName":"evaluate","signature":"\u003corg.apache.commons.math.stat.descriptive.summary.Sum: double evaluate(double[],double[])\u003e","javadoc":"/** \n * The weighted sum of the entries in the the input array. \u003cp\u003e Throws \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if any of the following are true: \u003cul\u003e\u003cli\u003ethe values array is null\u003c/li\u003e \u003cli\u003ethe weights array is null\u003c/li\u003e \u003cli\u003ethe weights array does not have the same length as the values array\u003c/li\u003e \u003cli\u003ethe weights array contains one or more infinite values\u003c/li\u003e \u003cli\u003ethe weights array contains one or more NaN values\u003c/li\u003e \u003cli\u003ethe weights array contains negative values\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e \u003cp\u003e Uses the formula, \u003cpre\u003e weighted sum \u003d \u0026Sigma;(values[i] * weights[i]) \u003c/pre\u003e\u003c/p\u003e\n * @param values the input array\n * @param weights the weights array\n * @return the sum of the values or Double.NaN if length \u003d 0\n * @throws IllegalArgumentException if the parameters are not valid\n * @since 2.1\n */\n","tf":{"freq":{"argument":2,"valid":1,"except":2,"weight":10,"entri":1,"one":2,"paramet":1,"use":1,"sum":3,"true":1,"evalu":1,"illeg":2,"infinit":1,"input":2,"sigma":1,"pre":2,"contain":3,"length":2,"negat":1,"valu":8,"formula":1,"array":10,"follow":1},"maxFreq":10,"totalTerms":59},"loc":3}