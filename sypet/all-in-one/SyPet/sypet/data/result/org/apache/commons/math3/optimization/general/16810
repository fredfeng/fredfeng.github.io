{"id":16810,"className":"org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer","methodName":"LevenbergMarquardtOptimizer","signature":"\u003corg.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer: void LevenbergMarquardtOptimizer()\u003e","javadoc":"/** \n * Build an optimizer for least squares problems with default values for all the tuning parameters (see the  {@link #LevenbergMarquardtOptimizer(double,double,double,double,double) other contructor}. The default values for the algorithm settings are: \u003cul\u003e \u003cli\u003eInitial step bound factor: 100\u003c/li\u003e \u003cli\u003eCost relative tolerance: 1e-10\u003c/li\u003e \u003cli\u003eParameters relative tolerance: 1e-10\u003c/li\u003e \u003cli\u003eOrthogonality tolerance: 1e-10\u003c/li\u003e \u003cli\u003eQR ranking threshold:  {@link Precision#SAFE_MIN}\u003c/li\u003e \u003c/ul\u003e\n */\n","tf":{"freq":{"squar":1,"optim":3,"least":1,"link":2,"orthogon":1,"paramet":2,"problem":1,"factor":1,"build":1,"tune":1,"cost":1,"threshold":1,"algorithm":1,"rank":1,"precis":1,"relat":2,"levenberg":2,"valu":2,"initi":1,"toler":3,"bound":1,"step":1,"marquardt":2,"contructor":1},"maxFreq":3,"totalTerms":34},"loc":3}