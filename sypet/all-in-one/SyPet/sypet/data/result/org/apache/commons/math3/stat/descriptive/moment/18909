{"id":18909,"className":"org.apache.commons.math3.stat.descriptive.moment.Variance","methodName":"increment","signature":"\u003corg.apache.commons.math3.stat.descriptive.moment.Variance: void increment(double)\u003e","javadoc":"/** \n * {@inheritDoc}\u003cp\u003eIf all values are available, it is more accurate to use {@link #evaluate(double[])} rather than adding values one at a timeusing this method and then executing  {@link #getResult}, since \u003ccode\u003eevaluate\u003c/code\u003e leverages the fact that is has the full list of values together to execute a two-pass algorithm. See  {@link Variance}.\u003c/p\u003e \u003cp\u003eNote also that when  {@link #Variance(SecondMoment)} is used tocreate a Variance, this method does nothing. In that case, the SecondMoment should be incremented directly.\u003c/p\u003e\n */\n","tf":{"freq":{"result":1,"second":2,"moment":2,"one":1,"link":4,"use":2,"algorithm":1,"full":1,"accur":1,"noth":1,"rather":1,"valu":3,"leverag":1,"note":1,"direct":1,"increment":2,"avail":1,"list":1,"evalu":2,"togeth":1,"tocreat":1,"pass":1,"two":1,"varianc":3,"fact":1,"ad":1,"method":2,"execut":2,"also":1,"timeus":1},"maxFreq":4,"totalTerms":44},"loc":5}