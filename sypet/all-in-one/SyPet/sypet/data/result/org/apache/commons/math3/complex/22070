{"id":22070,"className":"org.apache.commons.math3.complex.Complex","methodName":"equals","signature":"\u003corg.apache.commons.math3.complex.Complex: boolean equals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,int)\u003e","javadoc":"/** \n * Test for the floating-point equality between Complex objects. It returns  {@code true} if both arguments are equal or within therange of allowed error (inclusive).\n * @param x First value (cannot be {@code null}).\n * @param y Second value (cannot be {@code null}).\n * @param maxUlps {@code (maxUlps - 1)} is the number of floating pointvalues between the real (resp. imaginary) parts of  {@code x} and{@code y}.\n * @return {@code true} if there are fewer than {@code maxUlps} floatingpoint values between the real (resp. imaginary) parts of  {@code x}and  {@code y}.\n * @see Precision#equals(double,double,int)\n * @since 3.3\n */\n","tf":{"freq":{"argument":1,"complex":1,"max":3,"second":1,"allow":1,"error":1,"test":1,"ulp":3,"true":2,"number":1,"equal":4,"therang":1,"object":1,"real":2,"point":1,"inclus":1,"floatingpoint":1,"precis":1,"fewer":1,"pointvalu":1,"valu":3,"imaginari":2,"within":1,"part":2,"first":1,"resp":2},"maxFreq":4,"totalTerms":40},"loc":4}