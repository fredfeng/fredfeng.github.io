{"id":23662,"className":"org.apache.commons.math.random.RandomDataImpl","methodName":"nextSample","signature":"\u003corg.apache.commons.math.random.RandomDataImpl: java.lang.Object[] nextSample(java.util.Collection,int)\u003e","javadoc":"/** \n * Uses a 2-cycle permutation shuffle to generate a random permutation. \u003cstrong\u003eAlgorithm Description\u003c/strong\u003e: Uses a 2-cycle permutation shuffle to generate a random permutation of \u003ccode\u003ec.size()\u003c/code\u003e and then returns the elements whose indexes correspond to the elements of the generated permutation. This technique is described, and proven to generate random samples, \u003ca href\u003d\"http://www.maths.abdn.ac.uk/~igc/tch/mx4002/notes/node83.html\"\u003e here\u003c/a\u003e\n * @param c Collection to sample from.\n * @param k sample size.\n * @return the random sample.\n * @throws NumberIsTooLargeException if {@code k \u003e c.size()}.\n * @throws NotStrictlyPositiveException if {@code k \u003c\u003d 0}.\n */\n","tf":{"freq":{"tch":1,"igc":1,"proven":1,"correspond":1,"next":1,"cycl":2,"www":1,"permut":5,"use":2,"algorithm":1,"href":1,"note":1,"element":2,"except":2,"index":1,"whose":1,"descript":1,"random":4,"describ":1,"number":1,"size":3,"shuffl":2,"techniqu":1,"math":1,"node":1,"strong":2,"http":1,"larg":1,"abdn":1,"generat":4,"html":1,"strict":1,"posit":1,"sampl":5,"collect":1},"maxFreq":5,"totalTerms":57},"loc":18}