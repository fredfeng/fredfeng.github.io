{"id":24836,"className":"org.apache.commons.math.util.MathUtils","methodName":"equals","signature":"\u003corg.apache.commons.math.util.MathUtils: boolean equals(double,double,double)\u003e","javadoc":"/** \n * Returns true if both arguments are equal or within the range of allowed error (inclusive). \u003cp\u003e Two NaNs are considered equals, as are two infinities with same sign. \u003c/p\u003e \u003cp\u003eThis method considers that  {@code NaN \u003d\u003d NaN}. In release 3.0, the semantics will change in order to comply with IEEE754 where it is specified that  {@code NaN !\u003d NaN}. New methods have been added for those cases where the old semantics (w.r.t. NaN) is useful (see e.g. {@link #equalsIncludingNaN(double,double,double) equalsIncludingNaN}. \u003c/p\u003e\n * @param x first value\n * @param y second value\n * @param eps the amount of absolute error to allow.\n * @return {@code true} if the values are equal or within range of each other.\n */\n","tf":{"freq":{"old":1,"second":1,"allow":2,"infin":1,"link":1,"use":1,"compli":1,"consid":2,"specifi":1,"amount":1,"inclus":1,"releas":1,"order":1,"rang":2,"semant":2,"valu":3,"argument":1,"includ":2,"error":2,"true":2,"equal":6,"absolut":1,"sign":1,"two":2,"ep":1,"will":1,"ad":1,"method":2,"within":2,"chang":1,"first":1},"maxFreq":6,"totalTerms":48},"loc":3}