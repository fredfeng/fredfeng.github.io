{"id":16758,"className":"org.apache.commons.math3.optimization.univariate.BrentOptimizer","methodName":"BrentOptimizer","signature":"\u003corg.apache.commons.math3.optimization.univariate.BrentOptimizer: void BrentOptimizer(double,double)\u003e","javadoc":"/** \n * The arguments are used for implementing the original stopping criterion of Brent\u0027s algorithm. {@code abs} and {@code rel} define a tolerance{@code tol \u003d rel |x| + abs}.  {@code rel} should be no smaller than\u003cem\u003e2 macheps\u003c/em\u003e and preferably not much less than \u003cem\u003esqrt(macheps)\u003c/em\u003e, where \u003cem\u003emacheps\u003c/em\u003e is the relative machine precision.  {@code abs} mustbe positive.\n * @param rel Relative threshold.\n * @param abs Absolute threshold.\n * @throws NotStrictlyPositiveException if {@code abs \u003c\u003d 0}.\n * @throws NumberIsTooSmallException if {@code rel \u003c 2 * Math.ulp(1d)}.\n */\n","tf":{"freq":{"defin":1,"stop":1,"machep":3,"use":1,"smaller":1,"algorithm":1,"brent":2,"relat":2,"precis":1,"tol":1,"toler":1,"less":1,"argument":1,"except":2,"optim":1,"ulp":1,"sqrt":1,"origin":1,"number":1,"absolut":1,"mustb":1,"much":1,"threshold":2,"math":1,"criterion":1,"machin":1,"rel":5,"ab":5,"strict":1,"prefer":1,"small":1,"posit":2},"maxFreq":5,"totalTerms":47},"loc":3}