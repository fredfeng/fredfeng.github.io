{"id":19817,"className":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer","methodName":"computeSigma","signature":"\u003corg.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer: double[] computeSigma(double[],double)\u003e","javadoc":"/** \n * Computes an estimate of the standard deviation of the parameters. The returned values are the square root of the diagonal coefficients of the covariance matrix,  {@code sd(a[i]) ~\u003d sqrt(C[i][i])}, where  {@code a[i]}is the optimized value of the  {@code i}-th parameter, and  {@code C} isthe covariance matrix.\n * @param params Model parameters.\n * @param covarianceSingularityThreshold Singularity threshold (see{@link #computeCovariances(double[],double) computeCovariances}).\n * @return an estimate of the standard deviation of the optimized parameters\n * @throws org.apache.commons.math3.linear.SingularMatrixException if the covariance matrix cannot be computed.\n */\n","tf":{"freq":{"squar":1,"model":1,"root":1,"common":1,"link":1,"diagon":1,"org":1,"deviat":2,"estim":2,"sigma":1,"valu":2,"isth":1,"except":1,"linear":1,"standard":2,"optim":2,"matrix":4,"sqrt":1,"paramet":4,"apach":1,"singular":3,"threshold":2,"math":1,"comput":5,"covari":6,"coeffici":1},"maxFreq":6,"totalTerms":49},"loc":9}