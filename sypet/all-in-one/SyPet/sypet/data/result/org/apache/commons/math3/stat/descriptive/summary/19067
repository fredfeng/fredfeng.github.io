{"id":19067,"className":"org.apache.commons.math3.stat.descriptive.summary.SumOfSquares","methodName":"evaluate","signature":"\u003corg.apache.commons.math3.stat.descriptive.summary.SumOfSquares: double evaluate(double[],int,int)\u003e","javadoc":"/** \n * Returns the sum of the squares of the entries in the specified portion of the input array, or \u003ccode\u003eDouble.NaN\u003c/code\u003e if the designated subarray is empty. \u003cp\u003e Throws \u003ccode\u003eMathIllegalArgumentException\u003c/code\u003e if the array is null.\u003c/p\u003e\n * @param values the input array\n * @param begin index of the first array element to include\n * @param length the number of elements to include\n * @return the sum of the squares of the values or 0 if length \u003d 0\n * @throws MathIllegalArgumentException if the array is null or the array indexparameters are not valid\n */\n","tf":{"freq":{"valid":1,"squar":2,"sum":2,"specifi":1,"length":2,"valu":2,"portion":1,"argument":2,"element":2,"except":2,"index":1,"includ":2,"indexparamet":1,"entri":1,"number":1,"evalu":1,"subarray":1,"illeg":2,"empti":1,"begin":1,"math":2,"input":2,"first":1,"design":1,"array":6},"maxFreq":6,"totalTerms":41},"loc":10}