{"id":26478,"className":"org.apache.commons.math.estimation.LevenbergMarquardtEstimator","methodName":"LevenbergMarquardtEstimator","signature":"\u003corg.apache.commons.math.estimation.LevenbergMarquardtEstimator: void LevenbergMarquardtEstimator()\u003e","javadoc":"/** \n * Build an estimator for least squares problems. \u003cp\u003eThe default values for the algorithm settings are: \u003cul\u003e \u003cli\u003e {@link #setInitialStepBoundFactor initial step bound factor}: 100.0\u003c/li\u003e \u003cli\u003e {@link #setMaxCostEval maximal cost evaluations}: 1000\u003c/li\u003e \u003cli\u003e {@link #setCostRelativeTolerance cost relative tolerance}: 1.0e-10\u003c/li\u003e \u003cli\u003e {@link #setParRelativeTolerance parameters relative tolerance}: 1.0e-10\u003c/li\u003e \u003cli\u003e {@link #setOrthoTolerance orthogonality tolerance}: 1.0e-10\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e\n */\n","tf":{"freq":{"squar":1,"least":1,"link":5,"build":1,"algorithm":1,"par":1,"maxim":1,"estim":2,"relat":4,"levenberg":1,"valu":1,"initi":2,"toler":6,"ortho":1,"max":1,"eval":1,"orthogon":1,"paramet":1,"problem":1,"factor":2,"evalu":1,"cost":4,"step":2,"marquardt":1,"bound":2},"maxFreq":6,"totalTerms":45},"loc":12}