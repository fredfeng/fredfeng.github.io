{"id":21863,"className":"org.apache.commons.math3.linear.MatrixUtils","methodName":"inverse","signature":"\u003corg.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix inverse(org.apache.commons.math3.linear.RealMatrix)\u003e","javadoc":"/** \n * Computes the inverse of the given matrix. \u003cp\u003e By default, the inverse of the matrix is computed using the QR-decomposition, unless a more efficient method can be determined for the input matrix. \u003cp\u003e Note: this method will use a singularity threshold of 0, use  {@link #inverse(RealMatrix,double)} if a different threshold is needed.\n * @param matrix Matrix whose inverse shall be computed\n * @return the inverse of {@code matrix}\n * @throws NullArgumentException if {@code matrix} is {@code null}\n * @throws SingularMatrixException if m is singular\n * @throws NonSquareMatrixException if matrix is not square\n * @since 3.3\n */\n","tf":{"freq":{"argument":1,"need":1,"squar":2,"except":3,"whose":1,"link":1,"matrix":11,"use":3,"singular":3,"non":1,"shall":1,"threshold":2,"differ":1,"real":1,"input":1,"invers":6,"given":1,"unless":1,"decomposit":1,"determin":1,"will":1,"comput":3,"method":2,"effici":1,"note":1},"maxFreq":11,"totalTerms":51},"loc":3}