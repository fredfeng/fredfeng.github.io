{"id":22975,"className":"org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer","methodName":"optimize","signature":"\u003corg.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer: org.apache.commons.math.optimization.VectorialPointValuePair optimize(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[])\u003e","javadoc":"/** \n * Optimizes an objective function. \u003cp\u003e Optimization is considered to be a weighted least-squares minimization. The cost function to be minimized is \u0026sum;weight\u003csub\u003ei\u003c/sub\u003e(objective\u003csub\u003ei\u003c/sub\u003e-target\u003csub\u003ei\u003c/sub\u003e)\u003csup\u003e2\u003c/sup\u003e \u003c/p\u003e\n * @param f objective function\n * @param target target value for the objective functions at optimum\n * @param weights weight for the least squares cost computation\n * @param startPoint the start point for optimization\n * @return the point/value pair giving the optimal value for objective function\n * @exception FunctionEvaluationException if the objective function throws one duringthe search\n * @exception OptimizationException if the algorithm failed to converge\n * @exception IllegalArgumentException if the start point dimension is wrong\n */\n","tf":{"freq":{"squar":2,"duringth":1,"sub":6,"weight":4,"optimum":1,"pair":1,"give":1,"least":2,"one":1,"sum":1,"object":6,"sup":2,"consid":1,"algorithm":1,"function":7,"minim":2,"fail":1,"search":1,"valu":3,"converg":1,"argument":1,"except":6,"optim":6,"evalu":1,"dimens":1,"illeg":1,"cost":2,"point":4,"start":3,"target":3,"comput":1,"wrong":1},"maxFreq":7,"totalTerms":75},"loc":0}