{"id":23294,"className":"org.apache.commons.math.analysis.interpolation.LoessInterpolator","methodName":"interpolate","signature":"\u003corg.apache.commons.math.analysis.interpolation.LoessInterpolator: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction interpolate(double[],double[])\u003e","javadoc":"/** \n * Compute an interpolating function by performing a loess fit on the data at the original abscissae and then building a cubic spline with a {@link org.apache.commons.math.analysis.interpolation.SplineInterpolator}on the resulting fit.\n * @param xval the arguments for the interpolation points\n * @param yval the values for the interpolation points\n * @return A cubic spline built upon a loess fit to the data at the original abscissae\n * @throws MathException  if some of the following conditions are false:\u003cul\u003e \u003cli\u003e Arguments and values are of the same size that is greater than zero\u003c/li\u003e \u003cli\u003e The arguments are in a strictly increasing order\u003c/li\u003e \u003cli\u003e All arguments and values are finite real numbers\u003c/li\u003e \u003c/ul\u003e\n */\n","tf":{"freq":{"increas":1,"fals":1,"result":1,"greater":1,"common":1,"link":1,"data":2,"perform":1,"zero":1,"build":1,"org":1,"xval":1,"function":1,"real":1,"fit":3,"order":1,"finit":1,"interpol":6,"valu":3,"analysi":1,"built":1,"follow":1,"condit":1,"argument":4,"except":1,"abscissa":2,"cubic":2,"origin":2,"apach":1,"yval":1,"number":1,"size":1,"math":2,"point":2,"spline":3,"loess":2,"comput":1,"strict":1,"upon":1},"maxFreq":6,"totalTerms":60},"loc":3}