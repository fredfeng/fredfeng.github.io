{"id":24794,"className":"org.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity","methodName":"computeOmega","signature":"\u003corg.apache.commons.math.transform.FastFourierTransformer$RootsOfUnity: void computeOmega(int)\u003e","javadoc":"/** \n * Computes the n\u003csup\u003eth\u003c/sup\u003e roots of unity. \u003cp\u003eThe computed omega[] \u003d { 1, w, w\u003csup\u003e2\u003c/sup\u003e, ... w\u003csup\u003e(n-1)\u003c/sup\u003e } where w \u003d exp(-2 \u0026pi; i / n), i \u003d \u0026sqrt;(-1).\u003c/p\u003e \u003cp\u003eNote that n is positive for forward transform and negative for inverse transform.\u003c/p\u003e\n * @param n number of roots of unity to compute,positive for forward transform, negative for inverse transform\n * @throws IllegalArgumentException if n \u003d 0\n */\n","tf":{"freq":{"argument":1,"except":1,"uniti":2,"root":2,"sqrt":1,"number":1,"sup":6,"illeg":1,"omega":2,"exp":1,"transform":4,"invers":2,"forward":2,"comput":4,"negat":2,"posit":2,"note":1},"maxFreq":6,"totalTerms":35},"loc":36}