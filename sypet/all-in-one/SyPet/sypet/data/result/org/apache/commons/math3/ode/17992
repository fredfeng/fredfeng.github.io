{"id":17992,"className":"org.apache.commons.math3.ode.ParameterJacobianProvider","methodName":"computeParameterJacobian","signature":"\u003corg.apache.commons.math3.ode.ParameterJacobianProvider: void computeParameterJacobian(double,double[],double[],java.lang.String,double[])\u003e","javadoc":"/** \n * Compute the Jacobian matrix of ODE with respect to one parameter. \u003cp\u003eIf the parameter does not belong to the collection returned by {@link #getParametersNames()}, the Jacobian will be set to 0, but no errors will be triggered.\u003c/p\u003e\n * @param t current value of the independent \u003cI\u003etime\u003c/I\u003e variable\n * @param y array containing the current value of the main state vector\n * @param yDot array containing the current value of the time derivativeof the main state vector\n * @param paramName name of the parameter to consider\n * @param dFdP placeholder array where to put the Jacobian matrix of theODE with respect to the parameter\n * @exception MaxCountExceededException if the number of functions evaluations is exceeded\n * @exception DimensionMismatchException if arrays dimensions do not match equations settings\n * @exception UnknownParameterException if the parameter is not supported\n */\n","tf":{"freq":{"jacobian":4,"put":1,"count":1,"belong":1,"link":1,"one":1,"variabl":1,"state":2,"consid":1,"dot":1,"function":1,"independ":1,"time":2,"vector":2,"name":3,"current":3,"valu":3,"trigger":1,"equat":1,"except":6,"support":1,"max":1,"error":1,"derivativeof":1,"matrix":2,"exceed":2,"paramet":8,"number":1,"unknown":1,"evalu":1,"dimens":2,"main":2,"placehold":1,"contain":2,"will":2,"comput":2,"match":1,"mismatch":1,"respect":2,"collect":1,"array":4},"maxFreq":8,"totalTerms":76},"loc":0}