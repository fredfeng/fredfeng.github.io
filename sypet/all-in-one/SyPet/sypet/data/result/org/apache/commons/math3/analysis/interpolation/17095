{"id":17095,"className":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator","methodName":"addSamplePoint","signature":"\u003corg.apache.commons.math3.analysis.interpolation.HermiteInterpolator: void addSamplePoint(double,double[][])\u003e","javadoc":"/** \n * Add a sample point. \u003cp\u003e This method must be called once for each sample point. It is allowed to mix some calls with values only with calls with values and first derivatives. \u003c/p\u003e \u003cp\u003e The point abscissae for all calls \u003cem\u003emust\u003c/em\u003e be different. \u003c/p\u003e\n * @param x abscissa of the sample point\n * @param value value and derivatives of the sample point(if only one row is passed, it is the value, if two rows are passed the first one is the value and the second the derivative and so on)\n * @exception ZeroException if the abscissa difference between added pointand a previous point is zero (i.e. the two points are at same abscissa)\n * @exception MathArithmeticException if the number of derivatives is largerthan 20, which prevents computation of a factorial\n */\n","tf":{"freq":{"call":4,"allow":1,"second":1,"deriv":4,"pointand":1,"one":2,"arithmet":1,"add":2,"zero":2,"must":2,"factori":1,"valu":6,"except":4,"previous":1,"abscissa":4,"prevent":1,"number":1,"mix":1,"row":2,"largerthan":1,"pass":2,"math":1,"point":8,"differ":2,"two":2,"comput":1,"ad":1,"method":1,"first":2,"sampl":5},"maxFreq":8,"totalTerms":67},"loc":37}