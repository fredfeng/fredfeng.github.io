{"id":15600,"className":"org.apache.commons.math3.distribution.GumbelDistribution","methodName":"GumbelDistribution","signature":"\u003corg.apache.commons.math3.distribution.GumbelDistribution: void GumbelDistribution(double,double)\u003e","javadoc":"/** \n * Build a new instance. \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e this constructor will implicitly create an instance of {@link Well19937c} as random generator to be used for sampling only (see{@link #sample()} and {@link #sample(int)}). In case no sampling is needed for the created distribution, it is advised to pass  {@code null}as random generator via the appropriate constructors to avoid the additional initialisation overhead.\n * @param mu location parameter\n * @param beta scale parameter (must be positive)\n * @throws NotStrictlyPositiveException if {@code beta \u003c\u003d 0}\n */\n","tf":{"freq":{"need":1,"scale":1,"via":1,"link":3,"implicit":1,"distribut":2,"use":1,"well":1,"beta":2,"build":1,"must":1,"advis":1,"avoid":1,"overhead":1,"gumbel":1,"note":1,"constructor":2,"addit":1,"except":1,"locat":1,"initialis":1,"creat":2,"paramet":2,"random":2,"instanc":2,"pass":1,"appropri":1,"generat":2,"will":1,"strict":1,"posit":2,"sampl":4},"maxFreq":4,"totalTerms":46},"loc":3}