{"id":23225,"className":"org.apache.commons.math.analysis.ComposableFunction","methodName":"asCollector","signature":"\u003corg.apache.commons.math.analysis.ComposableFunction: org.apache.commons.math.analysis.MultivariateRealFunction asCollector(org.apache.commons.math.analysis.BivariateRealFunction,double)\u003e","javadoc":"/** \n * Generates a function that iteratively apply instance function on all elements of an array. \u003cp\u003e The generated function behaves as follows: \u003cul\u003e \u003cli\u003einitialize result \u003d initialValue\u003c/li\u003e \u003cli\u003eiterate:  {@code result \u003d combiner.value(result,this.value(nextMultivariateEntry));}\u003c/li\u003e \u003cli\u003ereturn result\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e\n * @param combiner combiner to use between entries\n * @param initialValue initial value to use before first entry\n * @return a new function that iteratively apply instance function on allelements of an array.\n */\n","tf":{"freq":{"element":1,"result":4,"entri":3,"behav":1,"next":1,"use":2,"function":5,"instanc":2,"collector":1,"multivari":1,"appli":2,"allel":1,"generat":2,"combin":3,"valu":5,"initi":4,"iter":3,"first":1,"array":2,"follow":1},"maxFreq":5,"totalTerms":45},"loc":13}