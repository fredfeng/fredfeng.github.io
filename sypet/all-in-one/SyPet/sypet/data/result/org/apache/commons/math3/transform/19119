{"id":19119,"className":"org.apache.commons.math3.transform.RealTransformer","methodName":"transform","signature":"\u003corg.apache.commons.math3.transform.RealTransformer: double[] transform(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,org.apache.commons.math3.transform.TransformType)\u003e","javadoc":"/** \n * Returns the (forward, inverse) transform of the specified real function, sampled on the specified interval.\n * @param f the function to be sampled and transformed\n * @param min the (inclusive) lower bound for the interval\n * @param max the (exclusive) upper bound for the interval\n * @param n the number of sample points\n * @param type the type of transform (forward, inverse) to be performed\n * @return the real transformed array\n * @throws NonMonotonicSequenceException if the lower bound is greater than, or equal to the upper bound\n * @throws NotStrictlyPositiveException if the number of sample points is negative\n * @throws MathIllegalArgumentException if the sample cannot be transformedwith the given type (this may be for example due to sample size, which is constrained in some transforms)\n */\n","tf":{"freq":{"constrain":1,"greater":1,"lower":2,"perform":1,"type":3,"function":2,"specifi":2,"inclus":1,"real":2,"transform":6,"upper":2,"invers":2,"given":1,"forward":2,"sequenc":1,"exclus":1,"argument":1,"min":1,"may":1,"except":3,"max":1,"equal":1,"number":2,"illeg":1,"size":1,"non":1,"monoton":1,"math":1,"interv":3,"point":2,"transformedwith":1,"exampl":1,"due":1,"negat":1,"strict":1,"posit":1,"bound":4,"sampl":6,"array":1},"maxFreq":6,"totalTerms":67},"loc":0}