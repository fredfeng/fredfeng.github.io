{"id":15972,"className":"org.apache.commons.math3.genetics.NPointCrossover","methodName":"crossover","signature":"\u003corg.apache.commons.math3.genetics.NPointCrossover: org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome)\u003e","javadoc":"/** \n * Performs a N-point crossover. N random crossover points are selected and are used to divide the parent chromosomes into segments. The segments are copied in alternate order from the two parents to the corresponding child chromosomes. Example (2-point crossover): \u003cpre\u003e -C- denotes a crossover point -C-       -C-                         -C-        -C- p1 \u003d (1 0  | 1 0 0 1 | 0 1 1)    X    p2 \u003d (0 1  | 1 0 1 0  | 1 1 1) \\----/ \\-------/ \\-----/              \\----/ \\--------/ \\-----/ ||      (*)       ||                  ||      (**)       || VV      (**)      VV                  VV      (*)        VV /----\\ /--------\\ /-----\\             /----\\ /--------\\ /-----\\ c1 \u003d (1 0  | 1 0 1 0  | 0 1 1)    X   c2 \u003d (0 1  | 1 0 0 1  | 0 1 1) \u003c/pre\u003e\n * @param first first parent (p1)\n * @param second second parent (p2)\n * @return pair of two children (c1,c2)\n * @throws MathIllegalArgumentException iff one of the chromosomes isnot an instance of  {@link AbstractListChromosome}\n * @throws DimensionMismatchException if the length of the two chromosomes is different\n */\n","tf":{"freq":{"second":2,"pair":1,"segment":2,"correspond":1,"link":1,"one":1,"denot":1,"use":1,"children":1,"perform":1,"copi":1,"child":1,"isnot":1,"altern":1,"order":1,"chromosom":5,"length":1,"argument":1,"except":2,"select":1,"random":1,"parent":4,"divid":1,"list":1,"crossov":5,"dimens":1,"illeg":1,"instanc":1,"math":1,"differ":1,"point":4,"two":3,"iff":1,"pre":2,"exampl":1,"mismatch":1,"first":2},"maxFreq":5,"totalTerms":58},"loc":7}