{"id":23753,"className":"org.apache.commons.math.ode.events.EventHandler","methodName":"resetState","signature":"\u003corg.apache.commons.math.ode.events.EventHandler: void resetState(double,double[])\u003e","javadoc":"/** \n * Reset the state prior to continue the integration. \u003cp\u003eThis method is called after the step handler has returned and before the next step is started, but only when  {@link #eventOccurred} has itself returned the {@link #RESET_STATE}indicator. It allows the user to reset the state vector for the next step, without perturbing the step handler of the finishing step. If the  {@link #eventOccurred} never returns the {@link #RESET_STATE} indicator, this function will never be called, and it issafe to leave its body empty.\u003c/p\u003e\n * @param t current value of the independent \u003ci\u003etime\u003c/i\u003e variable\n * @param y array containing the current value of the state vectorthe new state should be put in the same array\n * @exception EventException if the state cannot be reseted\n */\n","tf":{"freq":{"call":2,"put":1,"integr":1,"allow":1,"issaf":1,"variabl":1,"link":4,"next":2,"state":6,"prior":1,"function":1,"time":1,"independ":1,"indic":2,"event":3,"vector":1,"current":2,"reset":4,"valu":2,"perturb":1,"except":2,"without":1,"continu":1,"empti":1,"finish":1,"bodi":1,"never":2,"start":1,"contain":1,"leav":1,"will":1,"vectorth":1,"method":1,"user":1,"step":5,"array":2,"handler":2,"occur":2},"maxFreq":6,"totalTerms":65},"loc":0}