{"id":19976,"className":"org.apache.commons.math3.geometry.partitioning.BSPTree","methodName":"pruneAroundConvexCell","signature":"\u003corg.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree\u003cS\u003e pruneAroundConvexCell(java.lang.Object,java.lang.Object,java.lang.Object)\u003e","javadoc":"/** \n * Prune a tree around a cell. \u003cp\u003e This method can be used to extract a convex cell from a tree. The original cell may either be a leaf node or an internal node. If it is an internal node, it\u0027s subtree will be ignored (i.e. the extracted cell will be a leaf node in all cases). The original tree to which the original cell belongs is not touched at all, a new independent tree will be built. \u003c/p\u003e\n * @param cellAttribute attribute to set for the leaf nodecorresponding to the initial instance cell\n * @param otherLeafsAttributes attribute to set for the other leafnodes\n * @param internalAttributes attribute to set for the internal nodes\n * @return a new tree (the original tree is left untouched) containinga single branch with the cell as a leaf node, and other leaf nodes as the remnants of the pruned branches\n * @since 3.3\n */\n","tf":{"freq":{"belong":1,"singl":1,"remnant":1,"leafnod":1,"use":1,"leaf":6,"independ":1,"nodecorrespond":1,"attribut":6,"tree":6,"left":1,"subtre":1,"initi":1,"built":1,"convex":2,"may":1,"ignor":1,"prune":3,"cell":9,"origin":4,"containinga":1,"extract":2,"instanc":1,"around":2,"either":1,"node":7,"touch":1,"intern":4,"will":3,"branch":2,"method":1,"untouch":1},"maxFreq":9,"totalTerms":75},"loc":19}