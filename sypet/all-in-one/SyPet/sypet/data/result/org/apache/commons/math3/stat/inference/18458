{"id":18458,"className":"org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest","methodName":"exactP","signature":"\u003corg.apache.commons.math3.stat.inference.KolmogorovSmirnovTest: double exactP(double,int,int,boolean)\u003e","javadoc":"/** \n * Computes \\(P(D_{n,m} \u003e d)\\) if  {@code strict} is {@code true}; otherwise \\(P(D_{n,m} \\ge d)\\), where \\(D_{n,m}\\) is the 2-sample Kolmogorov-Smirnov statistic. See {@link #kolmogorovSmirnovStatistic(double[],double[])} for the definition of \\(D_{n,m}\\).\u003cp\u003e The returned probability is exact, obtained by enumerating all partitions of  {@code m + n}into  {@code m} and {@code n} sets, computing \\(D_{n,m}\\) for each partition and counting thenumber of partitions that yield \\(D_{n,m}\\) values exceeding (resp. greater than or equal to) {@code d}. \u003c/p\u003e \u003cp\u003e \u003cstrong\u003eUSAGE NOTE\u003c/strong\u003e: Since this method enumerates all combinations in \\({m+n} \\choose {n}\\), it is very slow if called for large  {@code m, n}. For this reason, {@link #kolmogorovSmirnovTest(double[],double[])} uses this only for {@code m * n \u003c }{@value #SMALL_SAMPLE_PRODUCT}. \u003c/p\u003e\n * @param d D-statistic value\n * @param n first sample size\n * @param m second sample size\n * @param strict whether or not the probability to compute is expressed as a strict inequality\n * @return probability that a randomly selected m-n partition of m + n generates \\(D_{n,m}\\)greater than (resp. greater than or equal to)  {@code d}\n */\n","tf":{"freq":{"otherwis":1,"call":1,"greater":3,"second":1,"count":1,"test":1,"reason":1,"yield":1,"link":2,"partit":4,"use":1,"express":1,"whether":1,"inequ":1,"probabl":3,"smirnov":3,"exact":2,"combin":1,"choos":1,"valu":3,"slow":1,"select":1,"random":1,"exceed":1,"true":1,"equal":2,"statist":3,"size":2,"kolmogorov":3,"obtain":1,"strong":2,"larg":1,"generat":1,"definit":1,"comput":3,"method":1,"strict":3,"first":1,"sampl":3,"thenumb":1,"resp":2},"maxFreq":4,"totalTerms":68},"loc":27}