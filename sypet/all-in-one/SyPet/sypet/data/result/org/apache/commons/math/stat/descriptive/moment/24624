{"id":24624,"className":"org.apache.commons.math.stat.descriptive.moment.Variance","methodName":"evaluate","signature":"\u003corg.apache.commons.math.stat.descriptive.moment.Variance: double evaluate(double[],double)\u003e","javadoc":"/** \n * Returns the variance of the entries in the input array, using the precomputed mean value.  Returns \u003ccode\u003eDouble.NaN\u003c/code\u003e if the array is empty. \u003cp\u003e See  {@link Variance} for details on the computing algorithm.\u003c/p\u003e\u003cp\u003e If \u003ccode\u003eisBiasCorrected\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e the formula used assumes that the supplied mean value is the arithmetic mean of the sample data, not a known population parameter.  If the mean is a known population parameter, or if the \"population\" version of the variance is desired, set \u003ccode\u003eisBiasCorrected\u003c/code\u003e to \u003ccode\u003efalse\u003c/code\u003e before invoking this method.\u003c/p\u003e \u003cp\u003e Returns 0 for a single-value (i.e. length \u003d 1) sample.\u003c/p\u003e \u003cp\u003e Throws \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if the array is null.\u003c/p\u003e \u003cp\u003e Does not change the internal state of the statistic.\u003c/p\u003e\n * @param values the input array\n * @param mean the precomputed mean value\n * @return the variance of the values or Double.NaN if the array is empty\n * @throws IllegalArgumentException if the array is null\n */\n","tf":{"freq":{"fals":1,"detail":1,"singl":1,"link":1,"state":1,"arithmet":1,"data":1,"use":2,"desir":1,"version":1,"algorithm":1,"popul":3,"correct":2,"length":1,"mean":6,"valu":6,"bias":2,"precomput":2,"argument":2,"except":2,"assum":1,"invok":1,"entri":1,"paramet":2,"true":1,"suppli":1,"evalu":1,"illeg":2,"statist":1,"empti":2,"input":2,"varianc":4,"intern":1,"comput":1,"method":1,"chang":1,"known":2,"sampl":2,"array":6,"formula":1},"maxFreq":6,"totalTerms":72},"loc":3}