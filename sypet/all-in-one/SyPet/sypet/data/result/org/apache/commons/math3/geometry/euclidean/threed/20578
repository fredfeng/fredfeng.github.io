{"id":20578,"className":"org.apache.commons.math3.geometry.euclidean.threed.SubLine","methodName":"intersection","signature":"\u003corg.apache.commons.math3.geometry.euclidean.threed.SubLine: org.apache.commons.math3.geometry.euclidean.threed.Vector3D intersection(org.apache.commons.math3.geometry.euclidean.threed.SubLine,boolean)\u003e","javadoc":"/** \n * Get the intersection of the instance and another sub-line. \u003cp\u003e This method is related to the  {@link Line#intersection(Line) intersection} method in the {@link Line Line} class, but in additionto compute the point along infinite lines, it also checks the point lies on both sub-line ranges. \u003c/p\u003e\n * @param subLine other sub-line which may intersect instance\n * @param includeEndPoints if true, endpoints are considered to belong toinstance (i.e. they are closed sets) and may be returned, otherwise endpoints are considered to not belong to instance (i.e. they are open sets) and intersection occurring on endpoints lead to null being returned\n * @return the intersection point if there is one, null if the sub-lines don\u0027t intersect\n */\n","tf":{"freq":{"otherwis":1,"sub":5,"additionto":1,"belong":2,"one":1,"link":2,"lead":1,"line":10,"anoth":1,"consid":2,"close":1,"open":1,"infinit":1,"rang":1,"relat":1,"along":1,"end":1,"may":2,"includ":1,"check":1,"true":1,"endpoint":3,"instanc":3,"point":4,"intersect":8,"comput":1,"method":2,"also":1,"lie":1,"occur":1,"toinstanc":1},"maxFreq":10,"totalTerms":63},"loc":21}