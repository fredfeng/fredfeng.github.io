{"id":15656,"className":"org.apache.commons.math3.distribution.IntegerDistribution","methodName":"inverseCumulativeProbability","signature":"\u003corg.apache.commons.math3.distribution.IntegerDistribution: int inverseCumulativeProbability(double)\u003e","javadoc":"/** \n * Computes the quantile function of this distribution. For a random variable  {@code X} distributed according to this distribution,the returned value is \u003cul\u003e \u003cli\u003e\u003ccode\u003einf{x in Z | P(X\u003c\u003dx) \u003e\u003d p}\u003c/code\u003e for  {@code 0 \u003c p \u003c\u003d 1},\u003c/li\u003e \u003cli\u003e\u003ccode\u003einf{x in Z | P(X\u003c\u003dx) \u003e 0}\u003c/code\u003e for  {@code p \u003d 0}.\u003c/li\u003e \u003c/ul\u003e If the result exceeds the range of the data type  {@code int}, then  {@code Integer.MIN_VALUE} or {@code Integer.MAX_VALUE} is returned.\n * @param p the cumulative probability\n * @return the smallest {@code p}-quantile of this distribution (largest 0-quantile for  {@code p \u003d 0})\n * @throws OutOfRangeException if {@code p \u003c 0} or {@code p \u003e 1}\n */\n","tf":{"freq":{"result":1,"except":1,"quantil":3,"smallest":1,"variabl":1,"data":1,"exceed":1,"distribut":4,"random":1,"inf":2,"accord":1,"type":1,"largest":1,"function":1,"cumul":2,"invers":1,"probabl":2,"rang":2,"comput":1,"valu":1,"integ":2},"maxFreq":4,"totalTerms":31},"loc":0}