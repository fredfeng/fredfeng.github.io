{"id":22764,"className":"org.apache.commons.math.special.Gamma","methodName":"regularizedGammaP","signature":"\u003corg.apache.commons.math.special.Gamma: double regularizedGammaP(double,double,double,int)\u003e","javadoc":"/** \n * Returns the regularized gamma function P(a, x). The implementation of this method is based on: \u003cul\u003e \u003cli\u003e \u003ca href\u003d\"http://mathworld.wolfram.com/RegularizedGammaFunction.html\"\u003e Regularized Gamma Function\u003c/a\u003e, equation (1).\u003c/li\u003e \u003cli\u003e \u003ca href\u003d\"http://mathworld.wolfram.com/IncompleteGammaFunction.html\"\u003e Incomplete Gamma Function\u003c/a\u003e, equation (4).\u003c/li\u003e \u003cli\u003e \u003ca href\u003d\"http://mathworld.wolfram.com/ConfluentHypergeometricFunctionoftheFirstKind.html\"\u003e Confluent Hypergeometric Function of the First Kind\u003c/a\u003e, equation (1). \u003c/li\u003e \u003c/ul\u003e\n * @param a the a parameter.\n * @param x the value.\n * @param epsilon When the absolute value of the nth item in theseries is less than epsilon the approximation ceases to calculate further elements in the series.\n * @param maxIterations Maximum number of \"iterations\" to complete.\n * @return the regularized gamma function P(a, x)\n * @throws MathException if the algorithm fails to converge.\n */\n","tf":{"freq":{"incomplet":2,"com":3,"seri":1,"ceas":1,"confluent":2,"approxim":1,"functionofth":1,"kind":2,"algorithm":1,"function":7,"gamma":7,"fail":1,"theseri":1,"wolfram":3,"epsilon":2,"nth":1,"valu":2,"converg":1,"href":3,"less":1,"hypergeometr":2,"complet":1,"element":1,"except":1,"equat":3,"max":1,"regular":5,"calcul":1,"paramet":1,"number":1,"absolut":1,"math":1,"http":3,"maximum":1,"item":1,"mathworld":3,"base":1,"html":3,"method":1,"iter":2,"first":2},"maxFreq":7,"totalTerms":79},"loc":35}