{"id":16579,"className":"org.apache.commons.math3.optimization.LeastSquaresConverter","methodName":"LeastSquaresConverter","signature":"\u003corg.apache.commons.math3.optimization.LeastSquaresConverter: void LeastSquaresConverter(org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[])\u003e","javadoc":"/** \n * Build a simple converter for uncorrelated residuals with the specific weights. \u003cp\u003e The scalar objective function value is computed as: \u003cpre\u003e objective \u003d \u0026sum;weight\u003csub\u003ei\u003c/sub\u003e(observation\u003csub\u003ei\u003c/sub\u003e-objective\u003csub\u003ei\u003c/sub\u003e)\u003csup\u003e2\u003c/sup\u003e \u003c/pre\u003e \u003c/p\u003e \u003cp\u003e Weights can be used for example to combine residuals with different standard deviations. As an example, consider a residuals array in which even elements are angular measurements in degrees with a 0.01\u0026deg; standard deviation and odd elements are distance measurements in meters with a 15m standard deviation. In this case, the weights array should be initialized with value 1.0/(0.01\u003csup\u003e2\u003c/sup\u003e) in the even elements and 1.0/(15.0\u003csup\u003e2\u003c/sup\u003e) in the odd elements (i.e. reciprocals of variances). \u003c/p\u003e \u003cp\u003e The array computed by the objective function, the observations array and the weights array must have consistent sizes or a  {@link DimensionMismatchException}will be triggered while computing the scalar objective. \u003c/p\u003e\n * @param function vectorial residuals function to wrap\n * @param observations observations to be compared to objective function to compute residuals\n * @param weights weights to apply to the residuals\n * @exception DimensionMismatchException if the observations vector and the weightsvector dimensions do not match (objective function dimension is checked only when the  {@link #value(double[])} method is called)\n */\n","tf":{"freq":{"squar":1,"simpl":1,"least":1,"deviat":3,"must":1,"function":6,"meter":1,"observ":5,"combin":1,"wrap":1,"element":4,"except":3,"consist":1,"vectori":1,"size":1,"degre":1,"appli":1,"varianc":1,"weightsvector":1,"distanc":1,"will":1,"comput":4,"even":2,"match":1,"odd":2,"compar":1,"array":5,"call":1,"sub":6,"weight":7,"residu":6,"link":2,"use":1,"sum":1,"convert":2,"angular":1,"object":7,"sup":6,"build":1,"consid":1,"reciproc":1,"vector":1,"deg":1,"valu":3,"initi":1,"trigger":1,"check":1,"standard":3,"scalar":2,"uncorrel":1,"dimens":4,"differ":1,"specif":1,"pre":2,"exampl":2,"method":1,"measur":2,"mismatch":2},"maxFreq":7,"totalTerms":124},"loc":9}