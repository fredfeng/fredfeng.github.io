{"id":16772,"className":"org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer","methodName":"UnivariateMultiStartOptimizer","signature":"\u003corg.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer: void UnivariateMultiStartOptimizer(org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer,int,org.apache.commons.math3.random.RandomGenerator)\u003e","javadoc":"/** \n * Create a multi-start optimizer from a single-start optimizer.\n * @param optimizer Single-start optimizer to wrap.\n * @param starts Number of starts to perform. If {@code starts \u003d\u003d 1}, the  {@code optimize} methods will return the same solution as{@code optimizer} would.\n * @param generator Random generator to use for restarts.\n * @throws NullArgumentException if {@code optimizer} or {@code generator}is  {@code null}.\n * @throws NotStrictlyPositiveException if {@code starts \u003c 1}.\n */\n","tf":{"freq":{"argument":1,"solut":1,"wrap":1,"except":2,"restart":1,"optim":8,"creat":1,"singl":2,"random":1,"use":1,"number":1,"perform":1,"start":8,"generat":3,"univari":1,"multi":2,"will":1,"method":1,"strict":1,"posit":1},"maxFreq":8,"totalTerms":39},"loc":13}