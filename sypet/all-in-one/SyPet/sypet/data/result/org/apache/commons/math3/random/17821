{"id":17821,"className":"org.apache.commons.math3.random.HaltonSequenceGenerator","methodName":"HaltonSequenceGenerator","signature":"\u003corg.apache.commons.math3.random.HaltonSequenceGenerator: void HaltonSequenceGenerator(int,int[],int[])\u003e","javadoc":"/** \n * Construct a new Halton sequence generator with the given base numbers and weights for each dimension. The length of the bases array defines the space dimension and is required to be \u0026gt; 0.\n * @param dimension the space dimension\n * @param bases the base number for each dimension, entries should be (pairwise) prime, may not be null\n * @param weights the weights used during scrambling, may be null in which case no scrambling will be performed\n * @throws NullArgumentException if base is null\n * @throws OutOfRangeException if the space dimension is outside the range [1, len], wherelen refers to the length of the bases array\n * @throws DimensionMismatchException if weights is non-null and the length of the input arrays differ\n */\n","tf":{"freq":{"defin":1,"weight":4,"pairwis":1,"use":1,"perform":1,"space":3,"halton":2,"requir":1,"given":1,"refer":1,"rang":2,"sequenc":2,"length":3,"wherelen":1,"argument":1,"may":2,"except":3,"entri":1,"number":2,"len":1,"dimens":7,"non":1,"prime":1,"differ":1,"input":1,"scrambl":2,"outsid":1,"generat":2,"base":6,"will":1,"construct":1,"mismatch":1,"array":3},"maxFreq":7,"totalTerms":62},"loc":17}