{"id":23816,"className":"org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator","methodName":"AdamsMoultonIntegrator","signature":"\u003corg.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator: void AdamsMoultonIntegrator(int,double,double,double[],double[])\u003e","javadoc":"/** \n * Build an Adams-Moulton integrator with the given order and error control parameters.\n * @param nSteps number of steps of the method excluding the one being computed\n * @param minStep minimal step (must be positive even for backwardintegration), the last step can be smaller than this\n * @param maxStep maximal step (must be positive even for backwardintegration)\n * @param vecAbsoluteTolerance allowed absolute error\n * @param vecRelativeTolerance allowed relative error\n * @exception IllegalArgumentException if order is 1 or less\n */\n","tf":{"freq":{"integr":2,"allow":2,"last":1,"one":1,"exclud":1,"build":1,"must":2,"smaller":1,"minim":1,"maxim":1,"order":2,"given":1,"moulton":2,"relat":2,"less":1,"toler":2,"argument":1,"min":1,"control":1,"except":2,"max":1,"error":3,"backwardintegr":2,"paramet":1,"number":1,"absolut":2,"illeg":1,"adam":2,"comput":1,"method":1,"even":2,"posit":2,"step":7,"vec":2},"maxFreq":7,"totalTerms":56},"loc":4}