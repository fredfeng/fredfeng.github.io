{"id":26644,"className":"org.apache.commons.math.complex.Complex","methodName":"exp","signature":"\u003corg.apache.commons.math.complex.Complex: org.apache.commons.math.complex.Complex exp()\u003e","javadoc":"/** \n * Compute the \u003ca href\u003d\"http://mathworld.wolfram.com/ExponentialFunction.html\" TARGET\u003d\"_top\"\u003e exponential function\u003c/a\u003e of this complex number. \u003cp\u003e Implements the formula: \u003cpre\u003e \u003ccode\u003e exp(a + bi) \u003d exp(a)cos(b) + exp(a)sin(b)i\u003c/code\u003e\u003c/pre\u003e where the (real) functions on the right-hand side are {@link java.lang.Math#exp},  {@link java.lang.Math#cos}, and {@link java.lang.Math#sin}.\u003c/p\u003e \u003cp\u003e Returns  {@link Complex#NaN} if either real or imaginary part of theinput argument is \u003ccode\u003eNaN\u003c/code\u003e.\u003c/p\u003e \u003cp\u003e Infinite values in real or imaginary parts of the input may result in infinite or NaN values returned in parts of the result.\u003cpre\u003e Examples: \u003ccode\u003e exp(1 \u0026plusmn; INFINITY i) \u003d NaN + NaN i exp(INFINITY + i) \u003d INFINITY + INFINITY i exp(-INFINITY + i) \u003d 0 + 0i exp(\u0026plusmn;INFINITY \u0026plusmn; INFINITY i) \u003d NaN + NaN i\u003c/code\u003e\u003c/pre\u003e\u003c/p\u003e\n * @return \u003ci\u003ee\u003c/i\u003e\u003csup\u003e\u003ccode\u003ethis\u003c/code\u003e\u003c/sup\u003e\n * @since 1.2\n */\n","tf":{"freq":{"result":2,"complex":2,"com":1,"cos":2,"link":4,"sup":2,"lang":3,"function":3,"theinput":1,"hand":1,"real":3,"infinit":2,"side":1,"plusmn":3,"exponenti":2,"wolfram":1,"valu":2,"imaginari":2,"href":1,"right":1,"top":1,"argument":1,"may":1,"number":1,"math":3,"exp":9,"input":1,"either":1,"http":1,"pre":4,"sin":2,"exampl":1,"mathworld":1,"comput":1,"html":1,"java":3,"part":3,"formula":1},"maxFreq":9,"totalTerms":75},"loc":8}