{"id":18422,"className":"org.apache.commons.math3.stat.inference.TTest","methodName":"pairedT","signature":"\u003corg.apache.commons.math3.stat.inference.TTest: double pairedT(double[],double[])\u003e","javadoc":"/** \n * Computes a paired, 2-sample t-statistic based on the data in the input arrays.  The t-statistic returned is equivalent to what would be returned by computing the one-sample t-statistic  {@link #t(double,double[])}, with \u003ccode\u003emu \u003d 0\u003c/code\u003e and the sample array consisting of the (signed) differences between corresponding entries in \u003ccode\u003esample1\u003c/code\u003e and \u003ccode\u003esample2.\u003c/code\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eThe input arrays must have the same length and their common length must be at least 2. \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\n * @param sample1 array of sample data values\n * @param sample2 array of sample data values\n * @return t statistic\n * @throws NullArgumentException if the arrays are \u003ccode\u003enull\u003c/code\u003e\n * @throws NoDataException if the arrays are empty\n * @throws DimensionMismatchException if the length of the arrays is not equal\n * @throws NumberIsTooSmallException if the length of the arrays is \u0026lt; 2\n */\n","tf":{"freq":{"pair":2,"common":1,"correspond":1,"least":1,"link":1,"one":1,"data":4,"precondit":1,"must":2,"equival":1,"length":4,"valu":2,"argument":1,"except":4,"consist":1,"entri":1,"number":1,"equal":1,"dimens":1,"statist":4,"empti":1,"sign":1,"differ":1,"input":2,"strong":2,"base":1,"comput":2,"mismatch":1,"small":1,"sampl":9,"array":9},"maxFreq":9,"totalTerms":65},"loc":10}