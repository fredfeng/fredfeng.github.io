{"id":22888,"className":"org.apache.commons.math.optimization.UnivariateRealOptimizer","methodName":"optimize","signature":"\u003corg.apache.commons.math.optimization.UnivariateRealOptimizer: double optimize(org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.optimization.GoalType,double,double,double)\u003e","javadoc":"/** \n * Find an optimum in the given interval, start at startValue. \u003cp\u003e An optimizer may require that the interval brackets a single optimum. \u003c/p\u003e\n * @param f the function to optimize.\n * @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE}or  {@link GoalType#MINIMIZE}.\n * @param min the lower bound for the interval.\n * @param max the upper bound for the interval.\n * @param startValue the start value to use.\n * @return a value where the function is optimum.\n * @throws ConvergenceException if the maximum iteration count is exceededor the optimizer detects convergence problems otherwise.\n * @throws FunctionEvaluationException if an error occurs evaluating the function.\n * @throws IllegalArgumentException if min \u003e max or the arguments do notsatisfy the requirements specified by the optimizer.\n * @throws IllegalStateException if there are no data.\n */\n","tf":{"freq":{"otherwis":1,"lower":1,"count":1,"optimum":3,"singl":1,"link":2,"data":1,"state":1,"use":1,"type":4,"bracket":1,"specifi":1,"function":4,"upper":1,"requir":2,"given":1,"valu":4,"converg":2,"find":1,"argument":2,"min":2,"detect":1,"may":1,"except":4,"max":2,"error":1,"optim":6,"problem":1,"evalu":2,"illeg":2,"goal":4,"interv":4,"either":1,"start":4,"maximum":1,"exceededor":1,"iter":1,"notsatisfi":1,"bound":2,"occur":1},"maxFreq":6,"totalTerms":77},"loc":0}