{"id":23342,"className":"org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm","methodName":"verifyInterpolationArray","signature":"\u003corg.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm: void verifyInterpolationArray(double[],double[])\u003e","javadoc":"/** \n * Verifies that the interpolation arrays are valid. \u003cp\u003e The arrays features checked by this method are that both arrays have the same length and this length is at least 2. \u003c/p\u003e \u003cp\u003e The interpolating points must be distinct. However it is not verified here, it is checked in evaluate() and computeCoefficients(). \u003c/p\u003e\n * @param x the interpolating points array\n * @param y the interpolating values array\n * @throws IllegalArgumentException if not valid\n * @see #evaluate(double[],double[],double)\n * @see #computeCoefficients()\n */\n","tf":{"freq":{"argument":1,"valid":2,"except":1,"check":2,"least":1,"evalu":2,"illeg":1,"must":1,"distinct":1,"point":2,"verifi":3,"interpol":5,"featur":1,"length":2,"comput":2,"valu":1,"method":1,"coeffici":2,"howev":1,"array":6},"maxFreq":6,"totalTerms":38},"loc":13}