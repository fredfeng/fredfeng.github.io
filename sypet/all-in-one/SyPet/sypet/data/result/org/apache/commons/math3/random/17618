{"id":17618,"className":"org.apache.commons.math3.random.RandomDataGenerator","methodName":"nextUniform","signature":"\u003corg.apache.commons.math3.random.RandomDataGenerator: double nextUniform(double,double,boolean)\u003e","javadoc":"/** \n * {@inheritDoc}\u003cp\u003e \u003cstrong\u003eAlgorithm Description\u003c/strong\u003e: if the lower bound is excluded, scales the output of Random.nextDouble(), but rejects 0 values (i.e., will generate another random double if Random.nextDouble() returns 0). This is necessary to provide a symmetric output interval (both endpoints excluded). \u003c/p\u003e\n * @throws NumberIsTooLargeException if {@code lower \u003e\u003d upper}\n * @throws NotFiniteNumberException if one of the bounds is infinite\n * @throws NotANumberException if one of the bounds is NaN\n */\n","tf":{"freq":{"scale":1,"reject":1,"lower":2,"one":2,"next":3,"symmetr":1,"exclud":2,"anoth":1,"necessari":1,"algorithm":1,"upper":1,"infinit":1,"finit":1,"valu":1,"except":3,"uniform":1,"random":3,"descript":1,"number":2,"provid":1,"endpoint":1,"interv":1,"strong":2,"larg":1,"generat":1,"will":1,"anumb":1,"output":2,"bound":3},"maxFreq":3,"totalTerms":43},"loc":28}