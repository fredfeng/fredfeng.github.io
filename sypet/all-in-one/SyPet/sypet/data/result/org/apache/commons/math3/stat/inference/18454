{"id":18454,"className":"org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest","methodName":"cdfExact","signature":"\u003corg.apache.commons.math3.stat.inference.KolmogorovSmirnovTest: double cdfExact(double,int)\u003e","javadoc":"/** \n * Calculates  {@code P(D_n \u003c d)}. The result is exact in the sense that BigFraction/BigReal is used everywhere at the expense of very slow execution time. Almost never choose this in real applications unless you are very sure; this is almost solely for verification purposes. Normally, you would choose  {@link #cdf(double,int)}. See the class javadoc for definitions and algorithm description.\n * @param d statistic\n * @param n sample size\n * @return \\(P(D_n \u003c d)\\)\n * @throws MathArithmeticException if the algorithm fails to convert {@code h} to a{@link org.apache.commons.math3.fraction.BigFraction} in expressing {@code d} as \\((k- h) / m\\) for integer  {@code k, m} and \\(0 \\le h \u003c 1\\)\n */\n","tf":{"freq":{"verif":1,"result":1,"everywher":1,"common":1,"link":2,"normal":1,"arithmet":1,"convert":1,"use":1,"javadoc":1,"express":1,"org":1,"applic":1,"algorithm":2,"real":2,"almost":2,"time":1,"fail":1,"unless":1,"exact":2,"choos":2,"purpos":1,"slow":1,"sens":1,"sole":1,"sure":1,"except":1,"fraction":3,"calcul":1,"apach":1,"descript":1,"statist":1,"size":1,"math":2,"never":1,"definit":1,"expens":1,"big":3,"execut":1,"integ":1,"sampl":1,"cdf":2},"maxFreq":3,"totalTerms":54},"loc":3}