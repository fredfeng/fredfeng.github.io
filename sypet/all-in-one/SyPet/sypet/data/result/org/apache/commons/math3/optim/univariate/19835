{"id":19835,"className":"org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker","methodName":"converged","signature":"\u003corg.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker: boolean converged(int,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair)\u003e","javadoc":"/** \n * Check if the optimization algorithm has converged considering the last two points. This method may be called several time from the same algorithm iteration with different points. This can be detected by checking the iteration number at each call if needed. Each time this method is called, the previous and current point correspond to points with the same role at each iteration, so they can be compared. As an example, simplex-based algorithms call this method for all points of the simplex, not only for the best or worst ones.\n * @param iteration Index of current iteration\n * @param previous Best point in the previous iteration.\n * @param current Best point in the current iteration.\n * @return {@code true} if the algorithm has converged.\n */\n","tf":{"freq":{"need":1,"call":4,"last":1,"correspond":1,"one":1,"consid":1,"algorithm":4,"time":2,"simplex":2,"current":4,"best":3,"role":1,"converg":3,"detect":1,"index":1,"may":1,"optim":1,"check":2,"previous":3,"worst":1,"true":1,"number":1,"sever":1,"point":7,"two":1,"differ":1,"base":1,"exampl":1,"method":3,"iter":7,"compar":1},"maxFreq":7,"totalTerms":63},"loc":12}