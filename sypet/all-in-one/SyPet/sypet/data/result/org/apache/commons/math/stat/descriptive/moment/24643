{"id":24643,"className":"org.apache.commons.math.stat.descriptive.moment.SemiVariance","methodName":"evaluate","signature":"\u003corg.apache.commons.math.stat.descriptive.moment.SemiVariance: double evaluate(double[],double,org.apache.commons.math.stat.descriptive.moment.Direction,boolean,int,int)\u003e","javadoc":"/** \n * \u003cp\u003eReturns the  {@link SemiVariance} of the designated values against the cutoffin the given direction with the provided bias correction.\u003c/p\u003e \u003cp\u003eReturns \u003ccode\u003eNaN\u003c/code\u003e if the array is empty and throws \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if the array is null.\u003c/p\u003e\n * @param values the input array\n * @param cutoff the reference point\n * @param direction the {@link Direction} of the semivariance\n * @param corrected the BiasCorrection flag\n * @param start index of the first array element to include\n * @param length the number of elements to include\n * @return the SemiVariance\n * @throws IllegalArgumentException if the parameters are not valid\n */\n","tf":{"freq":{"valid":1,"link":2,"cutoff":1,"correct":3,"given":1,"cutoffin":1,"refer":1,"length":1,"valu":2,"bias":2,"direct":3,"argument":2,"element":2,"index":1,"except":2,"includ":2,"semivari":1,"paramet":1,"number":1,"semi":2,"evalu":1,"provid":1,"illeg":2,"empti":1,"point":1,"varianc":2,"input":1,"flag":1,"start":1,"first":1,"design":1,"array":4},"maxFreq":4,"totalTerms":49},"loc":28}