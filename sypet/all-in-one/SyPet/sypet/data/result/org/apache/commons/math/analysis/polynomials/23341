{"id":23341,"className":"org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm","methodName":"evaluate","signature":"\u003corg.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm: double evaluate(double[],double[],double)\u003e","javadoc":"/** \n * Evaluate the Lagrange polynomial using \u003ca href\u003d\"http://mathworld.wolfram.com/NevillesAlgorithm.html\"\u003e Neville\u0027s Algorithm\u003c/a\u003e. It takes O(N^2) time. \u003cp\u003e This function is made public static so that users can call it directly without instantiating PolynomialFunctionLagrangeForm object.\u003c/p\u003e\n * @param x the interpolating points array\n * @param y the interpolating values array\n * @param z the point at which the function value is to be computed\n * @return the function value\n * @throws DuplicateSampleAbscissaException if the sample has duplicate abscissas\n * @throws IllegalArgumentException if inputs are not valid\n */\n","tf":{"freq":{"valid":1,"call":1,"com":1,"instanti":1,"made":1,"use":1,"object":1,"algorithm":2,"function":4,"time":1,"interpol":2,"wolfram":1,"lagrang":2,"valu":3,"href":1,"argument":1,"direct":1,"except":2,"form":1,"abscissa":2,"evalu":2,"illeg":1,"without":1,"point":2,"input":1,"http":1,"take":1,"duplic":2,"nevill":2,"mathworld":1,"comput":1,"html":1,"polynomi":2,"user":1,"sampl":2,"array":2},"maxFreq":4,"totalTerms":53},"loc":49}