{"id":17239,"className":"org.apache.commons.math3.analysis.differentiation.DSCompiler","methodName":"compose","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DSCompiler: void compose(double[],int,double[],double[],int)\u003e","javadoc":"/** \n * Compute composition of a derivative structure by a function.\n * @param operand array holding the operand\n * @param operandOffset offset of the operand in its array\n * @param f array of value and derivatives of the function atthe current point (i.e. at  {@code operand[operandOffset]}).\n * @param result array where result must be stored (forcomposition the result array \u003cem\u003ecannot\u003c/em\u003e be the input array)\n * @param resultOffset offset of the result in its array\n */\n","tf":{"freq":{"result":5,"store":1,"composit":1,"deriv":2,"structur":1,"hold":1,"compos":1,"operand":6,"must":1,"function":2,"point":1,"input":1,"forcomposit":1,"current":1,"comput":1,"valu":1,"offset":5,"atth":1,"array":7},"maxFreq":7,"totalTerms":40},"loc":15}