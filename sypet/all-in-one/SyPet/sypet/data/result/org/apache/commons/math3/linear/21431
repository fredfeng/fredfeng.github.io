{"id":21431,"className":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition","methodName":"RectangularCholeskyDecomposition","signature":"\u003corg.apache.commons.math3.linear.RectangularCholeskyDecomposition: void RectangularCholeskyDecomposition(org.apache.commons.math3.linear.RealMatrix,double)\u003e","javadoc":"/** \n * Decompose a symmetric positive semidefinite matrix.\n * @param matrix Symmetric positive semidefinite matrix.\n * @param small Diagonal elements threshold under which columns areconsidered to be dependent on previous ones and are discarded.\n * @exception NonPositiveDefiniteMatrixException if the matrix is notpositive semidefinite.\n */\n","tf":{"freq":{"rectangular":1,"element":1,"except":2,"previous":1,"depend":1,"one":1,"matrix":5,"symmetr":2,"discard":1,"diagon":1,"decompos":1,"non":1,"threshold":1,"semidefinit":3,"definit":1,"decomposit":1,"notposit":1,"column":1,"areconsid":1,"choleski":1,"posit":3,"small":1},"maxFreq":5,"totalTerms":32},"loc":91}