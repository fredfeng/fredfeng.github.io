{"id":20459,"className":"org.apache.commons.math3.geometry.euclidean.twod.Line","methodName":"getTransform","signature":"\u003corg.apache.commons.math3.geometry.euclidean.twod.Line: org.apache.commons.math3.geometry.partitioning.Transform\u003corg.apache.commons.math3.geometry.euclidean.twod.Euclidean2D,org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D\u003e getTransform(java.awt.geom.AffineTransform)\u003e","javadoc":"/** \n * Get a  {@link org.apache.commons.math3.geometry.partitioning.Transform Transform} embedding an affine transform.\n * @param transform affine transform to embed (must be inversibleotherwise the  {@link org.apache.commons.math3.geometry.partitioning.Transform#apply(Hyperplane) apply(Hyperplane)} method would work only for some lines, andfail for other ones)\n * @return a new transform that can be applied to either {@link Vector2D Vector2D},  {@link Line Line} or {@link org.apache.commons.math3.geometry.partitioning.SubHyperplane SubHyperplane} instances\n * @exception MathIllegalArgumentException if the transform is non invertible\n */\n","tf":{"freq":{"sub":2,"common":3,"partit":3,"link":5,"one":1,"line":3,"org":3,"must":1,"invert":1,"transform":9,"vector":2,"argument":1,"work":1,"except":2,"hyperplan":4,"apach":3,"illeg":1,"embed":1,"non":1,"instanc":1,"math":4,"appli":3,"either":1,"inversibleotherwis":1,"emb":1,"andfail":1,"method":1,"geometri":3,"affin":2},"maxFreq":9,"totalTerms":65},"loc":3}