{"id":25376,"className":"org.apache.commons.math.linear.FieldMatrix","methodName":"walkInOptimizedOrder","signature":"\u003corg.apache.commons.math.linear.FieldMatrix: T walkInOptimizedOrder(org.apache.commons.math.linear.FieldMatrixChangingVisitor)\u003e","javadoc":"/** \n * Visit (and possibly change) all matrix entries using the fastest possible order. \u003cp\u003eThe fastest walking order depends on the exact matrix class. It may be different from traditional row or column orders.\u003c/p\u003e\n * @param visitor visitor used to process all matrix entries\n * @exception MatrixVisitorException if the visitor cannot process an entry\n * @see #walkInRowOrder(FieldMatrixChangingVisitor)\n * @see #walkInRowOrder(FieldMatrixPreservingVisitor)\n * @see #walkInRowOrder(FieldMatrixChangingVisitor,int,int,int,int)\n * @see #walkInRowOrder(FieldMatrixPreservingVisitor,int,int,int,int)\n * @see #walkInColumnOrder(FieldMatrixChangingVisitor)\n * @see #walkInColumnOrder(FieldMatrixPreservingVisitor)\n * @see #walkInColumnOrder(FieldMatrixChangingVisitor,int,int,int,int)\n * @see #walkInColumnOrder(FieldMatrixPreservingVisitor,int,int,int,int)\n * @see #walkInOptimizedOrder(FieldMatrixPreservingVisitor)\n * @see #walkInOptimizedOrder(FieldMatrixChangingVisitor,int,int,int,int)\n * @see #walkInOptimizedOrder(FieldMatrixPreservingVisitor,int,int,int,int)\n * @return the value returned by {@link FieldMatrixChangingVisitor#end()} at the endof the walk\n */\n","tf":{"freq":{"link":1,"use":2,"possibl":2,"visit":1,"order":15,"endof":1,"exact":1,"valu":1,"end":1,"may":1,"except":2,"optim":4,"depend":1,"entri":3,"matrix":16,"preserv":6,"tradit":1,"row":5,"visitor":16,"process":2,"field":12,"differ":1,"column":5,"chang":7,"walk":14,"fastest":2},"maxFreq":16,"totalTerms":123},"loc":0}