{"id":20763,"className":"org.apache.commons.math3.geometry.euclidean.threed.Plane","methodName":"Plane","signature":"\u003corg.apache.commons.math3.geometry.euclidean.threed.Plane: void Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double)\u003e","javadoc":"/** \n * Build a plane from three points. \u003cp\u003eThe plane is oriented in the direction of {@code (p2-p1) ^ (p3-p1)}\u003c/p\u003e\n * @param p1 first point belonging to the plane\n * @param p2 second point belonging to the plane\n * @param p3 third point belonging to the plane\n * @param tolerance tolerance below which points are considered identical\n * @exception MathArithmeticException if the points do not constitute a plane\n * @since 3.3\n */\n","tf":{"freq":{"direct":1,"except":2,"belong":3,"second":1,"constitut":1,"arithmet":1,"build":1,"third":1,"consid":1,"math":1,"point":6,"orient":1,"ident":1,"plane":7,"three":1,"first":1,"toler":2},"maxFreq":7,"totalTerms":32},"loc":3}