{"id":19305,"className":"org.apache.commons.math3.util.MathArrays","methodName":"normalizeArray","signature":"\u003corg.apache.commons.math3.util.MathArrays: double[] normalizeArray(double[],double)\u003e","javadoc":"/** \n * Normalizes an array to make it sum to a specified value. Returns the result of the transformation \u003cpre\u003e x |-\u003e x * normalizedSum / sum \u003c/pre\u003e applied to each non-NaN element x of the input array, where sum is the sum of the non-NaN entries in the input array. \u003cp\u003e Throws IllegalArgumentException if  {@code normalizedSum} is infiniteor NaN and ArithmeticException if the input array contains any infinite elements or sums to 0. \u003cp\u003e Ignores (i.e., copies unchanged to the output array) NaNs in the input array.\n * @param values Input array to be normalized\n * @param normalizedSum Target sum for the normalized array\n * @return the normalized array.\n * @throws MathArithmeticException if the input array contains infiniteelements or sums to zero.\n * @throws MathIllegalArgumentException if the target sum is infinite or {@code NaN}.\n * @since 2.1\n */\n","tf":{"freq":{"argument":2,"result":1,"element":2,"ignor":1,"except":4,"unchang":1,"entri":1,"normal":8,"arithmet":2,"sum":11,"infiniteor":1,"zero":1,"illeg":2,"copi":1,"specifi":1,"non":2,"math":2,"transform":1,"infinit":2,"input":6,"appli":1,"infiniteel":1,"pre":2,"contain":2,"target":2,"valu":2,"output":1,"make":1,"array":11},"maxFreq":11,"totalTerms":75},"loc":30}