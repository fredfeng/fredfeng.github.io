{"id":22041,"className":"org.apache.commons.math3.complex.ComplexFormat","methodName":"format","signature":"\u003corg.apache.commons.math3.complex.ComplexFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)\u003e","javadoc":"/** \n * Formats a object to produce a string.   {@code obj} must be either a{@link Complex} object or a {@link Number} object.  Any other type ofobject will result in an  {@link IllegalArgumentException} being thrown.\n * @param obj the object to format.\n * @param toAppendTo where the text is to be appended\n * @param pos On input: an alignment field, if desired. On output: theoffsets of the alignment field\n * @return the value passed in as toAppendTo.\n * @see java.text.Format#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)\n * @throws MathIllegalArgumentException is {@code obj} is not a valid type.\n */\n","tf":{"freq":{"valid":1,"result":1,"complex":1,"link":3,"object":5,"desir":1,"type":2,"lang":2,"must":1,"pos":1,"buffer":1,"theoffset":1,"valu":1,"argument":2,"append":3,"except":2,"thrown":1,"text":3,"align":2,"number":1,"produc":1,"format":5,"illeg":2,"pass":1,"math":1,"field":3,"either":1,"input":1,"string":2,"will":1,"java":4,"ofobject":1,"obj":3,"output":1,"posit":1},"maxFreq":5,"totalTerms":63},"loc":16}