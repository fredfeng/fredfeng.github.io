{"id":18442,"className":"org.apache.commons.math3.stat.inference.BinomialTest","methodName":"binomialTest","signature":"\u003corg.apache.commons.math3.stat.inference.BinomialTest: boolean binomialTest(int,int,double,org.apache.commons.math3.stat.inference.AlternativeHypothesis,double)\u003e","javadoc":"/** \n * Returns whether the null hypothesis can be rejected with the given confidence level. \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eNumber of trials must be \u0026ge; 0.\u003c/li\u003e \u003cli\u003eNumber of successes must be \u0026ge; 0.\u003c/li\u003e \u003cli\u003eNumber of successes must be \u0026le; number of trials.\u003c/li\u003e \u003cli\u003eProbability must be \u0026ge; 0 and \u0026le; 1.\u003c/li\u003e \u003c/ul\u003e\n * @param numberOfTrials number of trials performed\n * @param numberOfSuccesses number of successes observed\n * @param probability assumed probability of a single trial under the null hypothesis\n * @param alternativeHypothesis type of hypothesis being evaluated (one- or two-sided)\n * @param alpha significance level of the test\n * @return true if the null hypothesis can be rejected with confidence {@code 1 - alpha}\n * @throws NotPositiveException if {@code numberOfTrials} or {@code numberOfSuccesses} is negative\n * @throws OutOfRangeException if {@code probability} is not between 0 and 1\n * @throws MathIllegalArgumentException if {@code numberOfTrials} \u0026lt; {@code numberOfSuccesses} orif  {@code alternateHypothesis} is null.\n * @see AlternativeHypothesis\n */\n","tf":{"freq":{"reject":2,"test":2,"singl":1,"one":1,"precondit":1,"perform":1,"orif":1,"type":1,"whether":1,"must":4,"level":2,"observ":1,"given":1,"probabl":4,"altern":3,"side":1,"rang":1,"alpha":2,"hypothesi":7,"trial":7,"argument":1,"except":3,"confid":2,"assum":1,"signific":1,"true":1,"number":12,"evalu":1,"illeg":1,"math":1,"two":1,"strong":2,"negat":1,"posit":1,"binomi":1,"success":6},"maxFreq":12,"totalTerms":80},"loc":4}