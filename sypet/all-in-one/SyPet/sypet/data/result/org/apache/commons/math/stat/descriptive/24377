{"id":24377,"className":"org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic","methodName":"evaluate","signature":"\u003corg.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic: double evaluate(double[],int,int)\u003e","javadoc":"/** \n * This default implementation calls  {@link #clear}, then invokes {@link #increment} in a loop over the specified portion of the inputarray, and then uses  {@link #getResult} to compute the return value.\u003cp\u003e Note that this implementation changes the internal state of the statistic.  Its side effects are the same as invoking  {@link #clear} andthen  {@link #incrementAll(double[],int,int)}.\u003c/p\u003e \u003cp\u003e Implementations may override this method with a more efficient and possibly more accurate implementation that works directly with the input array.\u003c/p\u003e \u003cp\u003e If the array is null or the index parameters are not valid, an IllegalArgumentException is thrown.\u003c/p\u003e\n * @param values the input array\n * @param begin the index of the first element to include\n * @param length the number of elements to include\n * @return the value of the statistic applied to the included array entries\n * @see org.apache.commons.math.stat.descriptive.UnivariateStatistic#evaluate(double[],int,int)\n */\n","tf":{"freq":{"andthen":1,"possibl":1,"specifi":1,"univari":1,"accur":1,"effici":1,"work":1,"argument":1,"increment":2,"element":2,"index":2,"except":1,"thrown":1,"invok":2,"descript":1,"apach":1,"number":1,"statist":3,"input":2,"appli":1,"comput":1,"array":4,"call":1,"result":1,"valid":1,"common":1,"link":5,"state":1,"use":1,"org":1,"clear":2,"side":1,"loop":1,"length":1,"valu":3,"inputarray":1,"note":1,"portion":1,"direct":1,"may":1,"includ":3,"entri":1,"paramet":1,"evalu":2,"illeg":1,"stat":1,"begin":1,"math":1,"effect":1,"intern":1,"method":1,"chang":1,"first":1},"maxFreq":5,"totalTerms":73},"loc":7}