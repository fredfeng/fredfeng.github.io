{"id":17844,"className":"org.apache.commons.math3.random.RandomDataImpl","methodName":"nextHypergeometric","signature":"\u003corg.apache.commons.math3.random.RandomDataImpl: int nextHypergeometric(int,int,int)\u003e","javadoc":"/** \n * Generates a random value from the  {@link org.apache.commons.math3.distribution.HypergeometricDistribution Hypergeometric Distribution}. This implementation uses  {@link #nextInversionDeviate(IntegerDistribution) inversion}to generate random values.\n * @param populationSize the population size of the Hypergeometric distribution\n * @param numberOfSuccesses number of successes in the population of the Hypergeometric distribution\n * @param sampleSize the sample size of the Hypergeometric distribution\n * @return random value sampled from the Hypergeometric(numberOfSuccesses, sampleSize) distribution\n * @throws NumberIsTooLargeException  if {@code numberOfSuccesses \u003e populationSize}, or  {@code sampleSize \u003e populationSize}.\n * @throws NotStrictlyPositiveException if {@code populationSize \u003c\u003d 0}.\n * @throws NotPositiveException  if {@code numberOfSuccesses \u003c 0}.\n * @since 2.2\n */\n","tf":{"freq":{"except":3,"common":1,"next":2,"link":2,"random":3,"apach":1,"distribut":8,"use":1,"number":6,"org":1,"deviat":1,"size":9,"math":1,"popul":6,"invers":2,"larg":1,"generat":2,"valu":3,"strict":1,"posit":2,"success":5,"integ":1,"sampl":5,"hypergeometr":7},"maxFreq":9,"totalTerms":74},"loc":3}