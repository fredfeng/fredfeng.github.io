{"id":16069,"className":"org.apache.commons.math3.special.Gamma","methodName":"regularizedGammaQ","signature":"\u003corg.apache.commons.math3.special.Gamma: double regularizedGammaQ(double,double,double,int)\u003e","javadoc":"/** \n * Returns the regularized gamma function Q(a, x) \u003d 1 - P(a, x). The implementation of this method is based on: \u003cul\u003e \u003cli\u003e \u003ca href\u003d\"http://mathworld.wolfram.com/RegularizedGammaFunction.html\"\u003e Regularized Gamma Function\u003c/a\u003e, equation (1). \u003c/li\u003e \u003cli\u003e \u003ca href\u003d\"http://functions.wolfram.com/GammaBetaErf/GammaRegularized/10/0003/\"\u003e Regularized incomplete gamma function: Continued fraction representations (formula 06.08.10.0003)\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e\n * @param a the a parameter.\n * @param x the value.\n * @param epsilon When the absolute value of the nth item in theseries is less than epsilon the approximation ceases to calculate further elements in the series.\n * @param maxIterations Maximum number of \"iterations\" to complete.\n * @return the regularized gamma function P(a, x)\n * @throws MaxCountExceededException if the algorithm fails to converge.\n */\n","tf":{"freq":{"incomplet":1,"com":2,"count":1,"seri":1,"ceas":1,"erf":1,"approxim":1,"beta":1,"algorithm":1,"function":6,"gamma":8,"fail":1,"theseri":1,"wolfram":2,"epsilon":2,"nth":1,"valu":2,"converg":1,"href":2,"less":1,"complet":1,"element":1,"except":1,"equat":1,"fraction":1,"max":2,"regular":7,"calcul":1,"exceed":1,"paramet":1,"number":1,"absolut":1,"continu":1,"represent":1,"http":2,"maximum":1,"item":1,"mathworld":1,"base":1,"html":1,"method":1,"iter":2,"formula":1},"maxFreq":8,"totalTerms":69},"loc":32}