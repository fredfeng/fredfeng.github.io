{"id":17688,"className":"org.apache.commons.math3.random.RandomData","methodName":"nextSample","signature":"\u003corg.apache.commons.math3.random.RandomData: java.lang.Object[] nextSample(java.util.Collection,int)\u003e","javadoc":"/** \n * Returns an array of  {@code k} objects selected randomly from theCollection  {@code c}. \u003cp\u003e Sampling from  {@code c} is without replacement; but if {@code c} containsidentical objects, the sample may include repeats.  If all elements of {@code c} are distinct, the resulting object array represents a\u003ca href\u003d\"http://rkb.home.cern.ch/rkb/AN16pp/node250.html#SECTION0002500000000000000000\"\u003e Simple Random Sample\u003c/a\u003e of size  {@code k} from the elements of{@code c}.\u003c/p\u003e\n * @param c the collection to be sampled\n * @param k the size of the sample\n * @return a random sample of {@code k} elements from {@code c}\n * @throws NumberIsTooLargeException if {@code k \u003e c.size()}.\n * @throws NotStrictlyPositiveException if {@code k \u003c\u003d 0}.\n */\n","tf":{"freq":{"result":1,"home":1,"simpl":1,"next":1,"object":3,"repeat":1,"distinct":1,"href":1,"element":3,"except":2,"may":1,"includ":1,"repres":1,"select":1,"random":3,"number":1,"cern":1,"without":1,"size":3,"node":1,"containsident":1,"http":1,"rkb":2,"larg":1,"replac":1,"html":1,"strict":1,"posit":1,"sampl":7,"collect":2,"array":2},"maxFreq":7,"totalTerms":49},"loc":0}