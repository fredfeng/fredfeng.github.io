{"id":23394,"className":"org.apache.commons.math.analysis.solvers.UnivariateRealSolver","methodName":"solve","signature":"\u003corg.apache.commons.math.analysis.solvers.UnivariateRealSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)\u003e","javadoc":"/** \n * Solve for a zero root in the given interval. \u003cp\u003eA solver may require that the interval brackets a single zero root. Solvers that do require bracketing should be able to handle the case where one of the endpoints is itself a root.\u003c/p\u003e\n * @param f the function to solve.\n * @param min the lower bound for the interval.\n * @param max the upper bound for the interval.\n * @return a value where the function is zero\n * @throws ConvergenceException if the maximum iteration count is exceededor the solver detects convergence problems otherwise.\n * @throws FunctionEvaluationException if an error occurs evaluating the function\n * @throws IllegalArgumentException if min \u003e max or the endpoints do notsatisfy the requirements specified by the solver\n * @since 2.0\n * @deprecated in 2.2 (to be removed in 3.0).\n */\n","tf":{"freq":{"otherwis":1,"deprec":1,"lower":1,"count":1,"singl":1,"root":3,"one":1,"abl":1,"zero":3,"bracket":2,"specifi":1,"function":4,"upper":1,"requir":3,"given":1,"valu":1,"converg":2,"argument":1,"min":2,"detect":1,"may":1,"except":3,"max":2,"error":1,"remov":1,"problem":1,"evalu":2,"illeg":1,"solv":3,"endpoint":2,"handl":1,"interv":4,"solver":4,"maximum":1,"exceededor":1,"iter":1,"notsatisfi":1,"bound":2,"occur":1},"maxFreq":4,"totalTerms":65},"loc":0}