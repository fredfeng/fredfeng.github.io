{"id":17216,"className":"org.apache.commons.math3.analysis.differentiation.DSCompiler","methodName":"pow","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DSCompiler: void pow(double,double[],int,double[],int)\u003e","javadoc":"/** \n * Compute power of a double to a derivative structure.\n * @param a number to exponentiate\n * @param operand array holding the power\n * @param operandOffset offset of the power in its array\n * @param result array where result must be stored (forpower the result array \u003cem\u003ecannot\u003c/em\u003e be the input array)\n * @param resultOffset offset of the result in its array\n * @since 3.3\n */\n","tf":{"freq":{"forpow":1,"result":5,"input":1,"pow":1,"store":1,"structur":1,"deriv":1,"hold":1,"exponenti":1,"power":3,"comput":1,"number":1,"offset":4,"operand":2,"must":1,"array":6},"maxFreq":6,"totalTerms":31},"loc":29}