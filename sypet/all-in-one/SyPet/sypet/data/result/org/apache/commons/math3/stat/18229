{"id":18229,"className":"org.apache.commons.math3.stat.StatUtils","methodName":"percentile","signature":"\u003corg.apache.commons.math3.stat.StatUtils: double percentile(double[],double)\u003e","javadoc":"/** \n * Returns an estimate of the \u003ccode\u003ep\u003c/code\u003eth percentile of the values in the \u003ccode\u003evalues\u003c/code\u003e array. \u003cp\u003e \u003cul\u003e \u003cli\u003eReturns \u003ccode\u003eDouble.NaN\u003c/code\u003e if \u003ccode\u003evalues\u003c/code\u003e has length \u003ccode\u003e0\u003c/code\u003e\u003c/li\u003e\u003c/p\u003e \u003cli\u003eReturns (for any value of \u003ccode\u003ep\u003c/code\u003e) \u003ccode\u003evalues[0]\u003c/code\u003e if \u003ccode\u003evalues\u003c/code\u003e has length \u003ccode\u003e1\u003c/code\u003e\u003c/li\u003e \u003cli\u003eThrows \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003evalues\u003c/code\u003e is null  or p is not a valid quantile value (p must be greater than 0 and less than or equal to 100)\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e \u003cp\u003e See  {@link org.apache.commons.math3.stat.descriptive.rank.Percentile} fora description of the percentile estimation algorithm used.\u003c/p\u003e\n * @param values input array of values\n * @param p the percentile value to compute\n * @return the percentile value or Double.NaN if the array is empty\n * @throws MathIllegalArgumentException if \u003ccode\u003evalues\u003c/code\u003e is nullor p is invalid\n */\n","tf":{"freq":{"percentil":6,"valid":1,"greater":1,"common":1,"quantil":1,"link":1,"use":1,"org":1,"must":1,"nullor":1,"algorithm":1,"estim":2,"rank":1,"invalid":1,"length":2,"valu":13,"less":1,"fora":1,"argument":2,"except":2,"apach":1,"descript":2,"equal":1,"illeg":2,"stat":1,"empti":1,"math":2,"input":1,"comput":1,"array":3},"maxFreq":13,"totalTerms":56},"loc":3}