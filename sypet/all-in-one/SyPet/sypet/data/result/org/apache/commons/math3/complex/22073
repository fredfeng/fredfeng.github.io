{"id":22073,"className":"org.apache.commons.math3.complex.Complex","methodName":"equalsWithRelativeTolerance","signature":"\u003corg.apache.commons.math3.complex.Complex: boolean equalsWithRelativeTolerance(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,double)\u003e","javadoc":"/** \n * Returns  {@code true} if, both for the real part and for the imaginarypart, there is no double value strictly between the arguments or the relative difference between them is smaller or equal to the given tolerance.\n * @param x First value (cannot be {@code null}).\n * @param y Second value (cannot be {@code null}).\n * @param eps Amount of allowed relative error.\n * @return {@code true} if the values are two adjacent floating pointnumbers or they are within range of each other.\n * @see Precision#equalsWithRelativeTolerance(double,double,double)\n * @since 3.3\n */\n","tf":{"freq":{"second":1,"allow":1,"imaginarypart":1,"smaller":1,"amount":1,"real":1,"pointnumb":1,"given":1,"rang":1,"precis":1,"relat":4,"valu":4,"toler":3,"argument":1,"adjac":1,"error":1,"true":2,"equal":3,"differ":1,"two":1,"ep":1,"within":1,"strict":1,"part":1,"first":1},"maxFreq":4,"totalTerms":36},"loc":4}