{"id":17331,"className":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure","methodName":"DerivativeStructure","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DerivativeStructure: void DerivativeStructure(int,int,double[])\u003e","javadoc":"/** \n * Build an instance from all its derivatives.\n * @param parameters number of free parameters\n * @param order derivation order\n * @param derivatives derivatives sorted according to{@link DSCompiler#getPartialDerivativeIndex(int...)}\n * @exception DimensionMismatchException if derivatives array does not match the{@link DSCompiler#getSize() size} expected by the compiler\n * @throws NumberIsTooLargeException if order is too large\n * @see #getAllDerivatives()\n */\n","tf":{"freq":{"except":3,"index":1,"sort":1,"deriv":8,"structur":1,"link":2,"paramet":2,"number":2,"accord":1,"dimens":1,"partial":1,"build":1,"size":2,"instanc":1,"expect":1,"free":1,"order":3,"larg":2,"match":1,"mismatch":1,"array":1,"compil":3},"maxFreq":8,"totalTerms":40},"loc":7}