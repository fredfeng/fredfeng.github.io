{"id":24041,"className":"org.apache.commons.math.stat.StatUtils","methodName":"max","signature":"\u003corg.apache.commons.math.stat.StatUtils: double max(double[],int,int)\u003e","javadoc":"/** \n * Returns the maximum of the entries in the specified portion of the input array, or \u003ccode\u003eDouble.NaN\u003c/code\u003e if the designated subarray is empty. \u003cp\u003e Throws \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if the array is null or the array index parameters are not valid.\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003eThe result is \u003ccode\u003eNaN\u003c/code\u003e iff all values are \u003ccode\u003eNaN\u003c/code\u003e (i.e. \u003ccode\u003eNaN\u003c/code\u003e values have no impact on the value of the statistic).\u003c/li\u003e \u003cli\u003eIf any of the values equals \u003ccode\u003eDouble.POSITIVE_INFINITY\u003c/code\u003e, the result is \u003ccode\u003eDouble.POSITIVE_INFINITY.\u003c/code\u003e\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e\n * @param values the input array\n * @param begin index of the first array element to include\n * @param length the number of elements to include\n * @return the maximum of the values or Double.NaN if length \u003d 0\n * @throws IllegalArgumentException if the array is null or the array indexparameters are not valid\n */\n","tf":{"freq":{"valid":2,"result":2,"impact":1,"specifi":1,"length":2,"valu":6,"portion":1,"argument":2,"element":2,"except":2,"index":2,"indexparamet":1,"includ":2,"max":1,"entri":1,"paramet":1,"number":1,"equal":1,"subarray":1,"illeg":2,"statist":1,"empti":1,"begin":1,"input":2,"iff":1,"maximum":2,"first":1,"design":1,"array":7},"maxFreq":7,"totalTerms":51},"loc":3}