{"id":23963,"className":"org.apache.commons.math.ode.sampling.FixedStepHandler","methodName":"handleStep","signature":"\u003corg.apache.commons.math.ode.sampling.FixedStepHandler: void handleStep(double,double[],double[],boolean)\u003e","javadoc":"/** \n * Handle the last accepted step\n * @param t time of the current step\n * @param y state vector at t. For efficiency purposes, the {@link StepNormalizer} class reuses the same array on each call, so ifthe instance wants to keep it across all calls (for example to provide at the end of the integration a complete array of all steps), it should build a local copy store this copy.\n * @param yDot derivatives of the state vector state vector at t.For efficiency purposes, the  {@link StepNormalizer} class reusesthe same array on each call, so if the instance wants to keep it across all calls (for example to provide at the end of the integration a complete array of all steps), it should build a local copy store this copy.\n * @param isLast true if the step is the last one\n * @throws DerivativeException if some error condition is encountered\n */\n","tf":{"freq":{"call":4,"integr":2,"store":2,"last":3,"deriv":2,"accept":1,"one":1,"normal":2,"link":2,"state":3,"build":2,"reus":1,"across":2,"dot":1,"copi":4,"time":1,"vector":3,"current":1,"purpos":2,"effici":2,"want":2,"end":2,"complet":2,"condit":1,"except":1,"error":1,"ifth":1,"reusesth":1,"true":1,"provid":2,"handl":2,"instanc":2,"encount":1,"exampl":2,"local":2,"step":8,"array":4,"keep":2},"maxFreq":8,"totalTerms":78},"loc":0}