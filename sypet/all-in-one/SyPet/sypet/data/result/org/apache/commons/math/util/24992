{"id":24992,"className":"org.apache.commons.math.util.FastMath","methodName":"IEEEremainder","signature":"\u003corg.apache.commons.math.util.FastMath: double IEEEremainder(double,double)\u003e","javadoc":"/** \n * Computes the remainder as prescribed by the IEEE 754 standard. The remainder value is mathematically equal to  {@code x - y*n}where  {@code n} is the mathematical integer closest to the exact mathematical valueof the quotient  {@code x/y}. If two mathematical integers are equally close to  {@code x/y} then{@code n} is the integer that is even.\u003cp\u003e \u003cul\u003e \u003cli\u003eIf either operand is NaN, the result is NaN.\u003c/li\u003e \u003cli\u003eIf the result is not NaN, the sign of the result equals the sign of the dividend.\u003c/li\u003e \u003cli\u003eIf the dividend is an infinity, or the divisor is a zero, or both, the result is NaN.\u003c/li\u003e \u003cli\u003eIf the dividend is finite and the divisor is an infinity, the result equals the dividend.\u003c/li\u003e \u003cli\u003eIf the dividend is a zero and the divisor is finite, the result equals the dividend.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e this implementation currently delegates to  {@link StrictMath#IEEEremainder}\n * @param dividend the number to be divided\n * @param divisor the number by which to divide\n * @return the remainder, rounded\n */\n","tf":{"freq":{"quotient":1,"result":6,"infin":2,"link":1,"round":1,"zero":2,"close":1,"deleg":1,"finit":2,"exact":1,"current":1,"closest":1,"valu":1,"note":1,"standard":1,"mathemat":4,"dividend":7,"divid":2,"number":2,"eeremaind":1,"equal":5,"operand":1,"divisor":4,"prescrib":1,"math":1,"sign":2,"valueof":1,"two":1,"either":1,"remaind":3,"eremaind":1,"comput":1,"even":1,"strict":1,"integ":3},"maxFreq":7,"totalTerms":66},"loc":3}