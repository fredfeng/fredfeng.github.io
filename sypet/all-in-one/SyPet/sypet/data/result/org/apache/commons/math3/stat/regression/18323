{"id":18323,"className":"org.apache.commons.math3.stat.regression.SimpleRegression","methodName":"getSumSquaredErrors","signature":"\u003corg.apache.commons.math3.stat.regression.SimpleRegression: double getSumSquaredErrors()\u003e","javadoc":"/** \n * Returns the \u003ca href\u003d\"http://www.xycoon.com/SumOfSquares.htm\"\u003e sum of squared errors\u003c/a\u003e (SSE) associated with the regression model. \u003cp\u003e The sum is computed using the computational formula\u003c/p\u003e \u003cp\u003e \u003ccode\u003eSSE \u003d SYY - (SXY * SXY / SXX)\u003c/code\u003e\u003c/p\u003e \u003cp\u003e where \u003ccode\u003eSYY\u003c/code\u003e is the sum of the squared deviations of the y values about their mean, \u003ccode\u003eSXX\u003c/code\u003e is similarly defined and \u003ccode\u003eSXY\u003c/code\u003e is the sum of the products of x and y mean deviations. \u003c/p\u003e\u003cp\u003e The sums are accumulated using the updating algorithm referenced in {@link #addData}.\u003c/p\u003e \u003cp\u003e The return value is constrained to be non-negative - i.e., if due to rounding errors the computational formula returns a negative result, 0 is returned.\u003c/p\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eAt least two observations (with at least two different x values) must have been added before invoking this method. If this method is invoked before a model can be estimated, \u003ccode\u003eDouble,NaN\u003c/code\u003e is returned. \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\n * @return sum of squared errors associated with the regression model\n */\n","tf":{"freq":{"result":1,"squar":5,"defin":1,"model":3,"constrain":1,"regress":2,"com":1,"least":2,"link":1,"precondit":1,"data":1,"www":1,"sum":8,"use":2,"round":1,"add":1,"must":1,"deviat":2,"algorithm":1,"referenc":1,"estim":1,"observ":1,"associ":2,"mean":2,"valu":3,"href":1,"htm":1,"similar":1,"error":4,"invok":2,"non":1,"xycoon":1,"product":1,"accumul":1,"differ":1,"two":2,"updat":1,"strong":2,"http":1,"ad":1,"due":1,"comput":3,"method":2,"negat":2,"formula":2},"maxFreq":8,"totalTerms":77},"loc":3}