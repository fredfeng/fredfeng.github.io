{"id":22647,"className":"org.apache.commons.math.distribution.BinomialDistributionImpl","methodName":"inverseCumulativeProbability","signature":"\u003corg.apache.commons.math.distribution.BinomialDistributionImpl: int inverseCumulativeProbability(double)\u003e","javadoc":"/** \n * For this distribution, X, this method returns the largest x, such that P(X \u0026le; x) \u0026le; \u003ccode\u003ep\u003c/code\u003e. \u003cp\u003e Returns \u003ccode\u003e-1\u003c/code\u003e for p\u003d0 and \u003ccode\u003eInteger.MAX_VALUE\u003c/code\u003e for p\u003d1. \u003c/p\u003e\n * @param p the desired probability\n * @return the largest x such that P(X \u0026le; x) \u003c\u003d p\n * @throws MathException if the inverse cumulative probability can not becomputed due to convergence or other numerical errors.\n * @throws IllegalArgumentException if p \u003c 0 or p \u003e 1\n */\n","tf":{"freq":{"argument":1,"except":2,"error":1,"numer":1,"becomput":1,"distribut":1,"desir":1,"illeg":1,"largest":2,"math":1,"cumul":2,"invers":2,"probabl":3,"due":1,"method":1,"converg":1,"integ":1},"maxFreq":3,"totalTerms":23},"loc":12}