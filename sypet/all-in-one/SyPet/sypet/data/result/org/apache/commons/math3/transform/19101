{"id":19101,"className":"org.apache.commons.math3.transform.FastFourierTransformer","methodName":"transform","signature":"\u003corg.apache.commons.math3.transform.FastFourierTransformer: org.apache.commons.math3.complex.Complex[] transform(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,org.apache.commons.math3.transform.TransformType)\u003e","javadoc":"/** \n * Returns the (forward, inverse) transform of the specified real function, sampled on the specified interval.\n * @param f the function to be sampled and transformed\n * @param min the (inclusive) lower bound for the interval\n * @param max the (exclusive) upper bound for the interval\n * @param n the number of sample points\n * @param type the type of transform (forward, inverse) to be performed\n * @return the complex transformed array\n * @throws org.apache.commons.math3.exception.NumberIsTooLargeException if the lower bound is greater than, or equal to the upper bound\n * @throws org.apache.commons.math3.exception.NotStrictlyPositiveException if the number of sample points  {@code n} is negative\n * @throws MathIllegalArgumentException if the number of sample points{@code n} is not a power of two\n */\n","tf":{"freq":{"complex":1,"greater":1,"lower":2,"common":2,"perform":1,"type":2,"org":2,"function":2,"specifi":2,"inclus":1,"real":1,"transform":5,"upper":2,"invers":2,"forward":2,"power":1,"exclus":1,"argument":1,"min":1,"except":5,"max":1,"apach":2,"equal":1,"number":4,"illeg":1,"math":3,"interv":3,"two":1,"point":3,"larg":1,"negat":1,"strict":1,"posit":1,"bound":4,"sampl":5,"array":1},"maxFreq":5,"totalTerms":70},"loc":5}