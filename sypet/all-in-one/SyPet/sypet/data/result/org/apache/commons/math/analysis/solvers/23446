{"id":23446,"className":"org.apache.commons.math.analysis.solvers.LaguerreSolver","methodName":"solve","signature":"\u003corg.apache.commons.math.analysis.solvers.LaguerreSolver: double solve(int,org.apache.commons.math.analysis.UnivariateRealFunction,double,double)\u003e","javadoc":"/** \n * Find a real root in the given interval. \u003cp\u003e Despite the bracketing condition, the root returned by solve(Complex[], Complex) may not be a real zero inside [min, max]. For example, p(x) \u003d x^3 + 1, min \u003d -2, max \u003d 2, initial \u003d 0. We can either try another initial value, or, as we did here, call solveAll() to obtain all roots and pick up the one that we\u0027re looking for.\u003c/p\u003e\n * @param f the function to solve\n * @param min the lower bound for the interval\n * @param max the upper bound for the interval\n * @param maxEval Maximum number of evaluations.\n * @return the point at which the function value is zero\n * @throws ConvergenceException if the maximum iteration count is exceededor the solver detects convergence problems otherwise\n * @throws FunctionEvaluationException if an error occurs evaluating the function\n * @throws IllegalArgumentException if any parameters are invalid\n */\n","tf":{"freq":{"lower":1,"count":1,"root":3,"zero":2,"bracket":1,"function":4,"invalid":1,"given":1,"argument":1,"except":3,"eval":1,"number":1,"solv":4,"obtain":1,"solver":1,"maximum":2,"exceededor":1,"otherwis":1,"call":1,"complex":2,"one":1,"anoth":1,"real":2,"upper":1,"pick":1,"valu":2,"initi":2,"converg":2,"find":1,"min":3,"condit":1,"look":1,"detect":1,"may":1,"max":4,"error":1,"paramet":1,"problem":1,"evalu":3,"despit":1,"illeg":1,"interv":3,"point":1,"either":1,"exampl":1,"insid":1,"iter":1,"bound":2,"occur":1},"maxFreq":4,"totalTerms":76},"loc":4}