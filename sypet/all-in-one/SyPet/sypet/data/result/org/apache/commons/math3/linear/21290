{"id":21290,"className":"org.apache.commons.math3.linear.ArrayFieldVector","methodName":"walkInOptimizedOrder","signature":"\u003corg.apache.commons.math3.linear.ArrayFieldVector: T walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int)\u003e","javadoc":"/** \n * Visits (and possibly change) some entries of this vector in optimized order. The order in which the entries are visited is selected so as to lead to the most efficient implementation; it might depend on the concrete implementation of this abstract class.\n * @param visitor visitor to be used to process the entries of this vector\n * @param start the index of the first entry to be visited\n * @param end the index of the last entry to be visited (inclusive)\n * @return the value returned by {@link FieldVectorChangingVisitor#end()}at the end of the walk\n * @throws NumberIsTooSmallException if {@code end \u003c start}.\n * @throws OutOfRangeException if the indices are not valid.\n * @since 3.3\n */\n","tf":{"freq":{"valid":1,"might":1,"last":1,"link":1,"lead":1,"possibl":1,"use":1,"visit":4,"inclus":1,"indic":1,"order":3,"rang":1,"vector":3,"concret":1,"valu":1,"effici":1,"end":4,"except":2,"index":2,"optim":2,"select":1,"entri":5,"depend":1,"number":1,"visitor":3,"field":1,"process":1,"start":2,"chang":2,"small":1,"walk":2,"first":1},"maxFreq":5,"totalTerms":54},"loc":3}