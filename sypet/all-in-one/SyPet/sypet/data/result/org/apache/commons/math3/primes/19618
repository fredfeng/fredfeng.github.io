{"id":19618,"className":"org.apache.commons.math3.primes.SmallPrimes","methodName":"boundedTrialDivision","signature":"\u003corg.apache.commons.math3.primes.SmallPrimes: int boundedTrialDivision(int,int,java.util.List)\u003e","javadoc":"/** \n * Extract factors in the range \u003ccode\u003ePRIME_LAST+2\u003c/code\u003e to \u003ccode\u003emaxFactors\u003c/code\u003e.\n * @param n the number to factorize, must be \u003e\u003d PRIME_LAST+2 and must not contain any factor below PRIME_LAST+2\n * @param maxFactor the upper bound of trial division: if it is reached, the method gives up and returns n.\n * @param factors the list where to add the factors.\n * @return  n or 1 if factorization is completed.\n */\n","tf":{"freq":{"max":2,"give":1,"list":1,"number":1,"factor":8,"add":1,"extract":1,"must":2,"upper":1,"reach":1,"rang":1,"contain":1,"method":1,"trial":2,"bound":2,"complet":1,"divis":2},"maxFreq":8,"totalTerms":29},"loc":22}