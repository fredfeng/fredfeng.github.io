{"id":19196,"className":"org.apache.commons.math3.util.CombinatoricsUtils","methodName":"factorial","signature":"\u003corg.apache.commons.math3.util.CombinatoricsUtils: long factorial(int)\u003e","javadoc":"/** \n * Returns n!. Shorthand for  {@code n} \u003cahref\u003d\"http://mathworld.wolfram.com/Factorial.html\"\u003e Factorial\u003c/a\u003e, the product of the numbers  {@code 1,...,n}. \u003cp\u003e \u003cStrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003e  {@code n \u003e\u003d 0} (otherwise{@code IllegalArgumentException} is thrown)\u003c/li\u003e\u003cli\u003e The result is small enough to fit into a  {@code long}. The largest value of  {@code n} for which {@code n!} \u003cLong.MAX_VALUE} is 20. If the computed value exceeds  {@code Long.MAX_VALUE}an  {@code ArithMeticException } is thrown.\u003c/li\u003e\u003c/ul\u003e \u003c/p\u003e\n * @param n argument\n * @return {@code n!}\n * @throws MathArithmeticException if the result is too large to be representedby a  {@code long}.\n * @throws NotPositiveException if {@code n \u003c 0}.\n * @throws MathArithmeticException if {@code n \u003e 20}: The factorial value is too large to fit in a  {@code long}.\n */\n","tf":{"freq":{"otherwis":1,"result":2,"com":1,"representedbi":1,"arithmet":2,"precondit":1,"enough":1,"fit":2,"shorthand":1,"factori":4,"wolfram":1,"valu":3,"arith":1,"argument":2,"except":5,"thrown":2,"ahref":1,"exceed":1,"metic":1,"number":1,"illeg":1,"largest":1,"math":2,"product":1,"strong":2,"http":1,"larg":2,"mathworld":1,"comput":1,"html":1,"posit":1,"small":1},"maxFreq":5,"totalTerms":49},"loc":10}