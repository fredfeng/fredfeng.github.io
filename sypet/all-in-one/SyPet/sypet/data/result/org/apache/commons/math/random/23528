{"id":23528,"className":"org.apache.commons.math.random.RandomData","methodName":"nextSecureInt","signature":"\u003corg.apache.commons.math.random.RandomData: int nextSecureInt(int,int)\u003e","javadoc":"/** \n * Generates a uniformly distributed random integer between \u003ccode\u003elower\u003c/code\u003e and \u003ccode\u003eupper\u003c/code\u003e (endpoints included) from a secure random sequence. \u003cp\u003e Sequences of integers generated using this method will be cryptographically secure. If cryptographic security is not required, \u003ccode\u003enextInt\u003c/code\u003e should be used instead of this method.\u003c/p\u003e \u003cp\u003e \u003cstrong\u003eDefinition\u003c/strong\u003e: \u003ca href\u003d\"http://en.wikipedia.org/wiki/Cryptographically_secure_pseudo-random_number_generator\"\u003e Secure Random Sequence\u003c/a\u003e\u003c/p\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e \u003cli\u003e\u003ccode\u003elower \u003c upper\u003c/code\u003e (otherwise an IllegalArgumentException is thrown.)\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e\n * @param lower lower bound for generated integer\n * @param upper upper bound for generated integer\n * @return a random integer greater than or equal to \u003ccode\u003elower\u003c/code\u003eand less than or equal to \u003ccode\u003eupper\u003c/code\u003e.\n */\n","tf":{"freq":{"otherwis":1,"greater":1,"lower":5,"pseudo":1,"next":2,"precondit":1,"distribut":1,"use":2,"org":1,"upper":5,"requir":1,"sequenc":3,"cryptograph":3,"wiki":1,"href":1,"less":1,"argument":1,"thrown":1,"except":1,"includ":1,"uniform":1,"random":5,"equal":2,"number":1,"illeg":1,"endpoint":1,"secur":6,"strong":4,"http":1,"generat":5,"definit":1,"will":1,"instead":1,"wikipedia":1,"method":2,"integ":5,"bound":2},"maxFreq":6,"totalTerms":74},"loc":0}