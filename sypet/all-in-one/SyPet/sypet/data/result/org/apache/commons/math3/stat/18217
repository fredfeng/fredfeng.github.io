{"id":18217,"className":"org.apache.commons.math3.stat.StatUtils","methodName":"variance","signature":"\u003corg.apache.commons.math3.stat.StatUtils: double variance(double[])\u003e","javadoc":"/** \n * Returns the variance of the entries in the input array, or \u003ccode\u003eDouble.NaN\u003c/code\u003e if the array is empty. \u003cp\u003eThis method returns the bias-corrected sample variance (using  {@code n - 1} inthe denominator).  Use  {@link #populationVariance(double[])} for the non-bias-correctedpopulation variance.\u003c/p\u003e \u003cp\u003e See  {@link org.apache.commons.math3.stat.descriptive.moment.Variance} fordetails on the computing algorithm.\u003c/p\u003e \u003cp\u003e Returns 0 for a single-value (i.e. length \u003d 1) sample.\u003c/p\u003e \u003cp\u003e Throws \u003ccode\u003eMathIllegalArgumentException\u003c/code\u003e if the array is null.\u003c/p\u003e\n * @param values the input array\n * @return the variance of the values or Double.NaN if the array is empty\n * @throws MathIllegalArgumentException if the array is null\n */\n","tf":{"freq":{"singl":1,"common":1,"moment":1,"link":2,"use":2,"denomin":1,"org":1,"fordetail":1,"algorithm":1,"inth":1,"popul":1,"correct":1,"length":1,"valu":3,"bias":2,"argument":2,"except":2,"entri":1,"apach":1,"descript":1,"illeg":2,"stat":1,"empti":2,"non":1,"math":3,"input":2,"varianc":7,"correctedpopul":1,"comput":1,"method":1,"sampl":2,"array":6},"maxFreq":7,"totalTerms":56},"loc":3}