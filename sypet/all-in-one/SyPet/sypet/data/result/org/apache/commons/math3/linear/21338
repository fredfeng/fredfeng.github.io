{"id":21338,"className":"org.apache.commons.math3.linear.CholeskyDecomposition","methodName":"CholeskyDecomposition","signature":"\u003corg.apache.commons.math3.linear.CholeskyDecomposition: void CholeskyDecomposition(org.apache.commons.math3.linear.RealMatrix,double,double)\u003e","javadoc":"/** \n * Calculates the Cholesky decomposition of the given matrix.\n * @param matrix the matrix to decompose\n * @param relativeSymmetryThreshold threshold above which off-diagonalelements are considered too different and matrix not symmetric\n * @param absolutePositivityThreshold threshold below which diagonalelements are considered null and matrix not positive definite\n * @throws NonSquareMatrixException if the matrix is not square.\n * @throws NonSymmetricMatrixException if the matrix is not symmetric.\n * @throws NonPositiveDefiniteMatrixException if the matrix is notstrictly positive definite.\n * @see #CholeskyDecomposition(RealMatrix)\n * @see #DEFAULT_RELATIVE_SYMMETRY_THRESHOLD\n * @see #DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD\n */\n","tf":{"freq":{"squar":2,"except":3,"notstrict":1,"calcul":1,"matrix":12,"symmetr":3,"symmetri":1,"absolut":1,"decompos":1,"consid":2,"non":3,"threshold":4,"real":1,"differ":1,"given":1,"definit":3,"decomposit":3,"relat":1,"diagonalel":2,"choleski":3,"posit":4},"maxFreq":12,"totalTerms":53},"loc":51}