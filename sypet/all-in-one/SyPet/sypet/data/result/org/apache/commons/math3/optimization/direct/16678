{"id":16678,"className":"org.apache.commons.math3.optimization.direct.CMAESOptimizer","methodName":"CMAESOptimizer","signature":"\u003corg.apache.commons.math3.optimization.direct.CMAESOptimizer: void CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean)\u003e","javadoc":"/** \n * @param lambda Population size.\n * @param inputSigma Initial standard deviations to sample new pointsaround the initial guess.\n * @param maxIterations Maximal number of iterations.\n * @param stopFitness Whether to stop if objective function value is smaller than{@code stopFitness}.\n * @param isActiveCMA Chooses the covariance matrix update method.\n * @param diagonalOnly Number of initial iterations, where the covariance matrixremains diagonal.\n * @param checkFeasableCount Determines how often new random objective variables aregenerated in case they are out of bounds.\n * @param random Random generator.\n * @param generateStatistics Whether statistic data is collected.\n * @deprecated See {@link SimpleValueChecker#SimpleValueChecker()}\n */\n","tf":{"freq":{"stop":3,"deprec":1,"simpl":2,"count":1,"link":1,"variabl":1,"data":1,"object":2,"diagon":2,"activ":1,"deviat":1,"whether":2,"smaller":1,"function":1,"lambda":1,"maxim":1,"fit":2,"popul":1,"sigma":1,"choos":1,"valu":3,"initi":3,"matrixremain":1,"pointsaround":1,"max":1,"check":1,"standard":1,"optim":1,"matrix":1,"random":3,"number":2,"checker":2,"statist":2,"size":1,"aregener":1,"input":1,"updat":1,"often":1,"guess":1,"generat":2,"determin":1,"feasabl":1,"method":1,"covari":2,"iter":3,"bound":1,"sampl":1,"collect":1},"maxFreq":3,"totalTerms":68},"loc":5}