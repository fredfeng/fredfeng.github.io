{"id":17439,"className":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm","methodName":"evaluate","signature":"\u003corg.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm: double evaluate(double[],double[],double)\u003e","javadoc":"/** \n * Evaluate the Lagrange polynomial using \u003ca href\u003d\"http://mathworld.wolfram.com/NevillesAlgorithm.html\"\u003e Neville\u0027s Algorithm\u003c/a\u003e. It takes O(n^2) time.\n * @param x Interpolating points array.\n * @param y Interpolating values array.\n * @param z Point at which the function value is to be computed.\n * @return the function value.\n * @throws DimensionMismatchException if {@code x} and {@code y} havedifferent lengths.\n * @throws NonMonotonicSequenceException if  {@code x} is not sorted in strictly increasing order.\n * @throws NumberIsTooSmallException if the size of {@code x} is lessthan 2.\n */\n","tf":{"freq":{"increas":1,"sort":1,"com":1,"use":1,"algorithm":2,"function":2,"time":1,"order":1,"lessthan":1,"sequenc":1,"interpol":2,"length":1,"wolfram":1,"lagrang":1,"valu":3,"href":1,"except":3,"number":1,"evalu":2,"dimens":1,"size":1,"monoton":1,"non":1,"point":2,"http":1,"take":1,"nevill":2,"mathworld":1,"comput":1,"html":1,"strict":1,"polynomi":1,"mismatch":1,"small":1,"array":2,"havediffer":1},"maxFreq":3,"totalTerms":47},"loc":16}