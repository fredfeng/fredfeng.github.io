{"id":19183,"className":"org.apache.commons.math3.util.MathUtils","methodName":"normalizeAngle","signature":"\u003corg.apache.commons.math3.util.MathUtils: double normalizeAngle(double,double)\u003e","javadoc":"/** \n * Normalize an angle in a 2\u0026pi; wide interval around a center value. \u003cp\u003eThis method has three main uses:\u003c/p\u003e \u003cul\u003e \u003cli\u003enormalize an angle between 0 and 2\u0026pi;:\u003cbr/\u003e {@code a \u003d MathUtils.normalizeAngle(a, FastMath.PI);}\u003c/li\u003e \u003cli\u003enormalize an angle between -\u0026pi; and +\u0026pi;\u003cbr/\u003e {@code a \u003d MathUtils.normalizeAngle(a, 0.0);}\u003c/li\u003e \u003cli\u003ecompute the angle between two defining angular positions:\u003cbr\u003e {@code angle \u003d MathUtils.normalizeAngle(end, start) - start;}\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eNote that due to numerical accuracy and since \u0026pi; cannot be represented exactly, the result interval is \u003cem\u003eclosed\u003c/em\u003e, it cannot be half-closed as would be more satisfactory in a purely mathematical view.\u003c/p\u003e\n * @param a angle to normalize\n * @param center center of the desired 2\u0026pi; interval for the result\n * @return a-2k\u0026pi; with integer k and center-\u0026pi; \u0026lt;\u003d a-2k\u0026pi; \u0026lt;\u003d center+\u0026pi;\n * @since 1.2\n */\n","tf":{"freq":{"result":2,"defin":1,"satisfactori":1,"normal":8,"half":1,"use":1,"angular":1,"desir":1,"close":2,"center":5,"exact":1,"three":1,"valu":1,"end":1,"note":1,"repres":1,"numer":1,"mathemat":1,"wide":1,"accuraci":1,"main":1,"around":1,"math":4,"interv":3,"pure":1,"two":1,"start":2,"comput":1,"due":1,"method":1,"angl":10,"view":1,"fast":1,"integ":1,"posit":1,"util":3},"maxFreq":10,"totalTerms":66},"loc":3}