{"id":18468,"className":"org.apache.commons.math3.stat.inference.OneWayAnova","methodName":"anovaPValue","signature":"\u003corg.apache.commons.math3.stat.inference.OneWayAnova: double anovaPValue(java.util.Collection,boolean)\u003e","javadoc":"/** \n * Computes the ANOVA P-value for a collection of  {@link SummaryStatistics}. \u003cp\u003e\u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eThe categoryData \u003ccode\u003eCollection\u003c/code\u003e must contain {@link SummaryStatistics}.\u003c/li\u003e \u003cli\u003e There must be at least two  {@link SummaryStatistics} in the\u003ccode\u003ecategoryData\u003c/code\u003e collection and each of these statistics must contain at least two values.\u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\u003cp\u003e This implementation uses the {@link org.apache.commons.math3.distribution.FDistribution commons-math F Distribution implementation} to estimate the exactp-value, using the formula\u003cpre\u003e p \u003d 1 - cumulativeProbability(F)\u003c/pre\u003e where \u003ccode\u003eF\u003c/code\u003e is the F value and \u003ccode\u003ecumulativeProbability\u003c/code\u003e is the commons-math implementation of the F distribution.\u003c/p\u003e\n * @param categoryData \u003ccode\u003eCollection\u003c/code\u003e of {@link SummaryStatistics}each containing data for one category\n * @param allowOneElementData if true, allow computation for one catagoryonly or for one data element per category\n * @return Pvalue\n * @throws NullArgumentException if \u003ccode\u003ecategoryData\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws DimensionMismatchException if the length of the \u003ccode\u003ecategoryData\u003c/code\u003earray is less than 2 or a contained  {@link SummaryStatistics} does not haveat least two values\n * @throws ConvergenceException if the p-value can not be computed due to a convergence error\n * @throws MaxCountExceededException if the maximum number of iterations is exceeded\n * @since 3.2\n */\n","tf":{"freq":{"count":1,"least":3,"distribut":3,"precondit":1,"must":3,"catagoryon":1,"estim":1,"probabl":2,"fdistribut":1,"argument":1,"element":2,"except":4,"categori":7,"apach":1,"number":1,"pvalu":2,"statist":6,"summari":5,"strong":2,"maximum":1,"contain":4,"comput":3,"due":1,"collect":4,"array":1,"allow":2,"common":3,"link":6,"one":4,"data":8,"use":2,"org":1,"haveat":1,"length":1,"valu":6,"converg":2,"exactp":1,"less":1,"max":1,"error":1,"exceed":2,"true":1,"dimens":1,"math":3,"two":3,"anova":1,"cumul":2,"per":1,"pre":2,"iter":1,"mismatch":1,"formula":1},"maxFreq":8,"totalTerms":120},"loc":8}