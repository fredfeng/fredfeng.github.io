{"id":18180,"className":"org.apache.commons.math3.stat.Frequency","methodName":"entrySetIterator","signature":"\u003corg.apache.commons.math3.stat.Frequency: java.util.Iterator\u003cjava.util.Map.Entry\u003cjava.lang.Comparable\u003c?\u003e,java.lang.Long\u003e\u003e entrySetIterator()\u003e","javadoc":"/** \n * Return an Iterator over the set of keys and values that have been added. Using the entry set to iterate is more efficient in the case where you need to access respective counts as well as values, since it doesn\u0027t require a \"get\" for every key...the value is provided in the Map.Entry. \u003cp\u003e If added values are integral (i.e., integers, longs, Integers, or Longs), they are converted to Longs when they are added, so the values of the map entries returned by the Iterator will in this case be Longs.\u003c/p\u003e\n * @return entry set Iterator\n * @since 3.1\n */\n","tf":{"freq":{"need":1,"integr":1,"count":1,"entri":5,"convert":1,"use":1,"well":1,"access":1,"provid":1,"requir":1,"will":1,"map":2,"ad":3,"valu":5,"effici":1,"iter":5,"integ":2,"everi":1,"key":2,"respect":1},"maxFreq":5,"totalTerms":37},"loc":3}