{"id":23714,"className":"org.apache.commons.math.ode.SecondOrderIntegrator","methodName":"integrate","signature":"\u003corg.apache.commons.math.ode.SecondOrderIntegrator: void integrate(org.apache.commons.math.ode.SecondOrderDifferentialEquations,double,double[],double[],double,double[],double[])\u003e","javadoc":"/** \n * Integrate the differential equations up to the given time\n * @param equations differential equations to integrate\n * @param t0 initial time\n * @param y0 initial value of the state vector at t0\n * @param yDot0 initial value of the first derivative of the statevector at t0\n * @param t target time for the integration(can be set to a value smaller thant \u003ccode\u003et0\u003c/code\u003e for backward integration)\n * @param y placeholder where to put the state vector at eachsuccessful step (and hence at the end of integration), can be the same object as y0\n * @param yDot placeholder where to put the first derivative ofthe state vector at time t, can be the same object as yDot0\n * @throws IntegratorException if the integrator cannot perform integration\n * @throws DerivativeException this exception is propagated to the caller if theunderlying user function triggers one\n */\n","tf":{"freq":{"caller":1,"integr":9,"put":2,"deriv":3,"backward":1,"one":1,"state":3,"thant":1,"theunder":1,"perform":1,"object":2,"dot":3,"smaller":1,"function":1,"time":4,"given":1,"vector":3,"ofth":1,"propag":1,"eachsuccess":1,"valu":3,"initi":3,"end":1,"trigger":1,"except":3,"equat":3,"henc":1,"statevector":1,"placehold":2,"target":1,"user":1,"first":2,"step":1,"differenti":2},"maxFreq":9,"totalTerms":66},"loc":0}