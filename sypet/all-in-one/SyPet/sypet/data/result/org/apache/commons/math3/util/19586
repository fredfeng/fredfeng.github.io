{"id":19586,"className":"org.apache.commons.math3.util.ResizableDoubleArray","methodName":"copy","signature":"\u003corg.apache.commons.math3.util.ResizableDoubleArray: void copy(org.apache.commons.math3.util.ResizableDoubleArray,org.apache.commons.math3.util.ResizableDoubleArray)\u003e","javadoc":"/** \n * \u003cp\u003eCopies source to dest, copying the underlying data, so dest is a new, independent copy of source.  Does not contract before the copy.\u003c/p\u003e \u003cp\u003eObtains synchronization locks on both source and dest (in that order) before performing the copy.\u003c/p\u003e \u003cp\u003eNeither source nor dest may be null; otherwise a  {@link NullArgumentException}is thrown\u003c/p\u003e\n * @param source ResizableDoubleArray to copy\n * @param dest ResizableArray to replace with a copy of the source array\n * @exception NullArgumentException if either source or dest is null\n * @since 2.0\n */\n","tf":{"freq":{"argument":2,"otherwis":1,"thrown":1,"except":3,"may":1,"contract":1,"link":1,"data":1,"lock":1,"perform":1,"copi":8,"resiz":2,"neither":1,"either":1,"independ":1,"obtain":1,"dest":6,"order":1,"replac":1,"sourc":7,"array":3},"maxFreq":8,"totalTerms":45},"loc":16}