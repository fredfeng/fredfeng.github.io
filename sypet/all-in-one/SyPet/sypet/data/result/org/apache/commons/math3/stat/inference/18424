{"id":18424,"className":"org.apache.commons.math3.stat.inference.TTest","methodName":"pairedTTest","signature":"\u003corg.apache.commons.math3.stat.inference.TTest: boolean pairedTTest(double[],double[],double)\u003e","javadoc":"/** \n * Performs a paired t-test evaluating the null hypothesis that the mean of the paired differences between \u003ccode\u003esample1\u003c/code\u003e and \u003ccode\u003esample2\u003c/code\u003e is 0 in favor of the two-sided alternative that the mean paired difference is not equal to 0, with significance level \u003ccode\u003ealpha\u003c/code\u003e. \u003cp\u003e Returns \u003ccode\u003etrue\u003c/code\u003e iff the null hypothesis can be rejected with confidence \u003ccode\u003e1 - alpha\u003c/code\u003e.  To perform a 1-sided test, use \u003ccode\u003ealpha * 2\u003c/code\u003e\u003c/p\u003e \u003cp\u003e \u003cstrong\u003eUsage Note:\u003c/strong\u003e\u003cbr\u003e The validity of the test depends on the assumptions of the parametric t-test procedure, as discussed \u003ca href\u003d\"http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html\"\u003e here\u003c/a\u003e\u003c/p\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eThe input array lengths must be the same and their common length must be at least 2. \u003c/li\u003e \u003cli\u003e \u003ccode\u003e 0 \u0026lt; alpha \u0026lt; 0.5 \u003c/code\u003e \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\n * @param sample1 array of sample data values\n * @param sample2 array of sample data values\n * @param alpha significance level of the test\n * @return true if the null hypothesis can be rejected withconfidence 1 - alpha\n * @throws NullArgumentException if the arrays are \u003ccode\u003enull\u003c/code\u003e\n * @throws NoDataException if the arrays are empty\n * @throws DimensionMismatchException if the length of the arrays is not equal\n * @throws NumberIsTooSmallException if the length of the arrays is \u0026lt; 2\n * @throws OutOfRangeException if \u003ccode\u003ealpha\u003c/code\u003e is not in the range (0, 0.5]\n * @throws MaxCountExceededException if an error occurs computing the p-value\n */\n","tf":{"freq":{"count":1,"test":5,"least":1,"precondit":1,"perform":2,"unpair":1,"must":2,"level":2,"altern":1,"basic":1,"rang":2,"href":1,"argument":1,"except":6,"signific":2,"number":1,"parametr":1,"procedur":1,"iff":1,"input":1,"strong":4,"http":1,"discuss":1,"comput":1,"favor":1,"nwu":1,"small":1,"array":7,"valid":1,"reject":2,"pair":4,"common":1,"data":3,"www":1,"use":1,"ttest":2,"ass":1,"side":2,"alpha":7,"hypothesi":3,"length":4,"withconfid":1,"mean":2,"valu":3,"edu":1,"viol":1,"note":1,"max":1,"confid":1,"error":1,"depend":1,"exceed":1,"true":2,"equal":2,"evalu":1,"dimens":1,"empti":1,"statguidefil":1,"differ":2,"two":1,"html":1,"usag":1,"mismatch":1,"sampl":6,"assumpt":1,"occur":1},"maxFreq":7,"totalTerms":119},"loc":6}