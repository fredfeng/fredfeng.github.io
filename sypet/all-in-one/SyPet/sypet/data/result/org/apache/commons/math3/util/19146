{"id":19146,"className":"org.apache.commons.math3.util.Precision","methodName":"compareTo","signature":"\u003corg.apache.commons.math3.util.Precision: int compareTo(double,double,int)\u003e","javadoc":"/** \n * Compares two numbers given some amount of allowed error. Two float numbers are considered equal if there are  {@code (maxUlps - 1)}(or fewer) floating point numbers between them, i.e. two adjacent floating point numbers are considered equal. Adapted from \u003ca href\u003d\"http://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\"\u003e Bruce Dawson\u003c/a\u003e\n * @param x first value\n * @param y second value\n * @param maxUlps {@code (maxUlps - 1)} is the number of floating pointvalues between  {@code x} and {@code y}.\n * @return \u003cul\u003e\u003cli\u003e0 if  {@link #equals(double,double,int) equals(x, y, maxUlps)}\u003c/li\u003e \u003cli\u003e\u0026lt; 0 if ! {@link #equals(double,double,int) equals(x, y, maxUlps)} \u0026amp;\u0026amp; x \u0026lt; y\u003c/li\u003e\u003cli\u003e\u003e 0 if ! {@link #equals(double,double,int) equals(x, y, maxUlps)} \u0026amp;\u0026amp; x \u003e y\u003c/li\u003e\u003c/ul\u003e\n */\n","tf":{"freq":{"com":1,"second":1,"allow":1,"link":3,"adapt":1,"wordpress":1,"consid":2,"amount":1,"dawson":1,"given":1,"pointvalu":1,"valu":2,"href":1,"adjac":1,"max":6,"error":1,"bruce":1,"ulp":6,"edit":1,"equal":8,"number":6,"randomascii":1,"two":3,"point":3,"http":1,"fewer":1,"amp":4,"compar":3,"first":1},"maxFreq":8,"totalTerms":64},"loc":8}