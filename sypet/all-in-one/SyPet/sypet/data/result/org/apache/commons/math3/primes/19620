{"id":19620,"className":"org.apache.commons.math3.primes.SmallPrimes","methodName":"millerRabinPrimeTest","signature":"\u003corg.apache.commons.math3.primes.SmallPrimes: boolean millerRabinPrimeTest(int)\u003e","javadoc":"/** \n * Miller-Rabin probabilistic primality test for int type, used in such a way that a result is always guaranteed. \u003cp\u003e It uses the prime numbers as successive base therefore it is guaranteed to be always correct. (see Handbook of applied cryptography by Menezes, table 4.1)\n * @param n number to test: an odd integer \u0026ge; 3\n * @return true if n is prime. false if n is definitely composite.\n */\n","tf":{"freq":{"fals":1,"result":1,"test":3,"menez":1,"way":1,"use":2,"therefor":1,"type":1,"correct":1,"handbook":1,"miller":2,"cryptographi":1,"composit":1,"guarante":2,"alway":2,"true":1,"number":2,"prime":3,"appli":1,"tabl":1,"definit":1,"primal":1,"base":1,"probabilist":1,"rabin":2,"odd":1,"success":1,"integ":1},"maxFreq":3,"totalTerms":38},"loc":39}