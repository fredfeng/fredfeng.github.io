{"id":19316,"className":"org.apache.commons.math3.util.MathArrays","methodName":"verifyValues","signature":"\u003corg.apache.commons.math3.util.MathArrays: boolean verifyValues(double[],int,int,boolean)\u003e","javadoc":"/** \n * This method is used to verify that the input parameters designate a subarray of positive length. \u003cp\u003e \u003cul\u003e \u003cli\u003ereturns \u003ccode\u003etrue\u003c/code\u003e iff the parameters designate a subarray of non-negative length\u003c/li\u003e \u003cli\u003ethrows \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if the array is null or or the indices are invalid\u003c/li\u003e \u003cli\u003ereturns \u003ccode\u003efalse\u003c/li\u003e if the array is non-null, but \u003ccode\u003elength\u003c/code\u003e is 0 unless \u003ccode\u003eallowEmpty\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e \u003c/ul\u003e\u003c/p\u003e\n * @param values the input array\n * @param begin index of the first array element to include\n * @param length the number of elements to include\n * @param allowEmpty if \u003ccode\u003etrue\u003c/code\u003e then zero length arrays are allowed\n * @return true if the parameters are valid\n * @throws MathIllegalArgumentException if the indices are invalid or the array is null\n * @since 3.3\n */\n","tf":{"freq":{"fals":1,"valid":1,"allow":3,"use":1,"zero":1,"indic":2,"invalid":2,"unless":1,"verifi":2,"length":5,"valu":2,"argument":2,"element":2,"index":1,"except":2,"includ":2,"paramet":3,"true":4,"number":1,"subarray":2,"illeg":2,"begin":1,"non":2,"empti":2,"math":1,"iff":1,"input":2,"method":1,"negat":1,"first":1,"posit":1,"design":2,"array":6},"maxFreq":6,"totalTerms":63},"loc":26}