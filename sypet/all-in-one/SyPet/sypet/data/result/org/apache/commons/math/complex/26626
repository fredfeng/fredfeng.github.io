{"id":26626,"className":"org.apache.commons.math.complex.Complex","methodName":"add","signature":"\u003corg.apache.commons.math.complex.Complex: org.apache.commons.math.complex.Complex add(org.apache.commons.math.complex.Complex)\u003e","javadoc":"/** \n * Return the sum of this complex number and the given complex number. \u003cp\u003e Uses the definitional formula \u003cpre\u003e (a + bi) + (c + di) \u003d (a+c) + (b+d)i \u003c/pre\u003e\u003c/p\u003e \u003cp\u003e If either this or \u003ccode\u003erhs\u003c/code\u003e has a NaN value in either part, {@link #NaN} is returned; otherwise Inifinite and NaN values arereturned in the parts of the result according to the rules for {@link java.lang.Double} arithmetic.\u003c/p\u003e\n * @param rhs the other complex number\n * @return the complex number sum\n * @throws NullPointerException if \u003ccode\u003erhs\u003c/code\u003e is null\n */\n","tf":{"freq":{"otherwis":1,"result":1,"complex":4,"link":2,"arithmet":1,"use":1,"sum":2,"add":1,"lang":1,"given":1,"rule":1,"rhs":3,"valu":2,"inifinit":1,"except":1,"number":4,"accord":1,"either":2,"pre":2,"definit":1,"pointer":1,"arereturn":1,"java":1,"part":2,"formula":1},"maxFreq":4,"totalTerms":39},"loc":4}