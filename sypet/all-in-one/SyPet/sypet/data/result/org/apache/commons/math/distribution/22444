{"id":22444,"className":"org.apache.commons.math.distribution.AbstractIntegerDistribution","methodName":"cumulativeProbability","signature":"\u003corg.apache.commons.math.distribution.AbstractIntegerDistribution: double cumulativeProbability(double,double)\u003e","javadoc":"/** \n * For a random variable X whose values are distributed according to this distribution, this method returns P(x0 \u0026le; X \u0026le; x1).\n * @param x0 the (inclusive) lower bound\n * @param x1 the (inclusive) upper bound\n * @return the probability that a random variable with this distributionwill take a value between \u003ccode\u003ex0\u003c/code\u003e and \u003ccode\u003ex1\u003c/code\u003e, including the endpoints.\n * @throws MathException if the cumulative probability can not becomputed due to convergence or other numerical errors.\n * @throws IllegalArgumentException if \u003ccode\u003ex0 \u003e x1\u003c/code\u003e\n */\n","tf":{"freq":{"argument":1,"distributionwil":1,"except":2,"includ":1,"lower":1,"error":1,"numer":1,"whose":1,"becomput":1,"variabl":2,"random":2,"distribut":2,"accord":1,"illeg":1,"endpoint":1,"math":1,"upper":1,"inclus":2,"cumul":2,"probabl":3,"take":1,"due":1,"valu":2,"method":1,"converg":1,"bound":2},"maxFreq":3,"totalTerms":36},"loc":13}