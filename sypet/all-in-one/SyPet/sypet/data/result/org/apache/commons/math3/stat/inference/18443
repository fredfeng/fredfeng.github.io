{"id":18443,"className":"org.apache.commons.math3.stat.inference.BinomialTest","methodName":"binomialTest","signature":"\u003corg.apache.commons.math3.stat.inference.BinomialTest: double binomialTest(int,int,double,org.apache.commons.math3.stat.inference.AlternativeHypothesis)\u003e","javadoc":"/** \n * Returns the \u003ci\u003eobserved significance level\u003c/i\u003e, or \u003ca href\u003d\"http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue\"\u003ep-value\u003c/a\u003e, associated with a \u003ca href\u003d\"http://en.wikipedia.org/wiki/Binomial_test\"\u003e Binomial test\u003c/a\u003e. \u003cp\u003e The number returned is the smallest significance level at which one can reject the null hypothesis. The form of the hypothesis depends on  {@code alternativeHypothesis}.\u003c/p\u003e \u003cp\u003e The p-Value represents the likelihood of getting a result at least as extreme as the sample, given the provided  {@code probability} of success on a single trial. For single-sided tests,this value can be directly derived from the Binomial distribution. For the two-sided test, the implementation works as follows: we start by looking at the most extreme cases (0 success and n success where n is the number of trials from the sample) and determine their likelihood. The lower value is added to the p-Value (if both values are equal, both are added). Then we continue with the next extreme value, until we added the value for the actual observed sample.\u003c/p\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eNumber of trials must be \u0026ge; 0.\u003c/li\u003e \u003cli\u003eNumber of successes must be \u0026ge; 0.\u003c/li\u003e \u003cli\u003eNumber of successes must be \u0026le; number of trials.\u003c/li\u003e \u003cli\u003eProbability must be \u0026ge; 0 and \u0026le; 1.\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e\n * @param numberOfTrials number of trials performed\n * @param numberOfSuccesses number of successes observed\n * @param probability assumed probability of a single trial under the null hypothesis\n * @param alternativeHypothesis type of hypothesis being evaluated (one- or two-sided)\n * @return p-value\n * @throws NotPositiveException if {@code numberOfTrials} or {@code numberOfSuccesses} is negative\n * @throws OutOfRangeException if {@code probability} is not between 0 and 1\n * @throws MathIllegalArgumentException if {@code numberOfTrials} \u0026lt; {@code numberOfSuccesses} orif  {@code alternateHypothesis} is null.\n * @see AlternativeHypothesis\n */\n","tf":{"freq":{"lower":1,"test":5,"singl":3,"deriv":1,"least":1,"precondit":1,"distribut":1,"perform":1,"orif":1,"type":1,"must":4,"observ":3,"level":2,"glossari":1,"altern":4,"given":1,"probabl":5,"rang":1,"href":2,"extrem":3,"follow":1,"argument":1,"work":1,"except":3,"form":1,"signific":2,"number":14,"pvalu":1,"provid":1,"continu":1,"strong":2,"http":2,"start":1,"determin":1,"negat":1,"posit":1,"cas":1,"result":1,"reject":1,"next":1,"one":2,"www":1,"lanc":1,"org":1,"likelihood":2,"associ":1,"side":3,"hypothesi":8,"valu":9,"wiki":1,"hyptest":1,"trial":9,"direct":1,"look":1,"assum":1,"repres":1,"depend":1,"smallest":1,"equal":1,"evalu":1,"illeg":1,"math":1,"two":2,"wikipedia":1,"actual":1,"ad":3,"html":1,"binomi":4,"success":9,"sampl":3},"maxFreq":14,"totalTerms":153},"loc":57}