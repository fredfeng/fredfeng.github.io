{"id":19553,"className":"org.apache.commons.math3.util.ResizableDoubleArray","methodName":"ResizableDoubleArray","signature":"\u003corg.apache.commons.math3.util.ResizableDoubleArray: void ResizableDoubleArray(double[])\u003e","javadoc":"/** \n * Creates an instance from an existing  {@code double[]} with theinitial capacity and numElements corresponding to the size of the supplied  {@code double[]} array.If the supplied array is null, a new empty array with the default initial capacity will be created. The input array is copied, not referenced. Other properties take default values: \u003cul\u003e \u003cli\u003e {@code initialCapacity \u003d 16}\u003c/li\u003e \u003cli\u003e {@code expansionMode \u003d MULTIPLICATIVE}\u003c/li\u003e \u003cli\u003e {@code expansionFactor \u003d 2.0}\u003c/li\u003e \u003cli\u003e {@code contractionCriterion \u003d 2.5}\u003c/li\u003e \u003c/ul\u003e\n * @param initialArray initial array\n * @since 2.2\n */\n","tf":{"freq":{"correspond":1,"copi":1,"resiz":1,"mode":1,"referenc":1,"theiniti":1,"valu":1,"initi":4,"exist":1,"element":1,"contract":1,"creat":2,"expans":2,"suppli":2,"factor":1,"size":1,"instanc":1,"empti":1,"criterion":1,"num":1,"input":1,"take":1,"will":1,"capac":3,"properti":1,"array":7},"maxFreq":7,"totalTerms":40},"loc":7}