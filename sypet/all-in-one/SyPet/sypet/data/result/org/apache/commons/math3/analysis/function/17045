{"id":17045,"className":"org.apache.commons.math3.analysis.function.StepFunction","methodName":"StepFunction","signature":"\u003corg.apache.commons.math3.analysis.function.StepFunction: void StepFunction(double[],double[])\u003e","javadoc":"/** \n * Builds a step function from a list of arguments and the corresponding values. Specifically, returns the function h(x) defined by \u003cpre\u003e\u003ccode\u003e h(x) \u003d y[0] for all x \u003c x[1] y[1] for x[1] \u003c\u003d x \u003c x[2] ... y[y.length - 1] for x \u003e\u003d x[x.length - 1] \u003c/code\u003e\u003c/pre\u003e The value of  {@code x[0]} is ignored, but it must be strictly less than{@code x[1]}.\n * @param x Domain values where the function changes value.\n * @param y Values of the function.\n * @throws NonMonotonicSequenceException if the  {@code x} array is not sorted in strictly increasing order.\n * @throws NullArgumentException if {@code x} or {@code y} are {@code null}.\n * @throws NoDataException if {@code x} or {@code y} are zero-length.\n * @throws DimensionMismatchException if {@code x} and {@code y} do nothave the same length.\n */\n","tf":{"freq":{"increas":1,"defin":1,"sort":1,"correspond":1,"data":1,"zero":1,"build":1,"must":1,"function":5,"order":1,"sequenc":1,"length":4,"domain":1,"valu":5,"less":1,"argument":2,"ignor":1,"except":4,"nothav":1,"list":1,"dimens":1,"non":1,"monoton":1,"specif":1,"pre":2,"chang":1,"mismatch":1,"strict":2,"step":2,"array":1},"maxFreq":5,"totalTerms":48},"loc":17}