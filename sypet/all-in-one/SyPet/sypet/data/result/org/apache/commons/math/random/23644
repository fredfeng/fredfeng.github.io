{"id":23644,"className":"org.apache.commons.math.random.RandomDataImpl","methodName":"nextUniform","signature":"\u003corg.apache.commons.math.random.RandomDataImpl: double nextUniform(double,double)\u003e","javadoc":"/** \n * {@inheritDoc}\u003cp\u003e \u003cstrong\u003eAlgorithm Description\u003c/strong\u003e: scales the output of Random.nextDouble(), but rejects 0 values (i.e., will generate another random double if Random.nextDouble() returns 0). This is necessary to provide a symmetric output interval (both endpoints excluded). \u003c/p\u003e\n * @param lower the lower bound.\n * @param upper the upper bound.\n * @return a uniformly distributed random value from the interval (lower,upper)\n * @throws NumberIsTooLargeException if {@code lower \u003e\u003d upper}.\n */\n","tf":{"freq":{"scale":1,"except":1,"lower":4,"reject":1,"uniform":2,"next":3,"distribut":1,"symmetr":1,"descript":1,"random":4,"number":1,"exclud":1,"anoth":1,"provid":1,"necessari":1,"endpoint":1,"algorithm":1,"interv":2,"upper":4,"strong":2,"larg":1,"generat":1,"will":1,"valu":2,"output":2,"bound":2},"maxFreq":4,"totalTerms":43},"loc":15}