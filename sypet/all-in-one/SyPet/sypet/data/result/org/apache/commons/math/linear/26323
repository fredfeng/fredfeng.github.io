{"id":26323,"className":"org.apache.commons.math.linear.MatrixUtils","methodName":"createBigMatrix","signature":"\u003corg.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.BigMatrix createBigMatrix(java.math.BigDecimal[][],boolean)\u003e","javadoc":"/** \n * Returns a  {@link BigMatrix} whose entries are the the values in thethe input array. \u003cp\u003eIf an array is built specially in order to be embedded in a BigMatrix and not used directly, the \u003ccode\u003ecopyArray\u003c/code\u003e may be set to \u003ccode\u003efalse\u003c/code. This will prevent the copying and improve performance as no new array will be built and no data will be copied.\u003c/p\u003e\n * @param data data for new matrix\n * @param copyArray if true, the input array will be copied, otherwiseit will be referenced\n * @return  BigMatrix containing the values of the array\n * @throws IllegalArgumentException if \u003ccode\u003edata\u003c/code\u003e is not rectangular(not all rows have the same length) or empty\n * @throws NullPointerException if \u003ccode\u003edata\u003c/code\u003e is null\n * @see #createRealMatrix(double[][])\n * @deprecated since 2.0 replaced by {@link #createFieldMatrix(FieldElement[][])}\n */\n","tf":{"freq":{"fals":1,"rectangular":1,"deprec":1,"link":2,"data":5,"use":1,"perform":1,"copi":5,"referenc":1,"real":1,"order":1,"length":1,"valu":2,"built":2,"argument":1,"direct":1,"element":1,"except":2,"may":1,"whose":1,"creat":3,"entri":1,"matrix":7,"true":1,"prevent":1,"illeg":1,"row":1,"embed":1,"empti":1,"field":2,"input":2,"replac":1,"contain":1,"otherwiseit":1,"will":5,"pointer":1,"special":1,"improv":1,"theth":1,"big":4,"array":7},"maxFreq":7,"totalTerms":76},"loc":3}