{"id":18538,"className":"org.apache.commons.math3.stat.inference.GTest","methodName":"gDataSetsComparison","signature":"\u003corg.apache.commons.math3.stat.inference.GTest: double gDataSetsComparison(long[],long[])\u003e","javadoc":"/** \n * \u003cp\u003eComputes a G (Log-Likelihood Ratio) two sample test statistic for independence comparing frequency counts in {@code observed1} and {@code observed2}. The sums of frequency counts in the two samples are not required to be the same. The formula used to compute the test statistic is \u003c/p\u003e \u003cp\u003e {@code 2 * totalSum * [H(rowSums) + H(colSums) - H(k)]}\u003c/p\u003e \u003cp\u003e where  {@code H} is the\u003ca href\u003d\"http://en.wikipedia.org/wiki/Entropy_%28information_theory%29\"\u003e Shannon Entropy\u003c/a\u003e of the random variable formed by viewing the elements of the argument array as incidence counts; \u003cbr/\u003e {@code k} is a matrix with rows {@code [observed1, observed2]}; \u003cbr/\u003e {@code rowSums, colSums} are the row/col sums of {@code k}; \u003cbr\u003e and  {@code totalSum} is the overall sum of all entries in {@code k}.\u003c/p\u003e \u003cp\u003eThis statistic can be used to perform a G test evaluating the null hypothesis that both observed counts are independent \u003c/p\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eObserved counts must be non-negative. \u003c/li\u003e \u003cli\u003eObserved counts for a specific bin must not both be zero. \u003c/li\u003e \u003cli\u003eObserved counts for a specific sample must not all be  0. \u003c/li\u003e \u003cli\u003eThe arrays  {@code observed1} and {@code observed2} must havethe same length and their common length must be at least 2. \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e \u003cp\u003eIf any of the preconditions are not met, a {@code MathIllegalArgumentException} is thrown.\u003c/p\u003e\n * @param observed1 array of observed frequency counts of the first data set\n * @param observed2 array of observed frequency counts of the second dataset\n * @return G-Test statistic\n * @throws DimensionMismatchException the the lengths of the arrays do notmatch or their common length is less than 2\n * @throws NotPositiveException if any entry in {@code observed1} or{@code observed2} is negative\n * @throws ZeroException if either all counts of{@code observed1} or {@code observed2} are zero, or if the countat the same index is zero for both arrays.\n */\n","tf":{"freq":{"total":2,"col":3,"second":1,"count":10,"test":4,"least":1,"variabl":1,"precondit":2,"shannon":1,"perform":1,"zero":4,"must":5,"independ":2,"requir":1,"observ":18,"entropi":2,"notmatch":1,"frequenc":4,"href":1,"countat":1,"argument":2,"element":1,"index":1,"thrown":1,"except":4,"form":1,"random":1,"log":1,"row":4,"comparison":1,"statist":4,"non":1,"inform":1,"http":1,"ratio":1,"strong":2,"comput":2,"negat":2,"bin":1,"view":1,"posit":1,"compar":1,"array":6,"common":2,"data":2,"incid":1,"use":2,"sum":9,"org":1,"likelihood":1,"met":1,"hypothesi":1,"length":4,"wiki":1,"less":1,"entri":2,"matrix":1,"evalu":1,"dimens":1,"illeg":1,"math":1,"two":2,"either":1,"specif":2,"dataset":1,"wikipedia":1,"theori":1,"mismatch":1,"haveth":1,"first":1,"sampl":3,"formula":1},"maxFreq":18,"totalTerms":154},"loc":41}