{"id":21730,"className":"org.apache.commons.math3.linear.DecompositionSolver","methodName":"getInverse","signature":"\u003corg.apache.commons.math3.linear.DecompositionSolver: org.apache.commons.math3.linear.RealMatrix getInverse()\u003e","javadoc":"/** \n * Get the \u003ca href\u003d\"http://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_pseudoinverse\"\u003epseudo-inverse\u003c/a\u003e of the decomposed matrix. \u003cp\u003e \u003cem\u003eThis is equal to the inverse  of the decomposed matrix, if such an inverse exists.\u003c/em\u003e \u003cp\u003e If no such inverse exists, then the result has properties that resemble that of an inverse. \u003cp\u003e In particular, in this case, if the decomposed matrix is A, then the system of equations \\( A x \u003d b \\) may have no solutions, or many. If it has no solutions, then the pseudo-inverse \\( A^+ \\) gives the \"closest\" solution \\( z \u003d A^+ b \\), meaning \\( \\left \\| A z - b \\right \\|_2 \\) is minimized. If there are many solutions, then \\( z \u003d A^+ b \\) is the smallest solution, meaning \\( \\left \\| z \\right \\|_2 \\) is minimized. \u003cp\u003e Note however that some decompositions cannot compute a pseudo-inverse for all matrices. For example, the  {@link LUDecomposition} is not defined for non-square matrices to beginwith. The  {@link QRDecomposition} can operate on non-square matrices, but will throw{@link SingularMatrixException} if the decomposed matrix is singular. Refer to the javadocof specific decomposition implementations for more details.\n * @return pseudo-inverse matrix (which is the inverse, if it exists),if the decomposition can pseudo-invert the decomposed matrix\n * @throws SingularMatrixException if the decomposed matrix is singular and the decompositioncan not compute a pseudo-inverse\n */\n","tf":{"freq":{"squar":2,"detail":1,"penros":1,"pseudo":6,"particular":1,"matric":3,"oper":1,"refer":1,"closest":1,"howev":1,"href":1,"right":2,"mani":2,"except":2,"resembl":1,"non":2,"system":1,"http":1,"will":1,"comput":2,"properti":1,"solut":5,"result":1,"defin":1,"give":1,"decompositioncan":1,"moor":1,"link":3,"org":1,"invert":1,"minim":2,"invers":11,"mean":2,"left":2,"wiki":1,"exist":3,"note":1,"may":1,"equat":1,"beginwith":1,"matrix":9,"smallest":1,"equal":1,"singular":4,"decompos":6,"javadocof":1,"specif":1,"pseudoinvers":1,"decomposit":5,"wikipedia":1,"exampl":1},"maxFreq":11,"totalTerms":105},"loc":0}