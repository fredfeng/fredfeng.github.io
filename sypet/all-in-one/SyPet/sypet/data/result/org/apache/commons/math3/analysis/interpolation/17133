{"id":17133,"className":"org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator","methodName":"interpolate","signature":"\u003corg.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator: org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm interpolate(double[],double[])\u003e","javadoc":"/** \n * Compute an interpolating function for the dataset.\n * @param x Interpolating points array.\n * @param y Interpolating values array.\n * @return a function which interpolates the dataset.\n * @throws DimensionMismatchException if the array lengths are different.\n * @throws NumberIsTooSmallException if the number of points is less than 2.\n * @throws NonMonotonicSequenceException if {@code x} is not sorted instrictly increasing order.\n */\n","tf":{"freq":{"increas":1,"except":3,"sort":1,"number":2,"dimens":1,"monoton":1,"non":1,"function":2,"point":2,"differ":1,"order":1,"dataset":2,"sequenc":1,"interpol":5,"length":1,"comput":1,"valu":1,"mismatch":1,"small":1,"instrict":1,"less":1,"array":3},"maxFreq":5,"totalTerms":34},"loc":22}