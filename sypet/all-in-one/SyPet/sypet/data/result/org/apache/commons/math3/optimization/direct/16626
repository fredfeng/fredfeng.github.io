{"id":16626,"className":"org.apache.commons.math3.optimization.direct.NelderMeadSimplex","methodName":"NelderMeadSimplex","signature":"\u003corg.apache.commons.math3.optimization.direct.NelderMeadSimplex: void NelderMeadSimplex(double[],double,double,double,double)\u003e","javadoc":"/** \n * Build a Nelder-Mead simplex with specified coefficients.\n * @param steps Steps along the canonical axes representing box edges.They may be negative but not zero. See {@link AbstractSimplex#AbstractSimplex(double[])}.\n * @param rho Reflection coefficient.\n * @param khi Expansion coefficient.\n * @param gamma Contraction coefficient.\n * @param sigma Shrinkage coefficient.\n * @throws IllegalArgumentException if one of the steps is zero.\n */\n","tf":{"freq":{"shrinkag":1,"canon":1,"edg":1,"one":1,"link":1,"build":1,"zero":2,"specifi":1,"gamma":1,"simplex":4,"sigma":1,"along":1,"rho":1,"axe":1,"argument":1,"mead":2,"except":1,"may":1,"khi":1,"repres":1,"contract":1,"expans":1,"nelder":2,"illeg":1,"box":1,"negat":1,"coeffici":5,"step":3,"reflect":1},"maxFreq":5,"totalTerms":41},"loc":8}