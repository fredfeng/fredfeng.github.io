{"id":18541,"className":"org.apache.commons.math3.stat.inference.GTest","methodName":"gTestDataSetsComparison","signature":"\u003corg.apache.commons.math3.stat.inference.GTest: boolean gTestDataSetsComparison(long[],long[],double)\u003e","javadoc":"/** \n * \u003cp\u003ePerforms a G-Test (Log-Likelihood Ratio Test) comparing two binned data sets. The test evaluates the null hypothesis that the two lists of observed counts conform to the same frequency distribution, with significance level  {@code alpha}. Returns true iff the null hypothesis can be rejected  with 100 * (1 - alpha) percent confidence. \u003c/p\u003e \u003cp\u003eSee  {@link #gDataSetsComparison(long[],long[])} for detailson the formula used to compute the G (LLR) statistic used in the test and {@link #gTest(double[],long[])} for information on howthe observed significance level is computed. The degrees of of freedom used to perform the test is one less than the common length of the input observed count arrays. \u003c/p\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eObserved counts must be non-negative. \u003c/li\u003e \u003cli\u003eObserved counts for a specific bin must not both be zero. \u003c/li\u003e \u003cli\u003eObserved counts for a specific sample must not all be 0. \u003c/li\u003e \u003cli\u003eThe arrays  {@code observed1} and {@code observed2} musthave the same length and their common length must be at least 2. \u003c/li\u003e \u003cli\u003e {@code 0 \u003c alpha \u003c 0.5} \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\u003cp\u003eIf any of the preconditions are not met, a {@code MathIllegalArgumentException} is thrown.\u003c/p\u003e\n * @param observed1 array of observed frequency counts of the first data set\n * @param observed2 array of observed frequency counts of the second dataset\n * @param alpha significance level of the test\n * @return true iff null hypothesis can be rejected with confidence 1 -alpha\n * @throws DimensionMismatchException the the length of the arrays does notmatch\n * @throws NotPositiveException if any of the entries in {@code observed1} or{@code observed2} are negative\n * @throws ZeroException if either all counts of {@code observed1} or{@code observed2} are zero, or if the count at some index iszero for both arrays\n * @throws OutOfRangeException if {@code alpha} is not in the range(0, 0.5]\n * @throws MaxCountExceededException if an error occurs performing the test\n */\n","tf":{"freq":{"percent":1,"second":1,"count":10,"freedom":1,"test":9,"least":1,"distribut":1,"precondit":2,"perform":3,"zero":3,"must":4,"level":3,"observ":16,"rang":2,"musthav":1,"notmatch":1,"frequenc":3,"argument":1,"index":1,"thrown":1,"except":6,"signific":3,"log":1,"comparison":2,"statist":1,"non":1,"inform":1,"degre":1,"iff":2,"input":1,"ratio":1,"strong":2,"comput":2,"negat":2,"bin":2,"posit":1,"compar":1,"array":6,"reject":2,"common":2,"link":2,"one":1,"data":4,"use":3,"likelihood":1,"met":1,"alpha":6,"hypothesi":3,"length":4,"less":1,"howth":1,"max":1,"confid":2,"error":1,"entri":1,"exceed":1,"true":2,"list":1,"evalu":1,"iszero":1,"dimens":1,"illeg":1,"math":1,"two":2,"either":1,"specif":2,"dataset":1,"conform":1,"detailson":1,"mismatch":1,"first":1,"sampl":1,"occur":1,"formula":1},"maxFreq":16,"totalTerms":159},"loc":8}