{"id":17363,"className":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure","methodName":"compose","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DerivativeStructure: org.apache.commons.math3.analysis.differentiation.DerivativeStructure compose(double[])\u003e","javadoc":"/** \n * Compute composition of the instance by a univariate function.\n * @param f array of value and derivatives of the function atthe current point (i.e. [f( {@link #getValue()}), f\u0027( {@link #getValue()}), f\u0027\u0027( {@link #getValue()})...]).\n * @return f(this)\n * @exception DimensionMismatchException if the number of derivativesin the array is not equal to  {@link #getOrder() order} + 1\n */\n","tf":{"freq":{"except":2,"composit":1,"deriv":1,"link":4,"compos":1,"equal":1,"number":1,"dimens":1,"derivativesin":1,"instanc":1,"function":2,"point":1,"order":2,"univari":1,"current":1,"comput":1,"valu":4,"mismatch":1,"atth":1,"array":2},"maxFreq":4,"totalTerms":30},"loc":8}