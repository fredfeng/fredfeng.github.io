{"id":20324,"className":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet","methodName":"PolygonsSet","signature":"\u003corg.apache.commons.math3.geometry.euclidean.twod.PolygonsSet: void PolygonsSet(org.apache.commons.math3.geometry.partitioning.BSPTree,double)\u003e","javadoc":"/** \n * Build a polygons set from a BSP tree. \u003cp\u003eThe leaf nodes of the BSP tree \u003cem\u003emust\u003c/em\u003e have a {@code Boolean} attribute representing the inside status ofthe corresponding cell (true for inside cells, false for outside cells). In order to avoid building too many small objects, it is recommended to use the predefined constants {@code Boolean.TRUE} and {@code Boolean.FALSE}\u003c/p\u003e \u003cp\u003e This constructor is aimed at expert use, as building the tree may be a difficult task. It is not intended for general use and for performances reasons does not check thoroughly its input, as this would require walking the full tree each time. Failing to provide a tree with the proper attributes, \u003cem\u003ewill\u003c/em\u003e therefore generate problems like {@link NullPointerException} or {@link ClassCastException} only later on.This limitation is known and explains why this constructor is for expert use only. The caller does have the responsibility to provided correct arguments. \u003c/p\u003e\n * @param tree inside/outside BSP tree representing the region\n * @param tolerance tolerance below which points are considered identical\n * @since 3.3\n */\n","tf":{"freq":{"fals":1,"reason":1,"perform":1,"leaf":1,"must":1,"polygon":2,"avoid":1,"time":1,"requir":1,"correct":1,"tree":7,"fail":1,"proper":1,"argument":1,"limit":1,"mani":1,"except":2,"respons":1,"status":1,"cell":3,"like":1,"provid":2,"node":1,"input":1,"cast":1,"outsid":2,"aim":1,"will":1,"pointer":1,"known":1,"explain":1,"small":1,"walk":1,"region":1,"caller":1,"expert":2,"correspond":1,"link":2,"predefin":1,"use":4,"object":1,"therefor":1,"build":3,"difficult":1,"recommend":1,"consid":1,"attribut":2,"ident":1,"order":1,"full":1,"ofth":1,"toler":2,"constructor":2,"thorough":1,"may":1,"constant":1,"check":1,"repres":2,"later":1,"task":1,"true":1,"problem":1,"general":1,"point":1,"generat":1,"insid":3,"intend":1},"maxFreq":7,"totalTerms":92},"loc":3}