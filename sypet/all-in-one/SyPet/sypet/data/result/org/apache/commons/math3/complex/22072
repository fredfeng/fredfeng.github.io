{"id":22072,"className":"org.apache.commons.math3.complex.Complex","methodName":"equals","signature":"\u003corg.apache.commons.math3.complex.Complex: boolean equals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,double)\u003e","javadoc":"/** \n * Returns  {@code true} if, both for the real part and for the imaginarypart, there is no double value strictly between the arguments or the difference between them is within the range of allowed error (inclusive).\n * @param x First value (cannot be {@code null}).\n * @param y Second value (cannot be {@code null}).\n * @param eps Amount of allowed absolute error.\n * @return {@code true} if the values are two adjacent floating pointnumbers or they are within range of each other.\n * @see Precision#equals(double,double,double)\n * @since 3.3\n */\n","tf":{"freq":{"adjac":1,"argument":1,"second":1,"error":2,"allow":2,"true":2,"equal":2,"imaginarypart":1,"absolut":1,"amount":1,"two":1,"inclus":1,"real":1,"differ":1,"pointnumb":1,"rang":2,"precis":1,"ep":1,"valu":4,"within":2,"part":1,"strict":1,"first":1},"maxFreq":4,"totalTerms":32},"loc":4}