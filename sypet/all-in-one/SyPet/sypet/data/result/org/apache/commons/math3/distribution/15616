{"id":15616,"className":"org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution","methodName":"cdfExact","signature":"\u003corg.apache.commons.math3.distribution.KolmogorovSmirnovDistribution: double cdfExact(double)\u003e","javadoc":"/** \n * Calculates  {@code P(D_n \u003c d)} using method described in [1] with quickdecisions for extreme values given in [2] (see above). The result is exact in the sense that BigFraction/BigReal is used everywhere at the expense of very slow execution time. Almost never choose this in real applications unless you are very sure; this is almost solely for verification purposes. Normally, you would choose {@link KolmogorovSmirnovDistribution#cdf(double)}\n * @param d statistic\n * @return the two-sided probability of {@code P(D_n \u003c d)}\n * @throws MathArithmeticException if algorithm fails to convert {@code h}to a  {@link org.apache.commons.math3.fraction.BigFraction} in expressing{@code d} as {@code (k - h) / m} for integer {@code k, m} and{@code 0 \u003c\u003d h \u003c 1}.\n */\n","tf":{"freq":{"verif":1,"result":1,"everywher":1,"common":1,"link":2,"normal":1,"arithmet":1,"distribut":1,"convert":1,"use":2,"express":1,"org":1,"applic":1,"algorithm":1,"real":2,"almost":2,"time":1,"fail":1,"probabl":1,"unless":1,"given":1,"side":1,"smirnov":1,"exact":2,"purpos":1,"choos":2,"valu":1,"slow":1,"sens":1,"sole":1,"sure":1,"extrem":1,"except":1,"fraction":3,"quickdecis":1,"calcul":1,"apach":1,"describ":1,"statist":1,"math":2,"two":1,"kolmogorov":1,"never":1,"expens":1,"method":1,"big":3,"execut":1,"integ":1,"cdf":2},"maxFreq":3,"totalTerms":61},"loc":3}