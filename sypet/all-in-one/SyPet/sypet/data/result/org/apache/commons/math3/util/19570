{"id":19570,"className":"org.apache.commons.math3.util.ResizableDoubleArray","methodName":"getContractionCriterion","signature":"\u003corg.apache.commons.math3.util.ResizableDoubleArray: double getContractionCriterion()\u003e","javadoc":"/** \n * The contraction criterion defines when the internal array will contract to store only the number of elements in the element array. If  the \u003ccode\u003eexpansionMode\u003c/code\u003e is \u003ccode\u003eMULTIPLICATIVE_MODE\u003c/code\u003e, contraction is triggered when the ratio between storage array length and \u003ccode\u003enumElements\u003c/code\u003e exceeds \u003ccode\u003econtractionFactor\u003c/code\u003e. If the \u003ccode\u003eexpansionMode\u003c/code\u003e is \u003ccode\u003eADDITIVE_MODE\u003c/code\u003e, the number of excess storage locations is compared to \u003ccode\u003econtractionFactor.\u003c/code\u003e\n * @return the contraction criterion used to reclaim memory.\n * @since 3.1\n */\n","tf":{"freq":{"defin":1,"element":3,"trigger":1,"memori":1,"locat":1,"store":1,"contract":7,"excess":1,"exceed":1,"use":1,"expans":2,"number":2,"factor":2,"storag":2,"mode":2,"num":1,"criterion":3,"ratio":1,"length":1,"intern":1,"will":1,"reclaim":1,"compar":1,"array":3},"maxFreq":7,"totalTerms":41},"loc":3}