{"id":18128,"className":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator","methodName":"getInterpolatedStateVariation","signature":"\u003corg.apache.commons.math3.ode.sampling.NordsieckStepInterpolator: double[] getInterpolatedStateVariation()\u003e","javadoc":"/** \n * Get the state vector variation from current to interpolated state. \u003cp\u003eThis method is aimed at computing y(t\u003csub\u003einterpolation\u003c/sub\u003e) -y(t\u003csub\u003ecurrent\u003c/sub\u003e) accurately by avoiding the cancellation errors that would occur if the subtraction were performed explicitly.\u003c/p\u003e \u003cp\u003eThe returned vector is a reference to a reused array, so it should not be modified and it should be copied if it needs to be preserved across several calls.\u003c/p\u003e\n * @return state vector at time {@link #getInterpolatedTime}\n * @see #getInterpolatedDerivatives()\n * @exception MaxCountExceededException if the number of functions evaluations is exceeded\n */\n","tf":{"freq":{"need":1,"call":1,"sub":4,"count":1,"deriv":1,"link":1,"state":4,"cancel":1,"perform":1,"across":1,"reus":1,"copi":1,"function":1,"avoid":1,"time":2,"variat":2,"refer":1,"vector":3,"interpol":5,"accur":1,"current":2,"except":2,"max":1,"error":1,"exceed":2,"preserv":1,"number":1,"evalu":1,"sever":1,"subtract":1,"aim":1,"explicit":1,"modifi":1,"comput":1,"method":1,"occur":1,"array":1},"maxFreq":5,"totalTerms":54},"loc":6}