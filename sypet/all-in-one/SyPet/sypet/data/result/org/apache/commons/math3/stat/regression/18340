{"id":18340,"className":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression","methodName":"newSampleData","signature":"\u003corg.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression: void newSampleData(double[],int,int)\u003e","javadoc":"/** \n * \u003cp\u003eLoads model x and y sample data from a flat input array, overriding any previous sample. \u003c/p\u003e \u003cp\u003eAssumes that rows are concatenated with y values first in each row.  For example, an input \u003ccode\u003edata\u003c/code\u003e array containing the sequence of values (1, 2, 3, 4, 5, 6, 7, 8, 9) with \u003ccode\u003enobs \u003d 3\u003c/code\u003e and \u003ccode\u003envars \u003d 2\u003c/code\u003e creates a regression dataset with two independent variables, as below: \u003cpre\u003e y   x[0]  x[1] -------------- 1     2     3 4     5     6 7     8     9 \u003c/pre\u003e \u003c/p\u003e \u003cp\u003eNote that there is no need to add an initial unitary column (column of 1\u0027s) when specifying a model including an intercept term.  If  {@link #isNoIntercept()} is \u003ccode\u003etrue\u003c/code\u003e,the X matrix will be created without an initial column of \"1\"s; otherwise this column will be added. \u003c/p\u003e \u003cp\u003eThrows IllegalArgumentException if any of the following preconditions fail: \u003cul\u003e\u003cli\u003e\u003ccode\u003edata\u003c/code\u003e cannot be null\u003c/li\u003e \u003cli\u003e\u003ccode\u003edata.length \u003d nobs * (nvars + 1)\u003c/li\u003e \u003cli\u003e\u003ccode\u003enobs \u003e nvars\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e \u003c/p\u003e\n * @param data input data array\n * @param nobs number of observations (rows)\n * @param nvars number of independent variables (columns, not counting y)\n * @throws NullArgumentException if the data array is null\n * @throws DimensionMismatchException if the length of the data array is not equalto \u003ccode\u003enobs * (nvars + 1)\u003c/code\u003e\n * @throws InsufficientDataException if \u003ccode\u003enobs\u003c/code\u003e is less than\u003ccode\u003envars + 1\u003c/code\u003e\n */\n","tf":{"freq":{"need":1,"regress":1,"nvar":6,"count":1,"variabl":2,"precondit":1,"specifi":1,"independ":2,"observ":1,"fail":1,"sequenc":1,"unitari":1,"follow":1,"argument":2,"except":4,"nob":6,"creat":2,"flat":1,"concaten":1,"number":2,"without":1,"row":3,"insuffici":1,"input":3,"contain":1,"column":5,"will":2,"load":1,"array":5,"otherwis":1,"model":2,"intercept":2,"link":1,"data":10,"add":1,"length":2,"valu":2,"initi":2,"less":1,"note":1,"assum":1,"includ":1,"previous":1,"matrix":1,"true":1,"dimens":1,"illeg":1,"two":1,"dataset":1,"term":1,"pre":2,"exampl":1,"ad":1,"equalto":1,"mismatch":1,"first":1,"sampl":3},"maxFreq":10,"totalTerms":105},"loc":26}