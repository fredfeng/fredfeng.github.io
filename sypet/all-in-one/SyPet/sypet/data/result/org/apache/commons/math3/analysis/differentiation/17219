{"id":17219,"className":"org.apache.commons.math3.analysis.differentiation.DSCompiler","methodName":"pow","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DSCompiler: void pow(double[],int,double[],int,double[],int)\u003e","javadoc":"/** \n * Compute power of a derivative structure.\n * @param x array holding the base\n * @param xOffset offset of the base in its array\n * @param y array holding the exponent\n * @param yOffset offset of the exponent in its array\n * @param result array where result must be stored (forpower the result array \u003cem\u003ecannot\u003c/em\u003e be the input array)\n * @param resultOffset offset of the result in its array\n */\n","tf":{"freq":{"forpow":1,"expon":2,"result":5,"pow":1,"store":1,"deriv":1,"structur":1,"hold":2,"must":1,"input":1,"base":2,"comput":1,"power":1,"offset":6,"array":8},"maxFreq":8,"totalTerms":34},"loc":7}