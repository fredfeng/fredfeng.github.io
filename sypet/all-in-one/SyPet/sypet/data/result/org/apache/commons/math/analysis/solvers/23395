{"id":23395,"className":"org.apache.commons.math.analysis.solvers.UnivariateRealSolver","methodName":"solve","signature":"\u003corg.apache.commons.math.analysis.solvers.UnivariateRealSolver: double solve(double,double,double)\u003e","javadoc":"/** \n * Solve for a zero in the given interval, start at startValue. \u003cp\u003eA solver may require that the interval brackets a single zero root. Solvers that do require bracketing should be able to handle the case where one of the endpoints is itself a root.\u003c/p\u003e\n * @param min the lower bound for the interval.\n * @param max the upper bound for the interval.\n * @param startValue the start value to use\n * @return a value where the function is zero\n * @throws ConvergenceException if the maximum iteration count is exceededor the solver detects convergence problems otherwise.\n * @throws FunctionEvaluationException if an error occurs evaluating the function\n * @throws IllegalArgumentException if min \u003e max or the arguments do notsatisfy the requirements specified by the solver\n * @deprecated replaced by {@link #solve(UnivariateRealFunction,double,double,double)}since 2.0\n */\n","tf":{"freq":{"otherwis":1,"deprec":1,"lower":1,"count":1,"root":2,"singl":1,"link":1,"one":1,"use":1,"abl":1,"zero":3,"bracket":2,"specifi":1,"function":4,"real":1,"upper":1,"requir":3,"given":1,"univari":1,"valu":4,"converg":2,"argument":2,"min":2,"detect":1,"except":3,"may":1,"max":2,"error":1,"problem":1,"evalu":2,"illeg":1,"solv":3,"endpoint":1,"handl":1,"interv":4,"solver":4,"start":4,"maximum":1,"replac":1,"exceededor":1,"iter":1,"notsatisfi":1,"bound":2,"occur":1},"maxFreq":4,"totalTerms":75},"loc":0}