{"id":17203,"className":"org.apache.commons.math3.analysis.differentiation.DSCompiler","methodName":"getPartialDerivativeIndex","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DSCompiler: int getPartialDerivativeIndex(int[])\u003e","javadoc":"/** \n * Get the index of a partial derivative in the array. \u003cp\u003e If all orders are set to 0, then the 0\u003csup\u003eth\u003c/sup\u003e order derivative is returned, which is the value of the function. \u003c/p\u003e \u003cp\u003eThe indices of derivatives are between 0 and  {@link #getSize() getSize()} - 1.Their specific order is fixed for a given compiler, but otherwise not publicly specified. There are however some simple cases which have guaranteed indices: \u003c/p\u003e \u003cul\u003e \u003cli\u003ethe index of 0\u003csup\u003eth\u003c/sup\u003e order derivative is always 0\u003c/li\u003e \u003cli\u003eif there is only 1  {@link #getFreeParameters() free parameter}, then the derivatives are sorted in increasing derivation order (i.e. f at index 0, df/dp at index 1, d\u003csup\u003e2\u003c/sup\u003ef/dp\u003csup\u003e2\u003c/sup\u003e at index 2 ... d\u003csup\u003ek\u003c/sup\u003ef/dp\u003csup\u003ek\u003c/sup\u003e at index k),\u003c/li\u003e \u003cli\u003eif the  {@link #getOrder() derivation order} is 1, then the derivativesare sorted in increasing free parameter order (i.e. f at index 0, df/dx\u003csub\u003e1\u003c/sub\u003e at index 1, df/dx\u003csub\u003e2\u003c/sub\u003e at index 2 ... df/dx\u003csub\u003ek\u003c/sub\u003e at index k),\u003c/li\u003e \u003cli\u003eall other cases are not publicly specified\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e This method is the inverse of method  {@link #getPartialDerivativeOrders(int)}\u003c/p\u003e\n * @param orders derivation orders with respect to each parameter\n * @return index of the partial derivative\n * @exception DimensionMismatchException if the numbers of parameters does notmatch the instance\n * @exception NumberIsTooLargeException if sum of derivation orders is largerthan the instance limits\n * @see #getPartialDerivativeOrders(int)\n */\n","tf":{"freq":{"increas":2,"otherwis":1,"sub":6,"sort":2,"simpl":1,"deriv":13,"link":4,"sum":1,"sup":12,"function":1,"specifi":2,"free":3,"invers":1,"indic":2,"order":13,"given":1,"fix":1,"notmatch":1,"valu":1,"howev":1,"limit":1,"except":4,"index":12,"guarante":1,"alway":1,"paramet":5,"number":2,"dimens":1,"partial":5,"largerthan":1,"instanc":2,"size":2,"specif":1,"derivativesar":1,"larg":1,"method":2,"mismatch":1,"respect":1,"array":1,"compil":1},"maxFreq":13,"totalTerms":115},"loc":10}