{"id":24843,"className":"org.apache.commons.math.util.MathUtils","methodName":"factorialDouble","signature":"\u003corg.apache.commons.math.util.MathUtils: double factorialDouble(int)\u003e","javadoc":"/** \n * Returns n!. Shorthand for \u003ccode\u003en\u003c/code\u003e \u003ca href\u003d\"http://mathworld.wolfram.com/Factorial.html\"\u003e Factorial\u003c/a\u003e, the product of the numbers \u003ccode\u003e1,...,n\u003c/code\u003e as a \u003ccode\u003edouble\u003c/code\u003e. \u003cp\u003e \u003cStrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003e \u003ccode\u003en \u003e\u003d 0\u003c/code\u003e (otherwise \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e \u003cli\u003e The result is small enough to fit into a \u003ccode\u003edouble\u003c/code\u003e. The largest value of \u003ccode\u003en\u003c/code\u003e for which \u003ccode\u003en!\u003c/code\u003e \u003c Double.MAX_VALUE\u003c/code\u003e is 170. If the computed value exceeds Double.MAX_VALUE, Double.POSITIVE_INFINITY is returned\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e\n * @param n argument\n * @return \u003ccode\u003en!\u003c/code\u003e\n * @throws IllegalArgumentException if n \u003c 0\n */\n","tf":{"freq":{"otherwis":1,"result":1,"com":1,"precondit":1,"enough":1,"fit":1,"shorthand":1,"factori":3,"wolfram":1,"valu":2,"href":1,"argument":3,"except":2,"thrown":1,"exceed":1,"number":1,"illeg":2,"largest":1,"product":1,"strong":2,"http":1,"mathworld":1,"comput":1,"html":1,"small":1},"maxFreq":3,"totalTerms":33},"loc":11}