{"id":21424,"className":"org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent","methodName":"DefaultIterativeLinearSolverEvent","signature":"\u003corg.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent: void DefaultIterativeLinearSolverEvent(java.lang.Object,int,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,double)\u003e","javadoc":"/** \n * Creates a new instance of this class. This implementation does \u003cem\u003enot\u003c/em\u003e deep copy the specified vectors  {@code x},  {@code b}. Therefore the user must make sure that these vectors are either unmodifiable views or deep copies of the same vectors actually used by the  {@code source}. Failure to do so may compromise subsequent iterations of the  {@code source}. Callling  {@link #getResidual()} on instancesreturned by this constructor throws a {@link MathUnsupportedOperationException}, while {@link #providesResidual()} returns {@code false}.\n * @param source the iterative solver which fired this event\n * @param iterations the number of iterations performed at the time{@code this} event is created\n * @param x the current estimate of the solution\n * @param b the right-hand side vector\n * @param rnorm the norm of the current estimate of the residual\n */\n","tf":{"freq":{"solut":1,"fals":1,"unsupport":1,"residu":3,"link":3,"use":1,"perform":1,"therefor":1,"copi":2,"must":1,"specifi":1,"hand":1,"estim":2,"time":1,"norm":1,"side":1,"oper":1,"vector":4,"event":3,"current":2,"subsequ":1,"right":1,"deep":2,"constructor":1,"sure":1,"except":1,"linear":1,"may":1,"rnorm":1,"creat":2,"failur":1,"number":1,"provid":1,"fire":1,"instancesreturn":1,"instanc":1,"math":1,"solver":2,"either":1,"unmodifi":1,"compromis":1,"calll":1,"actual":1,"sourc":3,"view":1,"iter":5,"user":1,"make":1},"maxFreq":5,"totalTerms":69},"loc":7}