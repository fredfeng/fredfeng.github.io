{"id":24855,"className":"org.apache.commons.math.util.MathUtils","methodName":"lcm","signature":"\u003corg.apache.commons.math.util.MathUtils: int lcm(int,int)\u003e","javadoc":"/** \n * \u003cp\u003e Returns the least common multiple of the absolute value of two numbers, using the formula \u003ccode\u003elcm(a,b) \u003d (a / gcd(a,b)) * b\u003c/code\u003e. \u003c/p\u003e Special cases: \u003cul\u003e \u003cli\u003eThe invocations \u003ccode\u003elcm(Integer.MIN_VALUE, n)\u003c/code\u003e and \u003ccode\u003elcm(n, Integer.MIN_VALUE)\u003c/code\u003e, where \u003ccode\u003eabs(n)\u003c/code\u003e is a power of 2, throw an \u003ccode\u003eArithmeticException\u003c/code\u003e, because the result would be 2^31, which is too large for an int value.\u003c/li\u003e \u003cli\u003eThe result of \u003ccode\u003elcm(0, x)\u003c/code\u003e and \u003ccode\u003elcm(x, 0)\u003c/code\u003e is \u003ccode\u003e0\u003c/code\u003e for any \u003ccode\u003ex\u003c/code\u003e. \u003c/ul\u003e\n * @param a any number\n * @param b any number\n * @return the least common multiple, never negative\n * @throws ArithmeticException if the result cannot be represented as a nonnegative int value\n * @since 1.1\n */\n","tf":{"freq":{"result":3,"except":2,"multipl":2,"repres":1,"common":2,"least":2,"arithmet":2,"use":1,"number":3,"absolut":1,"invoc":1,"two":1,"never":1,"lcm":6,"nonneg":1,"larg":1,"power":1,"negat":1,"valu":3,"special":1,"ab":1,"integ":2,"formula":1,"gcd":1},"maxFreq":6,"totalTerms":41},"loc":12}