{"id":21696,"className":"org.apache.commons.math3.linear.Array2DRowRealMatrix","methodName":"Array2DRowRealMatrix","signature":"\u003corg.apache.commons.math3.linear.Array2DRowRealMatrix: void Array2DRowRealMatrix(double[][],boolean)\u003e","javadoc":"/** \n * Create a new RealMatrix using the input array as the underlying data array. If an array is built specially in order to be embedded in a RealMatrix and not used directly, the  {@code copyArray} may beset to  {@code false}. This will prevent the copying and improve performance as no new array will be built and no data will be copied.\n * @param d Data for new matrix.\n * @param copyArray if {@code true}, the input array will be copied, otherwise it will be referenced.\n * @throws DimensionMismatchException if {@code d} is not rectangular.\n * @throws NoDataException if {@code d} row or column dimension is zero.\n * @throws NullArgumentException if {@code d} is {@code null}.\n * @see #Array2DRowRealMatrix(double[][])\n */\n","tf":{"freq":{"fals":1,"otherwis":1,"rectangular":1,"data":4,"use":2,"perform":1,"zero":1,"copi":5,"referenc":1,"real":4,"order":1,"beset":1,"built":2,"drow":2,"argument":1,"direct":1,"except":3,"may":1,"creat":1,"matrix":5,"true":1,"prevent":1,"dimens":2,"row":1,"embed":1,"input":2,"column":1,"will":5,"special":1,"improv":1,"mismatch":1,"array":9},"maxFreq":9,"totalTerms":65},"loc":23}