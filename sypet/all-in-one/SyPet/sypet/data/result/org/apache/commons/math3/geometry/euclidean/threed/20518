{"id":20518,"className":"org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet","methodName":"PolyhedronsSet","signature":"\u003corg.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet: void PolyhedronsSet(java.util.List,java.util.List,double)\u003e","javadoc":"/** \n * Build a polyhedrons set from a Boundary REPresentation (B-rep) specified by connected vertices. \u003cp\u003e The boundary is provided as a list of vertices and a list of facets. Each facet is specified as an integer array containing the arrays vertices indices in the vertices list. Each facet normal is oriented by right hand rule to the facet vertices list. \u003c/p\u003e \u003cp\u003e Some basic sanity checks are performed but not everything is thoroughly assessed, so it remains under caller responsibility to ensure the vertices and facets are consistent and properly define a polyhedrons set. \u003c/p\u003e\n * @param vertices list of polyhedrons set vertices\n * @param facets list of facets, as vertices indices in the vertices list\n * @param tolerance tolerance below which points are considered identical\n * @exception MathIllegalArgumentException if some basic sanity checks fail\n * @since 3.5\n */\n","tf":{"freq":{"caller":1,"defin":1,"facet":7,"connect":1,"normal":1,"perform":1,"build":1,"polyhedron":4,"consid":1,"ensur":1,"specifi":2,"hand":1,"fail":1,"ident":1,"indic":2,"basic":2,"rule":1,"assess":1,"saniti":2,"proper":1,"right":1,"toler":2,"argument":1,"thorough":1,"except":2,"everyth":1,"respons":1,"vertic":10,"check":2,"consist":1,"list":7,"illeg":1,"provid":1,"math":1,"point":1,"present":1,"orient":1,"remain":1,"contain":1,"integ":1,"boundari":2,"rep":1,"array":2},"maxFreq":10,"totalTerms":76},"loc":3}