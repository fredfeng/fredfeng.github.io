{"id":18868,"className":"org.apache.commons.math3.stat.descriptive.moment.Mean","methodName":"evaluate","signature":"\u003corg.apache.commons.math3.stat.descriptive.moment.Mean: double evaluate(double[],double[],int,int)\u003e","javadoc":"/** \n * Returns the weighted arithmetic mean of the entries in the specified portion of the input array, or \u003ccode\u003eDouble.NaN\u003c/code\u003e if the designated subarray is empty. \u003cp\u003e Throws \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if either array is null.\u003c/p\u003e \u003cp\u003e See  {@link Mean} for details on the computing algorithm. The two-pass algorithmdescribed above is used here, with weights applied in computing both the original estimate and the correction factor.\u003c/p\u003e \u003cp\u003e Throws \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if any of the following are true: \u003cul\u003e\u003cli\u003ethe values array is null\u003c/li\u003e \u003cli\u003ethe weights array is null\u003c/li\u003e \u003cli\u003ethe weights array does not have the same length as the values array\u003c/li\u003e \u003cli\u003ethe weights array contains one or more infinite values\u003c/li\u003e \u003cli\u003ethe weights array contains one or more NaN values\u003c/li\u003e \u003cli\u003ethe weights array contains negative values\u003c/li\u003e \u003cli\u003ethe start and length arguments do not determine a valid array\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e\n * @param values the input array\n * @param weights the weights array\n * @param begin index of the first array element to include\n * @param length the number of elements to include\n * @return the mean of the values or Double.NaN if length \u003d 0\n * @throws MathIllegalArgumentException if the parameters are not valid\n * @since 2.1\n */\n","tf":{"freq":{"valid":2,"detail":1,"weight":9,"one":2,"link":1,"arithmet":1,"use":1,"specifi":1,"algorithm":1,"infinit":1,"estim":1,"algorithmdescrib":1,"correct":1,"length":4,"mean":3,"valu":7,"follow":1,"portion":1,"argument":4,"element":2,"index":1,"except":3,"includ":2,"entri":1,"paramet":1,"origin":1,"true":1,"number":1,"factor":1,"evalu":1,"subarray":1,"illeg":3,"begin":1,"empti":1,"pass":1,"math":1,"two":1,"appli":1,"input":2,"either":1,"start":1,"determin":1,"contain":3,"comput":2,"negat":1,"first":1,"design":1,"array":13},"maxFreq":13,"totalTerms":94},"loc":17}