{"id":15884,"className":"org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution","methodName":"MixtureMultivariateNormalDistribution","signature":"\u003corg.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution: void MixtureMultivariateNormalDistribution(double[],double[][],double[][][])\u003e","javadoc":"/** \n * Creates a multivariate normal mixture distribution. \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e this constructor will implicitly create an instance of {@link org.apache.commons.math3.random.Well19937c Well19937c} as randomgenerator to be used for sampling only (see  {@link #sample()} and{@link #sample(int)}). In case no sampling is needed for the created distribution, it is advised to pass  {@code null} as random generator viathe appropriate constructors to avoid the additional initialisation overhead.\n * @param weights Weights of each component.\n * @param means Mean vector for each component.\n * @param covariances Covariance matrix for each component.\n */\n","tf":{"freq":{"need":1,"weight":2,"common":1,"link":3,"normal":2,"implicit":1,"distribut":3,"use":1,"well":2,"org":1,"advis":1,"mixtur":2,"avoid":1,"overhead":1,"vector":1,"mean":2,"note":1,"constructor":2,"addit":1,"initialis":1,"creat":3,"matrix":1,"apach":1,"random":2,"viath":1,"instanc":1,"pass":1,"math":1,"multivari":2,"compon":3,"appropri":1,"generat":1,"will":1,"covari":2,"randomgener":1,"sampl":4},"maxFreq":4,"totalTerms":56},"loc":3}