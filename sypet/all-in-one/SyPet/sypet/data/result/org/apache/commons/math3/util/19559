{"id":19559,"className":"org.apache.commons.math3.util.ResizableDoubleArray","methodName":"ResizableDoubleArray","signature":"\u003corg.apache.commons.math3.util.ResizableDoubleArray: void ResizableDoubleArray(int,double,double,org.apache.commons.math3.util.ExpansionMode,double[])\u003e","javadoc":"/** \n * Creates an instance with the specified properties. \u003cbr/\u003e Throws MathIllegalArgumentException if the following conditions are not met: \u003cul\u003e \u003cli\u003e {@code initialCapacity \u003e 0}\u003c/li\u003e \u003cli\u003e {@code expansionFactor \u003e 1}\u003c/li\u003e \u003cli\u003e {@code contractionCriterion \u003e\u003d expansionFactor}\u003c/li\u003e \u003c/ul\u003e\n * @param initialCapacity Initial size of the internal storage array.\n * @param expansionFactor The array will be expanded based on thisparameter.\n * @param contractionCriterion Contraction criteria.\n * @param expansionMode Expansion mode.\n * @param data Initial contents of the array.\n * @throws MathIllegalArgumentException if the parameters are not valid.\n */\n","tf":{"freq":{"valid":1,"data":1,"mode":2,"specifi":1,"resiz":1,"met":1,"expand":1,"initi":4,"follow":1,"thisparamet":1,"condit":1,"argument":2,"except":2,"criteria":1,"creat":1,"contract":3,"paramet":1,"expans":5,"factor":3,"storag":1,"illeg":2,"instanc":1,"size":1,"content":1,"math":2,"criterion":2,"base":1,"intern":1,"will":1,"properti":1,"capac":2,"array":4},"maxFreq":5,"totalTerms":53},"loc":18}