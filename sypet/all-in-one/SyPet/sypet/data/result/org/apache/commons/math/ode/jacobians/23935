{"id":23935,"className":"org.apache.commons.math.ode.jacobians.EventHandlerWithJacobians","methodName":"g","signature":"\u003corg.apache.commons.math.ode.jacobians.EventHandlerWithJacobians: double g(double,double[],double[][],double[][])\u003e","javadoc":"/** \n * Compute the value of the switching function. \u003cp\u003eThe discrete events are generated when the sign of this switching function changes. The integrator will take care to change the stepsize in such a way these events occur exactly at step boundaries. The switching function must be continuous in its roots neighborhood (but not necessarily smooth), as the integrator will need to find its roots to locate precisely the events.\u003c/p\u003e\n * @param t current value of the independent \u003ci\u003etime\u003c/i\u003e variable\n * @param y array containing the current value of the state vector\n * @param dydy0 array containing the current value of the jacobian ofthe state vector with respect to initial state\n * @param dydp array containing the current value of the jacobian ofthe state vector with respect to parameters\n * @return value of the g switching function\n * @exception EventException if the switching function cannot be evaluated\n */\n","tf":{"freq":{"need":1,"discret":1,"jacobian":2,"integr":2,"smooth":1,"root":2,"variabl":1,"state":4,"way":1,"dydp":1,"must":1,"function":5,"time":1,"independ":1,"stepsiz":1,"vector":3,"event":4,"ofth":2,"exact":1,"current":4,"precis":1,"care":1,"valu":6,"initi":1,"find":1,"except":2,"locat":1,"paramet":1,"neighborhood":1,"evalu":1,"continu":1,"sign":1,"dydi":1,"take":1,"contain":3,"generat":1,"will":2,"comput":1,"chang":2,"necessarili":1,"boundari":1,"respect":2,"step":1,"array":3,"occur":1},"maxFreq":6,"totalTerms":77},"loc":0}