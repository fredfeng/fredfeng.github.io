{"id":26499,"className":"org.apache.commons.math.estimation.GaussNewtonEstimator","methodName":"estimate","signature":"\u003corg.apache.commons.math.estimation.GaussNewtonEstimator: void estimate(org.apache.commons.math.estimation.EstimationProblem)\u003e","javadoc":"/** \n * Solve an estimation problem using a least squares criterion. \u003cp\u003eThis method set the unbound parameters of the given problem starting from their current values through several iterations. At each step, the unbound parameters are changed in order to minimize a weighted least square criterion based on the measurements of the problem.\u003c/p\u003e \u003cp\u003eThe iterations are stopped either when the criterion goes below a physical threshold under which improvement are considered useless or when the algorithm is unable to improve it (even if it is still high). The first condition that is met stops the iterations. If the convergence it not reached before the maximum number of iterations, an  {@link EstimationException} isthrown.\u003c/p\u003e\n * @param problem estimation problem to solve\n * @exception EstimationException if the problem cannot be solved\n * @see EstimationProblem\n */\n","tf":{"freq":{"squar":2,"stop":2,"goe":1,"weight":1,"least":2,"link":1,"use":1,"useless":1,"consid":1,"algorithm":1,"isthrown":1,"minim":1,"reach":1,"met":1,"unbound":2,"estim":6,"given":1,"order":1,"current":1,"valu":1,"converg":1,"condit":1,"except":3,"physic":1,"paramet":2,"number":1,"still":1,"problem":7,"solv":3,"sever":1,"threshold":1,"unabl":1,"either":1,"criterion":3,"start":1,"maximum":1,"base":1,"even":1,"improv":2,"method":1,"measur":1,"high":1,"chang":1,"iter":4,"first":1,"step":1},"maxFreq":7,"totalTerms":72},"loc":68}