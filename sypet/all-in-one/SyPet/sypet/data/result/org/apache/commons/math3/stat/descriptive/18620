{"id":18620,"className":"org.apache.commons.math3.stat.descriptive.WeightedEvaluation","methodName":"evaluate","signature":"\u003corg.apache.commons.math3.stat.descriptive.WeightedEvaluation: double evaluate(double[],double[],int,int)\u003e","javadoc":"/** \n * Returns the result of evaluating the statistic over the specified entries in the input array, using corresponding entries in the supplied weights array.\n * @param values the input array\n * @param weights array of weights\n * @param begin the index of the first element to include\n * @param length the number of elements to include\n * @return the value of the weighted statistic applied to the included array entries\n * @throws MathIllegalArgumentException if either array is null, lengthsdo not match, indices are invalid, weights contain NaN, negative or infinite values, or weights does not include at least on positive value\n */\n","tf":{"freq":{"result":1,"weight":6,"least":1,"correspond":1,"use":1,"specifi":1,"infinit":1,"invalid":1,"indic":1,"length":1,"valu":4,"lengthsdo":1,"argument":1,"element":2,"index":1,"except":1,"includ":4,"entri":3,"suppli":1,"number":1,"evalu":2,"illeg":1,"statist":2,"begin":1,"math":1,"either":1,"input":2,"appli":1,"contain":1,"negat":1,"match":1,"posit":1,"first":1,"array":6},"maxFreq":6,"totalTerms":56},"loc":0}