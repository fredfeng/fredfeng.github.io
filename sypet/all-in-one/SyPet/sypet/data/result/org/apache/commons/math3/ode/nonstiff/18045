{"id":18045,"className":"org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator","methodName":"singleStep","signature":"\u003corg.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator: double[] singleStep(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double)\u003e","javadoc":"/** \n * Fast computation of a single step of ODE integration. \u003cp\u003eThis method is intended for the limited use case of very fast computation of only one step without using any of the rich features of general integrators that may take some time to set up (i.e. no step handlers, no events handlers, no additional states, no interpolators, no error control, no evaluations count, no sanity checks ...). It handles the strict minimum of computation, so it can be embedded in outer loops.\u003c/p\u003e \u003cp\u003e This method is \u003cem\u003enot\u003c/em\u003e used at all by the  {@link #integrate(ExpandableStatefulODE,double)}method. It also completely ignores the step set at construction time, and uses only a single step to go from  {@code t0} to {@code t}. \u003c/p\u003e \u003cp\u003e As this method does not use any of the state-dependent features of the integrator, it should be reasonably thread-safe \u003cem\u003eif and only if\u003c/em\u003e the provided differential equations are themselves thread-safe. \u003c/p\u003e\n * @param equations differential equations to integrate\n * @param t0 initial time\n * @param y0 initial value of the state vector at t0\n * @param t target time for the integration(can be set to a value smaller than  {@code t0} for backward integration)\n * @return state vector at {@code t}\n */\n","tf":{"freq":{"integr":7,"count":1,"singl":3,"reason":1,"time":4,"event":1,"interpol":1,"thread":2,"expand":1,"limit":1,"control":1,"ignor":1,"without":1,"provid":1,"embed":1,"comput":3,"fast":2,"strict":1,"backward":1,"minimum":1,"one":1,"link":1,"state":5,"use":5,"smaller":1,"vector":2,"loop":1,"valu":2,"saniti":1,"initi":2,"complet":1,"addit":1,"safe":2,"may":1,"equat":3,"error":1,"check":1,"rich":1,"depend":1,"evalu":1,"general":1,"handl":1,"outer":1,"take":1,"target":1,"featur":2,"method":4,"construct":1,"intend":1,"also":1,"step":6,"handler":2,"differenti":2},"maxFreq":7,"totalTerms":93},"loc":42}