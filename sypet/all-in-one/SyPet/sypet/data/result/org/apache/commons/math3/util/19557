{"id":19557,"className":"org.apache.commons.math3.util.ResizableDoubleArray","methodName":"ResizableDoubleArray","signature":"\u003corg.apache.commons.math3.util.ResizableDoubleArray: void ResizableDoubleArray(int,double,double)\u003e","javadoc":"/** \n * Creates an instance with the specified initial capacity, expansion factor, and contraction criteria. The expansion mode will default to  {@code MULTIPLICATIVE}. \u003cbr/\u003e Throws IllegalArgumentException if the following conditions are not met: \u003cul\u003e \u003cli\u003e {@code initialCapacity \u003e 0}\u003c/li\u003e \u003cli\u003e {@code expansionFactor \u003e 1}\u003c/li\u003e \u003cli\u003e {@code contractionCriterion \u003e\u003d expansionFactor}\u003c/li\u003e \u003c/ul\u003e\n * @param initialCapacity Initial size of the internal storage array..\n * @param expansionFactor The array will be expanded based on thisparameter.\n * @param contractionCriterion Contraction criterion.\n * @throws MathIllegalArgumentException if the parameters are not valid.\n * @since 3.1\n */\n","tf":{"freq":{"valid":1,"mode":1,"specifi":1,"resiz":1,"met":1,"expand":1,"initi":4,"follow":1,"thisparamet":1,"argument":2,"condit":1,"except":2,"criteria":1,"contract":4,"creat":1,"paramet":1,"expans":5,"factor":4,"storag":1,"illeg":2,"instanc":1,"size":1,"math":1,"criterion":3,"base":1,"will":2,"intern":1,"capac":3,"array":3},"maxFreq":5,"totalTerms":52},"loc":7}