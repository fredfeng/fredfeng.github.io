{"id":23527,"className":"org.apache.commons.math.random.RandomData","methodName":"nextSecureHexString","signature":"\u003corg.apache.commons.math.random.RandomData: java.lang.String nextSecureHexString(int)\u003e","javadoc":"/** \n * Generates a random string of hex characters from a secure random sequence. \u003cp\u003e If cryptographic security is not required, use \u003ccode\u003enextHexString()\u003c/code\u003e.\u003c/p\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e \u003cli\u003e\u003ccode\u003elen \u003e 0\u003c/code\u003e (otherwise an IllegalArgumentException is thrown.)\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e\n * @param len length of return string\n * @return the random hex string\n */\n","tf":{"freq":{"argument":1,"otherwis":1,"thrown":1,"except":1,"charact":1,"next":2,"precondit":1,"random":3,"use":1,"len":2,"illeg":1,"secur":3,"requir":1,"hex":4,"strong":2,"sequenc":1,"cryptograph":1,"string":5,"generat":1,"length":1},"maxFreq":5,"totalTerms":34},"loc":0}