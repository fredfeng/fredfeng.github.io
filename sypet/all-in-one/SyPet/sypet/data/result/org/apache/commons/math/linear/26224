{"id":26224,"className":"org.apache.commons.math.linear.BlockRealMatrix","methodName":"BlockRealMatrix","signature":"\u003corg.apache.commons.math.linear.BlockRealMatrix: void BlockRealMatrix(double[][])\u003e","javadoc":"/** \n * Create a new dense matrix copying entries from raw layout data. \u003cp\u003eThe input array \u003cem\u003emust\u003c/em\u003e already be in raw layout.\u003c/p\u003e \u003cp\u003eCalling this constructor is equivalent to call: \u003cpre\u003ematrix \u003d new BlockRealMatrix(rawData.length, rawData[0].length, toBlocksLayout(rawData), false);\u003c/pre\u003e \u003c/p\u003e\n * @param rawData data for new matrix, in raw layout\n * @exception IllegalArgumentException if \u003ccode\u003eblockData\u003c/code\u003e shape isinconsistent with block layout\n * @see #BlockRealMatrix(int,int,double[][],boolean)\n */\n","tf":{"freq":{"raw":7,"fals":1,"call":2,"data":7,"block":6,"copi":1,"must":1,"real":3,"equival":1,"layout":5,"length":2,"isinconsist":1,"dens":1,"constructor":1,"argument":1,"except":2,"creat":1,"entri":1,"matrix":6,"shape":1,"illeg":1,"input":1,"pre":2,"alreadi":1,"array":1},"maxFreq":7,"totalTerms":57},"loc":3}