{"id":17933,"className":"org.apache.commons.math3.ode.SecondOrderIntegrator","methodName":"integrate","signature":"\u003corg.apache.commons.math3.ode.SecondOrderIntegrator: void integrate(org.apache.commons.math3.ode.SecondOrderDifferentialEquations,double,double[],double[],double,double[],double[])\u003e","javadoc":"/** \n * Integrate the differential equations up to the given time\n * @param equations differential equations to integrate\n * @param t0 initial time\n * @param y0 initial value of the state vector at t0\n * @param yDot0 initial value of the first derivative of the statevector at t0\n * @param t target time for the integration(can be set to a value smaller thant \u003ccode\u003et0\u003c/code\u003e for backward integration)\n * @param y placeholder where to put the state vector at eachsuccessful step (and hence at the end of integration), can be the same object as y0\n * @param yDot placeholder where to put the first derivative ofthe state vector at time t, can be the same object as yDot0\n * @throws MathIllegalStateException if the integrator cannot perform integration\n * @throws MathIllegalArgumentException if integration parameters are wrong (typicallytoo small integration span)\n */\n","tf":{"freq":{"integr":10,"put":2,"deriv":2,"backward":1,"state":4,"thant":1,"perform":1,"typicallytoo":1,"object":2,"dot":3,"smaller":1,"time":4,"given":1,"vector":3,"ofth":1,"eachsuccess":1,"valu":3,"initi":3,"end":1,"argument":1,"except":2,"equat":3,"henc":1,"statevector":1,"paramet":1,"illeg":2,"math":2,"placehold":2,"target":1,"wrong":1,"small":1,"first":2,"step":1,"span":1,"differenti":2},"maxFreq":10,"totalTerms":69},"loc":0}