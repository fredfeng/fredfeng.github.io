{"id":23524,"className":"org.apache.commons.math.random.RandomData","methodName":"nextHexString","signature":"\u003corg.apache.commons.math.random.RandomData: java.lang.String nextHexString(int)\u003e","javadoc":"/** \n * Generates a random string of hex characters of length \u003ccode\u003elen\u003c/code\u003e. \u003cp\u003e The generated string will be random, but not cryptographically secure. To generate cryptographically secure strings, use \u003ccode\u003enextSecureHexString\u003c/code\u003e\u003c/p\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e \u003cli\u003e\u003ccode\u003elen \u003e 0\u003c/code\u003e (otherwise an IllegalArgumentException is thrown.)\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e\n * @param len the length of the string to be generated\n * @return random string of hex characters of length \u003ccode\u003elen\u003c/code\u003e\n */\n","tf":{"freq":{"argument":1,"otherwis":1,"thrown":1,"except":1,"charact":2,"next":2,"precondit":1,"random":3,"use":1,"len":4,"illeg":1,"secur":3,"hex":4,"strong":2,"cryptograph":2,"string":7,"generat":4,"length":3,"will":1},"maxFreq":7,"totalTerms":44},"loc":0}