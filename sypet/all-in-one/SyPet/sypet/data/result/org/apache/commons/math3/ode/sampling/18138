{"id":18138,"className":"org.apache.commons.math3.ode.sampling.StepInterpolator","methodName":"getInterpolatedSecondaryDerivatives","signature":"\u003corg.apache.commons.math3.ode.sampling.StepInterpolator: double[] getInterpolatedSecondaryDerivatives(int)\u003e","javadoc":"/** \n * Get the interpolated secondary derivatives corresponding to the secondary equations. \u003cp\u003eThe returned vector is a reference to a reused array, so it should not be modified and it should be copied if it needs to be preserved across several calls.\u003c/p\u003e\n * @param index index of the secondary set, as returned by {@link org.apache.commons.math3.ode.ExpandableStatefulODE#addSecondaryEquations(org.apache.commons.math3.ode.SecondaryEquations) ExpandableStatefulODE.addSecondaryEquations(SecondaryEquations)}\n * @return interpolated secondary derivatives at the current interpolation date\n * @see #getInterpolatedState()\n * @see #getInterpolatedDerivatives()\n * @see #getInterpolatedSecondaryState(int)\n * @see #setInterpolatedTime(double)\n * @since 3.0\n * @exception MaxCountExceededException if the number of functions evaluations is exceeded\n */\n","tf":{"freq":{"need":1,"call":1,"count":1,"deriv":4,"common":2,"correspond":1,"link":1,"state":4,"date":1,"add":2,"org":2,"reus":1,"across":1,"copi":1,"function":1,"time":1,"refer":1,"vector":1,"interpol":8,"current":1,"secondari":10,"expand":2,"except":2,"equat":5,"index":2,"ode":2,"max":1,"exceed":2,"preserv":1,"apach":2,"number":1,"evalu":1,"sever":1,"math":2,"modifi":1,"array":1},"maxFreq":10,"totalTerms":72},"loc":0}