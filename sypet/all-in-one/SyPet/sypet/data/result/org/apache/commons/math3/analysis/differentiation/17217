{"id":17217,"className":"org.apache.commons.math3.analysis.differentiation.DSCompiler","methodName":"pow","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DSCompiler: void pow(double[],int,double,double[],int)\u003e","javadoc":"/** \n * Compute power of a derivative structure.\n * @param operand array holding the operand\n * @param operandOffset offset of the operand in its array\n * @param p power to apply\n * @param result array where result must be stored (forpower the result array \u003cem\u003ecannot\u003c/em\u003e be the input array)\n * @param resultOffset offset of the result in its array\n */\n","tf":{"freq":{"forpow":1,"result":5,"pow":1,"store":1,"deriv":1,"structur":1,"hold":1,"operand":4,"must":1,"input":1,"appli":1,"comput":1,"power":2,"offset":4,"array":6},"maxFreq":6,"totalTerms":31},"loc":21}