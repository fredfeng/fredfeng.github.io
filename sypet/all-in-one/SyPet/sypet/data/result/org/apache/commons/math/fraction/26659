{"id":26659,"className":"org.apache.commons.math.fraction.BigFraction","methodName":"BigFraction","signature":"\u003corg.apache.commons.math.fraction.BigFraction: void BigFraction(double,double,int)\u003e","javadoc":"/** \n * Create a fraction given the double value and maximum error allowed. \u003cp\u003e References: \u003cul\u003e \u003cli\u003e\u003ca href\u003d\"http://mathworld.wolfram.com/ContinuedFraction.html\"\u003e Continued Fraction\u003c/a\u003e equations (11) and (22)-(26)\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e\n * @param value the double value to convert to a fraction.\n * @param epsilon maximum error allowed. The resulting fraction is within \u003ccode\u003eepsilon\u003c/code\u003e of \u003ccode\u003evalue\u003c/code\u003e, in absolute terms.\n * @param maxIterations maximum number of convergents.\n * @throws FractionConversionException if the continued fraction failed to converge.\n * @see #BigFraction(double)\n */\n","tf":{"freq":{"result":1,"com":1,"allow":2,"convers":1,"convert":1,"fail":1,"given":1,"refer":1,"wolfram":1,"epsilon":2,"valu":4,"converg":2,"href":1,"except":1,"fraction":9,"equat":1,"max":1,"error":2,"creat":1,"number":1,"absolut":1,"continu":3,"http":1,"term":1,"maximum":3,"mathworld":1,"html":1,"within":1,"iter":1,"big":2},"maxFreq":9,"totalTerms":50},"loc":3}