{"id":24156,"className":"org.apache.commons.math.stat.inference.TTest","methodName":"pairedT","signature":"\u003corg.apache.commons.math.stat.inference.TTest: double pairedT(double[],double[])\u003e","javadoc":"/** \n * Computes a paired, 2-sample t-statistic based on the data in the input arrays.  The t-statistic returned is equivalent to what would be returned by computing the one-sample t-statistic  {@link #t(double,double[])}, with \u003ccode\u003emu \u003d 0\u003c/code\u003e and the sample array consisting of the (signed) differences between corresponding entries in \u003ccode\u003esample1\u003c/code\u003e and \u003ccode\u003esample2.\u003c/code\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eThe input arrays must have the same length and their common length must be at least 2. \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\n * @param sample1 array of sample data values\n * @param sample2 array of sample data values\n * @return t statistic\n * @throws IllegalArgumentException if the precondition is not met\n * @throws MathException if the statistic can not be computed do to aconvergence or other numerical error.\n */\n","tf":{"freq":{"pair":2,"common":1,"correspond":1,"least":1,"link":1,"one":1,"data":3,"precondit":2,"must":2,"met":1,"equival":1,"length":2,"valu":2,"argument":1,"except":2,"error":1,"numer":1,"consist":1,"aconverg":1,"entri":1,"illeg":1,"statist":5,"math":1,"sign":1,"differ":1,"input":2,"strong":2,"base":1,"comput":3,"sampl":9,"array":5},"maxFreq":9,"totalTerms":59},"loc":0}