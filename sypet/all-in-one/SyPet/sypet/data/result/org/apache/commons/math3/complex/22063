{"id":22063,"className":"org.apache.commons.math3.complex.Complex","methodName":"add","signature":"\u003corg.apache.commons.math3.complex.Complex: org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex)\u003e","javadoc":"/** \n * Returns a  {@code Complex} whose value is{@code (this + addend)}. Uses the definitional formula \u003cpre\u003e \u003ccode\u003e (a + bi) + (c + di) \u003d (a+c) + (b+d)i \u003c/code\u003e \u003c/pre\u003e \u003cbr/\u003e If either  {@code this} or {@code addend} has a {@code NaN} value ineither part,  {@link #NaN} is returned; otherwise {@code Infinite}and  {@code NaN} values are returned in the parts of the resultaccording to the rules for  {@link java.lang.Double} arithmetic.\n * @param addend Value to be added to this {@code Complex}.\n * @return {@code this + addend}.\n * @throws NullArgumentException if {@code addend} is {@code null}.\n */\n","tf":{"freq":{"argument":1,"otherwis":1,"except":1,"complex":2,"whose":1,"link":2,"ineith":1,"arithmet":1,"use":1,"resultaccord":1,"addend":5,"add":1,"lang":1,"infinit":1,"either":1,"pre":2,"rule":1,"definit":1,"ad":1,"java":1,"valu":4,"part":2,"formula":1},"maxFreq":5,"totalTerms":34},"loc":9}