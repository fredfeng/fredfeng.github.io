{"id":18480,"className":"org.apache.commons.math3.stat.inference.ChiSquareTest","methodName":"chiSquareTest","signature":"\u003corg.apache.commons.math3.stat.inference.ChiSquareTest: boolean chiSquareTest(long[][],double)\u003e","javadoc":"/** \n * Performs a \u003ca href\u003d\"http://www.itl.nist.gov/div898/handbook/prc/section4/prc45.htm\"\u003e chi-square test of independence\u003c/a\u003e evaluating the null hypothesis that the classifications represented by the counts in the columns of the input 2-way table are independent of the rows, with significance level \u003ccode\u003ealpha\u003c/code\u003e. Returns true iff the null hypothesis can be rejected with 100 * (1 - alpha) percent confidence. \u003cp\u003e The rows of the 2-way table are \u003ccode\u003ecount[0], ... , count[count.length - 1] \u003c/code\u003e\u003c/p\u003e \u003cp\u003e \u003cstrong\u003eExample:\u003c/strong\u003e\u003cbr\u003e To test the null hypothesis that the counts in \u003ccode\u003ecount[0], ... , count[count.length - 1] \u003c/code\u003e all correspond to the same underlying probability distribution at the 99% level, use\u003c/p\u003e \u003cp\u003e\u003ccode\u003echiSquareTest(counts, 0.01)\u003c/code\u003e\u003c/p\u003e \u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eAll counts must be \u0026ge; 0. \u003c/li\u003e \u003cli\u003eThe count array must be rectangular (i.e. all count[i] subarrays must have the same length).\u003c/li\u003e \u003cli\u003eThe 2-way table represented by \u003ccode\u003ecounts\u003c/code\u003e must have at least 2 columns and at least 2 rows.\u003c/li\u003e \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\u003cp\u003e If any of the preconditions are not met, an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown.\u003c/p\u003e\n * @param counts array representation of 2-way table\n * @param alpha significance level of the test\n * @return true iff null hypothesis can be rejected with confidence1 - alpha\n * @throws NullArgumentException if the array is null\n * @throws DimensionMismatchException if the array is not rectangular\n * @throws NotPositiveException if {@code counts} has any negative entries\n * @throws OutOfRangeException if \u003ccode\u003ealpha\u003c/code\u003e is not in the range (0, 0.5]\n * @throws MaxCountExceededException if an error occurs computing the p-value\n */\n","tf":{"freq":{"squar":3,"rectangular":2,"itl":1,"percent":1,"count":16,"test":5,"least":2,"distribut":1,"precondit":2,"perform":1,"must":4,"independ":2,"level":3,"probabl":1,"rang":2,"handbook":1,"href":1,"htm":1,"argument":2,"thrown":1,"except":6,"signific":2,"row":3,"input":1,"iff":2,"http":1,"strong":4,"chi":3,"column":2,"comput":1,"negat":1,"posit":1,"gov":1,"array":4,"reject":2,"correspond":1,"www":1,"div":1,"way":4,"use":1,"met":1,"hypothesi":4,"alpha":5,"length":3,"classif":1,"valu":1,"max":1,"confid":2,"error":1,"repres":2,"entri":1,"exceed":1,"true":2,"evalu":1,"dimens":1,"subarray":1,"illeg":1,"section":1,"represent":1,"prc":2,"nist":1,"tabl":4,"exampl":1,"mismatch":1,"occur":1},"maxFreq":16,"totalTerms":135},"loc":9}