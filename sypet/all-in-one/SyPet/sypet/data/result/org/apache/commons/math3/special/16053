{"id":16053,"className":"org.apache.commons.math3.special.BesselJ","methodName":"rjBesl","signature":"\u003corg.apache.commons.math3.special.BesselJ: org.apache.commons.math3.special.BesselJ$BesselJResult rjBesl(double,double,int)\u003e","javadoc":"/** \n * Calculates Bessel functions \\(J_{n+alpha}(x)\\) for non-negative argument x, and non-negative order n + alpha. \u003cp\u003e Before using the output vector, the user should check that nVals \u003d nb, i.e., all orders have been calculated to the desired accuracy. See BesselResult class javadoc for details on return values. \u003c/p\u003e\n * @param x non-negative real argument for which J\u0027s are to be calculated\n * @param alpha fractional part of order for which J\u0027s or exponentiallyscaled J\u0027s (\\(J\\cdot e^{x}\\)) are to be calculated. 0 \u003c\u003d alpha \u003c 1.0.\n * @param nb integer number of functions to be calculated, nb \u003e 0. The firstfunction calculated is of order alpha, and the last is of order nb - 1 + alpha.\n * @return BesselJResult a vector of the functions\\(J_{alpha}(x)\\) through \\(J_{nb-1+alpha}(x)\\), or the corresponding exponentially scaled functions and an integer output variable indicating possible errors\n */\n","tf":{"freq":{"val":1,"scale":1,"result":1,"detail":1,"last":1,"correspond":1,"jresult":1,"variabl":1,"possibl":1,"use":1,"javadoc":1,"desir":1,"function":4,"real":1,"indic":1,"order":5,"vector":2,"exponenti":1,"alpha":8,"valu":1,"argument":2,"besl":1,"fraction":1,"error":1,"check":1,"calcul":6,"number":1,"cdot":1,"accuraci":1,"non":3,"firstfunct":1,"bessel":3,"negat":3,"exponentiallysc":1,"output":2,"part":1,"integ":2,"user":1},"maxFreq":8,"totalTerms":67},"loc":403}