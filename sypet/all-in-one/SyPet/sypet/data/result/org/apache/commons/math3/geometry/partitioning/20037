{"id":20037,"className":"org.apache.commons.math3.geometry.partitioning.InsideFinder","methodName":"recurseSides","signature":"\u003corg.apache.commons.math3.geometry.partitioning.InsideFinder: void recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane)\u003e","javadoc":"/** \n * Search recursively for inside leaf nodes on each side of the given hyperplane. \u003cp\u003eThe algorithm used here is directly derived from the one described in section III (\u003ci\u003eBinary Partitioning of a BSP Tree\u003c/i\u003e) of the Bruce Naylor, John Amanatides and William Thibault paper \u003ca href\u003d\"http://www.cs.yorku.ca/~amana/research/bsptSetOp.pdf\"\u003eMerging BSP Trees Yields Polyhedral Set Operations\u003c/a\u003e Proc. Siggraph \u002790, Computer Graphics 24(4), August 1990, pp 115-124, published by the Association for Computing Machinery (ACM)..\u003c/p\u003e\n * @param node current BSP tree node\n * @param sub sub-hyperplane\n */\n","tf":{"freq":{"william":1,"sub":2,"graphic":1,"yorku":1,"binari":1,"naylor":1,"yield":1,"deriv":1,"pdf":1,"paper":1,"one":1,"partit":1,"www":1,"john":1,"use":1,"siggraph":1,"leaf":1,"algorithm":1,"given":1,"tree":3,"associ":1,"oper":1,"search":1,"side":2,"current":1,"august":1,"publish":1,"href":1,"proc":1,"direct":1,"amanatid":1,"thibault":1,"hyperplan":2,"bruce":1,"describ":1,"bspt":1,"research":1,"amana":1,"section":1,"node":3,"machineri":1,"http":1,"comput":2,"insid":1,"polyhedr":1,"merg":1,"recurs":2},"maxFreq":3,"totalTerms":56},"loc":75}