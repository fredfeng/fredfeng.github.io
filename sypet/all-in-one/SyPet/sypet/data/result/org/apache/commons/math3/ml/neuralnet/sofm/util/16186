{"id":16186,"className":"org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction","methodName":"QuasiSigmoidDecayFunction","signature":"\u003corg.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction: void QuasiSigmoidDecayFunction(double,double,long)\u003e","javadoc":"/** \n * Creates an instance. The function  {@code f} will have the following properties:\u003cul\u003e \u003cli\u003e {@code f(0) \u003d initValue}\u003c/li\u003e \u003cli\u003e {@code numCall} is the inflexion point\u003c/li\u003e\u003cli\u003e {@code slope \u003d f\u0027(numCall)}\u003c/li\u003e \u003c/ul\u003e\n * @param initValue Initial value, i.e. {@link #value(long) value(0)}.\n * @param slope Value of the function derivative at {@code numCall}.\n * @param numCall Inflexion point.\n * @throws NotStrictlyPositiveException if {@code initValue \u003c\u003d 0}.\n * @throws NumberIsTooLargeException if {@code slope \u003e\u003d 0}.\n * @throws NotStrictlyPositiveException if {@code numCall \u003c\u003d 0}.\n */\n","tf":{"freq":{"call":5,"except":3,"deriv":1,"creat":1,"link":1,"init":3,"number":1,"sigmoid":1,"quasi":1,"function":3,"instanc":1,"point":2,"inflexion":2,"num":5,"larg":1,"slope":3,"will":1,"valu":7,"initi":1,"properti":1,"strict":2,"posit":2,"decay":1,"follow":1},"maxFreq":7,"totalTerms":50},"loc":22}