{"id":24842,"className":"org.apache.commons.math.util.MathUtils","methodName":"factorial","signature":"\u003corg.apache.commons.math.util.MathUtils: long factorial(int)\u003e","javadoc":"/** \n * Returns n!. Shorthand for \u003ccode\u003en\u003c/code\u003e \u003ca href\u003d\"http://mathworld.wolfram.com/Factorial.html\"\u003e Factorial\u003c/a\u003e, the product of the numbers \u003ccode\u003e1,...,n\u003c/code\u003e. \u003cp\u003e \u003cStrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003e \u003ccode\u003en \u003e\u003d 0\u003c/code\u003e (otherwise \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e \u003cli\u003e The result is small enough to fit into a \u003ccode\u003elong\u003c/code\u003e. The largest value of \u003ccode\u003en\u003c/code\u003e for which \u003ccode\u003en!\u003c/code\u003e \u003c Long.MAX_VALUE\u003c/code\u003e is 20. If the computed value exceeds \u003ccode\u003eLong.MAX_VALUE\u003c/code\u003e an \u003ccode\u003eArithMeticException \u003c/code\u003e is thrown.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e\n * @param n argument\n * @return \u003ccode\u003en!\u003c/code\u003e\n * @throws ArithmeticException if the result is too large to be representedby a long integer.\n * @throws IllegalArgumentException if n \u003c 0\n */\n","tf":{"freq":{"otherwis":1,"result":2,"com":1,"representedbi":1,"arithmet":1,"precondit":1,"enough":1,"fit":1,"shorthand":1,"factori":3,"wolfram":1,"valu":2,"href":1,"arith":1,"argument":3,"except":4,"thrown":2,"exceed":1,"metic":1,"number":1,"illeg":2,"largest":1,"product":1,"strong":2,"http":1,"larg":1,"mathworld":1,"comput":1,"html":1,"integ":1,"small":1},"maxFreq":4,"totalTerms":43},"loc":12}