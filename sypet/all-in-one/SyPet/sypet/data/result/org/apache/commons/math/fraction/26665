{"id":26665,"className":"org.apache.commons.math.fraction.BigFraction","methodName":"getReducedFraction","signature":"\u003corg.apache.commons.math.fraction.BigFraction: org.apache.commons.math.fraction.BigFraction getReducedFraction(int,int)\u003e","javadoc":"/** \n * \u003cp\u003e Creates a \u003ccode\u003eBigFraction\u003c/code\u003e instance with the 2 parts of a fraction Y/Z. \u003c/p\u003e \u003cp\u003e Any negative signs are resolved to be on the numerator. \u003c/p\u003e\n * @param numerator the numerator, for example the three in \u0027three sevenths\u0027.\n * @param denominator the denominator, for example the seven in \u0027three sevenths\u0027.\n * @return a new fraction instance, with the numerator and denominatorreduced.\n * @throws ArithmeticException if the denominator is \u003ccode\u003ezero\u003c/code\u003e.\n */\n","tf":{"freq":{"denominatorreduc":1,"except":1,"fraction":4,"creat":1,"numer":4,"arithmet":1,"seventh":2,"resolv":1,"denomin":3,"zero":1,"instanc":2,"sign":1,"seven":1,"exampl":2,"three":3,"negat":1,"reduc":1,"big":1,"part":1},"maxFreq":4,"totalTerms":32},"loc":7}