{"id":15585,"className":"org.apache.commons.math3.distribution.PoissonDistribution","methodName":"PoissonDistribution","signature":"\u003corg.apache.commons.math3.distribution.PoissonDistribution: void PoissonDistribution(double,double,int)\u003e","javadoc":"/** \n * Creates a new Poisson distribution with specified mean, convergence criterion and maximum number of iterations. \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e this constructor will implicitly create an instance of {@link Well19937c} as random generator to be used for sampling only (see{@link #sample()} and {@link #sample(int)}). In case no sampling is needed for the created distribution, it is advised to pass  {@code null}as random generator via the appropriate constructors to avoid the additional initialisation overhead.\n * @param p Poisson mean.\n * @param epsilon Convergence criterion for cumulative probabilities.\n * @param maxIterations the maximum number of iterations for cumulativeprobabilities.\n * @throws NotStrictlyPositiveException if {@code p \u003c\u003d 0}.\n * @since 2.1\n */\n","tf":{"freq":{"need":1,"via":1,"link":3,"distribut":3,"implicit":1,"use":1,"well":1,"specifi":1,"advis":1,"avoid":1,"overhead":1,"probabl":1,"poisson":3,"epsilon":1,"mean":2,"cumulativeprob":1,"converg":2,"note":1,"constructor":2,"addit":1,"except":1,"max":1,"initialis":1,"creat":3,"random":2,"number":2,"instanc":1,"pass":1,"cumul":1,"criterion":2,"appropri":1,"maximum":2,"generat":2,"will":1,"strict":1,"iter":3,"posit":1,"sampl":4},"maxFreq":4,"totalTerms":59},"loc":3}