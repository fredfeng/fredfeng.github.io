{"id":15885,"className":"org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution","methodName":"MixtureMultivariateNormalDistribution","signature":"\u003corg.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution: void MixtureMultivariateNormalDistribution(java.util.List)\u003e","javadoc":"/** \n * Creates a mixture model from a list of distributions and their associated weights. \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e this constructor will implicitly create an instance of {@link org.apache.commons.math3.random.Well19937c Well19937c} as randomgenerator to be used for sampling only (see  {@link #sample()} and{@link #sample(int)}). In case no sampling is needed for the created distribution, it is advised to pass  {@code null} as random generator viathe appropriate constructors to avoid the additional initialisation overhead.\n * @param components List of (weight, distribution) pairs from which to sample.\n */\n","tf":{"freq":{"need":1,"model":1,"weight":2,"pair":1,"common":1,"normal":1,"link":3,"distribut":4,"implicit":1,"use":1,"well":2,"org":1,"advis":1,"mixtur":2,"avoid":1,"overhead":1,"associ":1,"note":1,"constructor":2,"addit":1,"initialis":1,"creat":3,"apach":1,"random":2,"list":2,"viath":1,"pass":1,"instanc":1,"math":1,"multivari":1,"compon":1,"appropri":1,"generat":1,"will":1,"randomgener":1,"sampl":5},"maxFreq":5,"totalTerms":53},"loc":3}