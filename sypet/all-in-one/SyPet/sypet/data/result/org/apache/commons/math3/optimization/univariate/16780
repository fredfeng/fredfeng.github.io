{"id":16780,"className":"org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer","methodName":"optimize","signature":"\u003corg.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer: org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,FUNC,org.apache.commons.math3.optimization.univariate.GoalType,double,double)\u003e","javadoc":"/** \n * Find an optimum in the given interval. An optimizer may require that the interval brackets a single optimum.\n * @param f Function to optimize.\n * @param goalType Type of optimization goal: either{@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}.\n * @param min Lower bound for the interval.\n * @param max Upper bound for the interval.\n * @param maxEval Maximum number of function evaluations.\n * @return a (point, value) pair where the function is optimum.\n * @throws org.apache.commons.math3.exception.TooManyEvaluationsException if the maximum evaluation count is exceeded.\n * @throws org.apache.commons.math3.exception.ConvergenceException if the optimizer detects a convergence problem.\n * @throws IllegalArgumentException if {@code min \u003e max} or the endpointsdo not satisfy the requirements specified by the optimizer.\n */\n","tf":{"freq":{"lower":1,"count":1,"optimum":3,"common":2,"pair":1,"singl":1,"link":2,"org":2,"type":4,"bracket":1,"specifi":1,"function":3,"upper":1,"requir":2,"given":1,"valu":1,"converg":2,"find":1,"argument":1,"min":2,"detect":1,"mani":1,"except":5,"may":1,"max":3,"optim":6,"eval":1,"exceed":1,"apach":2,"problem":1,"number":1,"evalu":3,"endpointsdo":1,"illeg":1,"goal":4,"math":2,"interv":4,"point":1,"either":1,"maximum":2,"satisfi":1,"bound":2},"maxFreq":6,"totalTerms":78},"loc":0}