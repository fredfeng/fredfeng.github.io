{"id":26653,"className":"org.apache.commons.math.complex.Complex","methodName":"getArgument","signature":"\u003corg.apache.commons.math.complex.Complex: double getArgument()\u003e","javadoc":"/** \n * \u003cp\u003eCompute the argument of this complex number. \u003c/p\u003e \u003cp\u003eThe argument is the angle phi between the positive real axis and the point representing this number in the complex plane. The value returned is between -PI (not inclusive) and PI (inclusive), with negative values returned for numbers with negative imaginary parts. \u003c/p\u003e \u003cp\u003eIf either real or imaginary part (or both) is NaN, NaN is returned.  Infinite parts are handled as java.Math.atan2 handles them, essentially treating finite parts as zero in the presence of an infinite coordinate and returning a multiple of pi/4 depending on the signs of the infinite parts.  See the javadoc for java.Math.atan2 for full details.\u003c/p\u003e\n * @return the argument of this complex number\n */\n","tf":{"freq":{"detail":1,"complex":3,"atan":2,"axi":1,"javadoc":1,"zero":1,"real":2,"inclus":2,"infinit":3,"full":1,"essenti":1,"finit":1,"valu":2,"imaginari":2,"phi":1,"coordin":1,"argument":4,"presenc":1,"multipl":1,"repres":1,"depend":1,"number":4,"handl":2,"sign":1,"math":2,"point":1,"either":1,"plane":1,"comput":1,"angl":1,"negat":2,"java":2,"part":5,"posit":1,"treat":1},"maxFreq":5,"totalTerms":58},"loc":3}