{"id":23546,"className":"org.apache.commons.math.random.CorrelatedRandomVectorGenerator","methodName":"CorrelatedRandomVectorGenerator","signature":"\u003corg.apache.commons.math.random.CorrelatedRandomVectorGenerator: void CorrelatedRandomVectorGenerator(double[],org.apache.commons.math.linear.RealMatrix,double,org.apache.commons.math.random.NormalizedRandomGenerator)\u003e","javadoc":"/** \n * Simple constructor. \u003cp\u003eBuild a correlated random vector generator from its mean vector and covariance matrix.\u003c/p\u003e\n * @param mean expected mean values for all components\n * @param covariance covariance matrix\n * @param small diagonal elements threshold under which  column areconsidered to be dependent on previous ones and are discarded\n * @param generator underlying generator for uncorrelated normalizedcomponents\n * @exception IllegalArgumentException if there is a dimensionmismatch between the mean vector and the covariance matrix\n * @exception NotPositiveDefiniteMatrixException if thecovariance matrix is not strictly positive definite\n * @exception DimensionMismatchException if the mean and covariancearrays dimensions don\u0027t match\n */\n","tf":{"freq":{"simpl":1,"one":1,"build":1,"diagon":1,"discard":1,"expect":1,"dimensionmismatch":1,"vector":4,"mean":5,"valu":1,"constructor":1,"argument":1,"element":1,"except":6,"previous":1,"depend":1,"matrix":5,"random":2,"uncorrel":1,"thecovari":1,"dimens":2,"illeg":1,"threshold":1,"normalizedcompon":1,"compon":1,"definit":2,"generat":4,"column":1,"covariancearray":1,"match":1,"covari":4,"correl":2,"mismatch":1,"strict":1,"areconsid":1,"posit":2,"small":1},"maxFreq":6,"totalTerms":64},"loc":14}