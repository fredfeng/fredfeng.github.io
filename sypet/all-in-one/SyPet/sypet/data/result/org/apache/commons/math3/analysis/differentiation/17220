{"id":17220,"className":"org.apache.commons.math3.analysis.differentiation.DSCompiler","methodName":"rootN","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DSCompiler: void rootN(double[],int,int,double[],int)\u003e","javadoc":"/** \n * Compute n\u003csup\u003eth\u003c/sup\u003e root of a derivative structure.\n * @param operand array holding the operand\n * @param operandOffset offset of the operand in its array\n * @param n order of the root\n * @param result array where result must be stored (forn\u003csup\u003eth\u003c/sup\u003e root the result array \u003cem\u003ecannot\u003c/em\u003e be the input array)\n * @param resultOffset offset of the result in its array\n */\n","tf":{"freq":{"result":5,"store":1,"forn":1,"root":4,"deriv":1,"structur":1,"hold":1,"sup":4,"operand":4,"must":1,"input":1,"order":1,"comput":1,"offset":4,"array":6},"maxFreq":6,"totalTerms":36},"loc":27}