{"id":16162,"className":"org.apache.commons.math3.ml.neuralnet.oned.NeuronString","methodName":"NeuronString","signature":"\u003corg.apache.commons.math3.ml.neuralnet.oned.NeuronString: void NeuronString(int,boolean,org.apache.commons.math3.ml.neuralnet.FeatureInitializer[])\u003e","javadoc":"/** \n * Creates a one-dimensional network: Each neuron not located on the border of the mesh has two neurons linked to it. \u003cbr/\u003e The links are bi-directional. Neurons created successively are neighbours (i.e. there are links between them). \u003cbr/\u003e The topology of the network can also be a circle (if the dimension is wrapped).\n * @param num Number of neurons.\n * @param wrap Whether to wrap the dimension (i.e the first and lastneurons will be linked together).\n * @param featureInit Arrays that will initialize the features sets ofthe network\u0027s neurons.\n * @throws NumberIsTooSmallException if {@code num \u003c 2}.\n */\n","tf":{"freq":{"circl":1,"link":4,"one":1,"lastneuron":1,"network":3,"whether":1,"ofth":1,"initi":1,"border":1,"neighbour":1,"mesh":1,"direct":1,"wrap":3,"except":1,"locat":1,"creat":2,"init":1,"number":2,"togeth":1,"neuron":6,"dimens":2,"topolog":1,"two":1,"dimension":1,"num":2,"string":1,"featur":2,"will":2,"small":1,"success":1,"also":1,"first":1,"array":1},"maxFreq":6,"totalTerms":51},"loc":24}