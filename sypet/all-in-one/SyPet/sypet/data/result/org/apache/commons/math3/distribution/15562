{"id":15562,"className":"org.apache.commons.math3.distribution.UniformIntegerDistribution","methodName":"UniformIntegerDistribution","signature":"\u003corg.apache.commons.math3.distribution.UniformIntegerDistribution: void UniformIntegerDistribution(int,int)\u003e","javadoc":"/** \n * Creates a new uniform integer distribution using the given lower and upper bounds (both inclusive). \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e this constructor will implicitly create an instance of {@link Well19937c} as random generator to be used for sampling only (see{@link #sample()} and {@link #sample(int)}). In case no sampling is needed for the created distribution, it is advised to pass  {@code null}as random generator via the appropriate constructors to avoid the additional initialisation overhead.\n * @param lower Lower bound (inclusive) of this distribution.\n * @param upper Upper bound (inclusive) of this distribution.\n * @throws NumberIsTooLargeException if {@code lower \u003e\u003d upper}.\n */\n","tf":{"freq":{"need":1,"lower":4,"via":1,"link":3,"distribut":5,"implicit":1,"use":2,"well":1,"advis":1,"avoid":1,"inclus":3,"upper":4,"overhead":1,"given":1,"note":1,"constructor":2,"addit":1,"except":1,"initialis":1,"creat":3,"uniform":2,"random":2,"number":1,"instanc":1,"pass":1,"larg":1,"appropri":1,"generat":2,"will":1,"integ":2,"bound":3,"sampl":4},"maxFreq":5,"totalTerms":59},"loc":3}