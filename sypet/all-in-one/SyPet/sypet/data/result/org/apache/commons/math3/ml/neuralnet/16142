{"id":16142,"className":"org.apache.commons.math3.ml.neuralnet.MapUtils","methodName":"findBestAndSecondBest","signature":"\u003corg.apache.commons.math3.ml.neuralnet.MapUtils: org.apache.commons.math3.util.Pair\u003corg.apache.commons.math3.ml.neuralnet.Neuron,org.apache.commons.math3.ml.neuralnet.Neuron\u003e findBestAndSecondBest(double[],java.lang.Iterable,org.apache.commons.math3.ml.distance.DistanceMeasure)\u003e","javadoc":"/** \n * Finds the two neurons that best match the given features.\n * @param features Data.\n * @param neurons List of neurons to scan. If the list is empty{@code null} will be returned.\n * @param distance Distance function. The neuron\u0027s features arepassed as the first argument to  {@link DistanceMeasure#compute(double[],double[])}.\n * @return the two neurons whose features are closest to the given data.\n * @throws org.apache.commons.math3.exception.DimensionMismatchException if the size of the input is not compatible with the neurons features size.\n */\n","tf":{"freq":{"second":1,"common":1,"link":1,"data":2,"arepass":1,"org":1,"function":1,"given":2,"best":3,"closest":1,"find":2,"argument":1,"except":2,"whose":1,"apach":1,"list":2,"dimens":1,"neuron":6,"size":2,"empti":1,"math":1,"two":2,"input":1,"featur":5,"will":1,"distanc":3,"comput":1,"scan":1,"measur":1,"match":1,"mismatch":1,"first":1,"compat":1},"maxFreq":6,"totalTerms":53},"loc":23}