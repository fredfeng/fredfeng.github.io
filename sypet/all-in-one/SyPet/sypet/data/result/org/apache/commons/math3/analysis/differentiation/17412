{"id":17412,"className":"org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator","methodName":"FiniteDifferencesDifferentiator","signature":"\u003corg.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator: void FiniteDifferencesDifferentiator(int,double,double,double)\u003e","javadoc":"/** \n * Build a differentiator with number of points and step size when independent variable is bounded. \u003cp\u003e When the independent variable is bounded (tLower \u0026lt; t \u0026lt; tUpper), the sampling points used for differentiation will be adapted to ensure the constraint holds even near the boundaries. This means the sample will not be centered anymore in these cases. At an extreme case, computing derivatives exactly at the lower bound will lead the sample to be entirely on the right side of the derivation point. \u003c/p\u003e \u003cp\u003e Note that the boundaries are considered to be excluded for function evaluation. \u003c/p\u003e \u003cp\u003e Beware that wrong settings for the finite differences differentiator can lead to highly unstable and inaccurate results, especially for high derivation orders. Using very small step sizes is often a \u003cem\u003ebad\u003c/em\u003e idea. \u003c/p\u003e\n * @param nbPoints number of points to use\n * @param stepSize step size (gap between each point)\n * @param tLower lower bound for independent variable (may be {@code Double.NEGATIVE_INFINITY}if there are no lower bounds)\n * @param tUpper upper bound for independent variable (may be {@code Double.POSITIVE_INFINITY}if there are no upper bounds)\n * @exception NotPositiveException if {@code stepsize \u003c\u003d 0} (note that{@link NotPositiveException} extends {@link NumberIsTooSmallException})\n * @exception NumberIsTooSmallException {@code nbPoint \u003c\u003d 1}\n * @exception NumberIsTooLargeException {@code stepSize * (nbPoints - 1) \u003e\u003d tUpper - tLower}\n */\n","tf":{"freq":{"lower":6,"deriv":3,"variabl":4,"lead":2,"unstabl":1,"function":1,"center":1,"independ":4,"finit":2,"exact":1,"inaccur":1,"right":1,"extrem":1,"except":8,"hold":1,"number":5,"bad":1,"size":5,"anymor":1,"bewar":1,"near":1,"often":1,"will":3,"comput":1,"even":1,"posit":2,"boundari":2,"entir":1,"small":3,"gap":1,"result":1,"idea":1,"link":2,"constraint":1,"use":3,"adapt":1,"exclud":1,"build":1,"consid":1,"ensur":1,"upper":5,"order":1,"stepsiz":1,"side":1,"mean":1,"especi":1,"note":2,"may":2,"evalu":1,"differ":2,"point":8,"larg":1,"wrong":1,"high":2,"sampl":3,"step":5,"bound":7,"differenti":4},"maxFreq":8,"totalTerms":127},"loc":21}