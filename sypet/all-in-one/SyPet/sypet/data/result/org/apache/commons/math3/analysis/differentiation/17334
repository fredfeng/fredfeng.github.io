{"id":17334,"className":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure","methodName":"createConstant","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DerivativeStructure: org.apache.commons.math3.analysis.differentiation.DerivativeStructure createConstant(double)\u003e","javadoc":"/** \n * Create a constant compatible with instance order and number of parameters. \u003cp\u003e This method is a convenience factory method, it simply calls {@code new DerivativeStructure(getFreeParameters(), getOrder(), c)}\u003c/p\u003e\n * @param c value of the constant\n * @return a constant compatible with instance order and number of parameters\n * @see #DerivativeStructure(int,int,double)\n * @since 3.3\n */\n","tf":{"freq":{"call":1,"simpli":1,"constant":4,"structur":2,"deriv":2,"creat":2,"paramet":3,"number":2,"instanc":2,"free":1,"order":3,"factori":1,"valu":1,"method":2,"conveni":1,"compat":2},"maxFreq":4,"totalTerms":30},"loc":3}