{"id":15504,"className":"org.apache.commons.math3.distribution.TriangularDistribution","methodName":"TriangularDistribution","signature":"\u003corg.apache.commons.math3.distribution.TriangularDistribution: void TriangularDistribution(double,double,double)\u003e","javadoc":"/** \n * Creates a triangular real distribution using the given lower limit, upper limit, and mode. \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e this constructor will implicitly create an instance of {@link Well19937c} as random generator to be used for sampling only (see{@link #sample()} and {@link #sample(int)}). In case no sampling is needed for the created distribution, it is advised to pass  {@code null}as random generator via the appropriate constructors to avoid the additional initialisation overhead.\n * @param a Lower limit of this distribution (inclusive).\n * @param b Upper limit of this distribution (inclusive).\n * @param c Mode of this distribution.\n * @throws NumberIsTooLargeException if {@code a \u003e\u003d b} or if {@code c \u003e b}.\n * @throws NumberIsTooSmallException if {@code c \u003c a}.\n */\n","tf":{"freq":{"need":1,"lower":2,"via":1,"link":3,"distribut":6,"implicit":1,"use":2,"well":1,"mode":2,"triangular":2,"advis":1,"inclus":2,"avoid":1,"upper":2,"real":1,"overhead":1,"given":1,"note":1,"constructor":2,"limit":4,"addit":1,"except":2,"initialis":1,"creat":3,"random":2,"number":2,"instanc":1,"pass":1,"larg":1,"appropri":1,"generat":2,"will":1,"small":1,"sampl":4},"maxFreq":6,"totalTerms":60},"loc":3}