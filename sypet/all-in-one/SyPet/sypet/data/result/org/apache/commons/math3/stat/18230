{"id":18230,"className":"org.apache.commons.math3.stat.StatUtils","methodName":"percentile","signature":"\u003corg.apache.commons.math3.stat.StatUtils: double percentile(double[],int,int,double)\u003e","javadoc":"/** \n * Returns an estimate of the \u003ccode\u003ep\u003c/code\u003eth percentile of the values in the \u003ccode\u003evalues\u003c/code\u003e array, starting with the element in (0-based) position \u003ccode\u003ebegin\u003c/code\u003e in the array and including \u003ccode\u003elength\u003c/code\u003e values. \u003cp\u003e \u003cul\u003e \u003cli\u003eReturns \u003ccode\u003eDouble.NaN\u003c/code\u003e if \u003ccode\u003elength \u003d 0\u003c/code\u003e\u003c/li\u003e \u003cli\u003eReturns (for any value of \u003ccode\u003ep\u003c/code\u003e) \u003ccode\u003evalues[begin]\u003c/code\u003e if \u003ccode\u003elength \u003d 1 \u003c/code\u003e\u003c/li\u003e \u003cli\u003eThrows \u003ccode\u003eMathIllegalArgumentException\u003c/code\u003e if \u003ccode\u003evalues\u003c/code\u003e is null , \u003ccode\u003ebegin\u003c/code\u003e or \u003ccode\u003elength\u003c/code\u003e is invalid, or \u003ccode\u003ep\u003c/code\u003e is not a valid quantile value (p must be greater than 0 and less than or equal to 100)\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e \u003cp\u003e See  {@link org.apache.commons.math3.stat.descriptive.rank.Percentile} fora description of the percentile estimation algorithm used.\u003c/p\u003e\n * @param values array of input values\n * @param p  the percentile to compute\n * @param begin  the first (0-based) element to include in the computation\n * @param length  the number of array elements to include\n * @return  the percentile value\n * @throws MathIllegalArgumentException if the parameters are not valid or theinput array is null\n */\n","tf":{"freq":{"percentil":6,"valid":2,"greater":1,"common":1,"quantil":1,"link":1,"use":1,"org":1,"must":1,"algorithm":1,"theinput":1,"rank":1,"estim":2,"invalid":1,"length":5,"valu":10,"less":1,"fora":1,"argument":2,"element":3,"except":2,"includ":3,"paramet":1,"descript":2,"apach":1,"number":1,"equal":1,"illeg":2,"stat":1,"begin":4,"math":3,"input":1,"start":1,"base":2,"comput":2,"first":1,"posit":1,"array":5},"maxFreq":10,"totalTerms":77},"loc":3}