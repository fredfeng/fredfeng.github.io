{"id":20632,"className":"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D","methodName":"orthogonal","signature":"\u003corg.apache.commons.math3.geometry.euclidean.threed.FieldVector3D: org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D\u003cT\u003e orthogonal()\u003e","javadoc":"/** \n * Get a vector orthogonal to the instance. \u003cp\u003eThere are an infinite number of normalized vectors orthogonal to the instance. This method picks up one of them almost arbitrarily. It is useful when one needs to compute a reference frame with one of the axes in a predefined direction. The following example shows how to build a frame having the k axis aligned with the known vector u : \u003cpre\u003e\u003ccode\u003e Vector3D k \u003d u.normalize(); Vector3D i \u003d k.orthogonal(); Vector3D j \u003d Vector3D.crossProduct(k, i); \u003c/code\u003e\u003c/pre\u003e\u003c/p\u003e\n * @return a new normalized vector orthogonal to the instance\n * @exception MathArithmeticException if the norm of the instance is null\n */\n","tf":{"freq":{"need":1,"axi":1,"one":3,"normal":3,"arithmet":1,"predefin":1,"use":1,"show":1,"build":1,"almost":1,"infinit":1,"norm":1,"refer":1,"vector":8,"arbitrarili":1,"pick":1,"axe":1,"follow":1,"direct":1,"except":2,"align":1,"orthogon":5,"number":1,"instanc":4,"math":1,"product":1,"frame":2,"pre":2,"exampl":1,"comput":1,"method":1,"known":1,"cross":1},"maxFreq":8,"totalTerms":54},"loc":19}