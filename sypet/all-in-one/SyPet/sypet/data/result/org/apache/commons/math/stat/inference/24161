{"id":24161,"className":"org.apache.commons.math.stat.inference.TTest","methodName":"homoscedasticT","signature":"\u003corg.apache.commons.math.stat.inference.TTest: double homoscedasticT(double[],double[])\u003e","javadoc":"/** \n * Computes a 2-sample t statistic,  under the hypothesis of equal subpopulation variances.  To compute a t-statistic without the equal variances hypothesis, use  {@link #t(double[],double[])}. \u003cp\u003e This statistic can be used to perform a (homoscedastic) two-sample t-test to compare sample means.\u003c/p\u003e \u003cp\u003e The t-statisitc is\u003c/p\u003e \u003cp\u003e \u0026nbsp;\u0026nbsp;\u003ccode\u003e  t \u003d (m1 - m2) / (sqrt(1/n1 +1/n2) sqrt(var))\u003c/code\u003e \u003c/p\u003e\u003cp\u003e where \u003cstrong\u003e\u003ccode\u003en1\u003c/code\u003e\u003c/strong\u003e is the size of first sample; \u003cstrong\u003e\u003ccode\u003e n2\u003c/code\u003e\u003c/strong\u003e is the size of second sample; \u003cstrong\u003e\u003ccode\u003e m1\u003c/code\u003e\u003c/strong\u003e is the mean of first sample; \u003cstrong\u003e\u003ccode\u003e m2\u003c/code\u003e\u003c/strong\u003e is the mean of second sample\u003c/li\u003e \u003c/ul\u003e and \u003cstrong\u003e\u003ccode\u003evar\u003c/code\u003e\u003c/strong\u003e is the pooled variance estimate: \u003c/p\u003e\u003cp\u003e \u003ccode\u003evar \u003d sqrt(((n1 - 1)var1 + (n2 - 1)var2) / ((n1-1) + (n2-1)))\u003c/code\u003e \u003c/p\u003e\u003cp\u003e with \u003cstrong\u003e\u003ccode\u003evar1\u003ccode\u003e\u003c/strong\u003e the variance of the first sample and \u003cstrong\u003e\u003ccode\u003evar2\u003c/code\u003e\u003c/strong\u003e the variance of the second sample. \u003c/p\u003e\u003cp\u003e \u003cstrong\u003ePreconditions\u003c/strong\u003e: \u003cul\u003e \u003cli\u003eThe observed array lengths must both be at least 2. \u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\n * @param sample1 array of sample data values\n * @param sample2 array of sample data values\n * @return t statistic\n * @throws IllegalArgumentException if the precondition is not met\n */\n","tf":{"freq":{"second":3,"test":1,"least":1,"var":7,"link":1,"homoscedast":2,"data":2,"precondit":2,"use":2,"perform":1,"must":1,"met":1,"estim":1,"observ":1,"pool":1,"hypothesi":2,"length":1,"mean":3,"valu":2,"subpopul":1,"nbsp":2,"argument":1,"except":1,"sqrt":3,"statisitc":1,"equal":2,"illeg":1,"without":1,"statist":4,"size":2,"two":1,"varianc":5,"strong":16,"comput":2,"compar":1,"first":3,"sampl":13,"array":3},"maxFreq":16,"totalTerms":98},"loc":0}