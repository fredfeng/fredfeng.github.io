{"id":17678,"className":"org.apache.commons.math3.random.RandomData","methodName":"nextLong","signature":"\u003corg.apache.commons.math3.random.RandomData: long nextLong(long,long)\u003e","javadoc":"/** \n * Generates a uniformly distributed random long integer between {@code lower} and {@code upper} (endpoints included).\u003cp\u003e The generated long integer values will be random, but not cryptographically secure. To generate cryptographically secure sequences of longs, use  {@link #nextSecureLong(long,long)}. \u003c/p\u003e\n * @param lower lower bound for generated long integer\n * @param upper upper bound for generated long integer\n * @return a random long integer greater than or equal to {@code lower} andless than or equal to  {@code upper}\n * @throws NumberIsTooLargeException if {@code lower \u003e\u003d upper}\n */\n","tf":{"freq":{"except":1,"greater":1,"lower":5,"includ":1,"uniform":1,"link":1,"next":2,"distribut":1,"random":3,"use":1,"number":1,"equal":2,"endpoint":1,"upper":5,"secur":3,"larg":1,"sequenc":1,"cryptograph":2,"generat":5,"will":1,"valu":1,"andless":1,"integ":5,"bound":2},"maxFreq":5,"totalTerms":48},"loc":0}