{"id":23778,"className":"org.apache.commons.math.ode.nonstiff.AdamsIntegrator","methodName":"AdamsIntegrator","signature":"\u003corg.apache.commons.math.ode.nonstiff.AdamsIntegrator: void AdamsIntegrator(java.lang.String,int,int,double,double,double[],double[])\u003e","javadoc":"/** \n * Build an Adams integrator with the given order and step control parameters.\n * @param name name of the method\n * @param nSteps number of steps of the method excluding the one being computed\n * @param order order of the method\n * @param minStep minimal step (must be positive even for backwardintegration), the last step can be smaller than this\n * @param maxStep maximal step (must be positive even for backwardintegration)\n * @param vecAbsoluteTolerance allowed absolute error\n * @param vecRelativeTolerance allowed relative error\n * @exception IllegalArgumentException if order is 1 or less\n */\n","tf":{"freq":{"integr":2,"allow":2,"last":1,"one":1,"exclud":1,"build":1,"must":2,"smaller":1,"minim":1,"maxim":1,"order":4,"given":1,"name":2,"relat":2,"less":1,"toler":2,"argument":1,"min":1,"control":1,"except":2,"max":1,"error":2,"backwardintegr":2,"paramet":1,"number":1,"absolut":2,"illeg":1,"adam":2,"comput":1,"method":3,"even":2,"posit":2,"step":8,"vec":2},"maxFreq":8,"totalTerms":60},"loc":5}