{"id":25034,"className":"org.apache.commons.math.util.ResizableDoubleArray","methodName":"ResizableDoubleArray","signature":"\u003corg.apache.commons.math.util.ResizableDoubleArray: void ResizableDoubleArray(int,float,float,int)\u003e","javadoc":"/** \n * \u003cp\u003e Create a ResizableArray with the specified properties.\u003c/p\u003e \u003cp\u003e Throws IllegalArgumentException if the following conditions are not met: \u003cul\u003e \u003cli\u003e\u003ccode\u003einitialCapacity \u003e 0\u003c/code\u003e\u003c/li\u003e \u003cli\u003e\u003ccode\u003eexpansionFactor \u003e 1\u003c/code\u003e\u003c/li\u003e \u003cli\u003e\u003ccode\u003econtractionFactor \u003e\u003d expansionFactor\u003c/code\u003e\u003c/li\u003e \u003cli\u003e\u003ccode\u003eexpansionMode in {MULTIPLICATIVE_MODE, ADDITIVE_MODE}\u003c/code\u003e \u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e\n * @param initialCapacity the initial size of the internal storage array\n * @param expansionFactor the array will be expanded based on thisparameter\n * @param contractionCriteria the contraction Criteria\n * @param expansionMode  the expansion mode\n * @throws IllegalArgumentException if parameters are not valid\n */\n","tf":{"freq":{"thisparamet":1,"argument":2,"condit":1,"valid":1,"except":2,"criteria":2,"contract":3,"creat":1,"paramet":1,"expans":6,"factor":4,"storag":1,"illeg":2,"size":1,"mode":3,"resiz":2,"specifi":1,"met":1,"base":1,"will":1,"intern":1,"expand":1,"capac":2,"properti":1,"initi":3,"array":4,"follow":1},"maxFreq":6,"totalTerms":50},"loc":7}