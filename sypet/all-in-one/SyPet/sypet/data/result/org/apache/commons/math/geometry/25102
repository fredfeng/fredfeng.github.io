{"id":25102,"className":"org.apache.commons.math.geometry.Rotation","methodName":"getAngles","signature":"\u003corg.apache.commons.math.geometry.Rotation: double[] getAngles(org.apache.commons.math.geometry.RotationOrder)\u003e","javadoc":"/** \n * Get the Cardan or Euler angles corresponding to the instance. \u003cp\u003eThe equations show that each rotation can be defined by two different values of the Cardan or Euler angles set. For example if Cardan angles are used, the rotation defined by the angles a\u003csub\u003e1\u003c/sub\u003e, a\u003csub\u003e2\u003c/sub\u003e and a\u003csub\u003e3\u003c/sub\u003e is the same as the rotation defined by the angles \u0026pi; + a\u003csub\u003e1\u003c/sub\u003e, \u0026pi; - a\u003csub\u003e2\u003c/sub\u003e and \u0026pi; + a\u003csub\u003e3\u003c/sub\u003e. This method implements the following arbitrary choices:\u003c/p\u003e \u003cul\u003e \u003cli\u003efor Cardan angles, the chosen set is the one for which the second angle is between -\u0026pi;/2 and \u0026pi;/2 (i.e its cosine is positive),\u003c/li\u003e \u003cli\u003efor Euler angles, the chosen set is the one for which the second angle is between 0 and \u0026pi; (i.e its sine is positive).\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eCardan and Euler angle have a very disappointing drawback: all of them have singularities. This means that if the instance is too close to the singularities corresponding to the given rotation order, it will be impossible to retrieve the angles. For Cardan angles, this is often called gimbal lock. There is \u003cem\u003enothing\u003c/em\u003e to do to prevent this, it is an intrinsic problem with Cardan and Euler representation (but not a problem with the rotation itself, which is perfectly well defined). For Cardan angles, singularities occur when the second angle is close to -\u0026pi;/2 or +\u0026pi;/2, for Euler angle singularities occur when the second angle is close to 0 or \u0026pi;, this implies that the identity rotation is always singular for Euler angles!\u003c/p\u003e\n * @param order rotation order to use\n * @return an array of three angles, in the order specified by the set\n * @exception CardanEulerSingularityException if the rotation issingular with respect to the angles set specified\n */\n","tf":{"freq":{"second":4,"show":1,"specifi":2,"close":3,"arbitrari":1,"given":1,"three":1,"impli":1,"follow":1,"except":2,"gimbal":1,"alway":1,"cardan":9,"rotat":8,"prevent":1,"instanc":2,"sine":1,"often":1,"will":1,"angl":20,"posit":2,"array":1,"defin":4,"call":1,"sub":12,"correspond":2,"one":2,"use":2,"cosin":1,"chosen":2,"well":1,"intrins":1,"drawback":1,"ident":1,"order":4,"mean":1,"noth":1,"valu":1,"perfect":1,"issingular":1,"equat":1,"disappoint":1,"lock":1,"choic":1,"problem":2,"singular":6,"represent":1,"two":1,"differ":1,"retriev":1,"euler":8,"exampl":1,"method":1,"imposs":1,"respect":1,"occur":2},"maxFreq":20,"totalTerms":134},"loc":221}