{"id":17926,"className":"org.apache.commons.math3.ode.ContinuousOutputModel","methodName":"getInterpolatedSecondaryState","signature":"\u003corg.apache.commons.math3.ode.ContinuousOutputModel: double[] getInterpolatedSecondaryState(int)\u003e","javadoc":"/** \n * Get the interpolated secondary state corresponding to the secondary equations. \u003cp\u003eThe returned vector is a reference to a reused array, so it should not be modified and it should be copied if it needs to be preserved across several calls to the associated {@link #setInterpolatedTime(double)} method.\u003c/p\u003e\n * @param secondaryStateIndex index of the secondary set, as returned by {@link org.apache.commons.math3.ode.ExpandableStatefulODE#addSecondaryEquations(org.apache.commons.math3.ode.SecondaryEquations) ExpandableStatefulODE.addSecondaryEquations(SecondaryEquations)}\n * @return interpolated secondary state at the current interpolation date\n * @see #setInterpolatedTime(double)\n * @see #getInterpolatedState()\n * @see #getInterpolatedDerivatives()\n * @see #getInterpolatedSecondaryDerivatives(int)\n * @since 3.2\n * @exception MaxCountExceededException if the number of functions evaluations is exceeded\n */\n","tf":{"freq":{"need":1,"call":1,"count":1,"deriv":2,"common":2,"correspond":1,"link":2,"state":7,"date":1,"add":2,"org":2,"reus":1,"across":1,"copi":1,"function":1,"time":2,"refer":1,"associ":1,"vector":1,"interpol":9,"current":1,"expand":2,"secondari":11,"except":2,"ode":2,"equat":5,"index":2,"max":1,"exceed":2,"preserv":1,"apach":2,"number":1,"evalu":1,"sever":1,"math":2,"modifi":1,"method":1,"array":1},"maxFreq":11,"totalTerms":79},"loc":3}