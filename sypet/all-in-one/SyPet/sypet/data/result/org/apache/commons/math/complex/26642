{"id":26642,"className":"org.apache.commons.math.complex.Complex","methodName":"cos","signature":"\u003corg.apache.commons.math.complex.Complex: org.apache.commons.math.complex.Complex cos()\u003e","javadoc":"/** \n * Compute the \u003ca href\u003d\"http://mathworld.wolfram.com/Cosine.html\" TARGET\u003d\"_top\"\u003e cosine\u003c/a\u003e of this complex number. \u003cp\u003e Implements the formula: \u003cpre\u003e \u003ccode\u003e cos(a + bi) \u003d cos(a)cosh(b) - sin(a)sinh(b)i\u003c/code\u003e\u003c/pre\u003e where the (real) functions on the right-hand side are {@link java.lang.Math#sin},  {@link java.lang.Math#cos}, {@link MathUtils#cosh} and {@link MathUtils#sinh}.\u003c/p\u003e \u003cp\u003e Returns  {@link Complex#NaN} if either real or imaginary part of theinput argument is \u003ccode\u003eNaN\u003c/code\u003e.\u003c/p\u003e \u003cp\u003e Infinite values in real or imaginary parts of the input may result in infinite or NaN values returned in parts of the result.\u003cpre\u003e Examples: \u003ccode\u003e cos(1 \u0026plusmn; INFINITY i) \u003d 1 \u0026#x2213; INFINITY i cos(\u0026plusmn;INFINITY + i) \u003d NaN + NaN i cos(\u0026plusmn;INFINITY \u0026plusmn; INFINITY i) \u003d NaN + NaN i\u003c/code\u003e\u003c/pre\u003e\u003c/p\u003e\n * @return the cosine of this complex number\n * @since 1.2\n */\n","tf":{"freq":{"result":2,"complex":3,"com":1,"cos":7,"link":5,"cosin":3,"lang":2,"function":1,"theinput":1,"hand":1,"real":3,"infinit":2,"side":1,"plusmn":4,"wolfram":1,"valu":2,"imaginari":2,"href":1,"right":1,"top":1,"argument":1,"cosh":2,"may":1,"sinh":2,"number":2,"math":4,"input":1,"either":1,"http":1,"pre":4,"sin":2,"exampl":1,"mathworld":1,"comput":1,"html":1,"java":2,"part":3,"util":2,"formula":1},"maxFreq":7,"totalTerms":77},"loc":8}