{"id":23113,"className":"org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer","methodName":"LevenbergMarquardtOptimizer","signature":"\u003corg.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer: void LevenbergMarquardtOptimizer()\u003e","javadoc":"/** \n * Build an optimizer for least squares problems. \u003cp\u003eThe default values for the algorithm settings are: \u003cul\u003e \u003cli\u003e {@link #setConvergenceChecker(VectorialConvergenceChecker) vectorial convergence checker}: null\u003c/li\u003e \u003cli\u003e {@link #setInitialStepBoundFactor(double) initial step bound factor}: 100.0\u003c/li\u003e \u003cli\u003e {@link #setMaxIterations(int) maximal iterations}: 1000\u003c/li\u003e \u003cli\u003e {@link #setCostRelativeTolerance(double) cost relative tolerance}: 1.0e-10\u003c/li\u003e \u003cli\u003e {@link #setParRelativeTolerance(double) parameters relative tolerance}: 1.0e-10\u003c/li\u003e \u003cli\u003e {@link #setOrthoTolerance(double) orthogonality tolerance}: 1.0e-10\u003c/li\u003e \u003cli\u003e {@link #setQRRankingThreshold(double) QR ranking threshold}:  {@link MathUtils#SAFE_MIN}\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e \u003cp\u003eThese default values may be overridden after construction. If the  {@link #setConvergenceChecker vectorial convergence checker} is set to a non-null value, itwill be used instead of the  {@link #setCostRelativeTolerance cost relative tolerance}and  {@link #setParRelativeTolerance parameters relative tolerance} settings.\n */\n","tf":{"freq":{"squar":1,"overridden":1,"least":1,"link":11,"use":1,"build":1,"itwil":1,"algorithm":1,"par":2,"maxim":1,"rank":2,"relat":8,"levenberg":1,"valu":3,"initi":2,"converg":5,"toler":10,"ortho":1,"may":1,"max":1,"optim":2,"vectori":3,"orthogon":1,"paramet":2,"problem":1,"factor":2,"cost":4,"checker":5,"non":1,"threshold":2,"math":1,"instead":1,"construct":1,"iter":2,"util":1,"marquardt":1,"step":2,"bound":2},"maxFreq":11,"totalTerms":89},"loc":14}