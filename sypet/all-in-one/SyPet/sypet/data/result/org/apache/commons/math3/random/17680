{"id":17680,"className":"org.apache.commons.math3.random.RandomData","methodName":"nextSecureInt","signature":"\u003corg.apache.commons.math3.random.RandomData: int nextSecureInt(int,int)\u003e","javadoc":"/** \n * Generates a uniformly distributed random integer between  {@code lower}and  {@code upper} (endpoints included) from a secure random sequence.\u003cp\u003e Sequences of integers generated using this method will be cryptographically secure. If cryptographic security is not required, {@link #nextInt(int,int)} should be used instead of this method.\u003c/p\u003e\u003cp\u003e \u003cstrong\u003eDefinition\u003c/strong\u003e: \u003ca href\u003d\"http://en.wikipedia.org/wiki/Cryptographically_secure_pseudo-random_number_generator\"\u003e Secure Random Sequence\u003c/a\u003e\u003c/p\u003e\n * @param lower lower bound for generated integer\n * @param upper upper bound for generated integer\n * @return a random integer greater than or equal to {@code lower} and lessthan or equal to  {@code upper}.\n * @throws NumberIsTooLargeException if {@code lower \u003e\u003d upper}.\n */\n","tf":{"freq":{"greater":1,"lower":5,"pseudo":1,"next":2,"link":1,"distribut":1,"use":2,"org":1,"upper":5,"requir":1,"lessthan":1,"sequenc":3,"cryptograph":3,"wiki":1,"href":1,"except":1,"includ":1,"uniform":1,"random":5,"equal":2,"number":2,"endpoint":1,"secur":6,"strong":2,"http":1,"larg":1,"generat":5,"definit":1,"will":1,"instead":1,"wikipedia":1,"method":2,"integ":5,"bound":2},"maxFreq":6,"totalTerms":70},"loc":0}