{"id":17327,"className":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure","methodName":"DerivativeStructure","signature":"\u003corg.apache.commons.math3.analysis.differentiation.DerivativeStructure: void DerivativeStructure(int,int,int,double)\u003e","javadoc":"/** \n * Build an instance representing a variable. \u003cp\u003eInstances built using this constructor are considered to be the free variables with respect to which differentials are computed. As such, their differential with respect to themselves is +1.\u003c/p\u003e\n * @param parameters number of free parameters\n * @param order derivation order\n * @param index index of the variable (from 0 to {@code parameters - 1})\n * @param value value of the variable\n * @exception NumberIsTooLargeException if {@code index \u003e\u003d parameters}.\n * @see #DerivativeStructure(int,int,double)\n */\n","tf":{"freq":{"except":2,"index":3,"deriv":3,"structur":2,"repres":1,"variabl":4,"paramet":4,"use":1,"number":2,"build":1,"consid":1,"instanc":2,"free":2,"order":2,"larg":1,"comput":1,"valu":2,"built":1,"respect":2,"differenti":2,"constructor":1},"maxFreq":4,"totalTerms":40},"loc":13}