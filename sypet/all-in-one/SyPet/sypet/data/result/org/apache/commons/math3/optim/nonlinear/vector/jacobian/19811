{"id":19811,"className":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer","methodName":"LevenbergMarquardtOptimizer","signature":"\u003corg.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer: void LevenbergMarquardtOptimizer(double,double,double)\u003e","javadoc":"/** \n * Build an optimizer for least squares problems with default values for some of the tuning parameters (see the  {@link #LevenbergMarquardtOptimizer(double,double,double,double,double) other contructor}. The default values for the algorithm settings are: \u003cul\u003e \u003cli\u003eInitial step bound factor}: 100\u003c/li\u003e \u003cli\u003eQR ranking threshold}:  {@link Precision#SAFE_MIN}\u003c/li\u003e \u003c/ul\u003e\n * @param costRelativeTolerance Desired relative error in the sum ofsquares.\n * @param parRelativeTolerance Desired relative error in the approximatesolution parameters.\n * @param orthoTolerance Desired max cosine on the orthogonality betweenthe function vector and the columns of the Jacobian.\n */\n","tf":{"freq":{"squar":1,"jacobian":1,"least":1,"link":2,"sum":1,"cosin":1,"build":1,"desir":3,"function":1,"algorithm":1,"par":1,"rank":1,"vector":1,"ofsquar":1,"precis":1,"relat":4,"betweenth":1,"levenberg":2,"valu":2,"initi":1,"contructor":1,"toler":3,"ortho":1,"max":1,"error":2,"optim":3,"orthogon":1,"paramet":2,"problem":1,"factor":1,"tune":1,"cost":1,"threshold":1,"column":1,"approximatesolut":1,"marquardt":2,"step":1,"bound":1},"maxFreq":4,"totalTerms":53},"loc":5}