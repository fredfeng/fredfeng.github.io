{"id":27076,"className":"org.jsoup.nodes.Node","methodName":"absUrl","signature":"\u003corg.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)\u003e","javadoc":"/** \n * Get an absolute URL from a URL attribute that may be relative (i.e. an \u003ccode\u003e\u0026lt;a href\u0026gt;\u003c/code\u003e or \u003ccode\u003e\u0026lt;img src\u0026gt;\u003c/code\u003e). \u003cp\u003e E.g.: \u003ccode\u003eString absUrl \u003d linkEl.absUrl(\"href\");\u003c/code\u003e \u003c/p\u003e \u003cp\u003e If the attribute value is already absolute (i.e. it starts with a protocol, like \u003ccode\u003ehttp://\u003c/code\u003e or \u003ccode\u003ehttps://\u003c/code\u003e etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element\u0027s  {@link #baseUri}, and made absolute using that. \u003c/p\u003e \u003cp\u003e As an alternate, you can use the  {@link #attr} method with the \u003ccode\u003eabs:\u003c/code\u003e prefix, e.g.:\u003ccode\u003eString absUrl \u003d linkEl.attr(\"abs:href\");\u003c/code\u003e \u003c/p\u003e\n * @param attributeKey The attribute key\n * @return An absolute URL if one could be made, or an empty string (not null) if the attribute was missing orcould not be made successfully into a URL.\n * @see #attr\n * @see java.net.URL#URL(java.net.URL,String)\n */\n","tf":{"freq":{"otherwis":1,"one":1,"link":4,"etc":1,"made":3,"img":1,"use":2,"net":2,"attribut":6,"altern":1,"relat":2,"valu":1,"src":1,"href":3,"key":2,"orcould":1,"https":1,"direct":1,"element":1,"may":1,"protocol":1,"attr":3,"absolut":4,"like":1,"uri":1,"url":4,"empti":1,"start":1,"http":1,"prefix":1,"string":4,"base":1,"java":2,"method":1,"alreadi":1,"ab":6,"success":2,"pars":1,"miss":1,"treat":1},"maxFreq":6,"totalTerms":74},"loc":9}