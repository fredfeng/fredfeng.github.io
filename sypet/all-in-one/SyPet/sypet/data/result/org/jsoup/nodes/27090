{"id":27090,"className":"org.jsoup.nodes.Node","methodName":"unwrap","signature":"\u003corg.jsoup.nodes.Node: org.jsoup.nodes.Node unwrap()\u003e","javadoc":"/** \n * Removes this node from the DOM, and moves its children up into the node\u0027s parent. This has the effect of dropping the node but keeping its children. \u003cp\u003e For example, with the input html: \u003c/p\u003e \u003cp\u003e {@code \u003cdiv\u003eOne \u003cspan\u003eTwo \u003cb\u003eThree\u003c/b\u003e\u003c/span\u003e\u003c/div\u003e}\u003c/p\u003e Calling  {@code element.unwrap()} on the {@code span} element will result in the html:\u003cp\u003e {@code \u003cdiv\u003eOne Two \u003cb\u003eThree\u003c/b\u003e\u003c/div\u003e}\u003c/p\u003e and the  {@code \"Two \"} {@link TextNode} being returned.\n * @return the first child of this node, after the node has been unwrapped. Null if the node had no children.\n * @see #remove()\n * @see #wrap(String)\n */\n","tf":{"freq":{"call":1,"result":1,"unwrap":3,"drop":1,"one":2,"link":1,"div":4,"children":3,"child":1,"three":2,"move":1,"wrap":1,"element":2,"text":1,"remov":2,"parent":1,"two":3,"input":1,"node":7,"effect":1,"string":1,"exampl":1,"will":1,"html":2,"first":1,"keep":1,"span":3},"maxFreq":7,"totalTerms":49},"loc":9}