{"id":27205,"className":"org.jsoup.nodes.Element","methodName":"textNodes","signature":"\u003corg.jsoup.nodes.Element: java.util.List\u003corg.jsoup.nodes.TextNode\u003e textNodes()\u003e","javadoc":"/** \n * Get this element\u0027s child text nodes. The list is unmodifiable but the text nodes may be manipulated. \u003cp\u003e This is effectively a filter on  {@link #childNodes()} to get Text nodes.\n * @return child text nodes. If this element has no text nodes, returns anempty list. \u003c/p\u003e For example, with the input HTML:  {@code \u003cp\u003eOne \u003cspan\u003eTwo\u003c/span\u003e Three \u003cbr\u003e Four\u003c/p\u003e} with the {@code p} element selected:\u003cul\u003e \u003cli\u003e {@code p.text()} \u003d {@code \"One Two Three Four\"}\u003c/li\u003e \u003cli\u003e {@code p.ownText()} \u003d {@code \"One Three Four\"}\u003c/li\u003e \u003cli\u003e {@code p.children()} \u003d {@code Elements[\u003cspan\u003e, \u003cbr\u003e]}\u003c/li\u003e \u003cli\u003e {@code p.childNodes()} \u003d {@code List\u003cNode\u003e[\"One \", \u003cspan\u003e, \" Three \", \u003cbr\u003e, \" Four\"]}\u003c/li\u003e \u003cli\u003e {@code p.textNodes()} \u003d {@code List\u003cTextNode\u003e[\"One \", \" Three \", \" Four\"]}\u003c/li\u003e \u003c/ul\u003e\n */\n","tf":{"freq":{"element":4,"text":10,"may":1,"manipul":1,"anempti":1,"select":1,"one":5,"link":1,"children":1,"list":4,"child":4,"two":2,"input":1,"node":11,"unmodifi":1,"effect":1,"three":5,"exampl":1,"four":5,"filter":1,"span":4},"maxFreq":11,"totalTerms":65},"loc":8}