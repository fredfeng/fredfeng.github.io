{"id":11422,"className":"org.xml.sax.helpers.XMLReaderFactory","methodName":"createXMLReader","signature":"\u003corg.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()\u003e","javadoc":"/** \n * Attempt to create an XMLReader from system defaults. In environments which can support it, the name of the XMLReader class is determined by trying each these options in order, and using the first one which succeeds:\u003c/p\u003e \u003cul\u003e \u003cli\u003eIf the system property \u003ccode\u003eorg.xml.sax.driver\u003c/code\u003e has a value, that is used as an XMLReader class name. \u003c/li\u003e \u003cli\u003eThe JAR \"Services API\" is used to look for a class name in the \u003cem\u003eMETA-INF/services/org.xml.sax.driver\u003c/em\u003e file in jarfiles available to the runtime.\u003c/li\u003e \u003cli\u003e SAX parser distributions are strongly encouraged to provide a default XMLReader class name that will take effect only when previous options (on this list) are not successful.\u003c/li\u003e \u003cli\u003eFinally, if  {@link ParserFactory#makeParser()} canreturn a system default SAX1 parser, that parser is wrapped in a  {@link ParserAdapter}.  (This is a migration aid for SAX1 environments, where the \u003ccode\u003eorg.xml.sax.parser\u003c/code\u003e system property will often be usable.) \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e In environments such as small embedded systems, which can not support that flexibility, other mechanisms to determine the default may be used. \u003c/p\u003e \u003cp\u003eNote that many Java environments allow system properties to be initialized on a command line.  This means that \u003cem\u003ein most cases\u003c/em\u003e setting a good value for that property ensures that calls to this method will succeed, except when security policies intervene. This will also maximize application portability to older SAX environments, with less robust implementations of this method. \u003c/p\u003e\n * @return A new XMLReader.\n * @exception org.xml.sax.SAXException If no default XMLReader classcan be identified and instantiated.\n * @see #createXMLReader(java.lang.String)\n */\n","tf":{"freq":{"instanti":1,"servic":2,"distribut":1,"good":1,"jarfil":1,"canreturn":1,"maxim":1,"file":1,"encourag":1,"option":2,"mani":1,"wrap":1,"except":2,"succeed":2,"support":2,"creat":3,"runtim":1,"environ":5,"xml":4,"avail":1,"polici":1,"provid":1,"flexibl":1,"embed":1,"system":6,"strong":1,"often":1,"determin":2,"will":4,"sax":4,"properti":4,"xexcept":1,"parser":7,"make":1,"small":1,"lreader":8,"attempt":1,"call":1,"allow":1,"portabl":1,"one":1,"link":2,"line":1,"use":4,"identifi":1,"adapt":1,"aid":1,"org":4,"lang":1,"applic":1,"ensur":1,"order":1,"older":1,"factori":1,"name":4,"command":1,"interven":1,"mean":1,"valu":2,"driver":2,"initi":1,"less":1,"note":1,"usabl":1,"look":1,"migrat":1,"classcan":1,"robust":1,"may":1,"previous":1,"list":1,"secur":1,"effect":1,"mechan":1,"take":1,"string":1,"method":2,"java":2,"also":1,"first":1,"success":1},"maxFreq":8,"totalTerms":137},"loc":67}