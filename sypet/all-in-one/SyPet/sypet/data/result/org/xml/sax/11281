{"id":11281,"className":"org.xml.sax.ErrorHandler","methodName":"error","signature":"\u003corg.xml.sax.ErrorHandler: void error(org.xml.sax.SAXParseException)\u003e","javadoc":"/** \n * Receive notification of a recoverable error. \u003cp\u003eThis corresponds to the definition of \"error\" in section 1.2 of the W3C XML 1.0 Recommendation.  For example, a validating parser would use this callback to report the violation of a validity constraint.  The default behaviour is to take no action.\u003c/p\u003e \u003cp\u003eThe SAX parser must continue to provide normal parsing events after invoking this method: it should still be possible for the application to process the document through to the end. If the application cannot do so, then the parser should report a fatal error even if the XML recommendation does not require it to do so.\u003c/p\u003e \u003cp\u003eFilters may use this method to report other, non-XML errors as well.\u003c/p\u003e\n * @param exception The error information encapsulated in aSAX parse exception.\n * @exception org.xml.sax.SAXException Any SAX exception, possiblywrapping another exception.\n * @see org.xml.sax.SAXParseException\n */\n","tf":{"freq":{"possiblywrap":1,"normal":1,"possibl":1,"violat":1,"must":1,"notif":1,"requir":1,"event":1,"action":1,"report":3,"except":6,"invok":1,"fatal":1,"xml":2,"provid":1,"continu":1,"non":1,"inform":1,"xpars":1,"definit":1,"sax":2,"even":1,"xexcept":1,"parser":3,"filter":1,"valid":2,"behaviour":1,"correspond":1,"constraint":1,"use":2,"anoth":1,"well":1,"org":2,"recover":1,"recommend":2,"applic":2,"document":1,"end":1,"may":1,"error":6,"receiv":1,"still":1,"section":1,"process":1,"take":1,"callback":1,"exampl":1,"encapsul":1,"method":2,"pars":2},"maxFreq":6,"totalTerms":73},"loc":0}