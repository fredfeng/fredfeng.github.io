{"id":11305,"className":"org.xml.sax.ContentHandler","methodName":"ignorableWhitespace","signature":"\u003corg.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)\u003e","javadoc":"/** \n * Receive notification of ignorable whitespace in element content. \u003cp\u003eValidating Parsers must use this method to report each chunk of whitespace in element content (see the W3C XML 1.0 recommendation, section 2.10): non-validating parsers may also use this method if they are capable of parsing and using content models.\u003c/p\u003e \u003cp\u003eSAX parsers may return all contiguous whitespace in a single chunk, or they may split it into several chunks; however, all of the characters in any single event must come from the same external entity, so that the Locator provides useful information.\u003c/p\u003e \u003cp\u003eThe application must not attempt to read from the array outside of the specified range.\u003c/p\u003e\n * @param ch the characters from the XML document\n * @param start the start position in the array\n * @param length the number of characters to read from the array\n * @throws org.xml.sax.SAXException any SAX exception, possiblywrapping another exception\n * @see #characters\n */\n","tf":{"freq":{"chunk":3,"possiblywrap":1,"singl":2,"must":3,"specifi":1,"notif":1,"event":1,"rang":1,"report":1,"howev":1,"element":2,"except":2,"ignor":2,"charact":4,"number":1,"xml":1,"provid":1,"non":1,"content":3,"inform":1,"entiti":1,"outsid":1,"start":2,"sax":1,"split":1,"xexcept":1,"parser":3,"posit":1,"array":3,"attempt":1,"valid":2,"model":1,"use":4,"anoth":1,"org":1,"recommend":1,"applic":1,"document":1,"extern":1,"length":1,"read":2,"may":3,"locat":1,"whitespac":4,"come":1,"capabl":1,"receiv":1,"contigu":1,"section":1,"sever":1,"method":2,"pars":1,"also":1},"maxFreq":4,"totalTerms":82},"loc":0}