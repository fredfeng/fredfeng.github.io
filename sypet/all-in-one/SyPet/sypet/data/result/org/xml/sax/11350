{"id":11350,"className":"org.xml.sax.SAXParseException","methodName":"SAXParseException","signature":"\u003corg.xml.sax.SAXParseException: void SAXParseException(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.Exception)\u003e","javadoc":"/** \n * Create a new SAXParseException with an embedded exception. \u003cp\u003eThis constructor is most useful for parser writers who need to wrap an exception that is not a subclass of {@link org.xml.sax.SAXException SAXException}.\u003c/p\u003e \u003cp\u003eAll parameters except the message and exception are as if they were provided by a  {@link Locator}.  For example, if the system identifier is a URL (including relative filename), the caller must resolve it fully before creating the exception.\u003c/p\u003e\n * @param message The error or warning message, or null to usethe message from the embedded exception.\n * @param publicId The public identifier of the entity that generatedthe error or warning.\n * @param systemId The system identifier of the entity that generatedthe error or warning.\n * @param lineNumber The line number of the end of the text thatcaused the error or warning.\n * @param columnNumber The column number of the end of the text thatcause the error or warning.\n * @param e Another exception to embed in this one.\n */\n","tf":{"freq":{"warn":5,"caller":1,"need":1,"one":1,"link":2,"line":2,"use":1,"identifi":3,"anoth":1,"org":1,"must":1,"generatedth":2,"relat":1,"writer":1,"end":2,"constructor":1,"wrap":1,"text":2,"except":9,"locat":1,"includ":1,"error":5,"creat":2,"messag":4,"filenam":1,"paramet":1,"resolv":1,"number":4,"fulli":1,"xml":1,"provid":1,"thatcaus":2,"embed":2,"useth":1,"system":3,"entiti":2,"xpars":1,"column":2,"subclass":1,"exampl":1,"emb":1,"sax":1,"xexcept":2,"parser":1,"pars":1},"maxFreq":9,"totalTerms":82},"loc":4}