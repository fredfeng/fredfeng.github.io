{"id":11476,"className":"org.xml.sax.helpers.NamespaceSupport","methodName":"processName","signature":"\u003corg.xml.sax.helpers.NamespaceSupport: java.lang.String[] processName(java.lang.String,java.lang.String[],boolean)\u003e","javadoc":"/** \n * Process a raw XML qualified name, after all declarations in the current context have been handled by  {@link #declarePrefix declarePrefix()}. \u003cp\u003eThis method processes a raw XML qualified name in the current context by removing the prefix and looking it up among the prefixes currently declared.  The return value will be the array supplied by the caller, filled in as follows:\u003c/p\u003e \u003cdl\u003e \u003cdt\u003eparts[0]\u003c/dt\u003e \u003cdd\u003eThe Namespace URI, or an empty string if none is in use.\u003c/dd\u003e \u003cdt\u003eparts[1]\u003c/dt\u003e \u003cdd\u003eThe local name (without prefix).\u003c/dd\u003e \u003cdt\u003eparts[2]\u003c/dt\u003e \u003cdd\u003eThe original raw name.\u003c/dd\u003e \u003c/dl\u003e \u003cp\u003eAll of the strings in the array will be internalized.  If the raw name has a prefix that has not been declared, then the return value will be null.\u003c/p\u003e \u003cp\u003eNote that attribute names are processed differently than element names: an unprefixed element name will receive the default Namespace (if any), while an unprefixed attribute name will not.\u003c/p\u003e\n * @param qName The XML qualified name to be processed.\n * @param parts An array supplied by the caller, capable ofholding at least three members.\n * @param isAttribute A flag indicating whether this is anattribute name (true) or an element name (false).\n * @return The supplied array holding three internalized stringsrepresenting the Namespace URI (or empty string), the local name, and the XML qualified name; or null if there is an undeclared prefix.\n * @see #declarePrefix\n * @see java.lang.String#intern \n */\n","tf":{"freq":{"fals":1,"least":1,"undeclar":1,"stringsrepres":1,"whether":1,"namespac":3,"among":1,"three":2,"none":1,"anattribut":1,"follow":1,"element":3,"hold":1,"remov":1,"without":1,"ofhold":1,"flag":1,"prefix":8,"will":5,"array":4,"caller":2,"raw":4,"unprefix":2,"link":1,"use":1,"lang":1,"attribut":3,"declar":6,"indic":1,"name":16,"current":3,"valu":2,"note":1,"look":1,"member":1,"fill":1,"origin":1,"true":1,"suppli":3,"receiv":1,"capabl":1,"empti":2,"handl":1,"process":5,"differ":1,"string":4,"context":2,"intern":3,"java":1,"method":1,"local":2,"part":4,"qualifi":4},"maxFreq":16,"totalTerms":122},"loc":11}