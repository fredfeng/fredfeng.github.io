{"id":11554,"className":"org.xml.sax.helpers.DefaultHandler","methodName":"startElement","signature":"\u003corg.xml.sax.helpers.DefaultHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)\u003e","javadoc":"/** \n * Receive notification of the start of an element. \u003cp\u003eBy default, do nothing.  Application writers may override this method in a subclass to take specific actions at the start of each element (such as allocating a new tree node or writing output to a file).\u003c/p\u003e\n * @param uri The Namespace URI, or the empty string if theelement has no Namespace URI or if Namespace processing is not being performed.\n * @param localName The local name (without prefix), or theempty string if Namespace processing is not being performed.\n * @param qName The qualified name (with prefix), or theempty string if qualified names are not available.\n * @param attributes The attributes attached to the element.  Ifthere are no attributes, it shall be an empty Attributes object.\n * @exception org.xml.sax.SAXException Any SAX exception, possiblywrapping another exception.\n * @see org.xml.sax.ContentHandler#startElement\n */\n","tf":{"freq":{"possiblywrap":1,"perform":2,"anoth":1,"object":1,"org":2,"applic":1,"theempti":2,"notif":1,"namespac":4,"attribut":4,"tree":1,"file":1,"name":5,"action":1,"write":1,"noth":1,"writer":1,"element":5,"except":3,"may":1,"xml":2,"ifther":1,"avail":1,"receiv":1,"without":1,"uri":1,"shall":1,"empti":2,"content":1,"process":2,"specif":1,"node":1,"start":4,"attach":1,"take":1,"prefix":2,"string":3,"subclass":1,"sax":2,"method":1,"local":2,"theelement":1,"xexcept":1,"output":1,"qualifi":2,"handler":1,"alloc":1},"maxFreq":5,"totalTerms":78},"loc":3}