{"id":11473,"className":"org.xml.sax.helpers.NamespaceSupport","methodName":"pushContext","signature":"\u003corg.xml.sax.helpers.NamespaceSupport: void pushContext()\u003e","javadoc":"/** \n * Start a new Namespace context. The new context will automatically inherit the declarations of its parent context, but it will also keep track of which declarations were made within this context. \u003cp\u003eEvent callback code should start a new context once per element. This means being ready to call this in either of two places. For elements that don\u0027t include namespace declarations, the \u003cem\u003eContentHandler.startElement()\u003c/em\u003e callback is the right place. For elements with such a declaration, it\u0027d done in the first \u003cem\u003eContentHandler.startPrefixMapping()\u003c/em\u003e callback. A boolean flag can be used to track whether a context has been started yet.  When either of those methods is called, it checks the flag to see if a new context needs to be started.  If so, it starts the context and sets the flag.  After \u003cem\u003eContentHandler.startElement()\u003c/em\u003e does that, it always clears the flag. \u003cp\u003eNormally, SAX drivers would push a new context at the beginning of each XML element.  Then they perform a first pass over the attributes to process all namespace declarations, making \u003cem\u003eContentHandler.startPrefixMapping()\u003c/em\u003e callbacks. Then a second pass is made, to determine the namespace-qualified names for all attributes and for the element name. Finally all the information for the \u003cem\u003eContentHandler.startElement()\u003c/em\u003e callback is available, so it can then be made. \u003cp\u003eThe Namespace support object always starts with a base context already in force: in this context, only the \"xml\" prefix is declared.\u003c/p\u003e\n * @see org.xml.sax.ContentHandler\n * @see #popContext\n */\n","tf":{"freq":{"need":1,"second":1,"normal":1,"pop":1,"perform":1,"whether":1,"namespac":5,"event":1,"place":2,"right":1,"element":8,"support":1,"alway":2,"done":1,"parent":1,"xml":2,"avail":1,"content":6,"inform":1,"flag":4,"start":11,"determin":1,"prefix":3,"will":2,"sax":1,"make":1,"readi":1,"call":2,"made":3,"use":1,"object":1,"org":1,"automat":1,"push":2,"clear":1,"attribut":2,"declar":6,"name":2,"map":2,"mean":1,"driver":1,"forc":1,"includ":1,"check":1,"track":2,"begin":1,"pass":2,"process":1,"two":1,"either":2,"per":1,"base":1,"callback":5,"context":13,"alreadi":1,"method":1,"within":1,"also":1,"first":2,"qualifi":1,"keep":1,"handler":6,"yet":1},"maxFreq":13,"totalTerms":135},"loc":24}