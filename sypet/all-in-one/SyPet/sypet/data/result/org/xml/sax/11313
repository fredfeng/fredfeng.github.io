{"id":11313,"className":"org.xml.sax.Parser","methodName":"parse","signature":"\u003corg.xml.sax.Parser: void parse(org.xml.sax.InputSource)\u003e","javadoc":"/** \n * Parse an XML document. \u003cp\u003eThe application can use this method to instruct the SAX parser to begin parsing an XML document from any valid input source (a character stream, a byte stream, or a URI).\u003c/p\u003e \u003cp\u003eApplications may not invoke this method while a parse is in progress (they should create a new Parser instead for each additional XML document).  Once a parse is complete, an application may reuse the same Parser object, possibly with a different input source.\u003c/p\u003e\n * @param source The input source for the top-level of theXML document.\n * @exception org.xml.sax.SAXException Any SAX exception, possiblywrapping another exception.\n * @exception java.io.IOException An IO exception from the parser,possibly from a byte stream or character stream supplied by the application.\n * @see org.xml.sax.InputSource\n * @see #parse(java.lang.String)\n * @see #setEntityResolver\n * @see #setDTDHandler\n * @see #setDocumentHandler\n * @see #setErrorHandler\n */\n","tf":{"freq":{"progress":1,"valid":1,"stream":4,"possiblywrap":1,"use":1,"possibl":2,"anoth":1,"object":1,"org":2,"lang":1,"reus":1,"applic":4,"document":5,"level":1,"instruct":1,"top":1,"complet":1,"addit":1,"except":6,"may":2,"error":1,"charact":2,"creat":1,"invok":1,"dhandler":1,"resolv":1,"suppli":1,"xml":2,"begin":1,"differ":1,"input":4,"entiti":1,"string":1,"instead":1,"sax":2,"java":2,"sourc":5,"method":2,"xexcept":1,"parser":4,"pars":6,"handler":2},"maxFreq":6,"totalTerms":81},"loc":0}