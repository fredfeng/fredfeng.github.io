{"id":10084,"className":"org.w3c.dom.CharacterData","methodName":"substringData","signature":"\u003corg.w3c.dom.CharacterData: java.lang.String substringData(int,int)\u003e","javadoc":"/** \n * Extracts a range of data from the node.\n * @param offset Start offset of substring to extract.\n * @param count The number of 16-bit units to extract.\n * @return The specified substring. If the sum of \u003ccode\u003eoffset\u003c/code\u003e and\u003ccode\u003ecount\u003c/code\u003e exceeds the \u003ccode\u003elength\u003c/code\u003e, then all 16-bit units to the end of the data are returned.\n * @exception DOMException INDEX_SIZE_ERR: Raised if the specified \u003ccode\u003eoffset\u003c/code\u003e is negative or greater than the number of 16-bit units in \u003ccode\u003edata\u003c/code\u003e, or if the specified \u003ccode\u003ecount\u003c/code\u003e is negative. \u003cbr\u003eDOMSTRING_SIZE_ERR: Raised if the specified range of text does not fit into a \u003ccode\u003eDOMString\u003c/code\u003e.\n */\n","tf":{"freq":{"text":1,"except":1,"greater":1,"count":3,"mexcept":1,"exceed":1,"data":4,"sum":1,"number":2,"extract":3,"specifi":4,"fit":1,"bit":3,"unit":3,"node":1,"rais":2,"start":1,"rang":2,"length":1,"mstring":1,"negat":2,"offset":4,"substr":3,"end":1},"maxFreq":4,"totalTerms":47},"loc":0}