{"id":10043,"className":"org.w3c.dom.Node","methodName":"setPrefix","signature":"\u003corg.w3c.dom.Node: void setPrefix(java.lang.String)\u003e","javadoc":"/** \n * The namespace prefix of this node, or \u003ccode\u003enull\u003c/code\u003e if it is unspecified. When it is defined to be \u003ccode\u003enull\u003c/code\u003e, setting it has no effect, including if the node is read-only. \u003cbr\u003eNote that setting this attribute, when permitted, changes the \u003ccode\u003enodeName\u003c/code\u003e attribute, which holds the qualified name, as well as the \u003ccode\u003etagName\u003c/code\u003e and \u003ccode\u003ename\u003c/code\u003e attributes of the \u003ccode\u003eElement\u003c/code\u003e and \u003ccode\u003eAttr\u003c/code\u003e interfaces, when applicable. \u003cbr\u003eSetting the prefix to \u003ccode\u003enull\u003c/code\u003e makes it unspecified, setting it to an empty string is implementation dependent. \u003cbr\u003eNote also that changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the \u003ccode\u003enamespaceURI\u003c/code\u003e and \u003ccode\u003elocalName\u003c/code\u003e do not change. \u003cbr\u003eFor nodes of any type other than \u003ccode\u003eELEMENT_NODE\u003c/code\u003e and \u003ccode\u003eATTRIBUTE_NODE\u003c/code\u003e and nodes created with a DOM Level 1 method, such as \u003ccode\u003ecreateElement\u003c/code\u003e from the \u003ccode\u003eDocument\u003c/code\u003e interface, this is always \u003ccode\u003enull\u003c/code\u003e.\n * @exception DOMException INVALID_CHARACTER_ERR: Raised if the specified prefix contains an illegal character according to the XML version in use specified in the \u003ccode\u003eDocument.xmlVersion\u003c/code\u003e attribute. \u003cbr\u003eNO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly. \u003cbr\u003eNAMESPACE_ERR: Raised if the specified \u003ccode\u003eprefix\u003c/code\u003e is malformed per the Namespaces in XML specification, if the \u003ccode\u003enamespaceURI\u003c/code\u003e of this node is \u003ccode\u003enull\u003c/code\u003e, if the specified prefix is \"xml\" and the \u003ccode\u003enamespaceURI\u003c/code\u003e of this node is different from \"\u003ca href\u003d\u0027http://www.w3.org/XML/1998/namespace\u0027\u003e http://www.w3.org/XML/1998/namespace\u003c/a\u003e\", if this node is an attribute and the specified prefix is \"xmlns\" and the \u003ccode\u003enamespaceURI\u003c/code\u003e of this node is different from \"\u003ca href\u003d\u0027http://www.w3.org/2000/xmlns/\u0027\u003ehttp://www.w3.org/2000/xmlns/\u003c/a\u003e\", or if this node is an attribute and the \u003ccode\u003equalifiedName\u003c/code\u003e of this node is \"xmlns\" [\u003ca href\u003d\u0027http://www.w3.org/TR/1999/REC-xml-names-19990114/\u0027\u003eXML Namespaces\u003c/a\u003e] .\n * @since DOM Level 2\n */\n","tf":{"freq":{"appear":1,"tag":1,"permit":1,"type":1,"specifi":5,"namespac":9,"level":2,"readon":1,"href":3,"element":2,"except":1,"creat":2,"charact":1,"alway":1,"hold":1,"attr":1,"xml":3,"xmlns":4,"malform":1,"node":12,"http":5,"prefix":9,"contain":1,"known":1,"make":2,"unspecifi":2,"defin":1,"mexcept":1,"www":5,"use":1,"well":1,"org":5,"applic":1,"version":2,"document":2,"attribut":8,"rais":3,"name":7,"read":1,"valu":2,"note":2,"includ":1,"depend":1,"origin":1,"accord":1,"illeg":1,"empti":1,"differ":2,"specif":1,"per":1,"effect":1,"string":1,"method":1,"chang":3,"local":1,"also":1,"qualifi":2},"maxFreq":12,"totalTerms":135},"loc":0}