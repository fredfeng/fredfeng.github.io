{"id":11200,"className":"org.w3c.dom.ls.LSSerializer","methodName":"write","signature":"\u003corg.w3c.dom.ls.LSSerializer: boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)\u003e","javadoc":"/** \n * Serialize the specified node as described above in the general description of the \u003ccode\u003eLSSerializer\u003c/code\u003e interface. The output is written to the supplied \u003ccode\u003eLSOutput\u003c/code\u003e. \u003cbr\u003e When writing to a \u003ccode\u003eLSOutput\u003c/code\u003e, the encoding is found by looking at the encoding information that is reachable through the \u003ccode\u003eLSOutput\u003c/code\u003e and the item to be written (or its owner document) in this order: \u003col\u003e \u003cli\u003e \u003ccode\u003eLSOutput.encoding\u003c/code\u003e, \u003c/li\u003e \u003cli\u003e \u003ccode\u003eDocument.inputEncoding\u003c/code\u003e, \u003c/li\u003e \u003cli\u003e \u003ccode\u003eDocument.xmlEncoding\u003c/code\u003e. \u003c/li\u003e \u003c/ol\u003e \u003cbr\u003e If no encoding is reachable through the above properties, a default encoding of \"UTF-8\" will be used. If the specified encoding is not supported an \"unsupported-encoding\" fatal error is raised. \u003cbr\u003e If no output is specified in the \u003ccode\u003eLSOutput\u003c/code\u003e, a \"no-output-specified\" fatal error is raised. \u003cbr\u003e The implementation is responsible of associating the appropriate media type with the serialized data. \u003cbr\u003e When writing to a HTTP URI, a HTTP PUT is performed. When writing to other types of URIs, the mechanism for writing the data to the URI is implementation dependent.\n * @param nodeArg  The node to serialize.\n * @param destination The destination for the serialized DOM.\n * @return  Returns \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003enode\u003c/code\u003e wassuccessfully serialized. Return \u003ccode\u003efalse\u003c/code\u003e in case the normal processing stopped but the implementation kept serializing the document; the result of the serialization being implementation dependent then.\n * @exception LSException SERIALIZE_ERR: Raised if the \u003ccode\u003eLSSerializer\u003c/code\u003e was unable to serialize the node. DOM applications should attach a \u003ccode\u003eDOMErrorHandler\u003c/code\u003e using the parameter \"\u003ca href\u003d\u0027http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-error-handler\u0027\u003e error-handler\u003c/a\u003e\" if they wish to get details on the error.\n */\n","tf":{"freq":{"fals":1,"detail":1,"unsupport":1,"wish":1,"normal":1,"perform":1,"type":2,"specifi":4,"arg":1,"level":1,"href":1,"except":2,"support":1,"respons":1,"fatal":2,"descript":1,"describ":1,"xml":1,"inform":1,"input":1,"node":5,"encod":9,"http":1,"will":1,"owner":1,"properti":1,"output":8,"media":1,"stop":1,"result":1,"merror":1,"www":1,"data":2,"use":2,"org":1,"applic":1,"document":4,"rais":3,"order":1,"associ":1,"written":2,"write":5,"kept":1,"look":1,"error":5,"depend":2,"paramet":2,"true":1,"suppli":1,"general":1,"unabl":1,"process":1,"attach":1,"appropri":1,"mechan":1,"item":1,"wassuccess":1,"html":1,"core":2,"reachabl":2,"serial":10,"handler":3,"found":1,"destin":2},"maxFreq":10,"totalTerms":121},"loc":0}