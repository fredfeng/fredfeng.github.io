{"id":10799,"className":"org.w3c.dom.traversal.TreeWalker","methodName":"parentNode","signature":"\u003corg.w3c.dom.traversal.TreeWalker: org.w3c.dom.Node parentNode()\u003e","javadoc":"/** \n * Moves to and returns the closest visible ancestor node of the current node. If the search for \u003ccode\u003eparentNode\u003c/code\u003e attempts to step upward from the \u003ccode\u003eTreeWalker\u003c/code\u003e\u0027s \u003ccode\u003eroot\u003c/code\u003e node, or if it fails to find a visible ancestor node, this method retains the current position and returns \u003ccode\u003enull\u003c/code\u003e.\n * @return The new parent node, or \u003ccode\u003enull\u003c/code\u003e if the current nodehas no parent  in the \u003ccode\u003eTreeWalker\u003c/code\u003e\u0027s logical view.\n */\n","tf":{"freq":{"attempt":1,"root":1,"nodeha":1,"visibl":2,"parent":4,"upward":1,"logic":1,"node":7,"fail":1,"tree":2,"search":1,"current":3,"retain":1,"closest":1,"method":1,"walker":2,"view":1,"posit":1,"ancestor":2,"find":1,"move":1,"step":1},"maxFreq":7,"totalTerms":37},"loc":0}