{"id":10034,"className":"org.w3c.dom.Node","methodName":"replaceChild","signature":"\u003corg.w3c.dom.Node: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)\u003e","javadoc":"/** \n * Replaces the child node \u003ccode\u003eoldChild\u003c/code\u003e with \u003ccode\u003enewChild\u003c/code\u003e in the list of children, and returns the \u003ccode\u003eoldChild\u003c/code\u003e node. \u003cbr\u003eIf \u003ccode\u003enewChild\u003c/code\u003e is a \u003ccode\u003eDocumentFragment\u003c/code\u003e object, \u003ccode\u003eoldChild\u003c/code\u003e is replaced by all of the \u003ccode\u003eDocumentFragment\u003c/code\u003e children, which are inserted in the same order. If the \u003ccode\u003enewChild\u003c/code\u003e is already in the tree, it is first removed. \u003cp \u003e\u003cb\u003eNote:\u003c/b\u003e  Replacing a node with itself is implementation dependent.\n * @param newChild The new node to put in the child list.\n * @param oldChild The node being replaced in the list.\n * @return The node replaced.\n * @exception DOMException HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not allow children of the type of the \u003ccode\u003enewChild\u003c/code\u003e node, or if the node to put in is one of this node\u0027s ancestors or this node itself, or if this node is of type \u003ccode\u003eDocument\u003c/code\u003e and the result of the replacement operation would add a second \u003ccode\u003eDocumentType\u003c/code\u003e or \u003ccode\u003eElement\u003c/code\u003e on the \u003ccode\u003eDocument\u003c/code\u003e node. \u003cbr\u003eWRONG_DOCUMENT_ERR: Raised if \u003ccode\u003enewChild\u003c/code\u003e was created from a different document than the one that created this node. \u003cbr\u003eNO_MODIFICATION_ALLOWED_ERR: Raised if this node or the parent of the new node is readonly. \u003cbr\u003eNOT_FOUND_ERR: Raised if \u003ccode\u003eoldChild\u003c/code\u003e is not a child of this node. \u003cbr\u003eNOT_SUPPORTED_ERR: if this node is of type \u003ccode\u003eDocument\u003c/code\u003e, this exception might be raised if the DOM implementation doesn\u0027t support the replacement of the \u003ccode\u003eDocumentType\u003c/code\u003e child or \u003ccode\u003eElement\u003c/code\u003e child.\n * @since DOM Level 3\n */\n","tf":{"freq":{"might":1,"result":1,"old":5,"put":2,"second":1,"allow":1,"mexcept":1,"one":2,"children":3,"object":1,"add":1,"type":6,"child":17,"document":8,"level":1,"rais":5,"readon":1,"order":1,"tree":1,"oper":1,"ancestor":1,"fragment":2,"note":1,"element":2,"except":2,"support":1,"creat":2,"depend":1,"remov":1,"parent":1,"list":3,"differ":1,"node":18,"replac":8,"alreadi":1,"insert":1,"first":1},"maxFreq":18,"totalTerms":107},"loc":0}