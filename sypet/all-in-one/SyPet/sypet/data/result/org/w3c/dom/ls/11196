{"id":11196,"className":"org.w3c.dom.ls.LSSerializer","methodName":"getNewLine","signature":"\u003corg.w3c.dom.ls.LSSerializer: java.lang.String getNewLine()\u003e","javadoc":"/** \n * The end-of-line sequence of characters to be used in the XML being written out. Any string is supported, but XML treats only a certain set of characters sequence as end-of-line (See section 2.11, \"End-of-Line Handling\" in [\u003ca href\u003d\u0027http://www.w3.org/TR/2004/REC-xml-20040204\u0027\u003eXML 1.0\u003c/a\u003e], if the serialized content is XML 1.0 or section 2.11, \"End-of-Line Handling\" in [\u003ca href\u003d\u0027http://www.w3.org/TR/2004/REC-xml11-20040204/\u0027\u003eXML 1.1\u003c/a\u003e], if the serialized content is XML 1.1). Using other character sequences than the recommended ones can result in a document that is either not serializable or not well-formed). \u003cbr\u003e On retrieval, the default value of this attribute is the implementation specific default end-of-line sequence. DOM implementations should choose the default to match the usual convention for text files in the environment being used. Implementations must choose a default sequence that matches one of those allowed by XML 1.0 or XML 1.1, depending on the serialized content. Setting this attribute to \u003ccode\u003enull\u003c/code\u003e will reset its value to the default value. \u003cbr\u003e\n */\n","tf":{"freq":{"result":1,"allow":1,"convent":1,"serializ":1,"one":2,"www":2,"use":3,"line":6,"well":1,"org":2,"recommend":1,"must":1,"document":1,"attribut":2,"file":1,"sequenc":5,"written":1,"reset":1,"choos":2,"valu":3,"href":2,"end":5,"usual":1,"text":1,"support":1,"form":1,"charact":3,"depend":1,"environ":1,"xml":2,"section":2,"handl":2,"content":3,"specif":1,"either":1,"http":2,"retriev":1,"string":1,"will":1,"match":2,"certain":1,"serial":3,"treat":1},"maxFreq":6,"totalTerms":77},"loc":0}