{"id":10088,"className":"org.w3c.dom.CharacterData","methodName":"replaceData","signature":"\u003corg.w3c.dom.CharacterData: void replaceData(int,int,java.lang.String)\u003e","javadoc":"/** \n * Replace the characters starting at the specified 16-bit unit offset with the specified string.\n * @param offset The offset from which to start replacing.\n * @param count The number of 16-bit units to replace. If the sum of\u003ccode\u003eoffset\u003c/code\u003e and \u003ccode\u003ecount\u003c/code\u003e exceeds \u003ccode\u003elength\u003c/code\u003e, then all 16-bit units to the end of the data are replaced; (i.e., the effect is the same as a \u003ccode\u003eremove\u003c/code\u003e method call with the same range, followed by an \u003ccode\u003eappend\u003c/code\u003e method invocation).\n * @param arg The \u003ccode\u003eDOMString\u003c/code\u003e with which the range must bereplaced.\n * @exception DOMException INDEX_SIZE_ERR: Raised if the specified \u003ccode\u003eoffset\u003c/code\u003e is negative or greater than the number of 16-bit units in \u003ccode\u003edata\u003c/code\u003e, or if the specified \u003ccode\u003ecount\u003c/code\u003e is negative. \u003cbr\u003eNO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\n */\n","tf":{"freq":{"call":1,"bereplac":1,"greater":1,"count":3,"mexcept":1,"data":3,"sum":1,"must":1,"specifi":4,"arg":1,"rais":2,"readon":1,"rang":2,"length":1,"offset":5,"end":1,"follow":1,"append":1,"except":1,"charact":1,"exceed":1,"remov":1,"number":2,"invoc":1,"unit":4,"bit":4,"node":1,"effect":1,"start":2,"string":1,"replac":5,"mstring":1,"negat":2,"method":2},"maxFreq":5,"totalTerms":61},"loc":0}