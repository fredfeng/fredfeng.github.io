{"id":11201,"className":"org.w3c.dom.ls.LSSerializer","methodName":"writeToURI","signature":"\u003corg.w3c.dom.ls.LSSerializer: boolean writeToURI(org.w3c.dom.Node,java.lang.String)\u003e","javadoc":"/** \n * A convenience method that acts as if \u003ccode\u003eLSSerializer.write\u003c/code\u003e was called with a \u003ccode\u003eLSOutput\u003c/code\u003e with no encoding specified and \u003ccode\u003eLSOutput.systemId\u003c/code\u003e set to the \u003ccode\u003euri\u003c/code\u003e argument.\n * @param nodeArg  The node to serialize.\n * @param uri The URI to write to.\n * @return  Returns \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003enode\u003c/code\u003e wassuccessfully serialized. Return \u003ccode\u003efalse\u003c/code\u003e in case the normal processing stopped but the implementation kept serializing the document; the result of the serialization being implementation dependent then.\n * @exception LSException SERIALIZE_ERR: Raised if the \u003ccode\u003eLSSerializer\u003c/code\u003e was unable to serialize the node. DOM applications should attach a \u003ccode\u003eDOMErrorHandler\u003c/code\u003e using the parameter \"\u003ca href\u003d\u0027http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-error-handler\u0027\u003e error-handler\u003c/a\u003e\" if they wish to get details on the error.\n */\n","tf":{"freq":{"fals":1,"call":1,"stop":1,"result":1,"detail":1,"merror":1,"wish":1,"normal":1,"www":1,"use":1,"org":1,"applic":1,"specifi":1,"arg":1,"document":1,"level":1,"rais":1,"write":3,"href":1,"conveni":1,"kept":1,"argument":1,"except":2,"error":3,"depend":1,"paramet":2,"true":1,"uri":2,"unabl":1,"process":1,"system":1,"encod":1,"node":4,"http":1,"attach":1,"wassuccess":1,"html":1,"core":2,"method":1,"output":2,"act":1,"serial":7,"handler":3},"maxFreq":7,"totalTerms":63},"loc":0}