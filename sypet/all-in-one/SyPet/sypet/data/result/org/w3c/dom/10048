{"id":10048,"className":"org.w3c.dom.Node","methodName":"getTextContent","signature":"\u003corg.w3c.dom.Node: java.lang.String getTextContent()\u003e","javadoc":"/** \n * This attribute returns the text content of this node and its descendants. When it is defined to be \u003ccode\u003enull\u003c/code\u003e, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or \u003ccode\u003enull\u003c/code\u003e, replaced by a single \u003ccode\u003eText\u003c/code\u003e node containing the string this attribute is set to. \u003cbr\u003e On getting, no serialization is performed, the returned string does not contain any markup. No whitespace normalization is performed and the returned string does not contain the white spaces in element content (see the attribute \u003ccode\u003eText.isElementContentWhitespace\u003c/code\u003e). Similarly, on setting, no parsing is performed either, the input string is taken as pure textual content. \u003cbr\u003eThe string returned is made of the text content of this node depending on its type, as defined below: \u003ctable border\u003d\u00271\u0027 cellpadding\u003d\u00273\u0027\u003e \u003ctr\u003e \u003cth\u003eNode type\u003c/th\u003e \u003cth\u003eContent\u003c/th\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd valign\u003d\u0027top\u0027 rowspan\u003d\u00271\u0027 colspan\u003d\u00271\u0027\u003e ELEMENT_NODE, ATTRIBUTE_NODE, ENTITY_NODE, ENTITY_REFERENCE_NODE, DOCUMENT_FRAGMENT_NODE\u003c/td\u003e \u003ctd valign\u003d\u0027top\u0027 rowspan\u003d\u00271\u0027 colspan\u003d\u00271\u0027\u003econcatenation of the \u003ccode\u003etextContent\u003c/code\u003e attribute value of every child node, excluding COMMENT_NODE and PROCESSING_INSTRUCTION_NODE nodes. This is the empty string if the node has no children.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd valign\u003d\u0027top\u0027 rowspan\u003d\u00271\u0027 colspan\u003d\u00271\u0027\u003eTEXT_NODE, CDATA_SECTION_NODE, COMMENT_NODE, PROCESSING_INSTRUCTION_NODE\u003c/td\u003e \u003ctd valign\u003d\u0027top\u0027 rowspan\u003d\u00271\u0027 colspan\u003d\u00271\u0027\u003e\u003ccode\u003enodeValue\u003c/code\u003e\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd valign\u003d\u0027top\u0027 rowspan\u003d\u00271\u0027 colspan\u003d\u00271\u0027\u003eDOCUMENT_NODE, DOCUMENT_TYPE_NODE, NOTATION_NODE\u003c/td\u003e \u003ctd valign\u003d\u0027top\u0027 rowspan\u003d\u00271\u0027 colspan\u003d\u00271\u0027\u003e\u003cem\u003enull\u003c/em\u003e\u003c/td\u003e \u003c/tr\u003e \u003c/table\u003e\n * @exception DOMException DOMSTRING_SIZE_ERR: Raised when it would return more characters than fit in a \u003ccode\u003eDOMString\u003c/code\u003e variable on the implementation platform.\n * @since DOM Level 3\n */\n","tf":{"freq":{"markup":1,"singl":1,"variabl":1,"normal":1,"possibl":1,"perform":3,"type":2,"level":1,"taken":1,"border":1,"everi":1,"platform":1,"element":2,"text":6,"except":1,"colspan":6,"charact":1,"concaten":1,"white":1,"remov":1,"rowspan":6,"content":8,"pure":1,"node":9,"input":1,"cellpad":1,"contain":3,"defin":2,"textual":1,"mexcept":1,"made":1,"children":2,"exclud":1,"space":1,"child":1,"fit":1,"rais":1,"attribut":4,"valu":2,"similar":1,"top":6,"may":1,"depend":1,"whitespac":2,"empti":2,"either":1,"effect":1,"tabl":2,"replac":1,"string":7,"mstring":1,"descend":1,"valign":6,"serial":1,"pars":1},"maxFreq":9,"totalTerms":116},"loc":0}