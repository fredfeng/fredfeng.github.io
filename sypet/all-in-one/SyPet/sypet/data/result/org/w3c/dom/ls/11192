{"id":11192,"className":"org.w3c.dom.ls.LSParserFilter","methodName":"startElement","signature":"\u003corg.w3c.dom.ls.LSParserFilter: short startElement(org.w3c.dom.Element)\u003e","javadoc":"/** \n * The parser will call this method after each \u003ccode\u003eElement\u003c/code\u003e start tag has been scanned, but before the remainder of the \u003ccode\u003eElement\u003c/code\u003e is processed. The intent is to allow the element, including any children, to be efficiently skipped. Note that only element nodes are passed to the \u003ccode\u003estartElement\u003c/code\u003e function. \u003cbr\u003eThe element node passed to \u003ccode\u003estartElement\u003c/code\u003e for filtering will include all of the Element\u0027s attributes, but none of the children nodes. The Element may not yet be in place in the document being constructed (it may not have a parent node.) \u003cbr\u003eA \u003ccode\u003estartElement\u003c/code\u003e filter function may access or change the attributes for the Element. Changing Namespace declarations will have no effect on namespace resolution by the parser. \u003cbr\u003eFor efficiency, the Element node passed to the filter may not be the same one as is actually placed in the tree if the node is accepted. And the actual node (node object identity) may be reused during the process of reading in and filtering a document.\n * @param elementArg The newly encountered element. At the time thismethod is called, the element is incomplete - it will have its attributes, but no children.\n * @return \u003cul\u003e \u003cli\u003e \u003ccode\u003eFILTER_ACCEPT\u003c/code\u003e if the \u003ccode\u003eElement\u003c/code\u003e should be included in the DOM document being built. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eFILTER_REJECT\u003c/code\u003e if the \u003ccode\u003eElement\u003c/code\u003e and all of its children should be rejected. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eFILTER_SKIP\u003c/code\u003e if the \u003ccode\u003eElement\u003c/code\u003e should be skipped. All of its children are inserted in place of the skipped \u003ccode\u003eElement\u003c/code\u003e node. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eFILTER_INTERRUPT\u003c/code\u003e if the filter wants to stop the processing of the document. Interrupting the processing of the document does no longer guarantee that the resulting DOM tree is XML well-formed. The \u003ccode\u003eElement\u003c/code\u003e is rejected. \u003c/li\u003e \u003c/ul\u003e Returning any other values will result in unspecified behavior.\n */\n","tf":{"freq":{"incomplet":1,"tag":1,"accept":1,"skip":3,"reus":1,"function":2,"arg":1,"namespac":2,"time":1,"tree":2,"longer":1,"none":1,"effici":2,"place":3,"element":21,"form":1,"parent":1,"newli":1,"node":9,"start":5,"will":5,"parser":2,"filter":5,"unspecifi":1,"result":2,"stop":1,"call":2,"reject":2,"allow":1,"behavior":1,"one":1,"children":5,"well":1,"object":1,"resolut":1,"document":5,"attribut":3,"declar":1,"ident":1,"thismethod":1,"read":1,"valu":1,"built":1,"want":1,"note":1,"may":5,"includ":3,"guarante":1,"access":1,"intent":1,"interrupt":1,"pass":3,"process":4,"remaind":1,"effect":1,"encount":1,"actual":2,"method":1,"scan":1,"construct":1,"chang":2,"insert":1,"yet":1},"maxFreq":21,"totalTerms":138},"loc":0}