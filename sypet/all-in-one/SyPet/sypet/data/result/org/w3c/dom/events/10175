{"id":10175,"className":"org.w3c.dom.events.UIEvent","methodName":"initUIEvent","signature":"\u003corg.w3c.dom.events.UIEvent: void initUIEvent(java.lang.String,boolean,boolean,org.w3c.dom.views.AbstractView,int)\u003e","javadoc":"/** \n * The \u003ccode\u003einitUIEvent\u003c/code\u003e method is used to initialize the value of a \u003ccode\u003eUIEvent\u003c/code\u003e created through the \u003ccode\u003eDocumentEvent\u003c/code\u003e interface. This method may only be called before the \u003ccode\u003eUIEvent\u003c/code\u003e has been dispatched via the \u003ccode\u003edispatchEvent\u003c/code\u003e method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence.\n * @param typeArg Specifies the event type.\n * @param canBubbleArg Specifies whether or not the event can bubble.\n * @param cancelableArg Specifies whether or not the event\u0027s defaultaction can be prevented.\n * @param viewArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s\u003ccode\u003eAbstractView\u003c/code\u003e.\n * @param detailArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s detail.\n */\n","tf":{"freq":{"call":3,"detail":2,"via":1,"use":1,"cancel":1,"type":2,"necessari":1,"bubbl":2,"whether":2,"though":1,"specifi":5,"arg":5,"document":1,"time":2,"event":11,"dispatch":2,"valu":1,"initi":1,"may":2,"multipl":2,"creat":1,"defaultact":1,"init":2,"prevent":1,"invoc":1,"preced":1,"take":1,"method":3,"view":2,"phase":1},"maxFreq":11,"totalTerms":62},"loc":0}