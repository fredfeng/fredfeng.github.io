{"id":10116,"className":"org.w3c.dom.Document","methodName":"adoptNode","signature":"\u003corg.w3c.dom.Document: org.w3c.dom.Node adoptNode(org.w3c.dom.Node)\u003e","javadoc":"/** \n * Attempts to adopt a node from another document to this document. If supported, it changes the \u003ccode\u003eownerDocument\u003c/code\u003e of the source node, its children, as well as the attached attribute nodes if there are any. If the source node has a parent it is first removed from the child list of its parent. This effectively allows moving a subtree from one document to another (unlike \u003ccode\u003eimportNode()\u003c/code\u003e which create a copy of the source node instead of moving it). When it fails, applications should use \u003ccode\u003eDocument.importNode()\u003c/code\u003e instead. Note that if the adopted node is already part of this document (i.e. the source and target document are the same), this method still has the effect of removing the source node from the child list of its parent, if any. The following list describes the specifics for each type of node. \u003cdl\u003e \u003cdt\u003eATTRIBUTE_NODE\u003c/dt\u003e \u003cdd\u003eThe \u003ccode\u003eownerElement\u003c/code\u003e attribute is set to \u003ccode\u003enull\u003c/code\u003e and the \u003ccode\u003especified\u003c/code\u003e flag is set to \u003ccode\u003etrue\u003c/code\u003e on the adopted \u003ccode\u003eAttr\u003c/code\u003e. The descendants of the source \u003ccode\u003eAttr\u003c/code\u003e are recursively adopted.\u003c/dd\u003e \u003cdt\u003eDOCUMENT_FRAGMENT_NODE\u003c/dt\u003e \u003cdd\u003eThe descendants of the source node are recursively adopted.\u003c/dd\u003e \u003cdt\u003eDOCUMENT_NODE\u003c/dt\u003e \u003cdd\u003e \u003ccode\u003eDocument\u003c/code\u003e nodes cannot be adopted.\u003c/dd\u003e \u003cdt\u003eDOCUMENT_TYPE_NODE\u003c/dt\u003e \u003cdd\u003e \u003ccode\u003eDocumentType\u003c/code\u003e nodes cannot be adopted.\u003c/dd\u003e \u003cdt\u003eELEMENT_NODE\u003c/dt\u003e \u003cdd\u003e\u003cem\u003eSpecified\u003c/em\u003e attribute nodes of the source element are adopted. Default attributes are discarded, though if the document being adopted into defines default attributes for this element name, those are assigned. The descendants of the source element are recursively adopted.\u003c/dd\u003e \u003cdt\u003eENTITY_NODE\u003c/dt\u003e \u003cdd\u003e \u003ccode\u003eEntity\u003c/code\u003e nodes cannot be adopted.\u003c/dd\u003e \u003cdt\u003eENTITY_REFERENCE_NODE\u003c/dt\u003e \u003cdd\u003eOnly the \u003ccode\u003eEntityReference\u003c/code\u003e node itself is adopted, the descendants are discarded, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.\u003c/dd\u003e \u003cdt\u003eNOTATION_NODE\u003c/dt\u003e \u003cdd\u003e\u003ccode\u003eNotation\u003c/code\u003e nodes cannot be adopted.\u003c/dd\u003e \u003cdt\u003ePROCESSING_INSTRUCTION_NODE, TEXT_NODE, CDATA_SECTION_NODE, COMMENT_NODE\u003c/dt\u003e \u003cdd\u003eThese nodes can all be adopted. No specifics.\u003c/dd\u003e \u003c/dl\u003e \u003cp \u003e\u003cb\u003eNote:\u003c/b\u003e  Since it does not create new nodes unlike the \u003ccode\u003eDocument.importNode()\u003c/code\u003e method, this method does not raise an \u003ccode\u003eINVALID_CHARACTER_ERR\u003c/code\u003e exception, and applications should use the \u003ccode\u003eDocument.normalizeDocument()\u003c/code\u003e method to check if an imported name is not an XML name according to the XML version in use.\n * @param source The node to move into this document.\n * @return The adopted node, or \u003ccode\u003enull\u003c/code\u003e if this operationfails, such as when the source node comes from a different implementation.\n * @exception DOMException NOT_SUPPORTED_ERR: Raised if the source node is of type \u003ccode\u003eDOCUMENT\u003c/code\u003e, \u003ccode\u003eDOCUMENT_TYPE\u003c/code\u003e. \u003cbr\u003eNO_MODIFICATION_ALLOWED_ERR: Raised when the source node is readonly.\n * @since DOM Level 3\n */\n","tf":{"freq":{"assign":2,"operationfail":1,"normal":1,"type":3,"though":1,"copi":1,"specifi":2,"level":1,"readon":1,"fail":1,"refer":1,"adopt":16,"move":3,"follow":1,"element":4,"except":2,"support":1,"creat":2,"remov":2,"parent":3,"describ":1,"attr":2,"provid":1,"node":26,"flag":1,"entiti":4,"definit":1,"owner":2,"sourc":14,"recurs":3,"attempt":1,"might":1,"defin":2,"allow":1,"mexcept":1,"one":1,"children":1,"use":3,"anoth":2,"well":1,"discard":2,"applic":2,"version":1,"child":2,"document":16,"rais":3,"attribut":5,"name":4,"unlik":2,"valu":1,"subtre":1,"note":2,"check":1,"come":1,"true":1,"list":3,"still":1,"accord":1,"differ":2,"notat":1,"specif":2,"effect":2,"attach":1,"instead":2,"target":1,"alreadi":1,"method":4,"chang":1,"descend":4,"part":1,"first":1,"destin":1},"maxFreq":26,"totalTerms":191},"loc":0}