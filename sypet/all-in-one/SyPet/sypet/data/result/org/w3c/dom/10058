{"id":10058,"className":"org.w3c.dom.UserDataHandler","methodName":"handle","signature":"\u003corg.w3c.dom.UserDataHandler: void handle(short,java.lang.String,java.lang.Object,org.w3c.dom.Node,org.w3c.dom.Node)\u003e","javadoc":"/** \n * This method is called whenever the node for which this handler is registered is imported or cloned. \u003cbr\u003e DOM applications must not raise exceptions in a \u003ccode\u003eUserDataHandler\u003c/code\u003e. The effect of throwing exceptions from the handler is DOM implementation dependent.\n * @param operation Specifies the type of operation that is beingperformed on the node.\n * @param key Specifies the key for which this handler is being called.\n * @param data Specifies the data for which this handler is being called.\n * @param src Specifies the node being cloned, adopted, imported, orrenamed. This is \u003ccode\u003enull\u003c/code\u003e when the node is being deleted.\n * @param dst Specifies the node newly created if any, or\u003ccode\u003enull\u003c/code\u003e.\n */\n","tf":{"freq":{"call":3,"delet":1,"data":3,"orrenam":1,"dst":1,"type":1,"must":1,"applic":1,"specifi":5,"rais":1,"oper":2,"adopt":1,"regist":1,"src":1,"key":2,"clone":2,"whenev":1,"except":2,"creat":1,"depend":1,"beingperform":1,"handl":1,"newli":1,"node":5,"effect":1,"method":1,"user":1,"handler":5},"maxFreq":5,"totalTerms":48},"loc":0}