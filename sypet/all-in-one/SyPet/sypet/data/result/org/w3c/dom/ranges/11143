{"id":11143,"className":"org.w3c.dom.ranges.Range","methodName":"insertNode","signature":"\u003corg.w3c.dom.ranges.Range: void insertNode(org.w3c.dom.Node)\u003e","javadoc":"/** \n * Inserts a node into the Document or DocumentFragment at the start of the Range. If the container is a Text node, this will be split at the start of the Range (as if the Text node\u0027s splitText method was performed at the insertion point) and the insertion will occur between the two resulting Text nodes. Adjacent Text nodes will not be automatically merged. If the node to be inserted is a DocumentFragment node, the children will be inserted rather than the DocumentFragment node itself.\n * @param newNode The node to insert at the start of the Range\n * @exception DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of the start of the Range is read-only. \u003cbr\u003eWRONG_DOCUMENT_ERR: Raised if \u003ccode\u003enewNode\u003c/code\u003e and the container of the start of the Range were not created from the same document. \u003cbr\u003eHIERARCHY_REQUEST_ERR: Raised if the container of the start of the Range is of a type that does not allow children of the type of \u003ccode\u003enewNode\u003c/code\u003e or if \u003ccode\u003enewNode\u003c/code\u003e is an ancestor of the container. \u003cbr\u003eINVALID_STATE_ERR: Raised if \u003ccode\u003edetach()\u003c/code\u003e has already been invoked on this object.\n * @exception RangeException INVALID_NODE_TYPE_ERR: Raised if \u003ccode\u003enewNode\u003c/code\u003e is an Attr, Entity, Notation, or Document node.\n */\n","tf":{"freq":{"result":1,"allow":1,"mexcept":1,"children":2,"perform":1,"object":1,"type":2,"automat":1,"document":6,"rais":5,"rang":7,"read":1,"rather":1,"ancestor":2,"fragment":3,"adjac":1,"text":5,"except":3,"detach":1,"creat":1,"invok":1,"attr":1,"point":1,"two":1,"notat":1,"node":16,"entiti":1,"start":6,"contain":5,"will":4,"alreadi":1,"method":1,"split":2,"insert":7,"merg":1,"occur":1},"maxFreq":16,"totalTerms":96},"loc":0}