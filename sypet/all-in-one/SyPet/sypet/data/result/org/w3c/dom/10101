{"id":10101,"className":"org.w3c.dom.Document","methodName":"importNode","signature":"\u003corg.w3c.dom.Document: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)\u003e","javadoc":"/** \n * Imports a node from another document to this document, without altering or removing the source node from the original document; this method creates a new copy of the source node. The returned node has no parent; (\u003ccode\u003eparentNode\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e). \u003cbr\u003eFor all nodes, importing a node creates a node object owned by the importing document, with attribute values identical to the source node\u0027s \u003ccode\u003enodeName\u003c/code\u003e and \u003ccode\u003enodeType\u003c/code\u003e, plus the attributes related to namespaces (\u003ccode\u003eprefix\u003c/code\u003e, \u003ccode\u003elocalName\u003c/code\u003e, and \u003ccode\u003enamespaceURI\u003c/code\u003e). As in the \u003ccode\u003ecloneNode\u003c/code\u003e operation, the source node is not altered. User data associated to the imported node is not carried over. However, if any \u003ccode\u003eUserDataHandlers\u003c/code\u003e has been specified along with the associated data these handlers will be called with the appropriate parameters before this method returns. \u003cbr\u003eAdditional information is copied as appropriate to the \u003ccode\u003enodeType\u003c/code\u003e, attempting to mirror the behavior expected if a fragment of XML or HTML source was copied from one document to another, recognizing that the two documents may have different DTDs in the XML case. The following list describes the specifics for each type of node. \u003cdl\u003e \u003cdt\u003eATTRIBUTE_NODE\u003c/dt\u003e \u003cdd\u003eThe \u003ccode\u003eownerElement\u003c/code\u003e attribute is set to \u003ccode\u003enull\u003c/code\u003e and the \u003ccode\u003especified\u003c/code\u003e flag is set to \u003ccode\u003etrue\u003c/code\u003e on the generated \u003ccode\u003eAttr\u003c/code\u003e. The descendants of the source \u003ccode\u003eAttr\u003c/code\u003e are recursively imported and the resulting nodes reassembled to form the corresponding subtree. Note that the \u003ccode\u003edeep\u003c/code\u003e parameter has no effect on \u003ccode\u003eAttr\u003c/code\u003e nodes; they always carry their children with them when imported.\u003c/dd\u003e \u003cdt\u003eDOCUMENT_FRAGMENT_NODE\u003c/dt\u003e \u003cdd\u003eIf the \u003ccode\u003edeep\u003c/code\u003e option was set to \u003ccode\u003etrue\u003c/code\u003e, the descendants of the source \u003ccode\u003eDocumentFragment\u003c/code\u003e are recursively imported and the resulting nodes reassembled under the imported \u003ccode\u003eDocumentFragment\u003c/code\u003e to form the corresponding subtree. Otherwise, this simply generates an empty \u003ccode\u003eDocumentFragment\u003c/code\u003e.\u003c/dd\u003e \u003cdt\u003eDOCUMENT_NODE\u003c/dt\u003e \u003cdd\u003e\u003ccode\u003eDocument\u003c/code\u003e nodes cannot be imported.\u003c/dd\u003e \u003cdt\u003eDOCUMENT_TYPE_NODE\u003c/dt\u003e \u003cdd\u003e\u003ccode\u003eDocumentType\u003c/code\u003e nodes cannot be imported.\u003c/dd\u003e \u003cdt\u003eELEMENT_NODE\u003c/dt\u003e \u003cdd\u003e\u003cem\u003eSpecified\u003c/em\u003e attribute nodes of the source element are imported, and the generated \u003ccode\u003eAttr\u003c/code\u003e nodes are attached to the generated \u003ccode\u003eElement\u003c/code\u003e. Default attributes are \u003cem\u003enot\u003c/em\u003e copied, though if the document being imported into defines default attributes for this element name, those are assigned. If the \u003ccode\u003eimportNode\u003c/code\u003e \u003ccode\u003edeep\u003c/code\u003e parameter was set to \u003ccode\u003etrue\u003c/code\u003e, the descendants of the source element are recursively imported and the resulting nodes reassembled to form the corresponding subtree.\u003c/dd\u003e \u003cdt\u003eENTITY_NODE\u003c/dt\u003e \u003cdd\u003e\u003ccode\u003eEntity\u003c/code\u003e nodes can be imported, however in the current release of the DOM the \u003ccode\u003eDocumentType\u003c/code\u003e is readonly. Ability to add these imported nodes to a \u003ccode\u003eDocumentType\u003c/code\u003e will be considered for addition to a future release of the DOM.On import, the \u003ccode\u003epublicId\u003c/code\u003e, \u003ccode\u003esystemId\u003c/code\u003e, and \u003ccode\u003enotationName\u003c/code\u003e attributes are copied. If a \u003ccode\u003edeep\u003c/code\u003e import is requested, the descendants of the the source \u003ccode\u003eEntity\u003c/code\u003e are recursively imported and the resulting nodes reassembled to form the corresponding subtree.\u003c/dd\u003e \u003cdt\u003e ENTITY_REFERENCE_NODE\u003c/dt\u003e \u003cdd\u003eOnly the \u003ccode\u003eEntityReference\u003c/code\u003e itself is copied, even if a \u003ccode\u003edeep\u003c/code\u003e import is requested, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.\u003c/dd\u003e \u003cdt\u003eNOTATION_NODE\u003c/dt\u003e \u003cdd\u003e \u003ccode\u003eNotation\u003c/code\u003e nodes can be imported, however in the current release of the DOM the \u003ccode\u003eDocumentType\u003c/code\u003e is readonly. Ability to add these imported nodes to a \u003ccode\u003eDocumentType\u003c/code\u003e will be considered for addition to a future release of the DOM.On import, the \u003ccode\u003epublicId\u003c/code\u003e and \u003ccode\u003esystemId\u003c/code\u003e attributes are copied. Note that the \u003ccode\u003edeep\u003c/code\u003e parameter has no effect on this type of nodes since they cannot have any children.\u003c/dd\u003e \u003cdt\u003e PROCESSING_INSTRUCTION_NODE\u003c/dt\u003e \u003cdd\u003eThe imported node copies its \u003ccode\u003etarget\u003c/code\u003e and \u003ccode\u003edata\u003c/code\u003e values from those of the source node.Note that the \u003ccode\u003edeep\u003c/code\u003e parameter has no effect on this type of nodes since they cannot have any children.\u003c/dd\u003e \u003cdt\u003eTEXT_NODE, CDATA_SECTION_NODE, COMMENT_NODE\u003c/dt\u003e \u003cdd\u003eThese three types of nodes inheriting from \u003ccode\u003eCharacterData\u003c/code\u003e copy their \u003ccode\u003edata\u003c/code\u003e and \u003ccode\u003elength\u003c/code\u003e attributes from those of the source node.Note that the \u003ccode\u003edeep\u003c/code\u003e parameter has no effect on these types of nodes since they cannot have any children.\u003c/dd\u003e \u003c/dl\u003e\n * @param importedNode The node to import.\n * @param deep If \u003ccode\u003etrue\u003c/code\u003e, recursively import the subtree underthe specified node; if \u003ccode\u003efalse\u003c/code\u003e, import only the node itself, as explained above. This has no effect on nodes that cannot have any children, and on \u003ccode\u003eAttr\u003c/code\u003e, and \u003ccode\u003eEntityReference\u003c/code\u003e nodes.\n * @return The imported node that belongs to this \u003ccode\u003eDocument\u003c/code\u003e.\n * @exception DOMException NOT_SUPPORTED_ERR: Raised if the type of node being imported is not supported. \u003cbr\u003eINVALID_CHARACTER_ERR: Raised if one of the imported names is not an XML name according to the XML version in use specified in the \u003ccode\u003eDocument.xmlVersion\u003c/code\u003e attribute. This may happen when importing an XML 1.1 [\u003ca href\u003d\u0027http://www.w3.org/TR/2004/REC-xml11-20040204/\u0027\u003eXML 1.1\u003c/a\u003e] element into an XML 1.0 document, for instance.\n * @since DOM Level 2\n */\n","tf":{"freq":{"assign":2,"carri":2,"copi":9,"specifi":5,"expect":1,"oper":1,"refer":2,"relat":1,"along":1,"happen":1,"href":1,"recogn":1,"deep":9,"option":1,"plus":1,"clone":1,"element":6,"support":1,"form":4,"charact":1,"alway":1,"remov":1,"parent":2,"describ":1,"attr":5,"without":1,"provid":1,"instanc":1,"system":2,"http":1,"prefix":1,"will":3,"sourc":13,"explain":1,"might":1,"simpli":1,"mexcept":1,"behavior":1,"correspond":4,"data":6,"use":1,"anoth":2,"org":1,"consid":2,"version":2,"mirror":1,"document":21,"attribut":10,"associ":2,"length":1,"current":2,"subtre":5,"note":4,"addit":3,"may":2,"true":4,"alter":2,"empti":1,"differ":2,"appropri":2,"attach":1,"method":2,"destin":1,"fals":1,"belong":1,"type":13,"abil":2,"though":1,"namespac":2,"level":1,"readon":2,"request":2,"three":1,"howev":3,"follow":1,"except":1,"creat":2,"xml":2,"reassembl":4,"inform":1,"node":46,"flag":1,"entiti":6,"underth":1,"definit":1,"owner":1,"even":1,"recurs":5,"attempt":1,"otherwis":1,"call":1,"result":4,"defin":2,"one":2,"www":1,"children":5,"object":1,"add":2,"rais":2,"ident":1,"releas":4,"name":7,"valu":3,"fragment":4,"futur":2,"paramet":6,"origin":1,"list":1,"accord":1,"two":1,"specif":1,"notat":2,"effect":5,"generat":4,"target":1,"local":1,"descend":4,"user":2,"handler":2},"maxFreq":46,"totalTerms":350},"loc":0}