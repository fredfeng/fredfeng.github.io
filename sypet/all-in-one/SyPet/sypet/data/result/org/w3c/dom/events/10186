{"id":10186,"className":"org.w3c.dom.events.MouseEvent","methodName":"initMouseEvent","signature":"\u003corg.w3c.dom.events.MouseEvent: void initMouseEvent(java.lang.String,boolean,boolean,org.w3c.dom.views.AbstractView,int,int,int,int,int,boolean,boolean,boolean,boolean,short,org.w3c.dom.events.EventTarget)\u003e","javadoc":"/** \n * The \u003ccode\u003einitMouseEvent\u003c/code\u003e method is used to initialize the value of a \u003ccode\u003eMouseEvent\u003c/code\u003e created through the \u003ccode\u003eDocumentEvent\u003c/code\u003e interface. This method may only be called before the \u003ccode\u003eMouseEvent\u003c/code\u003e has been dispatched via the \u003ccode\u003edispatchEvent\u003c/code\u003e method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence.\n * @param typeArg Specifies the event type.\n * @param canBubbleArg Specifies whether or not the event can bubble.\n * @param cancelableArg Specifies whether or not the event\u0027s defaultaction can be prevented.\n * @param viewArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s\u003ccode\u003eAbstractView\u003c/code\u003e.\n * @param detailArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s mouse click count.\n * @param screenXArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s screen xcoordinate\n * @param screenYArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s screen ycoordinate\n * @param clientXArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s client xcoordinate\n * @param clientYArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s client ycoordinate\n * @param ctrlKeyArg Specifies whether or not control key was depressedduring the \u003ccode\u003eEvent\u003c/code\u003e.\n * @param altKeyArg Specifies whether or not alt key was depressed duringthe \u003ccode\u003eEvent\u003c/code\u003e.\n * @param shiftKeyArg Specifies whether or not shift key was depressedduring the \u003ccode\u003eEvent\u003c/code\u003e.\n * @param metaKeyArg Specifies whether or not meta key was depressedduring the \u003ccode\u003eEvent\u003c/code\u003e.\n * @param buttonArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s mouse button.\n * @param relatedTargetArg Specifies the \u003ccode\u003eEvent\u003c/code\u003e\u0027s related\u003ccode\u003eEventTarget\u003c/code\u003e.\n */\n","tf":{"freq":{"depress":1,"duringth":1,"call":3,"xarg":2,"detail":1,"yarg":2,"via":1,"client":4,"count":1,"xcoordin":2,"click":1,"use":1,"cancel":1,"ycoordin":2,"ctrl":1,"type":2,"bubbl":2,"necessari":1,"meta":2,"whether":6,"mous":6,"though":1,"specifi":15,"arg":11,"document":1,"time":2,"button":2,"alt":2,"event":22,"relat":2,"dispatch":2,"valu":1,"initi":1,"key":8,"depresseddur":3,"control":1,"screen":4,"may":2,"multipl":2,"creat":1,"defaultact":1,"init":2,"prevent":1,"invoc":1,"preced":1,"take":1,"target":2,"method":3,"view":2,"phase":1,"shift":2},"maxFreq":22,"totalTerms":143},"loc":0}