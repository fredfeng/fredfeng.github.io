{"id":11233,"className":"org.w3c.dom.ls.LSParser","methodName":"parse","signature":"\u003corg.w3c.dom.ls.LSParser: org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput)\u003e","javadoc":"/** \n * Parse an XML document from a resource identified by a \u003ccode\u003eLSInput\u003c/code\u003e.\n * @param input  The \u003ccode\u003eLSInput\u003c/code\u003e from which the source of thedocument is to be read.\n * @return  If the \u003ccode\u003eLSParser\u003c/code\u003e is a synchronous\u003ccode\u003eLSParser\u003c/code\u003e, the newly created and populated \u003ccode\u003eDocument\u003c/code\u003e is returned. If the \u003ccode\u003eLSParser\u003c/code\u003e is asynchronous, \u003ccode\u003enull\u003c/code\u003e is returned since the document object may not yet be constructed when this method returns.\n * @exception DOMException INVALID_STATE_ERR: Raised if the \u003ccode\u003eLSParser\u003c/code\u003e\u0027s \u003ccode\u003eLSParser.busy\u003c/code\u003e attribute is \u003ccode\u003etrue\u003c/code\u003e.\n * @exception LSException PARSE_ERR: Raised if the \u003ccode\u003eLSParser\u003c/code\u003e was unable to load the XML document. DOM applications should attach a \u003ccode\u003eDOMErrorHandler\u003c/code\u003e using the parameter \"\u003ca href\u003d\u0027http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-error-handler\u0027\u003e error-handler\u003c/a\u003e\" if they wish to get details on the error.\n */\n","tf":{"freq":{"asynchron":1,"detail":1,"merror":1,"wish":1,"mexcept":1,"www":1,"use":1,"identifi":1,"object":1,"org":1,"applic":1,"popul":1,"resourc":1,"document":4,"level":1,"rais":2,"attribut":1,"busi":1,"read":1,"href":1,"may":1,"except":3,"error":3,"creat":1,"thedocu":1,"paramet":2,"true":1,"unabl":1,"newli":1,"input":3,"http":1,"attach":1,"html":1,"core":2,"load":1,"sourc":1,"method":1,"construct":1,"parser":6,"pars":2,"handler":3,"yet":1},"maxFreq":6,"totalTerms":62},"loc":0}