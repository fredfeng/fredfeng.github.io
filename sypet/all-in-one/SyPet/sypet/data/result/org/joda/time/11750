{"id":11750,"className":"org.joda.time.DateTime","methodName":"plusHours","signature":"\u003corg.joda.time.DateTime: org.joda.time.DateTime plusHours(int)\u003e","javadoc":"/** \n * Returns a copy of this datetime plus the specified number of hours. \u003cp\u003e The calculation will add a duration equivalent to the number of hours expressed in milliseconds. \u003cp\u003e For example, if a spring daylight savings cutover is from 01:59 to 03:00 then adding one hour to 01:30 will result in 03:30. This is a duration of one hour later, even though the hour field value changed from 1 to 3. \u003cp\u003e The following three lines are identical in effect: \u003cpre\u003e DateTime added \u003d dt.plusHours(6); DateTime added \u003d dt.plus(Period.hours(6)); DateTime added \u003d dt.withFieldAdded(DurationFieldType.hours(), 6); \u003c/pre\u003e \u003cp\u003e This datetime instance is immutable and unaffected by this method call.\n * @param hours  the amount of hours to add, may be negative\n * @return the new datetime plus the increased hours\n * @since 1.1\n */\n","tf":{"freq":{"increas":1,"call":1,"result":1,"save":1,"one":2,"line":1,"type":1,"date":3,"express":1,"add":2,"spring":1,"copi":1,"though":1,"specifi":1,"amount":1,"durat":3,"time":3,"ident":1,"equival":1,"millisecond":1,"three":1,"valu":1,"follow":1,"datetim":3,"plus":5,"may":1,"later":1,"calcul":1,"unaffect":1,"immut":1,"number":2,"hour":12,"period":1,"instanc":1,"field":3,"effect":1,"pre":2,"will":2,"exampl":1,"ad":5,"negat":1,"method":1,"even":1,"chang":1,"cutov":1,"daylight":1},"maxFreq":12,"totalTerms":80},"loc":7}