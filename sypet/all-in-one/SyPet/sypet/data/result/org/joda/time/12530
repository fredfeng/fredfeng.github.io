{"id":12530,"className":"org.joda.time.DateTimeZone","methodName":"forID","signature":"\u003corg.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)\u003e","javadoc":"/** \n * Gets a time zone instance for the specified time zone id. \u003cp\u003e The time zone id may be one of those returned by getAvailableIDs. Short ids, as accepted by  {@link java.util.TimeZone}, are not accepted. All IDs must be specified in the long format. The exception is UTC, which is an acceptable id. \u003cp\u003e Alternatively a locale independent, fixed offset, datetime zone can be specified. The form \u003ccode\u003e[+-]hh:mm\u003c/code\u003e can be used.\n * @param id  the ID of the datetime zone, null means default\n * @return the DateTimeZone object for the ID\n * @throws IllegalArgumentException if the ID is not recognised\n */\n","tf":{"freq":{"accept":3,"link":1,"one":1,"use":1,"object":1,"date":1,"must":1,"specifi":3,"id":3,"time":5,"independ":1,"altern":1,"fix":1,"mean":1,"offset":1,"datetim":2,"argument":1,"may":1,"except":2,"form":1,"recognis":1,"avail":1,"format":1,"illeg":1,"instanc":1,"java":1,"local":1,"util":1,"zone":7},"maxFreq":7,"totalTerms":47},"loc":22}