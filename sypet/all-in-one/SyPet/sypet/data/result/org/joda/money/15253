{"id":15253,"className":"org.joda.money.Money","methodName":"getMinorPart","signature":"\u003corg.joda.money.Money: int getMinorPart()\u003e","javadoc":"/** \n * Gets the minor part of the amount. \u003cp\u003e This return the minor unit part of the monetary amount. This is defined as the amount in minor units excluding major units. \u003cp\u003e For example, EUR has a scale of 2, so the minor part is always between 0 and 99 for positive amounts, and 0 and -99 for negative amounts. Thus \u0027EUR 2.35\u0027 will return 35, and \u0027EUR -1.34\u0027 will return -34.\n * @return the minor part of the amount, negative if the amount is negative\n */\n","tf":{"freq":{"defin":1,"scale":1,"thus":1,"minor":6,"alway":1,"exclud":1,"monetari":1,"amount":7,"unit":3,"will":2,"exampl":1,"negat":3,"part":5,"posit":1,"major":1},"maxFreq":7,"totalTerms":35},"loc":3}