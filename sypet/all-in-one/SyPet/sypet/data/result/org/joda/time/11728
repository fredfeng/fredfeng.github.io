{"id":11728,"className":"org.joda.time.DateTime","methodName":"withZone","signature":"\u003corg.joda.time.DateTime: org.joda.time.DateTime withZone(org.joda.time.DateTimeZone)\u003e","javadoc":"/** \n * Returns a copy of this datetime with a different time zone, preserving the millisecond instant. \u003cp\u003e This method is useful for finding the local time in another timezone. For example, if this instant holds 12:30 in Europe/London, the result from this method with Europe/Paris would be 13:30. \u003cp\u003e The returned object will be a new instance of the same implementation type. This method changes the time zone, and does not change the millisecond instant, with the effect that the field values usually change. The returned object will be either be a new instance or \u003ccode\u003ethis\u003c/code\u003e.\n * @param newZone  the new time zone\n * @return a copy of this datetime with a different time zone\n * @see #withZoneRetainFields\n */\n","tf":{"freq":{"result":1,"use":1,"timezon":1,"europ":2,"anoth":1,"object":2,"type":1,"copi":2,"time":5,"millisecond":2,"valu":1,"instant":3,"find":1,"datetim":2,"usual":1,"pari":1,"hold":1,"preserv":1,"instanc":2,"field":2,"differ":2,"either":1,"effect":1,"london":1,"exampl":1,"will":2,"retain":1,"method":3,"chang":3,"local":1,"zone":7},"maxFreq":7,"totalTerms":56},"loc":3}