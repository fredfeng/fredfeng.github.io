{"id":12779,"className":"org.joda.time.DateMidnight","methodName":"DateMidnight","signature":"\u003corg.joda.time.DateMidnight: void DateMidnight(java.lang.Object)\u003e","javadoc":"/** \n * Constructs an instance from an Object that represents a datetime. The constructed object will have a local time of midnight. \u003cp\u003e If the object implies a chronology (such as GregorianCalendar does), then that chronology will be used. Otherwise, ISO default is used. Thus if a GregorianCalendar is passed in, the chronology used will be GJ, but if a Date is passed in the chronology will be ISO. \u003cp\u003e The recognised object types are defined in {@link org.joda.time.convert.ConverterManager ConverterManager} andinclude ReadableInstant, String, Calendar and Date. The String formats are described by  {@link ISODateTimeFormat#dateTimeParser()}.\n * @param instant  the datetime object, null means now\n * @throws IllegalArgumentException if the instant is invalid\n */\n","tf":{"freq":{"otherwis":1,"defin":1,"readabl":1,"link":2,"convert":3,"use":3,"object":5,"date":4,"type":1,"org":1,"time":4,"invalid":1,"midnight":2,"andinclud":1,"chronolog":4,"impli":1,"mean":1,"joda":1,"instant":3,"datetim":2,"calendar":3,"argument":1,"except":1,"repres":1,"thus":1,"manag":2,"recognis":1,"describ":1,"format":2,"illeg":1,"instanc":1,"pass":2,"now":1,"string":2,"will":4,"local":1,"construct":2,"odat":1,"gregorian":2,"parser":1},"maxFreq":5,"totalTerms":73},"loc":3}