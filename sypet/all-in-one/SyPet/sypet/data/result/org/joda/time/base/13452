{"id":13452,"className":"org.joda.time.base.BaseDateTime","methodName":"BaseDateTime","signature":"\u003corg.joda.time.base.BaseDateTime: void BaseDateTime(java.lang.Object,org.joda.time.DateTimeZone)\u003e","javadoc":"/** \n * Constructs an instance from an Object that represents a datetime, forcing the time zone to that specified. \u003cp\u003e If the object contains no chronology, \u003ccode\u003eISOChronology\u003c/code\u003e is used. If the specified time zone is null, the default zone is used. \u003cp\u003e The recognised object types are defined in {@link org.joda.time.convert.ConverterManager ConverterManager} andinclude ReadableInstant, String, Calendar and Date.\n * @param instant  the datetime object\n * @param zone  the time zone\n * @throws IllegalArgumentException if the instant is invalid\n */\n","tf":{"freq":{"defin":1,"readabl":1,"link":1,"use":2,"convert":3,"object":4,"date":2,"type":1,"org":1,"specifi":2,"time":5,"invalid":1,"chronolog":1,"andinclud":1,"joda":1,"instant":3,"forc":1,"calendar":1,"datetim":2,"argument":1,"except":1,"ochronolog":1,"repres":1,"manag":2,"recognis":1,"illeg":1,"instanc":1,"string":1,"contain":1,"base":1,"construct":1,"zone":5},"maxFreq":5,"totalTerms":52},"loc":7}