{"id":12096,"className":"org.joda.time.DateTimeComparator","methodName":"getInstance","signature":"\u003corg.joda.time.DateTimeComparator: org.joda.time.DateTimeComparator getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)\u003e","javadoc":"/** \n * Returns a DateTimeComparator with a lower and upper limit. Fields of a magnitude less than the lower limit are excluded from comparisons. Fields of a magnitude greater than or equal to the upper limit are also excluded from comparisons. Either limit may be specified as null, which indicates an unbounded limit. \u003cp\u003e The time-zone is considered when using this comparator unless both limits are null. The input millis are rounded/truncated using the time-zone of that input value. Thus, two inputs with different time-zones will typically not be equal\n * @param lowerLimit  inclusive lower limit for fields to be compared, null means no limit\n * @param upperLimit  exclusive upper limit for fields to be compared, null means no limit\n * @return a comparator over all fields between the limits\n */\n","tf":{"freq":{"lower":4,"greater":1,"typic":1,"truncat":1,"milli":1,"use":2,"round":1,"exclud":2,"date":1,"consid":1,"specifi":1,"inclus":1,"upper":4,"time":4,"unbound":1,"indic":1,"unless":1,"mean":2,"valu":1,"exclus":1,"less":1,"limit":13,"may":1,"thus":1,"magnitud":2,"equal":2,"comparison":2,"instanc":1,"field":5,"differ":1,"two":1,"input":3,"either":1,"will":1,"compar":5,"also":1,"zone":3},"maxFreq":13,"totalTerms":76},"loc":12}