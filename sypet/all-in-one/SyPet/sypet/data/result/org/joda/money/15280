{"id":15280,"className":"org.joda.money.Money","methodName":"multipliedBy","signature":"\u003corg.joda.money.Money: org.joda.money.Money multipliedBy(double,java.math.RoundingMode)\u003e","javadoc":"/** \n * Returns a copy of this monetary value multiplied by the specified value. \u003cp\u003e This takes this amount and multiplies it by the specified value, rounding the result is rounded as specified. \u003cp\u003e The amount is converted via  {@link BigDecimal#valueOf(double)} which yieldsthe most expected answer for most programming scenarios. Any  {@code double} literal in code will be converted toexactly the same BigDecimal with the same scale. For example, the literal \u00271.45d\u0027 will be converted to \u00271.45\u0027. \u003cp\u003e This instance is immutable and unaffected by this method.\n * @param valueToMultiplyBy  the scalar value to multiply by, not null\n * @param roundingMode  the rounding mode to use to bring the decimal places back in line, not null\n * @return the new multiplied instance, never null\n * @throws ArithmeticException if the rounding fails\n */\n","tf":{"freq":{"result":1,"scale":1,"via":1,"link":1,"arithmet":1,"line":1,"use":1,"convert":3,"round":5,"bring":1,"monetari":1,"decim":3,"copi":1,"mode":2,"specifi":3,"amount":2,"expect":1,"fail":1,"multipli":6,"valu":6,"yieldsth":1,"place":1,"except":1,"liter":2,"scalar":1,"unaffect":1,"immut":1,"answer":1,"back":1,"instanc":2,"toexact":1,"never":1,"scenario":1,"take":1,"program":1,"will":2,"exampl":1,"method":1,"big":2},"maxFreq":6,"totalTerms":65},"loc":3}