{"id":15203,"className":"org.joda.money.BigMoney","methodName":"multipliedBy","signature":"\u003corg.joda.money.BigMoney: org.joda.money.BigMoney multipliedBy(double)\u003e","javadoc":"/** \n * Returns a copy of this monetary value multiplied by the specified value. \u003cp\u003e No precision is lost in the result. The result has a scale equal to the sum of the two scales. For example, \u0027USD 1.13\u0027 multiplied by \u00272.5\u0027 gives \u0027USD 2.825\u0027. \u003cp\u003e The amount is converted via  {@link BigDecimal#valueOf(double)} which yieldsthe most expected answer for most programming scenarios. Any  {@code double} literal in code will be converted toexactly the same BigDecimal with the same scale. For example, the literal \u00271.45d\u0027 will be converted to \u00271.45\u0027. \u003cp\u003e This instance is immutable and unaffected by this method.\n * @param valueToMultiplyBy  the scalar value to multiply by, not null\n * @return the new multiplied instance, never null\n */\n","tf":{"freq":{"scale":3,"result":2,"lost":1,"via":1,"give":1,"link":1,"sum":1,"convert":3,"monetari":1,"decim":2,"copi":1,"specifi":1,"amount":1,"expect":1,"precis":1,"multipli":6,"valu":5,"yieldsth":1,"liter":2,"scalar":1,"unaffect":1,"immut":1,"answer":1,"equal":1,"instanc":2,"toexact":1,"two":1,"never":1,"scenario":1,"program":1,"will":2,"exampl":2,"method":1,"big":2},"maxFreq":6,"totalTerms":54},"loc":7}