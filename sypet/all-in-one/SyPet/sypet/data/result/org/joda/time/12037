{"id":12037,"className":"org.joda.time.Interval","methodName":"overlap","signature":"\u003corg.joda.time.Interval: org.joda.time.Interval overlap(org.joda.time.ReadableInterval)\u003e","javadoc":"/** \n * Gets the overlap between this interval and another interval. \u003cp\u003e Intervals are inclusive of the start instant and exclusive of the end. An interval overlaps another if it shares some common part of the datetime continuum. This method returns the amount of the overlap, only if the intervals actually do overlap. If the intervals do not overlap, then null is returned. \u003cp\u003e When two intervals are compared the result is one of three states: (a) they abut, (b) there is a gap between them, (c) they overlap. The abuts state takes precedence over the other two, thus a zero duration interval at the start of a larger interval abuts and does not overlap. \u003cp\u003e The chronology of the returned interval is the same as that of this interval (the chronology of the interval parameter is not used). Note that the use of the chronology was only correctly implemented in version 1.3.\n * @param interval  the interval to examine, null means now\n * @return the overlap interval, null if no overlap\n * @since 1.1\n */\n","tf":{"freq":{"result":1,"common":1,"one":1,"state":2,"use":2,"anoth":2,"zero":1,"version":1,"durat":1,"amount":1,"inclus":1,"share":1,"correct":1,"chronolog":3,"three":1,"mean":1,"exclus":1,"examin":1,"instant":1,"note":1,"end":1,"datetim":1,"continuum":1,"overlap":10,"thus":1,"larger":1,"paramet":1,"interv":15,"preced":1,"two":2,"now":1,"start":2,"take":1,"abut":3,"actual":1,"method":1,"part":1,"compar":1,"gap":1},"maxFreq":15,"totalTerms":71},"loc":9}