{"id":11670,"className":"org.joda.time.Instant","methodName":"toMutableDateTime","signature":"\u003corg.joda.time.Instant: org.joda.time.MutableDateTime toMutableDateTime()\u003e","javadoc":"/** \n * Get this object as a MutableDateTime using ISOChronology in the default zone. \u003cp\u003e This method returns a MutableDateTime object in the default zone. This differs from the similarly named method on DateTime, DateMidnight or MutableDateTime which retains the time zone. The difference is because Instant really represents a time \u003ci\u003ewithout\u003c/i\u003e a zone, thus calling this method we really have no zone to \u0027retain\u0027 and hence expect to switch to the default zone. \u003cp\u003e This method definition preserves compatibility with earlier versions of Joda-Time.\n * @return a MutableDateTime using the same millis\n */\n","tf":{"freq":{"call":1,"realli":2,"mutabl":5,"milli":1,"use":2,"object":2,"date":7,"version":1,"expect":1,"time":9,"midnight":1,"name":1,"joda":1,"instant":1,"similar":1,"ochronolog":1,"henc":1,"repres":1,"thus":1,"preserv":1,"without":1,"differ":2,"earlier":1,"definit":1,"retain":2,"method":4,"zone":6,"compat":1},"maxFreq":9,"totalTerms":59},"loc":3}