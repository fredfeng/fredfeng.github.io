{"id":11760,"className":"org.joda.time.DateTime","methodName":"minusDays","signature":"\u003corg.joda.time.DateTime: org.joda.time.DateTime minusDays(int)\u003e","javadoc":"/** \n * Returns a copy of this datetime minus the specified number of days. \u003cp\u003e The calculation will do its best to only change the day field retaining the same time of day. However, in certain circumstances, typically daylight savings cutover, it may be necessary to alter the time fields. \u003cp\u003e In spring an hour is typically removed. If subtracting one day results in the time being within the cutover then the time is adjusted to be within summer time. For example, if the cutover is from 01:59 to 03:00 and the result of this method would have been 02:30, then the result will be adjusted to 03:30. \u003cp\u003e The following three lines are identical in effect: \u003cpre\u003e DateTime subtracted \u003d dt.minusDays(6); DateTime subtracted \u003d dt.minus(Period.days(6)); DateTime subtracted \u003d dt.withFieldAdded(DurationFieldType.days(), -6); \u003c/pre\u003e \u003cp\u003e This datetime instance is immutable and unaffected by this method call.\n * @param days  the amount of days to subtract, may be negative\n * @return the new datetime minus the increased days\n * @since 1.1\n */\n","tf":{"freq":{"save":1,"type":1,"necessari":1,"copi":1,"specifi":1,"amount":1,"time":8,"three":1,"howev":1,"datetim":3,"follow":1,"minus":5,"calcul":1,"remov":1,"immut":1,"circumst":1,"number":1,"period":1,"instanc":1,"will":2,"retain":1,"negat":1,"day":11,"cutov":3,"increas":1,"call":1,"result":3,"one":1,"typic":2,"line":1,"date":3,"spring":1,"durat":1,"ident":1,"adjust":2,"best":1,"may":2,"unaffect":1,"hour":1,"alter":1,"field":4,"subtract":5,"effect":1,"pre":2,"exampl":1,"summer":1,"ad":1,"method":2,"certain":1,"chang":1,"within":2,"daylight":1},"maxFreq":11,"totalTerms":95},"loc":7}