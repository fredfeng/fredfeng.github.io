{"id":11904,"className":"org.joda.time.Period","methodName":"Period","signature":"\u003corg.joda.time.Period: void Period(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)\u003e","javadoc":"/** \n * Creates a period from two partially specified times. \u003cp\u003e The two partials must contain the same fields, thus you can specify two \u003ccode\u003eLocalDate\u003c/code\u003e objects, or two \u003ccode\u003eLocalTime\u003c/code\u003e objects, but not one of each. As these are Partial objects, time zones have no effect on the result. \u003cp\u003e The two partials must also both be contiguous - see {@link DateTimeUtils#isContiguous(ReadablePartial)} for a definition.Both \u003ccode\u003eLocalDate\u003c/code\u003e and \u003ccode\u003eLocalTime\u003c/code\u003e are contiguous. \u003cp\u003e Most calculations performed by this method have obvious results. The special case is where the calculation is from a \"long\" month to a \"short\" month. Here, the result favours increasing the months field rather than the days. For example, 2013-01-31 to 2013-02-28 is treated as one whole month. By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days (exposed as 4 weeks and 2 days). The results are explained by considering that the start date plus the calculated period result in the end date. \u003cp\u003e An alternative way of constructing a Period from two Partials is  {@link #fieldDifference(ReadablePartial,ReadablePartial)}. That method handles all kinds of partials.\n * @param start  the start of the period, must not be null\n * @param end  the end of the period, must not be null\n * @throws IllegalArgumentException if the partials are null or invalid\n * @since 1.1\n */\n","tf":{"freq":{"perform":1,"must":4,"specifi":2,"contrast":1,"obvious":1,"time":5,"invalid":1,"altern":1,"argument":1,"plus":1,"except":1,"creat":1,"calcul":3,"period":6,"partial":10,"start":3,"whole":1,"definit":1,"contain":1,"month":5,"day":3,"explain":1,"util":1,"treat":2,"increas":1,"result":5,"readabl":3,"link":2,"one":3,"way":1,"object":3,"date":5,"kind":1,"consid":1,"rather":1,"expos":1,"favour":1,"end":3,"thus":1,"contigu":3,"illeg":1,"handl":1,"field":3,"two":6,"differ":1,"effect":1,"exampl":1,"method":2,"special":1,"local":4,"construct":1,"also":1,"zone":1,"week":1},"maxFreq":10,"totalTerms":117},"loc":3}