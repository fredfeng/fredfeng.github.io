{"id":12552,"className":"org.joda.time.DateTimeZone","methodName":"convertLocalToUTC","signature":"\u003corg.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)\u003e","javadoc":"/** \n * Converts a local instant to a standard UTC instant with the same local time attempting to use the same offset as the original. \u003cp\u003e This conversion is used after performing a calculation where the calculation was done using a simple local zone. Whenever possible, the same offset as the original offset will be used. This is most significant during a daylight savings overlap.\n * @param instantLocal  the local instant to convert to UTC\n * @param strict  whether the conversion should reject non-existent local times\n * @param originalInstantUTC  the original instant that the calculation is based on\n * @return the UTC instant with the same local time, \n * @throws ArithmeticException if the result overflows a long\n * @throws IllegalArgumentException if the zone has no equivalent local time\n * @since 2.0\n */\n","tf":{"freq":{"attempt":1,"result":1,"reject":1,"simpl":1,"save":1,"arithmet":1,"convers":2,"use":4,"convert":3,"possibl":1,"perform":1,"whether":1,"time":4,"equival":1,"offset":3,"exist":1,"instant":7,"argument":1,"whenev":1,"except":2,"overlap":1,"standard":1,"calcul":3,"done":1,"origin":4,"signific":1,"illeg":1,"non":1,"overflow":1,"base":1,"will":1,"local":9,"strict":1,"zone":2,"daylight":1},"maxFreq":9,"totalTerms":67},"loc":9}