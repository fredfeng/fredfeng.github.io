{"id":14324,"className":"org.joda.time.format.DateTimeFormatter","methodName":"parseMutableDateTime","signature":"\u003corg.joda.time.format.DateTimeFormatter: org.joda.time.MutableDateTime parseMutableDateTime(java.lang.String)\u003e","javadoc":"/** \n * Parses a date-time from the given text, returning a new MutableDateTime. \u003cp\u003e The parse will use the zone and chronology specified on this formatter. \u003cp\u003e If the text contains a time zone string then that will be taken into account in adjusting the time of day as follows. If the  {@link #withOffsetParsed()} has been called, then the resultingDateTime will have a fixed offset based on the parsed time zone. Otherwise the resulting DateTime will have the zone of this formatter, but the parsed zone may have caused the time to be adjusted.\n * @param text  the text to parse, not null\n * @return the parsed date-time, never null\n * @throws UnsupportedOperationException if parsing is not supported\n * @throws IllegalArgumentException if the text to parse is invalid\n */\n","tf":{"freq":{"otherwis":1,"call":1,"result":2,"unsupport":1,"mutabl":2,"link":1,"use":1,"date":6,"formatt":2,"specifi":1,"time":10,"invalid":1,"given":1,"oper":1,"fix":1,"chronolog":1,"adjust":2,"taken":1,"offset":2,"follow":1,"argument":1,"except":2,"may":1,"text":5,"support":1,"illeg":1,"never":1,"caus":1,"contain":1,"string":1,"base":1,"will":4,"account":1,"day":1,"pars":10,"zone":5},"maxFreq":10,"totalTerms":76},"loc":27}