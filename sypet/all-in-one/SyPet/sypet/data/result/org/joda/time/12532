{"id":12532,"className":"org.joda.time.DateTimeZone","methodName":"forOffsetHoursMinutes","signature":"\u003corg.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetHoursMinutes(int,int)\u003e","javadoc":"/** \n * Gets a time zone instance for the specified offset to UTC in hours and minutes. This method assumes 60 minutes in an hour, and standard length minutes. \u003cp\u003e This factory is a convenient way of constructing zones with a fixed offset. The hours value must be in the range -23 to +23. The minutes value must be in the range -59 to +59. The following combinations of sign for the hour and minute are possible: \u003cpre\u003e Hour    Minute    Example    Result +ve     +ve       (2, 15)    +02:15 +ve     zero      (2, 0)     +02:00 +ve     -ve       (2, -15)   IllegalArgumentException zero    +ve       (0, 15)    +00:15 zero    zero      (0, 0)     +00:00 zero    -ve       (0, -15)   -00:15 -ve     +ve       (-2, 15)   -02:15 -ve     zero      (-2, 0)    -02:00 -ve     -ve       (-2, -15)  -02:15 \u003c/pre\u003e Note that in versions before 2.3, the minutes had to be zero or positive.\n * @param hoursOffset  the offset in hours from UTC, from -23 to +23\n * @param minutesOffset  the offset in minutes from UTC, from -59 to +59\n * @return the DateTimeZone object for the offset\n * @throws IllegalArgumentException if any value is out of range, the minutes are negativewhen the hours are positive, or the resulting offset exceeds +/- 23:59:59.000\n */\n","tf":{"freq":{"result":2,"negativewhen":1,"way":1,"possibl":1,"object":1,"date":1,"zero":7,"must":2,"version":1,"specifi":1,"time":2,"fix":1,"factori":1,"rang":3,"length":1,"combin":1,"valu":3,"offset":9,"note":1,"conveni":1,"follow":1,"argument":2,"except":2,"minut":11,"assum":1,"standard":1,"exceed":1,"hour":9,"illeg":2,"instanc":1,"sign":1,"pre":2,"exampl":1,"method":1,"construct":1,"posit":2,"zone":3},"maxFreq":11,"totalTerms":83},"loc":27}