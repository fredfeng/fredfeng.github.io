{"id":15148,"className":"org.joda.money.BigMoney","methodName":"ofScale","signature":"\u003corg.joda.money.BigMoney: org.joda.money.BigMoney ofScale(org.joda.money.CurrencyUnit,java.math.BigDecimal,int,java.math.RoundingMode)\u003e","javadoc":"/** \n * Obtains an instance of  {@code BigMoney} from a {@code double} using awell-defined conversion, rounding as necessary. \u003cp\u003e This allows you to create an instance with a specific currency and amount. If the amount has a scale in excess of the scale of the currency then the excess fractional digits are rounded using the rounding mode. The result will have a minimum scale of zero.\n * @param currency  the currency, not null\n * @param amount  the amount of money, not null\n * @param scale  the scale to use, zero or positive\n * @param roundingMode  the rounding mode to use, not null\n * @return the new instance, never null\n * @throws ArithmeticException if the rounding fails\n */\n","tf":{"freq":{"defin":1,"scale":6,"result":1,"allow":1,"minimum":1,"arithmet":1,"convers":1,"currenc":4,"excess":2,"use":4,"round":6,"zero":2,"necessari":1,"mode":3,"amount":4,"fail":1,"money":2,"awel":1,"except":1,"fraction":1,"creat":1,"instanc":3,"digit":1,"never":1,"obtain":1,"specif":1,"will":1,"big":1,"posit":1},"maxFreq":6,"totalTerms":55},"loc":7}