{"id":12362,"className":"org.joda.time.LocalDateTime","methodName":"fromDateFields","signature":"\u003corg.joda.time.LocalDateTime: org.joda.time.LocalDateTime fromDateFields(java.util.Date)\u003e","javadoc":"/** \n * Constructs a LocalDateTime from a \u003ccode\u003ejava.util.Date\u003c/code\u003e using exactly the same field values. \u003cp\u003e Each field is queried from the Date and assigned to the LocalDateTime. This is useful if you have been using the Date as a local date, ignoring the zone. \u003cp\u003e One advantage of this method is that this method is unaffected if the version of the time zone data differs between the JDK and Joda-Time. That is because the local field values are transferred, calculated using the JDK time zone data and without using the Joda-Time time zone data. \u003cp\u003e This factory method always creates a LocalDateTime with ISO chronology.\n * @param date  the Date to extract fields from, not null\n * @return the created local date-time, not null\n * @throws IllegalArgumentException if the calendar is null\n * @throws IllegalArgumentException if the date is invalid for the ISO chronology\n */\n","tf":{"freq":{"assign":1,"one":1,"data":3,"use":5,"date":12,"version":1,"time":9,"invalid":1,"chronolog":2,"factori":1,"exact":1,"valu":2,"joda":2,"calendar":1,"argument":2,"except":2,"ignor":1,"transfer":1,"creat":2,"alway":1,"advantag":1,"calcul":1,"unaffect":1,"illeg":2,"without":1,"extract":1,"field":5,"queri":1,"differ":1,"java":1,"method":3,"local":6,"construct":1,"util":1,"zone":4},"maxFreq":12,"totalTerms":81},"loc":20}