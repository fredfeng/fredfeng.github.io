{"id":11964,"className":"org.joda.time.TimeOfDay","methodName":"fromDateFields","signature":"\u003corg.joda.time.TimeOfDay: org.joda.time.TimeOfDay fromDateFields(java.util.Date)\u003e","javadoc":"/** \n * Constructs a TimeOfDay from a \u003ccode\u003ejava.util.Date\u003c/code\u003e using exactly the same field values avoiding any time zone effects. \u003cp\u003e Each field is queried from the Date and assigned to the TimeOfDay. This is useful to ensure that the field values are the same in the created TimeOfDay no matter what the time zone is. For example, if the Calendar states that the time is 04:29, then the created TimeOfDay will always have the time 04:29 irrespective of time zone issues. \u003cp\u003e This factory method always creates a TimeOfDay with ISO chronology.\n * @param date  the Date to extract fields from\n * @return the created TimeOfDay\n * @throws IllegalArgumentException if the calendar is null\n * @throws IllegalArgumentException if the date is invalid for the ISO chronology\n * @since 1.2\n */\n","tf":{"freq":{"assign":1,"state":1,"use":2,"date":6,"issu":1,"ensur":1,"avoid":1,"time":11,"invalid":1,"chronolog":2,"factori":1,"exact":1,"valu":2,"irrespect":1,"calendar":2,"argument":2,"except":2,"creat":4,"matter":1,"alway":2,"illeg":2,"extract":1,"field":5,"queri":1,"effect":1,"exampl":1,"will":1,"method":1,"java":1,"day":6,"construct":1,"zone":3,"util":1},"maxFreq":11,"totalTerms":70},"loc":11}