{"id":13194,"className":"org.joda.time.LocalTime","methodName":"LocalTime","signature":"\u003corg.joda.time.LocalTime: void LocalTime(java.lang.Object,org.joda.time.DateTimeZone)\u003e","javadoc":"/** \n * Constructs an instance from an Object that represents a datetime, forcing the time zone to that specified. \u003cp\u003e If the object contains no chronology, \u003ccode\u003eISOChronology\u003c/code\u003e is used. If the specified time zone is null, the default zone is used. Once the constructor is completed, the zone is no longer used. \u003cp\u003e The recognised object types are defined in {@link org.joda.time.convert.ConverterManager ConverterManager} andinclude ReadablePartial, ReadableInstant, String, Calendar and Date. The String formats are described by  {@link ISODateTimeFormat#localTimeParser()}. The default String converter ignores the zone and only parses the field values.\n * @param instant  the datetime object\n * @param zone  the time zone\n * @throws IllegalArgumentException if the instant is invalid\n */\n","tf":{"freq":{"defin":1,"readabl":2,"link":2,"use":3,"convert":4,"object":4,"date":1,"type":1,"org":1,"specifi":2,"time":7,"invalid":1,"andinclud":1,"chronolog":1,"longer":1,"valu":1,"joda":1,"instant":3,"forc":1,"calendar":1,"datetim":2,"constructor":1,"complet":1,"argument":1,"except":1,"ignor":1,"ochronolog":1,"repres":1,"manag":2,"recognis":1,"describ":1,"format":2,"partial":1,"illeg":1,"instanc":1,"field":1,"string":3,"contain":1,"construct":1,"local":2,"odat":1,"pars":1,"parser":1,"zone":7},"maxFreq":7,"totalTerms":75},"loc":8}