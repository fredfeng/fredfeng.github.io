{"id":15364,"className":"org.joda.money.format.MoneyFormatter","methodName":"parseMoney","signature":"\u003corg.joda.money.format.MoneyFormatter: org.joda.money.Money parseMoney(java.lang.CharSequence)\u003e","javadoc":"/** \n * Fully parses the text into a  {@code Money} requiring that the parsedamount has the correct number of decimal places. \u003cp\u003e The parse must complete normally and parse the entire text (currency and amount). If the parse completes without reading the entire length of the text, an exception is thrown. If any other problem occurs during parsing, an exception is thrown.\n * @param text  the text to parse, not null\n * @return the parsed monetary value, never null\n * @throws UnsupportedOperationException if the formatter is unable to parse\n * @throws MoneyFormatException if there is a problem while parsing\n * @throws ArithmeticException if the scale of the parsed money exceeds the scale of the currency\n */\n","tf":{"freq":{"scale":2,"unsupport":1,"normal":1,"arithmet":1,"currenc":2,"decim":1,"monetari":1,"formatt":1,"must":1,"amount":1,"requir":1,"correct":1,"oper":1,"money":4,"length":1,"read":1,"valu":1,"place":1,"parsedamount":1,"complet":2,"text":5,"except":5,"thrown":2,"exceed":1,"number":1,"fulli":1,"problem":2,"format":1,"without":1,"unabl":1,"never":1,"pars":11,"entir":2,"occur":1},"maxFreq":11,"totalTerms":61},"loc":3}