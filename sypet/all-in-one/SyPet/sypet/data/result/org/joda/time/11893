{"id":11893,"className":"org.joda.time.Period","methodName":"Period","signature":"\u003corg.joda.time.Period: void Period(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)\u003e","javadoc":"/** \n * Create a period from a set of field values. \u003cp\u003e There is usually little need to use this constructor. The period type is used primarily to define how to split an interval into a period. As this constructor already is split, the period type does no real work.\n * @param years  amount of years in this period, which must be zero if unsupported\n * @param months  amount of months in this period, which must be zero if unsupported\n * @param weeks  amount of weeks in this period, which must be zero if unsupported\n * @param days  amount of days in this period, which must be zero if unsupported\n * @param hours  amount of hours in this period, which must be zero if unsupported\n * @param minutes  amount of minutes in this period, which must be zero if unsupported\n * @param seconds  amount of seconds in this period, which must be zero if unsupported\n * @param millis  amount of milliseconds in this period, which must be zero if unsupported\n * @param type  which set of fields this period supports, null means AllType\n * @throws IllegalArgumentException if an unsupported field\u0027s value is non-zero\n */\n","tf":{"freq":{"need":1,"littl":1,"defin":1,"unsupport":9,"second":2,"milli":1,"use":2,"type":4,"zero":9,"primarili":1,"must":8,"amount":8,"real":1,"millisecond":1,"mean":1,"valu":2,"year":2,"constructor":2,"argument":1,"usual":1,"work":1,"except":1,"minut":2,"support":1,"creat":1,"hour":2,"period":14,"illeg":1,"non":1,"field":3,"interv":1,"month":2,"split":2,"alreadi":1,"day":2,"week":2},"maxFreq":14,"totalTerms":95},"loc":3}