{"id":14122,"className":"org.joda.time.format.DateTimeFormat","methodName":"forPattern","signature":"\u003corg.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)\u003e","javadoc":"/** \n * Factory to create a formatter from a pattern string. The pattern string is described above in the class level javadoc. It is very similar to SimpleDateFormat patterns. \u003cp\u003e The format may contain locale specific output, and this will change as you change the locale of the formatter. Call  {@link DateTimeFormatter#withLocale(Locale)} to switch the locale.For example: \u003cpre\u003e DateTimeFormat.forPattern(pattern).withLocale(Locale.FRANCE).print(dt); \u003c/pre\u003e\n * @param pattern  pattern specification\n * @return the formatter\n * @throws IllegalArgumentException if the pattern is invalid\n */\n","tf":{"freq":{"call":1,"simpl":1,"link":1,"javadoc":1,"date":3,"formatt":4,"time":2,"level":1,"invalid":1,"factori":1,"similar":1,"argument":1,"except":1,"may":1,"creat":1,"describ":1,"format":3,"illeg":1,"print":1,"specif":2,"pattern":9,"pre":2,"string":2,"contain":1,"will":1,"exampl":1,"local":7,"chang":2,"output":1},"maxFreq":9,"totalTerms":55},"loc":3}