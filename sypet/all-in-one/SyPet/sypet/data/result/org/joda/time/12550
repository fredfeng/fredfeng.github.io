{"id":12550,"className":"org.joda.time.DateTimeZone","methodName":"getOffsetFromLocal","signature":"\u003corg.joda.time.DateTimeZone: int getOffsetFromLocal(long)\u003e","javadoc":"/** \n * Gets the millisecond offset to subtract from local time to get UTC time. This offset can be used to undo adding the offset obtained by getOffset. \u003cpre\u003e millisLocal \u003d\u003d millisUTC   + getOffset(millisUTC) millisUTC   \u003d\u003d millisLocal - getOffsetFromLocal(millisLocal) \u003c/pre\u003e NOTE: After calculating millisLocal, some error may be introduced. At offset transitions (due to DST or other historical changes), ranges of local times may map to different UTC times. \u003cp\u003e For overlaps (where the local time is ambiguous), this method returns the offset applicable before the gap. The effect of this is that any instant calculated using the offset from an overlap will be in \"summer\" time. \u003cp\u003e For gaps, this method returns the offset applicable before the gap, ie \"winter\" offset. However, the effect of this is that any instant calculated using the offset from a gap will be after the gap, in \"summer\" time. \u003cp\u003e For example, consider a zone with a gap from 01:00 to 01:59:\u003cbr /\u003e Input: 00:00 (before gap) Output: Offset applicable before gap  DateTime: 00:00\u003cbr /\u003e Input: 00:30 (before gap) Output: Offset applicable before gap  DateTime: 00:30\u003cbr /\u003e Input: 01:00 (in gap)     Output: Offset applicable before gap  DateTime: 02:00\u003cbr /\u003e Input: 01:30 (in gap)     Output: Offset applicable before gap  DateTime: 02:30\u003cbr /\u003e Input: 02:00 (after gap)  Output: Offset applicable after gap   DateTime: 02:00\u003cbr /\u003e Input: 02:30 (after gap)  Output: Offset applicable after gap   DateTime: 02:30\u003cbr /\u003e \u003cp\u003e NOTE: Prior to v2.0, the DST overlap behaviour was not defined and varied by hemisphere. Prior to v1.5, the DST gap behaviour was also not defined. In v2.4, the documentation was clarified again.\n * @param instantLocal  the millisecond instant, relative to this time zone, to get the offset for\n * @return the millisecond offset to subtract from local time to get UTC time\n */\n","tf":{"freq":{"defin":2,"histor":1,"undo":1,"behaviour":2,"milli":7,"use":3,"date":6,"ambigu":1,"transit":1,"consid":1,"applic":8,"prior":2,"introduc":1,"document":1,"time":16,"millisecond":3,"rang":1,"relat":1,"map":1,"howev":1,"offset":21,"instant":4,"may":2,"overlap":3,"clarifi":1,"error":1,"calcul":3,"subtract":2,"differ":1,"input":6,"obtain":1,"winter":1,"effect":2,"pre":2,"hemispher":1,"exampl":1,"will":2,"summer":2,"ad":1,"due":1,"method":2,"local":11,"chang":1,"output":6,"also":1,"zone":2,"vari":1,"gap":19},"maxFreq":21,"totalTerms":161},"loc":38}