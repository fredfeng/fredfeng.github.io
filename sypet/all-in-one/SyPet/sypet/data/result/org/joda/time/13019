{"id":13019,"className":"org.joda.time.LocalDate","methodName":"withPeriodAdded","signature":"\u003corg.joda.time.LocalDate: org.joda.time.LocalDate withPeriodAdded(org.joda.time.ReadablePeriod,int)\u003e","javadoc":"/** \n * Returns a copy of this date with the specified period added. \u003cp\u003e If the addition is zero, then \u003ccode\u003ethis\u003c/code\u003e is returned. \u003cp\u003e This method is typically used to add multiple copies of complex period instances. Adding one field is best achieved using methods like  {@link #withFieldAdded(DurationFieldType,int)}or  {@link #plusYears(int)}. \u003cp\u003e Unsupported time fields are ignored, thus adding a period of 24 hours will not have any effect.\n * @param period  the period to add to this one, null means zero\n * @param scalar  the amount of times to add, such as -1 to subtract once\n * @return a copy of this date with the period added\n * @throws ArithmeticException if the result exceeds the internal capacity\n */\n","tf":{"freq":{"result":1,"unsupport":1,"complex":1,"one":2,"link":2,"arithmet":1,"typic":1,"use":2,"add":3,"zero":2,"date":2,"type":1,"copi":3,"specifi":1,"amount":1,"durat":1,"time":2,"mean":1,"best":1,"year":1,"addit":1,"plus":1,"except":1,"ignor":1,"scalar":1,"multipl":1,"thus":1,"exceed":1,"hour":1,"period":7,"like":1,"instanc":1,"achiev":1,"field":4,"subtract":1,"effect":1,"intern":1,"will":1,"ad":6,"method":2,"capac":1},"maxFreq":7,"totalTerms":66},"loc":15}