{"id":13195,"className":"org.joda.time.LocalTime","methodName":"LocalTime","signature":"\u003corg.joda.time.LocalTime: void LocalTime(java.lang.Object,org.joda.time.Chronology)\u003e","javadoc":"/** \n * Constructs an instance from an Object that represents a datetime, using the specified chronology. \u003cp\u003e If the chronology is null, ISO in the default time zone is used. Once the constructor is completed, the zone is no longer used. \u003cp\u003e The recognised object types are defined in {@link org.joda.time.convert.ConverterManager ConverterManager} andinclude ReadablePartial, ReadableInstant, String, Calendar and Date. The String formats are described by  {@link ISODateTimeFormat#localTimeParser()}. The default String converter ignores the zone and only parses the field values.\n * @param instant  the datetime object\n * @param chronology  the chronology\n * @throws IllegalArgumentException if the instant is invalid\n */\n","tf":{"freq":{"defin":1,"link":2,"readabl":2,"use":3,"convert":4,"object":3,"date":1,"type":1,"org":1,"specifi":1,"time":5,"invalid":1,"chronolog":4,"andinclud":1,"longer":1,"valu":1,"joda":1,"instant":3,"calendar":1,"constructor":1,"datetim":2,"complet":1,"argument":1,"except":1,"ignor":1,"repres":1,"manag":2,"recognis":1,"describ":1,"format":2,"partial":1,"illeg":1,"instanc":1,"field":1,"string":3,"construct":1,"local":2,"odat":1,"pars":1,"parser":1,"zone":3},"maxFreq":5,"totalTerms":67},"loc":8}