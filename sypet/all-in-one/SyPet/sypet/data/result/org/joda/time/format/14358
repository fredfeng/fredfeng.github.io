{"id":14358,"className":"org.joda.time.format.ISODateTimeFormat","methodName":"weekDateTime","signature":"\u003corg.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekDateTime()\u003e","javadoc":"/** \n * Returns a formatter that combines a full weekyear date and time, separated by a \u0027T\u0027 (xxxx-\u0027W\u0027ww-e\u0027T\u0027HH:mm:ss.SSSZZ). \u003cp\u003e The time zone offset is \u0027Z\u0027 for zero, and of the form \u0027\\u00b1HH:mm\u0027 for non-zero. The parser is strict by default, thus time string  {@code 24:00} cannot be parsed.\u003cp\u003e The returned formatter prints and parses only this format, which includes milliseconds. See  {@link #dateTimeParser()} for a more flexible parser that accepts different formats.\n * @return a formatter for xxxx-\u0027W\u0027ww-e\u0027T\u0027HH:mm:ss.SSSZZ\n */\n","tf":{"freq":{"accept":1,"link":1,"zero":2,"date":3,"formatt":3,"time":5,"full":1,"millisecond":1,"combin":1,"offset":1,"includ":1,"form":1,"xxxx":2,"thus":1,"format":2,"flexibl":1,"print":1,"non":1,"differ":1,"separ":1,"string":1,"weekyear":1,"strict":1,"parser":3,"pars":2,"zone":1,"week":1},"maxFreq":5,"totalTerms":41},"loc":3}