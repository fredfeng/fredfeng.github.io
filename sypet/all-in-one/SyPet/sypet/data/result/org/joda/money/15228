{"id":15228,"className":"org.joda.money.Money","methodName":"of","signature":"\u003corg.joda.money.Money: org.joda.money.Money of(org.joda.money.CurrencyUnit,java.math.BigDecimal,java.math.RoundingMode)\u003e","javadoc":"/** \n * Obtains an instance of  {@code Money} from a {@code BigDecimal}, rounding as necessary. \u003cp\u003e This allows you to create an instance with a specific currency and amount. If the amount has a scale in excess of the scale of the currency then the excess fractional digits are rounded using the rounding mode.\n * @param currency  the currency, not null\n * @param amount  the amount of money, not null\n * @param roundingMode  the rounding mode to use, not null\n * @return the new instance, never null\n * @throws ArithmeticException if the rounding fails\n */\n","tf":{"freq":{"scale":2,"except":1,"fraction":1,"allow":1,"creat":1,"arithmet":1,"excess":2,"currenc":4,"use":2,"round":6,"decim":1,"necessari":1,"mode":3,"instanc":3,"digit":1,"amount":4,"never":1,"obtain":1,"specif":1,"fail":1,"money":2,"big":1},"maxFreq":6,"totalTerms":41},"loc":7}