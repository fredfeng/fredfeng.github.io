{"id":11629,"className":"org.joda.time.MonthDay","methodName":"plusDays","signature":"\u003corg.joda.time.MonthDay: org.joda.time.MonthDay plusDays(int)\u003e","javadoc":"/** \n * Returns a copy of this month-day plus the specified number of days. \u003cp\u003e This month-day instance is immutable and unaffected by this method call. The month will wrap at the end of the year from December to January. \u003cp\u003e If the number of days added requires wrapping past the end of February, the wrapping will be calculated assuming February has 29 days.  \u003cp\u003e The following three lines are identical in effect: \u003cpre\u003e MonthDay added \u003d md.plusDays(6); MonthDay added \u003d md.plus(Period.days(6)); MonthDay added \u003d md.withFieldAdded(DurationFieldType.days(), 6); \u003c/pre\u003e\n * @param days  the amount of days to add, may be negative\n * @return the new month-day plus the increased days, never null\n */\n","tf":{"freq":{"increas":1,"call":1,"februari":2,"line":1,"add":1,"type":1,"copi":1,"specifi":1,"amount":1,"durat":1,"requir":1,"ident":1,"three":1,"year":1,"decemb":1,"end":2,"follow":1,"plus":5,"wrap":3,"may":1,"assum":1,"januari":1,"calcul":1,"unaffect":1,"immut":1,"number":2,"period":1,"past":1,"instanc":1,"field":2,"never":1,"effect":1,"pre":2,"will":2,"month":7,"ad":5,"negat":1,"method":1,"day":16},"maxFreq":16,"totalTerms":76},"loc":3}