{"id":12863,"className":"org.joda.time.DateTimeUtils","methodName":"isContiguous","signature":"\u003corg.joda.time.DateTimeUtils: boolean isContiguous(org.joda.time.ReadablePartial)\u003e","javadoc":"/** \n * Checks whether the partial is contiguous. \u003cp\u003e A partial is contiguous if one field starts where another ends. \u003cp\u003e For example \u003ccode\u003eLocalDate\u003c/code\u003e is contiguous because DayOfMonth has the same range (Month) as the unit of the next field (MonthOfYear), and MonthOfYear has the same range (Year) as the unit of the next field (Year). \u003cp\u003e Similarly, \u003ccode\u003eLocalTime\u003c/code\u003e is contiguous, as it consists of MillisOfSecond, SecondOfMinute, MinuteOfHour and HourOfDay (note how the names of each field \u0027join up\u0027). \u003cp\u003e However, a Year/HourOfDay partial is not contiguous because the range field Day is not equal to the next field Year. Similarly, a DayOfWeek/DayOfMonth partial is not contiguous because the range Month is not equal to the next field Day.\n * @param partial  the partial to check\n * @return true if the partial is contiguous\n * @throws IllegalArgumentException if the partial is null\n * @since 1.1\n */\n","tf":{"freq":{"second":2,"one":1,"next":4,"milli":1,"anoth":1,"date":1,"whether":1,"time":1,"rang":4,"name":1,"year":6,"howev":1,"note":1,"end":1,"similar":2,"argument":1,"except":1,"minut":2,"check":2,"consist":1,"true":1,"equal":2,"join":1,"hour":3,"contigu":8,"partial":8,"illeg":1,"field":7,"unit":2,"start":1,"exampl":1,"month":6,"local":2,"day":7,"week":1},"maxFreq":8,"totalTerms":86},"loc":16}