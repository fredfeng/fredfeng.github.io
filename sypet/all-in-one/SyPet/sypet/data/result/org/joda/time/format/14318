{"id":14318,"className":"org.joda.time.format.DateTimeFormatter","methodName":"parseInto","signature":"\u003corg.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)\u003e","javadoc":"/** \n * Parses a datetime from the given text, at the given position, saving the result into the fields of the given ReadWritableInstant. If the parse succeeds, the return value is the new text position. Note that the parse may succeed without fully reading the text and in this case those fields that were read will be set. \u003cp\u003e Only those fields present in the string will be changed in the specified instant. All other fields will remain unaltered. Thus if the string only contains a year and a month, then the day and time will be retained from the input instant. If this is not the behaviour you want, then reset the fields before calling this method, or use  {@link #parseDateTime(String)}or  {@link #parseMutableDateTime(String)}. \u003cp\u003e If it fails, the return value is negative, but the instant may still be modified. To determine the position where the parse failed, apply the one\u0027s complement operator (~) on the return value. \u003cp\u003e This parse method ignores the  {@link #getDefaultYear() default year} andparses using the year from the supplied instant based on the chronology and time-zone of the supplied instant. \u003cp\u003e The parse will use the chronology of the instant.\n * @param instant  an instant that will be modified, not null\n * @param text  the text to parse\n * @param position  position to start parsing from\n * @return new position, negative value means parse failed -apply complement operator (~) to get position of failure\n * @throws UnsupportedOperationException if parsing is not supported\n * @throws IllegalArgumentException if the instant is null\n * @throws IllegalArgumentException if any field is out of range\n */\n","tf":{"freq":{"unsupport":1,"andpars":1,"save":1,"mutabl":1,"specifi":1,"time":4,"given":3,"fail":3,"oper":3,"rang":1,"chronolog":2,"reset":1,"year":4,"instant":10,"datetim":1,"argument":2,"except":3,"ignor":1,"text":5,"support":1,"succeed":2,"writabl":1,"without":1,"present":1,"input":1,"appli":2,"start":1,"contain":1,"determin":1,"will":6,"month":1,"retain":1,"negat":2,"day":1,"posit":7,"result":1,"call":1,"behaviour":1,"link":3,"one":1,"use":3,"date":2,"complement":2,"unalt":1,"mean":1,"read":3,"valu":4,"note":1,"want":1,"may":2,"failur":1,"thus":1,"suppli":2,"fulli":1,"still":1,"illeg":2,"field":6,"remain":1,"string":4,"base":1,"modifi":2,"method":2,"chang":1,"pars":13,"zone":1},"maxFreq":13,"totalTerms":144},"loc":29}