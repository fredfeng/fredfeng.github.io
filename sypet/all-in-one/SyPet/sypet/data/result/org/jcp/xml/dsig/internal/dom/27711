{"id":27711,"className":"org.jcp.xml.dsig.internal.dom.DOMSignedInfo","methodName":"DOMSignedInfo","signature":"\u003corg.jcp.xml.dsig.internal.dom.DOMSignedInfo: void DOMSignedInfo(javax.xml.crypto.dsig.CanonicalizationMethod,javax.xml.crypto.dsig.SignatureMethod,java.util.List,java.lang.String)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eDOMSignedInfo\u003c/code\u003e from the specified parameters.\n * @param cm the canonicalization method\n * @param sm the signature method\n * @param references the list of references. The list is copied.\n * @param id an optional identifer that will allow this\u003ccode\u003eSignedInfo\u003c/code\u003e to be referenced by other signatures and objects\n * @throws NullPointerException if \u003ccode\u003ecm\u003c/code\u003e, \u003ccode\u003esm\u003c/code\u003e,or \u003ccode\u003ereferences\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if \u003ccode\u003ereferences\u003c/code\u003e is empty\n * @throws ClassCastException if any of the references are not oftype \u003ccode\u003eReference\u003c/code\u003e\n */\n","tf":{"freq":{"argument":1,"oftyp":1,"except":3,"allow":1,"msign":1,"creat":1,"canonic":1,"identif":1,"paramet":1,"list":2,"object":1,"illeg":1,"signatur":2,"copi":1,"empti":1,"info":3,"specifi":1,"referenc":1,"sign":2,"cast":1,"refer":6,"will":1,"pointer":1,"method":2,"option":1},"maxFreq":6,"totalTerms":38},"loc":4}