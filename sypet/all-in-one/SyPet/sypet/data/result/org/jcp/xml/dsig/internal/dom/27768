{"id":27768,"className":"org.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod","methodName":"canonicalize","signature":"\u003corg.jcp.xml.dsig.internal.dom.DOMCanonicalizationMethod: javax.xml.crypto.Data canonicalize(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)\u003e","javadoc":"/** \n * Canonicalizes the specified data using the underlying canonicalization algorithm. This is a convenience method that is equivalent to invoking the  {@link #transform transform} method.\n * @param data the data to be canonicalized\n * @param xc the \u003ccode\u003eXMLCryptoContext\u003c/code\u003e containingadditional context (may be \u003ccode\u003enull\u003c/code\u003e if not applicable)\n * @return the canonicalized data\n * @throws NullPointerException if \u003ccode\u003edata\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws TransformException if an unexpected error occurs whilecanonicalizing the data\n */\n","tf":{"freq":{"except":2,"may":1,"unexpect":1,"error":1,"canonic":5,"invok":1,"lcrypto":1,"link":1,"data":6,"whilecanonic":1,"use":1,"applic":1,"specifi":1,"algorithm":1,"transform":3,"equival":1,"context":2,"pointer":1,"method":2,"containingaddit":1,"conveni":1,"occur":1},"maxFreq":6,"totalTerms":36},"loc":3}