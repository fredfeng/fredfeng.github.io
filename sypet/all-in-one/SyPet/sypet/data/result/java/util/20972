{"id":20972,"className":"java.util.TreeMap","methodName":"TreeMap","signature":"\u003cjava.util.TreeMap: void TreeMap(java.util.Map)\u003e","javadoc":"/** \n * Constructs a new tree map containing the same mappings as the given map, ordered according to the \u003cem\u003enatural ordering\u003c/em\u003e of its keys. All keys inserted into the new map must implement the  {@link Comparable} interface.  Furthermore, all such keys must be\u003cem\u003emutually comparable\u003c/em\u003e:  {@code k1.compareTo(k2)} must not throwa  {@code ClassCastException} for any keys {@code k1} and{@code k2} in the map.  This method runs in n*log(n) time.\n * @param m the map whose mappings are to be placed in this map\n * @throws ClassCastException if the keys in m are not {@link Comparable}, or are not mutually comparable\n * @throws NullPointerException if the specified map is null\n */\n","tf":{"freq":{"except":3,"furthermor":1,"whose":1,"link":2,"natur":1,"accord":1,"run":1,"log":1,"must":3,"specifi":1,"time":1,"mutual":2,"cast":2,"tree":2,"given":1,"order":2,"throwa":1,"contain":1,"map":10,"pointer":1,"method":1,"construct":1,"place":1,"insert":1,"compar":5,"key":5},"maxFreq":10,"totalTerms":52},"loc":4}