{"id":21515,"className":"java.util.SimpleTimeZone","methodName":"getOffset","signature":"\u003cjava.util.SimpleTimeZone: int getOffset(int,int,int,int,int,int)\u003e","javadoc":"/** \n * Returns the difference in milliseconds between local time and UTC, taking into account both the raw offset and the effect of daylight saving, for the specified date and time.  This method assumes that the start and end month are distinct.  It also uses a default  {@link GregorianCalendar} object as itsunderlying calendar, such as for determining leap years.  Do not use the result of this method with a calendar other than a default \u003ccode\u003eGregorianCalendar\u003c/code\u003e. \u003cp\u003e\u003cem\u003eNote:  In general, clients should use \u003ccode\u003eCalendar.get(ZONE_OFFSET) + Calendar.get(DST_OFFSET)\u003c/code\u003e instead of calling this method.\u003c/em\u003e\n * @param era       The era of the given date.\n * @param year      The year in the given date.\n * @param month     The month in the given date. Month is 0-based. e.g.,0 for January.\n * @param day       The day-in-month of the given date.\n * @param dayOfWeek The day-of-week of the given date.\n * @param millis    The milliseconds in day in \u003cem\u003estandard\u003c/em\u003e local time.\n * @return          The milliseconds to add to UTC to get local time.\n * @exception IllegalArgumentException the \u003ccode\u003eera\u003c/code\u003e,\u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003edayOfWeek\u003c/code\u003e, or \u003ccode\u003emillis\u003c/code\u003e parameters are out of range\n */\n","tf":{"freq":{"save":1,"client":1,"milli":2,"distinct":1,"specifi":1,"time":4,"given":5,"rang":1,"year":3,"argument":1,"except":2,"januari":1,"start":1,"determin":1,"month":6,"day":7,"leap":1,"raw":1,"result":1,"call":1,"link":1,"use":3,"era":3,"object":1,"date":6,"add":1,"millisecond":3,"offset":2,"end":1,"note":1,"calendar":6,"assum":1,"standard":1,"paramet":1,"illeg":1,"general":1,"differ":1,"effect":1,"take":1,"itsund":1,"instead":1,"base":1,"account":1,"method":3,"local":3,"gregorian":2,"also":1,"daylight":1,"week":3},"maxFreq":7,"totalTerms":95},"loc":65}