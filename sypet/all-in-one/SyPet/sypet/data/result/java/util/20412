{"id":20412,"className":"java.util.TimeZone","methodName":"getDSTSavings","signature":"\u003cjava.util.TimeZone: int getDSTSavings()\u003e","javadoc":"/** \n * Returns the amount of time to be added to local standard time to get local wall clock time. \u003cp\u003eThe default implementation returns 3600000 milliseconds (i.e., one hour) if a call to  {@link #useDaylightTime()}returns  {@code true}. Otherwise, 0 (zero) is returned. \u003cp\u003eIf an underlying  {@code TimeZone} implementation subclasssupports historical and future Daylight Saving Time schedule changes, this method returns the amount of saving time of the last known Daylight Saving Time rule that can be a future prediction. \u003cp\u003eIf the amount of saving time at any given time stamp is required, construct a  {@link Calendar} with this {@code TimeZone} and the time stamp, and call {@link Calendar#get(int) Calendar.get}{@code (}{@link Calendar#DST_OFFSET}{@code )}.\n * @return the amount of saving time in milliseconds\n * @since 1.4\n * @see #inDaylightTime(Date)\n * @see #getOffset(long)\n * @see #getOffset(int,int,int,int,int,int)\n * @see Calendar#ZONE_OFFSET\n */\n","tf":{"freq":{"otherwis":1,"call":2,"histor":1,"last":1,"save":5,"one":1,"link":4,"use":1,"schedul":1,"date":1,"zero":1,"amount":4,"time":14,"requir":1,"given":1,"millisecond":2,"rule":1,"offset":2,"calendar":5,"stamp":2,"tsave":1,"futur":2,"standard":1,"clock":1,"true":1,"hour":1,"predict":1,"ad":1,"subclasssupport":1,"method":1,"construct":1,"known":1,"chang":1,"local":2,"wall":1,"daylight":4,"zone":2},"maxFreq":14,"totalTerms":74},"loc":6}