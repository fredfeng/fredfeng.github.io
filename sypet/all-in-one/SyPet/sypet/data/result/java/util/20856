{"id":20856,"className":"java.util.Date","methodName":"Date","signature":"\u003cjava.util.Date: void Date(int,int,int,int,int,int)\u003e","javadoc":"/** \n * Allocates a \u003ccode\u003eDate\u003c/code\u003e object and initializes it so that it represents the instant at the start of the second specified by the \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003ehrs\u003c/code\u003e, \u003ccode\u003emin\u003c/code\u003e, and \u003ccode\u003esec\u003c/code\u003e arguments, in the local time zone.\n * @param year    the year minus 1900.\n * @param month   the month between 0-11.\n * @param date    the day of the month between 1-31.\n * @param hrs     the hours between 0-23.\n * @param min     the minutes between 0-59.\n * @param sec     the seconds between 0-59.\n * @see java.util.Calendar\n * @deprecated As of JDK version 1.1,replaced by \u003ccode\u003eCalendar.set(year + 1900, month, date, hrs, min, sec)\u003c/code\u003e or \u003ccode\u003eGregorianCalendar(year + 1900, month, date, hrs, min, sec)\u003c/code\u003e.\n */\n","tf":{"freq":{"deprec":1,"second":2,"object":1,"date":6,"version":1,"specifi":1,"hrs":4,"time":1,"year":5,"initi":1,"instant":1,"calendar":3,"min":4,"argument":1,"minut":1,"minus":1,"repres":1,"hour":1,"start":1,"sec":4,"replac":1,"month":6,"java":1,"local":1,"day":1,"gregorian":1,"zone":1,"util":1,"alloc":1},"maxFreq":6,"totalTerms":55},"loc":16}