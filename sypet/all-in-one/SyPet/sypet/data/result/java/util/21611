{"id":21611,"className":"java.util.Deque","methodName":"contains","signature":"\u003cjava.util.Deque: boolean contains(java.lang.Object)\u003e","javadoc":"/** \n * Returns \u003ctt\u003etrue\u003c/tt\u003e if this deque contains the specified element. More formally, returns \u003ctt\u003etrue\u003c/tt\u003e if and only if this deque contains at least one element \u003ctt\u003ee\u003c/tt\u003e such that \u003ctt\u003e(o\u003d\u003dnull\u0026nbsp;?\u0026nbsp;e\u003d\u003dnull\u0026nbsp;:\u0026nbsp;o.equals(e))\u003c/tt\u003e.\n * @param o element whose presence in this deque is to be tested\n * @return \u003ctt\u003etrue\u003c/tt\u003e if this deque contains the specified element\n * @throws ClassCastException if the type of the specified elementis incompatible with this deque (\u003ca href\u003d\"Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws NullPointerException if the specified element is null and thisdeque does not permit null elements (\u003ca href\u003d\"Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n */\n","tf":{"freq":{"test":1,"least":1,"elementi":1,"permit":1,"one":1,"type":1,"thisdequ":1,"specifi":4,"href":2,"option":4,"nbsp":4,"presenc":1,"element":6,"except":2,"whose":1,"true":3,"equal":1,"incompat":1,"restrict":2,"formal":1,"cast":1,"contain":4,"dequ":5,"pointer":1,"html":2,"collect":2},"maxFreq":6,"totalTerms":54},"loc":0}