{"id":20828,"className":"java.util.AbstractMap","methodName":"equals","signature":"\u003cjava.util.AbstractMap: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares the specified object with this map for equality.  Returns \u003ctt\u003etrue\u003c/tt\u003e if the given object is also a map and the two maps represent the same mappings.  More formally, two maps \u003ctt\u003em1\u003c/tt\u003e and \u003ctt\u003em2\u003c/tt\u003e represent the same mappings if \u003ctt\u003em1.entrySet().equals(m2.entrySet())\u003c/tt\u003e.  This ensures that the \u003ctt\u003eequals\u003c/tt\u003e method works properly across different implementations of the \u003ctt\u003eMap\u003c/tt\u003e interface. \u003cp\u003eThis implementation first checks if the specified object is this map; if so it returns \u003ctt\u003etrue\u003c/tt\u003e.  Then, it checks if the specified object is a map whose size is identical to the size of this map; if not, it returns \u003ctt\u003efalse\u003c/tt\u003e.  If so, it iterates over this map\u0027s \u003ctt\u003eentrySet\u003c/tt\u003e collection, and checks that the specified map contains each mapping that this map contains.  If the specified map fails to contain such a mapping, \u003ctt\u003efalse\u003c/tt\u003e is returned.  If the iteration completes, \u003ctt\u003etrue\u003c/tt\u003e is returned.\n * @param o object to be compared for equality with this map\n * @return \u003ctt\u003etrue\u003c/tt\u003e if the specified object is equal to this map\n */\n","tf":{"freq":{"fals":2,"object":6,"across":1,"specifi":6,"ensur":1,"fail":1,"given":1,"ident":1,"map":18,"proper":1,"complet":1,"work":1,"check":3,"repres":2,"whose":1,"entri":3,"true":4,"equal":6,"size":2,"two":2,"differ":1,"formal":1,"contain":3,"method":1,"iter":2,"also":1,"compar":2,"first":1,"collect":1},"maxFreq":18,"totalTerms":76},"loc":32}