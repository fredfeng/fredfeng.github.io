{"id":20829,"className":"java.util.AbstractMap","methodName":"hashCode","signature":"\u003cjava.util.AbstractMap: int hashCode()\u003e","javadoc":"/** \n * Returns the hash code value for this map.  The hash code of a map is defined to be the sum of the hash codes of each entry in the map\u0027s \u003ctt\u003eentrySet()\u003c/tt\u003e view.  This ensures that \u003ctt\u003em1.equals(m2)\u003c/tt\u003e implies that \u003ctt\u003em1.hashCode()\u003d\u003dm2.hashCode()\u003c/tt\u003e for any two maps \u003ctt\u003em1\u003c/tt\u003e and \u003ctt\u003em2\u003c/tt\u003e, as required by the general contract of {@link Object#hashCode}. \u003cp\u003eThis implementation iterates over \u003ctt\u003eentrySet()\u003c/tt\u003e, calling {@link Map.Entry#hashCode hashCode()} on each element (entry) in theset, and adding up the results.\n * @return the hash code value for this map\n * @see Map.Entry#hashCode()\n * @see Object#equals(Object)\n * @see Set#equals(Object)\n */\n","tf":{"freq":{"result":1,"element":1,"call":1,"defin":1,"contract":1,"hash":11,"entri":6,"link":2,"sum":1,"equal":3,"object":4,"general":1,"ensur":1,"two":1,"requir":1,"map":7,"impli":1,"ad":1,"theset":1,"valu":2,"view":1,"iter":1},"maxFreq":11,"totalTerms":50},"loc":7}