{"id":22233,"className":"java.util.Locale","methodName":"getExtension","signature":"\u003cjava.util.Locale: java.lang.String getExtension(char)\u003e","javadoc":"/** \n * Returns the extension (or private use) value associated with the specified key, or null if there is no extension associated with the key. To be well-formed, the key must be one of \u003ccode\u003e[0-9A-Za-z]\u003c/code\u003e. Keys are case-insensitive, so for example \u0027z\u0027 and \u0027Z\u0027 represent the same extension.\n * @param key the extension key\n * @return The extension, or null if this locale defines noextension for the specified key.\n * @throws IllegalArgumentException if key is not well-formed\n * @see #PRIVATE_USE_EXTENSION\n * @see #UNICODE_LOCALE_EXTENSION\n * @since 1.7\n */\n","tf":{"freq":{"argument":1,"defin":1,"except":1,"form":2,"repres":1,"one":1,"use":1,"well":2,"illeg":1,"must":1,"specifi":2,"insensit":1,"associ":2,"extens":6,"exampl":1,"valu":1,"local":1,"noextens":1,"key":8},"maxFreq":8,"totalTerms":35},"loc":6}