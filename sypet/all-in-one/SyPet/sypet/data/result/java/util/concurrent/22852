{"id":22852,"className":"java.util.concurrent.Executors","methodName":"defaultThreadFactory","signature":"\u003cjava.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()\u003e","javadoc":"/** \n * Returns a default thread factory used to create new threads. This factory creates all new threads used by an Executor in the same  {@link ThreadGroup}. If there is a  {@link java.lang.SecurityManager}, it uses the group of  {@link System#getSecurityManager}, else the group of the thread invoking this \u003ctt\u003edefaultThreadFactory\u003c/tt\u003e method. Each new thread is created as a non-daemon thread with priority set to the smaller of \u003ctt\u003eThread.NORM_PRIORITY\u003c/tt\u003e and the maximum priority permitted in the thread group.  New threads have names accessible via  {@link Thread#getName} of\u003cem\u003epool-N-thread-M\u003c/em\u003e, where \u003cem\u003eN\u003c/em\u003e is the sequence number of this factory, and \u003cem\u003eM\u003c/em\u003e is the sequence number of the thread created by this factory.\n * @return a thread factory\n */\n","tf":{"freq":{"via":1,"link":4,"permit":1,"use":3,"lang":1,"smaller":1,"pool":1,"sequenc":2,"factori":7,"thread":16,"name":2,"creat":4,"prioriti":2,"manag":2,"invok":1,"executor":1,"number":2,"access":1,"els":1,"non":1,"system":1,"secur":2,"maximum":1,"java":1,"method":1,"daemon":1,"group":4},"maxFreq":16,"totalTerms":65},"loc":3}