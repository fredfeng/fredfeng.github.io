{"id":22603,"className":"java.util.concurrent.Future","methodName":"get","signature":"\u003cjava.util.concurrent.Future: V get(long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Waits if necessary for at most the given time for the computation to complete, and then retrieves its result, if available.\n * @param timeout the maximum time to wait\n * @param unit the time unit of the timeout argument\n * @return the computed result\n * @throws CancellationException if the computation was cancelled\n * @throws ExecutionException if the computation threw anexception\n * @throws InterruptedException if the current thread was interruptedwhile waiting\n * @throws TimeoutException if the wait timed out\n */\n","tf":{"freq":{"argument":1,"result":2,"except":4,"cancel":2,"avail":1,"wait":4,"necessari":1,"interrupt":1,"interruptedwhil":1,"unit":2,"time":4,"threw":1,"given":1,"anexcept":1,"retriev":1,"maximum":1,"thread":1,"current":1,"comput":4,"execut":1,"timeout":3,"complet":1},"maxFreq":4,"totalTerms":39},"loc":0}