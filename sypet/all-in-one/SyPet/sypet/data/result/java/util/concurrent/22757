{"id":22757,"className":"java.util.concurrent.CyclicBarrier","methodName":"CyclicBarrier","signature":"\u003cjava.util.concurrent.CyclicBarrier: void CyclicBarrier(int,java.lang.Runnable)\u003e","javadoc":"/** \n * Creates a new \u003ctt\u003eCyclicBarrier\u003c/tt\u003e that will trip when the given number of parties (threads) are waiting upon it, and which will execute the given barrier action when the barrier is tripped, performed by the last thread entering the barrier.\n * @param parties the number of threads that must invoke {@link #await}before the barrier is tripped\n * @param barrierAction the command to execute when the barrier istripped, or  {@code null} if there is no action\n * @throws IllegalArgumentException if {@code parties} is less than 1\n */\n","tf":{"freq":{"argument":1,"except":1,"last":1,"creat":1,"invok":1,"link":1,"enter":1,"perform":1,"number":2,"wait":1,"illeg":1,"must":1,"barrier":8,"await":1,"given":2,"thread":3,"command":1,"action":3,"will":2,"istrip":1,"cyclic":2,"trip":3,"execut":2,"less":1,"parti":3,"upon":1},"maxFreq":8,"totalTerms":46},"loc":6}