{"id":20695,"className":"java.util.Set","methodName":"remove","signature":"\u003cjava.util.Set: boolean remove(java.lang.Object)\u003e","javadoc":"/** \n * Removes the specified element from this set if it is present (optional operation).  More formally, removes an element \u003ctt\u003ee\u003c/tt\u003e such that \u003ctt\u003e(o\u003d\u003dnull\u0026nbsp;?\u0026nbsp;e\u003d\u003dnull\u0026nbsp;:\u0026nbsp;o.equals(e))\u003c/tt\u003e, if this set contains such an element.  Returns \u003ctt\u003etrue\u003c/tt\u003e if this set contained the element (or equivalently, if this set changed as a result of the call).  (This set will not contain the element once the call returns.)\n * @param o object to be removed from this set, if present\n * @return \u003ctt\u003etrue\u003c/tt\u003e if this set contained the specified element\n * @throws ClassCastException if the type of the specified elementis incompatible with this set (\u003ca href\u003d\"Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws NullPointerException if the specified element is null and thisset does not permit null elements (\u003ca href\u003d\"Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws UnsupportedOperationException if the \u003ctt\u003eremove\u003c/tt\u003e operationis not supported by this set\n */\n","tf":{"freq":{"result":1,"call":2,"unsupport":1,"elementi":1,"permit":1,"object":1,"type":1,"specifi":4,"equival":1,"oper":2,"href":2,"option":5,"nbsp":4,"element":8,"except":3,"support":1,"remov":5,"thisset":1,"true":2,"equal":1,"incompat":1,"restrict":2,"present":2,"formal":1,"cast":1,"operationi":1,"contain":4,"will":1,"pointer":1,"html":2,"chang":1,"collect":2},"maxFreq":8,"totalTerms":66},"loc":0}