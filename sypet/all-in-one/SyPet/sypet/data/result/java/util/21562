{"id":21562,"className":"java.util.Calendar","methodName":"roll","signature":"\u003cjava.util.Calendar: void roll(int,boolean)\u003e","javadoc":"/** \n * Adds or subtracts (up/down) a single unit of time on the given time field without changing larger fields. For example, to roll the current date up by one day, you can achieve it by calling: \u003cp\u003eroll(Calendar.DATE, true). When rolling on the year or Calendar.YEAR field, it will roll the year value in the range between 1 and the value returned by calling \u003ccode\u003egetMaximum(Calendar.YEAR)\u003c/code\u003e. When rolling on the month or Calendar.MONTH field, other fields like date might conflict and, need to be changed. For instance, rolling the month on the date 01/31/96 will result in 02/29/96. When rolling on the hour-in-day or Calendar.HOUR_OF_DAY field, it will roll the hour value in the range between 0 and 23, which is zero-based.\n * @param field the time field.\n * @param up indicates if the value of the specified time field is to berolled up or rolled down. Use true if rolling up, false otherwise.\n * @see Calendar#add(int,int)\n * @see Calendar#set(int,int)\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"need":1,"result":1,"might":1,"call":2,"singl":1,"one":1,"use":1,"zero":1,"add":2,"date":3,"specifi":1,"time":4,"roll":11,"indic":1,"given":1,"rang":2,"current":1,"year":2,"valu":4,"calendar":7,"larger":1,"true":2,"hour":2,"like":1,"without":1,"instanc":1,"achiev":1,"field":9,"unit":1,"subtract":1,"berol":1,"maximum":1,"base":1,"month":2,"exampl":1,"will":3,"conflict":1,"chang":2,"day":2},"maxFreq":11,"totalTerms":84},"loc":0}