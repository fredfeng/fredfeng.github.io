{"id":20305,"className":"java.util.Arrays","methodName":"deepHashCode","signature":"\u003cjava.util.Arrays: int deepHashCode(java.lang.Object[])\u003e","javadoc":"/** \n * Returns a hash code based on the \"deep contents\" of the specified array.  If the array contains other arrays as elements, the hash code is based on their contents and so on, ad infinitum. It is therefore unacceptable to invoke this method on an array that contains itself as an element, either directly or indirectly through one or more levels of arrays.  The behavior of such an invocation is undefined. \u003cp\u003eFor any two arrays \u003ctt\u003ea\u003c/tt\u003e and \u003ctt\u003eb\u003c/tt\u003e such that \u003ctt\u003eArrays.deepEquals(a, b)\u003c/tt\u003e, it is also the case that \u003ctt\u003eArrays.deepHashCode(a) \u003d\u003d Arrays.deepHashCode(b)\u003c/tt\u003e. \u003cp\u003eThe computation of the value returned by this method is similar to that of the value returned by  {@link List#hashCode()} on a listcontaining the same elements as \u003ctt\u003ea\u003c/tt\u003e in the same order, with one difference: If an element \u003ctt\u003ee\u003c/tt\u003e of \u003ctt\u003ea\u003c/tt\u003e is itself an array, its hash code is computed not by calling \u003ctt\u003ee.hashCode()\u003c/tt\u003e, but as by calling the appropriate overloading of \u003ctt\u003eArrays.hashCode(e)\u003c/tt\u003e if \u003ctt\u003ee\u003c/tt\u003e is an array of a primitive type, or as by calling \u003ctt\u003eArrays.deepHashCode(e)\u003c/tt\u003e recursively if \u003ctt\u003ee\u003c/tt\u003e is an array of a reference type.  If \u003ctt\u003ea\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e, this method returns 0.\n * @param a the array whose deep-content-based hash code to compute\n * @return a deep-content-based hash code for \u003ctt\u003ea\u003c/tt\u003e\n * @see #hashCode(Object[])\n * @since 1.5\n */\n","tf":{"freq":{"primit":1,"call":3,"behavior":1,"link":1,"one":2,"object":1,"therefor":1,"type":2,"specifi":1,"indirect":1,"level":1,"order":1,"refer":1,"valu":2,"undefin":1,"deep":8,"similar":1,"direct":1,"element":4,"whose":1,"hash":13,"invok":1,"unaccept":1,"overload":1,"list":1,"equal":1,"invoc":1,"listcontain":1,"content":4,"differ":1,"two":1,"either":1,"appropri":1,"contain":2,"base":4,"comput":3,"method":3,"also":1,"recurs":1,"infinitum":1,"array":15},"maxFreq":15,"totalTerms":93},"loc":34}