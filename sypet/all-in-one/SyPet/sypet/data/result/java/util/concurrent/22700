{"id":22700,"className":"java.util.concurrent.ThreadPoolExecutor","methodName":"shutdownNow","signature":"\u003cjava.util.concurrent.ThreadPoolExecutor: java.util.List\u003cjava.lang.Runnable\u003e shutdownNow()\u003e","javadoc":"/** \n * Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution. These tasks are drained (removed) from the task queue upon return from this method. \u003cp\u003eThis method does not wait for actively executing tasks to terminate.  Use  {@link #awaitTermination awaitTermination} todo that. \u003cp\u003eThere are no guarantees beyond best-effort attempts to stop processing actively executing tasks.  This implementation cancels tasks via  {@link Thread#interrupt}, so any task that fails to respond to interrupts may never terminate.\n * @throws SecurityException {@inheritDoc}\n */\n","tf":{"freq":{"attempt":2,"stop":2,"queue":1,"via":1,"link":2,"todo":1,"use":1,"cancel":1,"wait":2,"activ":3,"beyond":1,"fail":1,"respond":1,"thread":1,"best":1,"shutdown":1,"except":1,"may":1,"task":9,"guarante":1,"remov":1,"effort":1,"list":1,"drain":1,"interrupt":2,"process":2,"never":1,"termin":4,"secur":1,"await":3,"now":1,"method":2,"halt":1,"execut":4,"upon":1},"maxFreq":9,"totalTerms":60},"loc":15}