{"id":24102,"className":"java.util.logging.Logger","methodName":"logrb","signature":"\u003cjava.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)\u003e","javadoc":"/** \n * Log a message, specifying source class, method, and resource bundle name, with associated Throwable information. \u003cp\u003e If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers. \u003cp\u003e The msg string is localized using the named resource bundle.  If the resource bundle name is null, or an empty String or invalid then the msg string is not localized. \u003cp\u003e Note that the thrown argument is stored in the LogRecord thrown property, rather than the LogRecord parameters property.  Thus is it processed specially by output Formatters and is not treated as a formatting parameter to the LogRecord message property. \u003cp\u003e\n * @param level   One of the message level identifiers, e.g., SEVERE\n * @param sourceClass    name of class that issued the logging request\n * @param sourceMethod   name of method that issued the logging request\n * @param bundleName     name of resource bundle to localize msg,can be null\n * @param msg     The string message (or a key in the message catalog)\n * @param thrown  Throwable associated with log message.\n */\n","tf":{"freq":{"store":2,"one":1,"use":1,"logrb":1,"identifi":1,"issu":2,"formatt":1,"specifi":1,"resourc":4,"level":3,"invalid":1,"given":2,"associ":2,"forward":1,"request":2,"name":7,"logger":1,"current":1,"rather":1,"regist":1,"key":1,"note":1,"argument":2,"thrown":3,"thus":1,"catalog":1,"messag":7,"enabl":1,"paramet":2,"format":1,"msg":4,"log":8,"empti":1,"process":1,"inform":1,"record":4,"string":4,"special":1,"method":3,"sourc":3,"properti":3,"local":3,"throwabl":2,"output":2,"bundl":5,"treat":1,"handler":1},"maxFreq":8,"totalTerms":103},"loc":10}