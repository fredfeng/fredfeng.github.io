{"id":23082,"className":"java.util.concurrent.Semaphore","methodName":"Semaphore","signature":"\u003cjava.util.concurrent.Semaphore: void Semaphore(int)\u003e","javadoc":"/** \n * Creates a  {@code Semaphore} with the given number ofpermits and nonfair fairness setting.\n * @param permits the initial number of permits available.This value may be negative, in which case releases must occur before any acquires will be granted.\n */\n","tf":{"freq":{"acquir":1,"may":1,"semaphor":2,"grant":1,"creat":1,"permit":2,"number":2,"nonfair":1,"avail":1,"ofpermit":1,"fair":1,"must":1,"releas":1,"given":1,"will":1,"negat":1,"valu":1,"initi":1,"occur":1},"maxFreq":2,"totalTerms":22},"loc":3}