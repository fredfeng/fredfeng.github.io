{"id":23413,"className":"java.util.concurrent.locks.AbstractQueuedSynchronizer","methodName":"getWaitingThreads","signature":"\u003cjava.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection\u003cjava.lang.Thread\u003e getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\u003e","javadoc":"/** \n * Returns a collection containing those threads that may be waiting on the given condition associated with this synchronizer.  Because the actual set of threads may change dynamically while constructing this result, the returned collection is only a best-effort estimate. The elements of the returned collection are in no particular order.\n * @param condition the condition\n * @return the collection of threads\n * @throws IllegalMonitorStateException if exclusive synchronizationis not held\n * @throws IllegalArgumentException if the given condition isnot associated with this synchronizer\n * @throws NullPointerException if the condition is null\n */\n","tf":{"freq":{"result":1,"synchronizationi":1,"state":1,"particular":1,"wait":2,"estim":1,"isnot":1,"given":2,"order":1,"associ":2,"thread":4,"best":1,"exclus":1,"dynam":1,"argument":1,"condit":5,"held":1,"element":1,"may":2,"except":3,"monitor":1,"effort":1,"illeg":2,"contain":1,"pointer":1,"actual":1,"construct":1,"chang":1,"collect":4},"maxFreq":5,"totalTerms":46},"loc":5}