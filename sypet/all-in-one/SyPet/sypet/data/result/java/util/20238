{"id":20238,"className":"java.util.Arrays","methodName":"binarySearch","signature":"\u003cjava.util.Arrays: int binarySearch(java.lang.Object[],int,int,java.lang.Object)\u003e","javadoc":"/** \n * Searches a range of the specified array for the specified object using the binary search algorithm. The range must be sorted into ascending order according to the {@linkplain Comparable natural ordering}of its elements (as by the {@link #sort(Object[],int,int)} method) prior to making thiscall.  If it is not sorted, the results are undefined. (If the range contains elements that are not mutually comparable (for example, strings and integers), it \u003ci\u003ecannot\u003c/i\u003e be sorted according to the natural ordering of its elements, hence results are undefined.) If the range contains multiple elements equal to the specified object, there is no guarantee which one will be found.\n * @param a the array to be searched\n * @param fromIndex the index of the first element (inclusive) to besearched\n * @param toIndex the index of the last element (exclusive) to be searched\n * @param key the value to be searched for\n * @return index of the search key, if it is contained in the arraywithin the specified range; otherwise, \u003ctt\u003e(-(\u003ci\u003einsertion point\u003c/i\u003e) - 1)\u003c/tt\u003e.  The \u003ci\u003einsertion point\u003c/i\u003e is defined as the point at which the key would be inserted into the array: the index of the first element in the range greater than the key, or \u003ctt\u003etoIndex\u003c/tt\u003e if all elements in the range are less than the specified key.  Note that this guarantees that the return value will be \u0026gt;\u003d 0 if and only if the key is found.\n * @throws ClassCastException if the search key is not comparable to theelements of the array within the specified range.\n * @throws IllegalArgumentException if  {@code fromIndex \u003e toIndex}\n * @throws ArrayIndexOutOfBoundsException if  {@code fromIndex \u003c 0 or toIndex \u003e a.length}\n * @since 1.6\n */\n","tf":{"freq":{"greater":1,"last":1,"natur":2,"arraywithin":1,"must":1,"prior":1,"specifi":6,"search":8,"rang":8,"undefin":2,"key":7,"argument":1,"element":8,"except":3,"henc":1,"index":12,"multipl":1,"cast":1,"contain":3,"will":2,"theelement":1,"ascend":1,"make":1,"compar":3,"array":5,"otherwis":1,"defin":1,"result":2,"linkplain":1,"binari":2,"sort":4,"link":1,"one":1,"use":1,"object":3,"besearch":1,"thiscal":1,"algorithm":1,"inclus":1,"order":3,"length":1,"valu":2,"exclus":1,"note":1,"less":1,"guarante":2,"equal":1,"accord":2,"illeg":1,"point":3,"mutual":1,"string":1,"exampl":1,"method":1,"within":1,"insert":3,"integ":1,"first":2,"bound":1,"found":2},"maxFreq":12,"totalTerms":134},"loc":4}