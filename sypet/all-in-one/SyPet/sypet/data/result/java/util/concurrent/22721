{"id":22721,"className":"java.util.concurrent.ThreadPoolExecutor","methodName":"purge","signature":"\u003cjava.util.concurrent.ThreadPoolExecutor: void purge()\u003e","javadoc":"/** \n * Tries to remove from the work queue all  {@link Future}tasks that have been cancelled. This method can be useful as a storage reclamation operation, that has no other impact on functionality. Cancelled tasks are never executed, but may accumulate in work queues until worker threads can actively remove them. Invoking this method instead tries to remove them now. However, this method may fail to remove tasks in the presence of interference by other threads.\n */\n","tf":{"freq":{"queue":2,"link":1,"use":1,"cancel":2,"activ":1,"impact":1,"function":1,"fail":1,"oper":1,"thread":2,"worker":1,"howev":1,"work":2,"presenc":1,"may":2,"futur":1,"task":3,"invok":1,"remov":4,"storag":1,"accumul":1,"never":1,"purg":1,"now":1,"interfer":1,"reclam":1,"instead":1,"method":3,"execut":1},"maxFreq":4,"totalTerms":41},"loc":20}