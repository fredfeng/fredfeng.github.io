{"id":22660,"className":"java.util.concurrent.TransferQueue","methodName":"getWaitingConsumerCount","signature":"\u003cjava.util.concurrent.TransferQueue: int getWaitingConsumerCount()\u003e","javadoc":"/** \n * Returns an estimate of the number of consumers waiting to receive elements via  {@link #take} or timed{@link #poll(long,TimeUnit) poll}.  The return value is an approximation of a momentary state of affairs, that may be inaccurate if consumers have completed or given up waiting. The value may be useful for monitoring and heuristics, but not for synchronization control.  Implementations of this method are likely to be noticeably slower than those for {@link #hasWaitingConsumer}.\n * @return the number of consumers waiting to receive elements\n */\n","tf":{"freq":{"via":1,"count":1,"link":3,"state":1,"use":1,"wait":5,"approxim":1,"notic":1,"momentari":1,"consum":5,"slower":1,"time":2,"estim":1,"affair":1,"poll":2,"given":1,"valu":2,"inaccur":1,"heurist":1,"complet":1,"control":1,"element":2,"may":2,"monitor":1,"receiv":2,"number":2,"like":1,"unit":1,"take":1,"method":1},"maxFreq":5,"totalTerms":47},"loc":0}