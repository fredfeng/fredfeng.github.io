{"id":20402,"className":"java.util.TimeZone","methodName":"getOffset","signature":"\u003cjava.util.TimeZone: int getOffset(int,int,int,int,int,int)\u003e","javadoc":"/** \n * Gets the time zone offset, for current date, modified in case of daylight savings. This is the offset to add to UTC to get local time. \u003cp\u003e This method returns a historically correct offset if an underlying \u003ccode\u003eTimeZone\u003c/code\u003e implementation subclass supports historical Daylight Saving Time schedule and GMT offset changes.\n * @param era the era of the given date.\n * @param year the year in the given date.\n * @param month the month in the given date.Month is 0-based. e.g., 0 for January.\n * @param day the day-in-month of the given date.\n * @param dayOfWeek the day-of-week of the given date.\n * @param milliseconds the milliseconds in day in \u003cem\u003estandard\u003c/em\u003elocal time.\n * @return the offset in milliseconds to add to GMT to get local time.\n * @see Calendar#ZONE_OFFSET\n * @see Calendar#DST_OFFSET\n */\n","tf":{"freq":{"histor":2,"save":2,"schedul":1,"era":2,"add":2,"date":6,"time":6,"correct":1,"given":5,"millisecond":3,"current":1,"year":2,"offset":6,"calendar":2,"support":1,"standard":1,"januari":1,"modifi":1,"subclass":1,"month":4,"base":1,"method":1,"local":3,"chang":1,"day":5,"daylight":2,"zone":2,"week":2},"maxFreq":6,"totalTerms":67},"loc":0}