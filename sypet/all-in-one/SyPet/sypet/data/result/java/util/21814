{"id":21814,"className":"java.util.Scanner","methodName":"nextBigDecimal","signature":"\u003cjava.util.Scanner: java.math.BigDecimal nextBigDecimal()\u003e","javadoc":"/** \n * Scans the next token of the input as a  {@link java.math.BigDecimal BigDecimal}. \u003cp\u003e If the next token matches the \u003ca href\u003d\"#Decimal-regex\"\u003e\u003ci\u003eDecimal\u003c/i\u003e\u003c/a\u003e regular expression defined above then the token is converted into a \u003ctt\u003eBigDecimal\u003c/tt\u003e value as if by removing all group separators, mapping non-ASCII digits into ASCII digits via the  {@link Character#digit Character.digit}, and passing the resulting string to the  {@link java.math.BigDecimal#BigDecimal(java.lang.String) BigDecimal(String)}constructor.\n * @return the \u003ctt\u003eBigDecimal\u003c/tt\u003e scanned from the input\n * @throws InputMismatchException if the next token does not match the \u003ci\u003eDecimal\u003c/i\u003e regular expression, or is out of range\n * @throws NoSuchElementException if the input is exhausted\n * @throws IllegalStateException if this scanner is closed\n */\n","tf":{"freq":{"result":1,"defin":1,"via":1,"link":3,"next":4,"state":1,"convert":1,"decim":11,"express":2,"lang":1,"close":1,"token":4,"rang":1,"map":1,"valu":1,"href":1,"scanner":1,"constructor":1,"element":1,"except":3,"charact":2,"regular":2,"regex":1,"remov":1,"illeg":1,"pass":1,"non":1,"math":2,"digit":4,"input":4,"separ":1,"string":3,"exhaust":1,"java":3,"scan":2,"match":2,"mismatch":1,"big":8,"group":1},"maxFreq":11,"totalTerms":82},"loc":18}