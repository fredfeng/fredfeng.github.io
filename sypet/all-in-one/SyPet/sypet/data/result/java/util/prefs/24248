{"id":24248,"className":"java.util.prefs.AbstractPreferences","methodName":"getFloat","signature":"\u003cjava.util.prefs.AbstractPreferences: float getFloat(java.lang.String,float)\u003e","javadoc":"/** \n * Implements the \u003ctt\u003egetFloat\u003c/tt\u003e method as per the specification in {@link Preferences#getFloat(String,float)}. \u003cp\u003eThis implementation invokes  {@link #get(String,String) \u003ctt\u003eget(key,null)\u003c/tt\u003e}.  If the return value is non-null, the implementation attempts to translate it to an \u003ctt\u003efloat\u003c/tt\u003e with {@link Float#parseFloat(String)}.  If the attempt succeeds, the return value is returned by this method.  Otherwise, \u003ctt\u003edef\u003c/tt\u003e is returned.\n * @param key key whose associated value is to be returned as a float.\n * @param def the value to be returned in the event that thispreference node has no value associated with \u003ctt\u003ekey\u003c/tt\u003e or the associated value cannot be interpreted as a float.\n * @return the float value represented by the string associated with\u003ctt\u003ekey\u003c/tt\u003e in this preference node, or \u003ctt\u003edef\u003c/tt\u003e if the associated value does not exist or cannot be interpreted as a float.\n * @throws IllegalStateException if this node (or an ancestor) has beenremoved with the  {@link #removeNode()} method.\n * @throws NullPointerException if \u003ctt\u003ekey\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e.\n */\n","tf":{"freq":{"attempt":2,"otherwis":1,"link":4,"state":1,"interpret":2,"def":3,"associ":5,"event":1,"valu":8,"ancestor":1,"exist":1,"key":6,"except":2,"thisprefer":1,"succeed":1,"whose":1,"repres":1,"invok":1,"remov":1,"beenremov":1,"translat":1,"illeg":1,"non":1,"specif":1,"node":4,"per":1,"string":5,"pointer":1,"method":3,"prefer":2,"pars":1},"maxFreq":8,"totalTerms":65},"loc":12}