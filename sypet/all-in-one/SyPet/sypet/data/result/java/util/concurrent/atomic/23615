{"id":23615,"className":"java.util.concurrent.atomic.AtomicMarkableReference","methodName":"weakCompareAndSet","signature":"\u003cjava.util.concurrent.atomic.AtomicMarkableReference: boolean weakCompareAndSet(V,V,boolean,boolean)\u003e","javadoc":"/** \n * Atomically sets the value of both the reference and mark to the given update values if the current reference is  {@code \u003d\u003d} to the expected referenceand the current mark is equal to the expected mark. \u003cp\u003eMay \u003ca href\u003d\"package-summary.html#Spurious\"\u003efail spuriously\u003c/a\u003e and does not provide ordering guarantees, so is only rarely an appropriate alternative to  {@code compareAndSet}.\n * @param expectedReference the expected value of the reference\n * @param newReference the new value for the reference\n * @param expectedMark the expected value of the mark\n * @param newMark the new value for the mark\n * @return true if successful\n */\n","tf":{"freq":{"atom":1,"referenceand":1,"expect":6,"given":1,"fail":1,"order":1,"altern":1,"refer":6,"rare":1,"current":2,"valu":6,"href":1,"may":1,"spurious":2,"guarante":1,"true":1,"equal":1,"mark":7,"provid":1,"summari":1,"updat":1,"appropri":1,"weak":1,"html":1,"success":1,"compar":2},"maxFreq":7,"totalTerms":50},"loc":4}