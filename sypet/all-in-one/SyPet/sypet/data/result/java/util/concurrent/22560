{"id":22560,"className":"java.util.concurrent.ConcurrentSkipListSet","methodName":"descendingSet","signature":"\u003cjava.util.concurrent.ConcurrentSkipListSet: java.util.NavigableSet\u003cE\u003e descendingSet()\u003e","javadoc":"/** \n * Returns a reverse order view of the elements contained in this set. The descending set is backed by this set, so changes to the set are reflected in the descending set, and vice-versa. \u003cp\u003eThe returned set has an ordering equivalent to \u003ctt\u003e {@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())\u003c/tt\u003e. The expression  {@code s.descendingSet().descendingSet()} returns aview of  {@code s} essentially equivalent to {@code s}.\n * @return a reverse order view of this set\n */\n","tf":{"freq":{"versa":1,"element":1,"vice":1,"link":1,"back":1,"aview":1,"express":1,"revers":4,"order":5,"equival":2,"essenti":1,"contain":1,"descend":5,"view":2,"chang":1,"compar":2,"reflect":1,"collect":2},"maxFreq":5,"totalTerms":33},"loc":3}