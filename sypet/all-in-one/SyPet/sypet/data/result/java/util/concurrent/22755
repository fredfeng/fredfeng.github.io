{"id":22755,"className":"java.util.concurrent.Exchanger","methodName":"exchange","signature":"\u003cjava.util.concurrent.Exchanger: V exchange(V,long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Waits for another thread to arrive at this exchange point (unless the current thread is  {@linkplain Thread#interrupt interrupted} orthe specified waiting time elapses), and then transfers the given object to it, receiving its object in return. \u003cp\u003eIf another thread is already waiting at the exchange point then it is resumed for thread scheduling purposes and receives the object passed in by the current thread.  The current thread returns immediately, receiving the object passed to the exchange by that other thread. \u003cp\u003eIf no other thread is already waiting at the exchange then the current thread is disabled for thread scheduling purposes and lies dormant until one of three things happens: \u003cul\u003e \u003cli\u003eSome other thread enters the exchange; or \u003cli\u003eSome other thread  {@linkplain Thread#interrupt interrupts}the current thread; or \u003cli\u003eThe specified waiting time elapses. \u003c/ul\u003e \u003cp\u003eIf the current thread: \u003cul\u003e \u003cli\u003ehas its interrupted status set on entry to this method; or \u003cli\u003eis  {@linkplain Thread#interrupt interrupted} while waitingfor the exchange, \u003c/ul\u003e then  {@link InterruptedException} is thrown and the current thread\u0027sinterrupted status is cleared. \u003cp\u003eIf the specified waiting time elapses then  {@link TimeoutException} is thrown.  If the time is less than or equalto zero, the method will not wait at all.\n * @param x the object to exchange\n * @param timeout the maximum time to wait\n * @param unit the time unit of the \u003ctt\u003etimeout\u003c/tt\u003e argument\n * @return the object provided by the other thread\n * @throws InterruptedException if the current thread wasinterrupted while waiting\n * @throws TimeoutException if the specified waiting time elapsesbefore another thread enters the exchange\n */\n","tf":{"freq":{"wait":10,"zero":1,"specifi":4,"elaps":3,"time":7,"given":1,"thread":21,"three":1,"purpos":2,"elapsesbefor":1,"happen":1,"sinterrupt":1,"argument":1,"transfer":1,"except":4,"thrown":2,"status":2,"enter":2,"provid":1,"disabl":1,"maximum":1,"will":1,"wasinterrupt":1,"arriv":1,"thing":1,"linkplain":3,"orth":1,"one":1,"link":2,"schedul":2,"object":6,"anoth":3,"resum":1,"clear":1,"unless":1,"current":8,"immedi":1,"less":1,"waitingfor":1,"entri":1,"receiv":3,"exchang":9,"interrupt":9,"pass":2,"point":2,"unit":2,"alreadi":2,"method":2,"equalto":1,"lie":1,"timeout":4,"dormant":1},"maxFreq":21,"totalTerms":143},"loc":13}