{"id":21586,"className":"java.util.TimerTask","methodName":"cancel","signature":"\u003cjava.util.TimerTask: boolean cancel()\u003e","javadoc":"/** \n * Cancels this timer task.  If the task has been scheduled for one-time execution and has not yet run, or has not yet been scheduled, it will never run.  If the task has been scheduled for repeated execution, it will never run again.  (If the task is running when this call occurs, the task will run to completion, but will never run again.) \u003cp\u003eNote that calling this method from within the \u003ctt\u003erun\u003c/tt\u003e method of a repeating timer task absolutely guarantees that the timer task will not run again. \u003cp\u003eThis method may be called repeatedly; the second and subsequent calls have no effect.\n * @return true if this task is scheduled for one-time execution and hasnot yet run, or this task is scheduled for repeated execution. Returns false if the task was scheduled for one-time execution and has already run, or if the task was never scheduled, or if the task was already cancelled.  (Loosely speaking, this method returns \u003ctt\u003etrue\u003c/tt\u003e if it prevents one or more scheduled executions from taking place.)\n */\n","tf":{"freq":{"fals":1,"call":4,"second":1,"one":4,"schedul":8,"cancel":3,"repeat":4,"run":10,"time":3,"timer":3,"loos":1,"place":1,"subsequ":1,"note":1,"complet":1,"may":1,"task":12,"guarante":1,"speak":1,"true":2,"prevent":1,"absolut":1,"hasnot":1,"never":4,"effect":1,"take":1,"will":5,"alreadi":2,"method":4,"within":1,"execut":6,"yet":3,"occur":1},"maxFreq":12,"totalTerms":94},"loc":7}