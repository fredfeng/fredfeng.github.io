{"id":21466,"className":"java.util.Properties","methodName":"loadFromXML","signature":"\u003cjava.util.Properties: void loadFromXML(java.io.InputStream)\u003e","javadoc":"/** \n * Loads all of the properties represented by the XML document on the specified input stream into this properties table. \u003cp\u003eThe XML document must have the following DOCTYPE declaration: \u003cpre\u003e \u0026lt;!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\"\u0026gt; \u003c/pre\u003e Furthermore, the document must satisfy the properties DTD described above. \u003cp\u003eThe specified stream is closed after this method returns.\n * @param in the input stream from which to read the XML document.\n * @throws IOException if reading from the specified input streamresults in an \u003ctt\u003eIOException\u003c/tt\u003e.\n * @throws InvalidPropertiesFormatException Data on input stream does notconstitute a valid XML document with the mandated document type.\n * @throws NullPointerException if \u003ccode\u003ein\u003c/code\u003e is null.\n * @see #storeToXML(OutputStream,String,String)\n * @since 1.5\n */\n","tf":{"freq":{"valid":1,"stream":5,"furthermor":1,"com":1,"store":1,"data":1,"type":1,"mandat":1,"must":2,"sun":1,"specifi":3,"close":1,"document":6,"invalid":1,"declar":1,"read":2,"dtd":2,"follow":1,"except":4,"streamresult":1,"repres":1,"describ":1,"format":1,"input":4,"http":1,"pre":2,"tabl":1,"string":2,"satisfi":1,"pointer":1,"notconstitut":1,"load":2,"java":1,"method":1,"properti":6,"output":1},"maxFreq":6,"totalTerms":64},"loc":6}