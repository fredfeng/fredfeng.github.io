{"id":22784,"className":"java.util.concurrent.ScheduledThreadPoolExecutor","methodName":"setExecuteExistingDelayedTasksAfterShutdownPolicy","signature":"\u003cjava.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)\u003e","javadoc":"/** \n * Sets the policy on whether to execute existing delayed tasks even when this executor has been  {@code shutdown}. In this case, these tasks will only terminate upon {@code shutdownNow}, or after setting the policy to {@code false} when already shutdown.This value is by default  {@code true}.\n * @param value if {@code true}, execute after shutdown, else don\u0027t.\n * @see #getExecuteExistingDelayedTasksAfterShutdownPolicy\n */\n","tf":{"freq":{"fals":1,"task":4,"executor":1,"true":2,"polici":4,"els":1,"whether":1,"termin":1,"now":1,"will":1,"valu":2,"alreadi":1,"even":1,"delay":3,"execut":4,"exist":3,"shutdown":6,"upon":1},"maxFreq":6,"totalTerms":38},"loc":5}