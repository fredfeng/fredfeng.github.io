{"id":23614,"className":"java.util.concurrent.atomic.AtomicMarkableReference","methodName":"get","signature":"\u003cjava.util.concurrent.atomic.AtomicMarkableReference: V get(boolean[])\u003e","javadoc":"/** \n * Returns the current values of both the reference and the mark. Typical usage is  {@code boolean[1] holder; ref \u003d v.get(holder); }.\n * @param markHolder an array of size of at least one. On return,{@code markholder[0]} will hold the value of the mark.\n * @return the current value of the reference\n */\n","tf":{"freq":{"holder":3,"least":1,"hold":1,"one":1,"typic":1,"mark":3,"size":1,"markhold":1,"ref":1,"refer":2,"will":1,"current":2,"valu":3,"usag":1,"array":1},"maxFreq":3,"totalTerms":23},"loc":5}