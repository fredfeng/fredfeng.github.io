{"id":23010,"className":"java.util.concurrent.BlockingQueue","methodName":"remove","signature":"\u003cjava.util.concurrent.BlockingQueue: boolean remove(java.lang.Object)\u003e","javadoc":"/** \n * Removes a single instance of the specified element from this queue, if it is present.  More formally, removes an element \u003ctt\u003ee\u003c/tt\u003e such that \u003ctt\u003eo.equals(e)\u003c/tt\u003e, if this queue contains one or more such elements. Returns \u003ctt\u003etrue\u003c/tt\u003e if this queue contained the specified element (or equivalently, if this queue changed as a result of the call).\n * @param o element to be removed from this queue, if present\n * @return \u003ctt\u003etrue\u003c/tt\u003e if this queue changed as a result of the call\n * @throws ClassCastException if the class of the specified elementis incompatible with this queue (\u003ca href\u003d\"../Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws NullPointerException if the specified element is null(\u003ca href\u003d\"../Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n */\n","tf":{"freq":{"call":2,"result":2,"element":6,"queue":7,"except":2,"singl":1,"elementi":1,"one":1,"remov":4,"true":2,"equal":1,"incompat":1,"restrict":2,"instanc":1,"specifi":4,"present":2,"formal":1,"cast":1,"equival":1,"contain":2,"pointer":1,"html":2,"chang":2,"href":2,"option":4,"collect":2},"maxFreq":7,"totalTerms":57},"loc":0}