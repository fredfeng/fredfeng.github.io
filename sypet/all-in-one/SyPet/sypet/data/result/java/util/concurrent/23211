{"id":23211,"className":"java.util.concurrent.BlockingDeque","methodName":"take","signature":"\u003cjava.util.concurrent.BlockingDeque: E take()\u003e","javadoc":"/** \n * Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque), waiting if necessary until an element becomes available. \u003cp\u003eThis method is equivalent to  {@link #takeFirst() takeFirst}.\n * @return the head of this deque\n * @throws InterruptedException if interrupted while waiting\n */\n","tf":{"freq":{"queue":1,"element":2,"except":1,"repres":1,"link":1,"remov":1,"avail":1,"wait":2,"necessari":1,"interrupt":2,"becom":1,"equival":1,"take":3,"retriev":1,"dequ":3,"method":1,"word":1,"head":2,"first":3},"maxFreq":3,"totalTerms":29},"loc":0}