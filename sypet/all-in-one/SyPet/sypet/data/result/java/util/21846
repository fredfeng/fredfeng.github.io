{"id":21846,"className":"java.util.Collections","methodName":"unmodifiableCollection","signature":"\u003cjava.util.Collections: java.util.Collection\u003cT\u003e unmodifiableCollection(java.util.Collection)\u003e","javadoc":"/** \n * Returns an unmodifiable view of the specified collection.  This method allows modules to provide users with \"read-only\" access to internal collections.  Query operations on the returned collection \"read through\" to the specified collection, and attempts to modify the returned collection, whether direct or via its iterator, result in an \u003ctt\u003eUnsupportedOperationException\u003c/tt\u003e.\u003cp\u003e The returned collection does \u003ci\u003enot\u003c/i\u003e pass the hashCode and equals operations through to the backing collection, but relies on \u003ctt\u003eObject\u003c/tt\u003e\u0027s \u003ctt\u003eequals\u003c/tt\u003e and \u003ctt\u003ehashCode\u003c/tt\u003e methods.  This is necessary to preserve the contracts of these operations in the case that the backing collection is a set or a list.\u003cp\u003e The returned collection will be serializable if the specified collection is serializable.\n * @param c the collection for which an unmodifiable view is to bereturned.\n * @return an unmodifiable view of the specified collection.\n */\n","tf":{"freq":{"attempt":1,"result":1,"unsupport":1,"via":1,"allow":1,"serializ":2,"object":1,"necessari":1,"whether":1,"reli":1,"specifi":4,"bereturn":1,"oper":4,"read":2,"modul":1,"direct":1,"except":1,"contract":1,"hash":2,"preserv":1,"back":2,"list":1,"equal":2,"access":1,"provid":1,"pass":1,"queri":1,"unmodifi":4,"will":1,"intern":1,"modifi":1,"method":2,"view":3,"iter":1,"user":1,"collect":13},"maxFreq":13,"totalTerms":65},"loc":3}