{"id":23587,"className":"java.util.concurrent.atomic.AtomicStampedReference","methodName":"attemptStamp","signature":"\u003cjava.util.concurrent.atomic.AtomicStampedReference: boolean attemptStamp(V,int)\u003e","javadoc":"/** \n * Atomically sets the value of the stamp to the given update value if the current reference is  {@code \u003d\u003d} to the expectedreference.  Any given invocation of this operation may fail (return  {@code false}) spuriously, but repeated invocation when the current value holds the expected value and no other thread is also attempting to set the value will eventually succeed.\n * @param expectedReference the expected value of the reference\n * @param newStamp the new value for the stamp\n * @return true if successful\n */\n","tf":{"freq":{"attempt":2,"fals":1,"atom":1,"eventu":1,"repeat":1,"expect":3,"given":2,"fail":1,"oper":1,"refer":3,"thread":1,"current":2,"valu":7,"stamp":4,"may":1,"spurious":1,"succeed":1,"expectedrefer":1,"hold":1,"true":1,"invoc":2,"updat":1,"will":1,"success":1,"also":1},"maxFreq":7,"totalTerms":42},"loc":7}