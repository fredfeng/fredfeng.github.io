{"id":22763,"className":"java.util.concurrent.CyclicBarrier","methodName":"reset","signature":"\u003cjava.util.concurrent.CyclicBarrier: void reset()\u003e","javadoc":"/** \n * Resets the barrier to its initial state.  If any parties are currently waiting at the barrier, they will return with a {@link BrokenBarrierException}. Note that resets \u003cem\u003eafter\u003c/em\u003e a breakage has occurred for other reasons can be complicated to carry out; threads need to re-synchronize in some other way, and choose one to perform the reset.  It may be preferable to instead create a new barrier for subsequent use.\n */\n","tf":{"freq":{"need":1,"reason":1,"link":1,"one":1,"state":1,"use":1,"way":1,"perform":1,"wait":1,"carri":1,"barrier":4,"thread":1,"current":1,"reset":4,"breakag":1,"choos":1,"initi":1,"subsequ":1,"note":1,"except":1,"may":1,"creat":1,"broken":1,"instead":1,"will":1,"prefer":1,"complic":1,"parti":1,"occur":1},"maxFreq":4,"totalTerms":35},"loc":10}