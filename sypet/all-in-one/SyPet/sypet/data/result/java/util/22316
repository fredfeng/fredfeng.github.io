{"id":22316,"className":"java.util.TreeSet","methodName":"TreeSet","signature":"\u003cjava.util.TreeSet: void TreeSet(java.util.Comparator)\u003e","javadoc":"/** \n * Constructs a new, empty tree set, sorted according to the specified comparator.  All elements inserted into the set must be \u003ci\u003emutually comparable\u003c/i\u003e by the specified comparator:  {@code comparator.compare(e1,e2)} must not throw a {@code ClassCastException} for any elements{@code e1} and {@code e2} in the set.  If the user attempts to addan element to the set that violates this constraint, the {@code add} call will throw a {@code ClassCastException}.\n * @param comparator the comparator that will be used to order this set.If  {@code null}, the  {@linkplain Comparable naturalordering} of the elements will be used.\n */\n","tf":{"freq":{"attempt":1,"call":1,"linkplain":1,"sort":1,"constraint":1,"use":2,"violat":1,"add":1,"must":2,"specifi":2,"tree":2,"order":1,"naturalord":1,"element":4,"except":2,"accord":1,"empti":1,"addan":1,"mutual":1,"cast":2,"will":3,"construct":1,"insert":1,"compar":8,"user":1},"maxFreq":8,"totalTerms":43},"loc":3}