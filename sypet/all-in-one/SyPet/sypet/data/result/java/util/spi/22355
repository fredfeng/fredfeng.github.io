{"id":22355,"className":"java.util.spi.LocaleNameProvider","methodName":"getDisplayVariant","signature":"\u003cjava.util.spi.LocaleNameProvider: java.lang.String getDisplayVariant(java.lang.String,java.util.Locale)\u003e","javadoc":"/** \n * Returns a localized name for the given variant code and the given locale that is appropriate for display to the user. If the name returned cannot be localized according to \u003ccode\u003elocale\u003c/code\u003e, this method returns null.\n * @param variant the variant string\n * @param locale the desired locale\n * @return the name of the given variant string for the specified locale, or null if it\u0027s notavailable.\n * @exception NullPointerException if \u003ccode\u003evariant\u003c/code\u003e or \u003ccode\u003elocale\u003c/code\u003e is null\n * @exception IllegalArgumentException if \u003ccode\u003elocale\u003c/code\u003e isn\u0027tone of the locales returned from {@link java.util.spi.LocaleServiceProvider#getAvailableLocales() getAvailableLocales()}.\n * @see java.util.Locale#getDisplayVariant(java.util.Locale)\n */\n","tf":{"freq":{"link":1,"servic":1,"desir":1,"variant":7,"specifi":1,"given":3,"name":3,"spi":1,"notavail":1,"argument":1,"except":4,"tone":1,"avail":2,"display":3,"accord":1,"illeg":1,"provid":1,"appropri":1,"string":2,"pointer":1,"method":1,"java":3,"local":15,"user":1,"util":3},"maxFreq":15,"totalTerms":60},"loc":0}