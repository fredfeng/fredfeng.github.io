{"id":20362,"className":"java.util.ResourceBundle","methodName":"getBundle","signature":"\u003cjava.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)\u003e","javadoc":"/** \n * Returns a resource bundle using the specified base name, target locale, class loader and control. Unlike the  {@linkplain #getBundle(String,Locale,ClassLoader) \u003ccode\u003egetBundle\u003c/code\u003efactory methods with no \u003ccode\u003econtrol\u003c/code\u003e argument}, the given \u003ccode\u003econtrol\u003c/code\u003e specifies how to locate and instantiate resource bundles. Conceptually, the bundle loading process with the given \u003ccode\u003econtrol\u003c/code\u003e is performed in the following steps. \u003cp\u003e \u003col\u003e \u003cli\u003eThis factory method looks up the resource bundle in the cache for the specified \u003ccode\u003ebaseName\u003c/code\u003e, \u003ccode\u003etargetLocale\u003c/code\u003e and \u003ccode\u003eloader\u003c/code\u003e.  If the requested resource bundle instance is found in the cache and the time-to-live periods of the instance and all of its parent instances have not expired, the instance is returned to the caller. Otherwise, this factory method proceeds with the loading process below.\u003c/li\u003e \u003cli\u003eThe  {@link ResourceBundle.Control#getFormats(String) control.getFormats} method is called to get resource bundle formatsto produce bundle or resource names. The strings \u003ccode\u003e\"java.class\"\u003c/code\u003e and \u003ccode\u003e\"java.properties\"\u003c/code\u003e designate class-based and  {@linkplain PropertyResourceBundle property}-based resource bundles, respectively. Other strings starting with \u003ccode\u003e\"java.\"\u003c/code\u003e are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.\u003c/li\u003e \u003cli\u003eThe  {@link ResourceBundle.Control#getCandidateLocales(String,Locale) control.getCandidateLocales} method is called with the targetlocale to get a list of \u003cem\u003ecandidate \u003ccode\u003eLocale\u003c/code\u003es\u003c/em\u003e for which resource bundles are searched.\u003c/li\u003e \u003cli\u003eThe  {@link ResourceBundle.Control#newBundle(String,Locale,String,ClassLoader,boolean) control.newBundle} method is called toinstantiate a \u003ccode\u003eResourceBundle\u003c/code\u003e for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the \u003ccode\u003enewBundle\u003c/code\u003e method returns a \u003ccode\u003eResourceBundle\u003c/code\u003e instance or the iteration has used up all the combinations. For example, if the candidate locales are \u003ccode\u003eLocale(\"de\", \"DE\")\u003c/code\u003e, \u003ccode\u003eLocale(\"de\")\u003c/code\u003e and \u003ccode\u003eLocale(\"\")\u003c/code\u003e and the formats are \u003ccode\u003e\"java.class\"\u003c/code\u003e and \u003ccode\u003e\"java.properties\"\u003c/code\u003e, then the following is the sequence of locale-format combinations to be used to call \u003ccode\u003econtrol.newBundle\u003c/code\u003e. \u003ctable style\u003d\"width: 50%; text-align: left; margin-left: 40px;\" border\u003d\"0\" cellpadding\u003d\"2\" cellspacing\u003d\"2\"\u003e \u003ctbody\u003e\u003ccode\u003e \u003ctr\u003e \u003ctd style\u003d\"vertical-align: top; text-align: left; font-weight: bold; width: 50%;\"\u003eLocale\u003cbr\u003e \u003c/td\u003e \u003ctd style\u003d\"vertical-align: top; text-align: left; font-weight: bold; width: 50%;\"\u003eformat\u003cbr\u003e \u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003eLocale(\"de\", \"DE\")\u003cbr\u003e \u003c/td\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003ejava.class\u003cbr\u003e \u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003eLocale(\"de\", \"DE\")\u003c/td\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003ejava.properties\u003cbr\u003e \u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003eLocale(\"de\")\u003c/td\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003ejava.class\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003eLocale(\"de\")\u003c/td\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003ejava.properties\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003eLocale(\"\")\u003cbr\u003e \u003c/td\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003ejava.class\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003eLocale(\"\")\u003c/td\u003e \u003ctd style\u003d\"vertical-align: top; width: 50%;\"\u003ejava.properties\u003c/td\u003e \u003c/tr\u003e \u003c/code\u003e\u003c/tbody\u003e \u003c/table\u003e \u003c/li\u003e \u003cli\u003eIf the previous step has found no resource bundle, proceed to Step 6. If a bundle has been found that is a base bundle (a bundle for \u003ccode\u003eLocale(\"\")\u003c/code\u003e), and the candidate locale list only contained \u003ccode\u003eLocale(\"\")\u003c/code\u003e, return the bundle to the caller. If a bundle has been found that is a base bundle, but the candidate locale list contained locales other than Locale(\"\"), put the bundle on hold and proceed to Step 6. If a bundle has been found that is not a base bundle, proceed to Step 7.\u003c/li\u003e \u003cli\u003eThe  {@link ResourceBundle.Control#getFallbackLocale(String,Locale) control.getFallbackLocale} method is called to get a fallbacklocale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.\u003c/li\u003e \u003cli\u003eAt this point, we have found a resource bundle that\u0027s not the base bundle. If this bundle set its parent during its instantiation, it is returned to the caller. Otherwise, its \u003ca href\u003d\"./ResourceBundle.html#parent_chain\"\u003eparent chain\u003c/a\u003e is instantiated based on the list of candidate locales from which it was found. Finally, the bundle is returned to the caller.\u003c/li\u003e \u003c/ol\u003e \u003cp\u003eDuring the resource bundle loading process above, this factory method looks up the cache before calling the  {@link Control#newBundle(String,Locale,String,ClassLoader,boolean) control.newBundle} method.  If the time-to-live period of theresource bundle found in the cache has expired, the factory method calls the  {@link ResourceBundle.Control#needsReload(String,Locale,String,ClassLoader,ResourceBundle,long) control.needsReload}method to determine whether the resource bundle needs to be reloaded. If reloading is required, the factory method calls \u003ccode\u003econtrol.newBundle\u003c/code\u003e to reload the resource bundle.  If \u003ccode\u003econtrol.newBundle\u003c/code\u003e returns \u003ccode\u003enull\u003c/code\u003e, the factory method puts a dummy resource bundle in the cache as a mark of nonexistent resource bundles in order to avoid lookup overhead for subsequent requests. Such dummy resource bundles are under the same expiration control as specified by \u003ccode\u003econtrol\u003c/code\u003e. \u003cp\u003eAll resource bundles loaded are cached by default. Refer to {@link Control#getTimeToLive(String,Locale) control.getTimeToLive} for details.\u003cp\u003eThe following is an example of the bundle loading process with the default \u003ccode\u003eResourceBundle.Control\u003c/code\u003e implementation. \u003cp\u003eConditions: \u003cul\u003e \u003cli\u003eBase bundle name: \u003ccode\u003efoo.bar.Messages\u003c/code\u003e \u003cli\u003eRequested \u003ccode\u003eLocale\u003c/code\u003e:  {@link Locale#ITALY}\u003c/li\u003e \u003cli\u003eDefault \u003ccode\u003eLocale\u003c/code\u003e:  {@link Locale#FRENCH}\u003c/li\u003e \u003cli\u003eAvailable resource bundles: \u003ccode\u003efoo/bar/Messages_fr.properties\u003c/code\u003e and \u003ccode\u003efoo/bar/Messages.properties\u003c/code\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFirst, \u003ccode\u003egetBundle\u003c/code\u003e tries loading a resource bundle in the following sequence. \u003cul\u003e \u003cli\u003eclass \u003ccode\u003efoo.bar.Messages_it_IT\u003c/code\u003e \u003cli\u003efile \u003ccode\u003efoo/bar/Messages_it_IT.properties\u003c/code\u003e \u003cli\u003eclass \u003ccode\u003efoo.bar.Messages_it\u003c/code\u003e\u003c/li\u003e \u003cli\u003efile \u003ccode\u003efoo/bar/Messages_it.properties\u003c/code\u003e\u003c/li\u003e \u003cli\u003eclass \u003ccode\u003efoo.bar.Messages\u003c/code\u003e\u003c/li\u003e \u003cli\u003efile \u003ccode\u003efoo/bar/Messages.properties\u003c/code\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eAt this point, \u003ccode\u003egetBundle\u003c/code\u003e finds \u003ccode\u003efoo/bar/Messages.properties\u003c/code\u003e, which is put on hold because it\u0027s the base bundle.  \u003ccode\u003egetBundle\u003c/code\u003e calls  {@link Control#getFallbackLocale(String,Locale) control.getFallbackLocale(\"foo.bar.Messages\", Locale.ITALY)} whichreturns \u003ccode\u003eLocale.FRENCH\u003c/code\u003e. Next, \u003ccode\u003egetBundle\u003c/code\u003e tries loading a bundle in the following sequence. \u003cul\u003e \u003cli\u003eclass \u003ccode\u003efoo.bar.Messages_fr\u003c/code\u003e\u003c/li\u003e \u003cli\u003efile \u003ccode\u003efoo/bar/Messages_fr.properties\u003c/code\u003e\u003c/li\u003e \u003cli\u003eclass \u003ccode\u003efoo.bar.Messages\u003c/code\u003e\u003c/li\u003e \u003cli\u003efile \u003ccode\u003efoo/bar/Messages.properties\u003c/code\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003ccode\u003egetBundle\u003c/code\u003e finds \u003ccode\u003efoo/bar/Messages_fr.properties\u003c/code\u003e and creates a \u003ccode\u003eResourceBundle\u003c/code\u003e instance. Then, \u003ccode\u003egetBundle\u003c/code\u003e sets up its parent chain from the list of the candiate locales.  Only \u003ccode\u003efoo/bar/Messages.properties\u003c/code\u003e is found in the list and \u003ccode\u003egetBundle\u003c/code\u003e creates a \u003ccode\u003eResourceBundle\u003c/code\u003e instance that becomes the parent of the instance for \u003ccode\u003efoo/bar/Messages_fr.properties\u003c/code\u003e.\n * @param baseName the base name of the resource bundle, a fully qualified class name\n * @param targetLocale the locale for which a resource bundle is desired\n * @param loader the class loader from which to load the resource bundle\n * @param control the control which gives information for the resource bundle loading process\n * @return a resource bundle for the given base name and locale\n * @exception NullPointerException if \u003ccode\u003ebaseName\u003c/code\u003e, \u003ccode\u003etargetLocale\u003c/code\u003e, \u003ccode\u003eloader\u003c/code\u003e, or \u003ccode\u003econtrol\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @exception MissingResourceException if no resource bundle for the specified base name can be found\n * @exception IllegalArgumentException if the given \u003ccode\u003econtrol\u003c/code\u003e doesn\u0027t perform properly (e.g., \u003ccode\u003econtrol.getCandidateLocales\u003c/code\u003e returns null.) Note that validation of \u003ccode\u003econtrol\u003c/code\u003e is performed as needed.\n * @since 1.6\n */\n","tf":{"freq":{"need":4,"candiat":1,"dummi":2,"foo":18,"desir":1,"lookup":2,"whether":1,"specifi":5,"expir":3,"avoid":1,"time":4,"overhead":1,"becom":2,"given":4,"search":1,"refer":2,"file":5,"sequenc":3,"whichreturn":1,"margin":1,"border":1,"href":1,"loader":9,"hold":3,"parent":6,"avail":1,"instanc":8,"non":1,"fallback":4,"start":2,"now":1,"pointer":1,"load":10,"bar":18,"reload":5,"caller":5,"linkplain":2,"put":4,"give":1,"link":10,"next":2,"use":4,"applic":2,"factori":7,"current":1,"cellspac":1,"left":4,"note":2,"look":2,"previous":2,"messag":18,"fulli":1,"process":6,"point":2,"chain":3,"tabl":2,"theresourc":1,"string":15,"base":18,"exampl":2,"method":15,"iter":2,"respect":1,"design":2,"detail":1,"instanti":3,"perform":3,"must":1,"formatsto":1,"bold":2,"requir":1,"altern":1,"request":3,"proceed":4,"targetlocal":1,"combin":3,"proper":1,"live":4,"follow":5,"argument":2,"control":32,"thrown":1,"except":7,"text":3,"fallbacklocal":1,"vertic":14,"creat":2,"nonexist":1,"font":2,"width":15,"align":17,"mark":1,"candid":10,"format":9,"period":2,"inform":1,"cellpad":1,"determin":1,"contain":2,"properti":18,"toinstanti":1,"bundl":77,"otherwis":4,"valid":1,"call":9,"defin":2,"weight":2,"resourc":41,"order":1,"style":15,"reserv":1,"extens":1,"name":11,"unlik":1,"subsequ":1,"find":3,"top":14,"condit":1,"locat":1,"futur":1,"tbodi":2,"produc":1,"list":6,"cach":7,"conceptu":1,"illeg":1,"target":6,"html":1,"java":11,"local":53,"first":1,"qualifi":1,"step":8,"miss":2,"found":11},"maxFreq":77,"totalTerms":746},"loc":6}