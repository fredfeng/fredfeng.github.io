{"id":22978,"className":"java.util.concurrent.ScheduledExecutorService","methodName":"scheduleWithFixedDelay","signature":"\u003cjava.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture\u003c?\u003e scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Creates and executes a periodic action that becomes enabled first after the given initial delay, and subsequently with the given delay between the termination of one execution and the commencement of the next.  If any execution of the task encounters an exception, subsequent executions are suppressed. Otherwise, the task will only terminate via cancellation or termination of the executor.\n * @param command the task to execute\n * @param initialDelay the time to delay first execution\n * @param delay the delay between the termination of oneexecution and the commencement of the next\n * @param unit the time unit of the initialDelay and delay parameters\n * @return a ScheduledFuture representing pending completion ofthe task, and whose \u003ctt\u003eget()\u003c/tt\u003e method will throw an exception upon cancellation\n * @throws RejectedExecutionException if the task cannot bescheduled for execution\n * @throws NullPointerException if command is null\n * @throws IllegalArgumentException if delay less than or equal to zero\n */\n","tf":{"freq":{"otherwis":1,"reject":1,"via":1,"one":1,"next":2,"schedul":2,"beschedul":1,"cancel":2,"zero":1,"time":2,"becom":1,"given":2,"fix":1,"ofth":1,"command":2,"action":1,"initi":3,"subsequ":2,"less":1,"complet":1,"pend":1,"argument":1,"except":5,"futur":1,"whose":1,"repres":1,"creat":1,"enabl":1,"task":5,"executor":1,"paramet":1,"equal":1,"oneexecut":1,"period":1,"commenc":2,"illeg":1,"unit":2,"termin":4,"encount":1,"will":2,"pointer":1,"method":1,"delay":10,"execut":8,"first":2,"suppress":1,"upon":1},"maxFreq":10,"totalTerms":87},"loc":0}