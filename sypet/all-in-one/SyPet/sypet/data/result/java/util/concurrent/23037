{"id":23037,"className":"java.util.concurrent.CopyOnWriteArrayList","methodName":"removeAll","signature":"\u003cjava.util.concurrent.CopyOnWriteArrayList: boolean removeAll(java.util.Collection)\u003e","javadoc":"/** \n * Removes from this list all of its elements that are contained in the specified collection. This is a particularly expensive operation in this class because of the need for an internal temporary array.\n * @param c collection containing elements to be removed from this list\n * @return \u003ctt\u003etrue\u003c/tt\u003e if this list changed as a result of the call\n * @throws ClassCastException if the class of an element of this listis incompatible with the specified collection (\u003ca href\u003d\"../Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws NullPointerException if this list contains a null element and thespecified collection does not permit null elements (\u003ca href\u003d\"../Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e), or if the specified collection is null\n * @see #remove(Object)\n */\n","tf":{"freq":{"need":1,"result":1,"call":1,"listi":1,"permit":1,"particular":1,"object":1,"specifi":3,"oper":1,"thespecifi":1,"temporari":1,"href":2,"option":4,"element":5,"except":2,"remov":4,"true":1,"list":4,"incompat":1,"restrict":2,"cast":1,"contain":3,"intern":1,"expens":1,"pointer":1,"html":2,"chang":1,"collect":7,"array":1},"maxFreq":7,"totalTerms":56},"loc":25}