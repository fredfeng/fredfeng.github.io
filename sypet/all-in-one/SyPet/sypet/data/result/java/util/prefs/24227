{"id":24227,"className":"java.util.prefs.Preferences","methodName":"addNodeChangeListener","signature":"\u003cjava.util.prefs.Preferences: void addNodeChangeListener(java.util.prefs.NodeChangeListener)\u003e","javadoc":"/** \n * Registers the specified listener to receive \u003ci\u003enode change events\u003c/i\u003e for this node.  A node change event is generated when a child node is added to or removed from this node.  (A single  {@link #removeNode()}invocation results in multiple \u003ci\u003enode change events\u003c/i\u003e, one for every node in the subtree rooted at the removed node.) \u003cp\u003eEvents are only guaranteed for changes made within the same JVM as the registered listener, though some implementations may generate events for changes made outside this JVM.  Events may be generated before the changes have become permanent.  Events are not generated when indirect descendants of this node are added or removed; a caller desiring such events must register with each descendant. \u003cp\u003eFew guarantees can be made regarding node creation.  Because nodes are created implicitly upon access, it may not be feasible for an implementation to determine whether a child node existed in the backing store prior to access (for example, because the backing store is unreachable or cached information is out of date).  Under these circumstances, implementations are neither required to generate node change events nor prohibited from doing so.\n * @param ncl The \u003ctt\u003eNodeChangeListener\u003c/tt\u003e to add.\n * @throws NullPointerException if \u003ctt\u003encl\u003c/tt\u003e is null.\n * @throws IllegalStateException if this node (or an ancestor) has beenremoved with the  {@link #removeNode()} method.\n * @see #removeNodeChangeListener(NodeChangeListener)\n * @see #addPreferenceChangeListener(PreferenceChangeListener)\n */\n","tf":{"freq":{"store":2,"root":1,"singl":1,"implicit":1,"ncl":2,"desir":1,"though":1,"must":1,"whether":1,"specifi":1,"prior":1,"requir":1,"becom":1,"unreach":1,"event":9,"everi":1,"except":2,"multipl":1,"creat":1,"beenremov":1,"remov":6,"circumst":1,"regard":1,"invoc":1,"inform":1,"node":20,"outsid":1,"determin":1,"pointer":1,"prefer":2,"upon":1,"caller":1,"result":1,"creation":1,"one":1,"link":2,"state":1,"made":3,"date":1,"add":3,"prohibit":1,"child":2,"indirect":1,"regist":3,"subtre":1,"ancestor":1,"listen":8,"exist":1,"may":3,"guarante":2,"back":2,"receiv":1,"cach":1,"access":2,"illeg":1,"neither":1,"generat":5,"feasibl":1,"exampl":1,"ad":2,"method":1,"within":1,"chang":13,"descend":2,"perman":1},"maxFreq":20,"totalTerms":139},"loc":0}