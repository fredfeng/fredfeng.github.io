{"id":21228,"className":"java.util.Objects","methodName":"compare","signature":"\u003cjava.util.Objects: int compare(T,T,java.util.Comparator)\u003e","javadoc":"/** \n * Returns 0 if the arguments are identical and  {@code c.compare(a, b)} otherwise.Consequently, if both arguments are  {@code null} 0is returned. \u003cp\u003eNote that if one of the arguments is  {@code null}, a  {@code NullPointerException} may or may not be thrown depending onwhat ordering policy, if any, the  {@link Comparator Comparator}chooses to have for  {@code null} values.\n * @param \u003c T \u003e the type of the objects being compared\n * @param a an object\n * @param b an object to be compared with {@code a}\n * @param c the {@code Comparator} to compare the first two arguments\n * @return 0 if the arguments are identical and {@code c.compare(a, b)} otherwise.\n * @see Comparable\n * @see Comparator\n */\n","tf":{"freq":{"argument":5,"otherwis":2,"except":1,"may":2,"thrown":1,"depend":1,"link":1,"consequ":1,"one":1,"object":3,"polici":1,"type":1,"two":1,"onwhat":1,"order":1,"ident":2,"choos":1,"pointer":1,"valu":1,"first":1,"compar":11,"note":1},"maxFreq":11,"totalTerms":41},"loc":3}