{"id":20717,"className":"java.util.List","methodName":"equals","signature":"\u003cjava.util.List: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares the specified object with this list for equality.  Returns \u003ctt\u003etrue\u003c/tt\u003e if and only if the specified object is also a list, both lists have the same size, and all corresponding pairs of elements in the two lists are \u003ci\u003eequal\u003c/i\u003e.  (Two elements \u003ctt\u003ee1\u003c/tt\u003e and \u003ctt\u003ee2\u003c/tt\u003e are \u003ci\u003eequal\u003c/i\u003e if \u003ctt\u003e(e1\u003d\u003dnull ? e2\u003d\u003dnull : e1.equals(e2))\u003c/tt\u003e.)  In other words, two lists are defined to be equal if they contain the same elements in the same order.  This definition ensures that the equals method works properly across different implementations of the \u003ctt\u003eList\u003c/tt\u003e interface.\n * @param o the object to be compared for equality with this list\n * @return \u003ctt\u003etrue\u003c/tt\u003e if the specified object is equal to this list\n */\n","tf":{"freq":{"work":1,"defin":1,"element":3,"pair":1,"correspond":1,"true":2,"equal":9,"list":8,"object":4,"across":1,"ensur":1,"specifi":3,"size":1,"differ":1,"two":3,"order":1,"definit":1,"contain":1,"method":1,"word":1,"proper":1,"compar":2,"also":1},"maxFreq":9,"totalTerms":49},"loc":0}