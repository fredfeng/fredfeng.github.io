{"id":22713,"className":"java.util.concurrent.ThreadPoolExecutor","methodName":"allowsCoreThreadTimeOut","signature":"\u003cjava.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()\u003e","javadoc":"/** \n * Returns true if this pool allows core threads to time out and terminate if no tasks arrive within the keepAlive time, being replaced if needed when new tasks arrive. When true, the same keep-alive policy applying to non-core threads applies also to core threads. When false (the default), core threads are never terminated due to lack of incoming tasks.\n * @return {@code true} if core threads are allowed to time out,else  {@code false}\n * @since 1.6\n */\n","tf":{"freq":{"fals":2,"need":1,"allow":3,"task":3,"true":3,"lack":1,"polici":1,"els":1,"non":1,"never":1,"appli":2,"time":4,"termin":2,"pool":1,"aliv":2,"replac":1,"thread":6,"due":1,"core":6,"arriv":2,"within":1,"also":1,"incom":1,"keep":2},"maxFreq":6,"totalTerms":49},"loc":3}