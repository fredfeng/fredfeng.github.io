{"id":21743,"className":"java.util.Map$Entry","methodName":"hashCode","signature":"\u003cjava.util.Map$Entry: int hashCode()\u003e","javadoc":"/** \n * Returns the hash code value for this map entry.  The hash code of a map entry \u003ctt\u003ee\u003c/tt\u003e is defined to be: \u003cpre\u003e (e.getKey()\u003d\u003dnull   ? 0 : e.getKey().hashCode()) ^ (e.getValue()\u003d\u003dnull ? 0 : e.getValue().hashCode()) \u003c/pre\u003e This ensures that \u003ctt\u003ee1.equals(e2)\u003c/tt\u003e implies that \u003ctt\u003ee1.hashCode()\u003d\u003de2.hashCode()\u003c/tt\u003e for any two Entries \u003ctt\u003ee1\u003c/tt\u003e and \u003ctt\u003ee2\u003c/tt\u003e, as required by the general contract of \u003ctt\u003eObject.hashCode\u003c/tt\u003e.\n * @return the hash code value for this map entry\n * @see Object#hashCode()\n * @see Object#equals(Object)\n * @see #equals(Object)\n */\n","tf":{"freq":{"defin":1,"contract":1,"hash":10,"entri":4,"equal":3,"object":5,"general":1,"ensur":1,"two":1,"requir":1,"pre":2,"map":3,"impli":1,"valu":4,"key":2},"maxFreq":10,"totalTerms":40},"loc":0}