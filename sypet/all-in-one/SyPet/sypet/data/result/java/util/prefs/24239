{"id":24239,"className":"java.util.prefs.AbstractPreferences","methodName":"remove","signature":"\u003cjava.util.prefs.AbstractPreferences: void remove(java.lang.String)\u003e","javadoc":"/** \n * Implements the \u003ctt\u003eremove(String)\u003c/tt\u003e method as per the specification in  {@link Preferences#remove(String)}. \u003cp\u003eThis implementation obtains this preference node\u0027s lock, checks that the node has not been removed, invokes {@link #removeSpi(String)} and if there are any preferencechange listeners, enqueues a notification event for processing by the event dispatch thread.\n * @param key key whose mapping is to be removed from the preference node.\n * @throws IllegalStateException if this node (or an ancestor) has beenremoved with the  {@link #removeNode()} method.\n */\n","tf":{"freq":{"link":3,"state":1,"enqueu":1,"notif":1,"event":2,"spi":1,"thread":1,"map":1,"dispatch":1,"ancestor":1,"listen":1,"key":2,"except":1,"preferencechang":1,"check":1,"whose":1,"invok":1,"beenremov":1,"lock":1,"remov":7,"illeg":1,"process":1,"node":5,"obtain":1,"specif":1,"per":1,"string":3,"method":2,"prefer":3},"maxFreq":7,"totalTerms":48},"loc":9}