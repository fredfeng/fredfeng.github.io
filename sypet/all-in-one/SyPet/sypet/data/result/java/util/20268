{"id":20268,"className":"java.util.Arrays","methodName":"copyOf","signature":"\u003cjava.util.Arrays: T[] copyOf(T[],int)\u003e","javadoc":"/** \n * Copies the specified array, truncating or padding with nulls (if necessary) so the copy has the specified length.  For all indices that are valid in both the original array and the copy, the two arrays will contain identical values.  For any indices that are valid in the copy but not the original, the copy will contain \u003ctt\u003enull\u003c/tt\u003e. Such indices will exist if and only if the specified length is greater than that of the original array. The resulting array is of exactly the same class as the original array.\n * @param original the array to be copied\n * @param newLength the length of the copy to be returned\n * @return a copy of the original array, truncated or padded with nullsto obtain the specified length\n * @throws NegativeArraySizeException if \u003ctt\u003enewLength\u003c/tt\u003e is negative\n * @throws NullPointerException if \u003ctt\u003eoriginal\u003c/tt\u003e is null\n * @since 1.6\n */\n","tf":{"freq":{"result":1,"pad":2,"valid":2,"except":2,"greater":1,"origin":7,"truncat":2,"necessari":1,"copi":9,"size":1,"specifi":4,"two":1,"obtain":1,"nullsto":1,"ident":1,"indic":3,"exact":1,"contain":2,"length":6,"will":3,"pointer":1,"negat":2,"valu":1,"exist":1,"array":9},"maxFreq":9,"totalTerms":65},"loc":3}