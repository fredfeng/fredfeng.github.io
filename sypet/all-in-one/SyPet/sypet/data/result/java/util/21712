{"id":21712,"className":"java.util.Timer","methodName":"schedule","signature":"\u003cjava.util.Timer: void schedule(java.util.TimerTask,long,long)\u003e","javadoc":"/** \n * Schedules the specified task for repeated \u003ci\u003efixed-delay execution\u003c/i\u003e, beginning after the specified delay.  Subsequent executions take place at approximately regular intervals separated by the specified period. \u003cp\u003eIn fixed-delay execution, each execution is scheduled relative to the actual execution time of the previous execution.  If an execution is delayed for any reason (such as garbage collection or other background activity), subsequent executions will be delayed as well. In the long run, the frequency of execution will generally be slightly lower than the reciprocal of the specified period (assuming the system clock underlying \u003ctt\u003eObject.wait(long)\u003c/tt\u003e is accurate). \u003cp\u003eFixed-delay execution is appropriate for recurring activities that require \"smoothness.\"  In other words, it is appropriate for activities where it is more important to keep the frequency accurate in the short run than in the long run.  This includes most animation tasks, such as blinking a cursor at regular intervals.  It also includes tasks wherein regular activity is performed in response to human input, such as automatically repeating a character as long as a key is held down.\n * @param task   task to be scheduled.\n * @param delay  delay in milliseconds before task is to be executed.\n * @param period time in milliseconds between successive task executions.\n * @throws IllegalArgumentException if {@code delay \u003c 0}, or {@code delay + System.currentTimeMillis() \u003c 0}, or {@code period \u003c\u003d 0}\n * @throws IllegalStateException if task was already scheduled orcancelled, timer was cancelled, or timer thread terminated.\n * @throws NullPointerException if {@code task} is null\n */\n","tf":{"freq":{"cursor":1,"lower":1,"reason":1,"milli":1,"cancel":1,"perform":1,"garbag":1,"approxim":1,"wait":1,"specifi":4,"time":3,"slight":1,"requir":1,"thread":1,"relat":1,"accur":2,"frequenc":2,"place":1,"key":1,"argument":1,"orcancel":1,"except":3,"respons":1,"charact":1,"period":4,"input":1,"system":2,"separ":1,"will":2,"pointer":1,"word":1,"delay":10,"execut":12,"collect":1,"anim":1,"smooth":1,"state":1,"schedul":5,"repeat":2,"well":1,"object":1,"activ":4,"run":3,"automat":1,"reciproc":1,"fix":3,"timer":2,"millisecond":2,"current":1,"wherein":1,"subsequ":2,"recur":1,"held":1,"assum":1,"includ":2,"previous":1,"regular":3,"clock":1,"task":9,"illeg":2,"general":1,"human":1,"begin":1,"interv":2,"termin":1,"blink":1,"take":1,"appropri":2,"background":1,"actual":1,"alreadi":1,"success":1,"also":1,"keep":1},"maxFreq":12,"totalTerms":137},"loc":7}