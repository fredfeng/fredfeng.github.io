{"id":21662,"className":"java.util.Formatter","methodName":"toString","signature":"\u003cjava.util.Formatter: java.lang.String toString()\u003e","javadoc":"/** \n * Returns the result of invoking  {@code toString()} on the destinationfor the output.  For example, the following code formats text into a {@link StringBuilder} then retrieves the resultant string:\u003cblockquote\u003e\u003cpre\u003e Formatter f \u003d new Formatter(); f.format(\"Last reboot at %tc\", lastRebootDate); String s \u003d f.toString(); // -\u0026gt; s \u003d\u003d \"Last reboot at Sat Jan 01 00:00:00 PST 2000\" \u003c/pre\u003e\u003c/blockquote\u003e \u003cp\u003e An invocation of this method behaves in exactly the same way as the invocation \u003cpre\u003e out().toString() \u003c/pre\u003e \u003cp\u003e Depending on the specification of  {@code toString} for the {@link Appendable}, the returned string may or may not contain the characters written to the destination.  For instance, buffers typically return their contents in  {@code toString()}, but streams cannot since the data is discarded.\n * @return  The result of invoking {@code toString()} on the destinationfor the output\n * @throws FormatterClosedException If this formatter has been closed by invoking its  {@link #close()} method\n */\n","tf":{"freq":{"result":3,"stream":1,"last":3,"behav":1,"link":3,"data":1,"typic":1,"way":1,"discard":1,"date":1,"formatt":4,"close":3,"buffer":1,"blockquot":2,"written":1,"exact":1,"jan":1,"follow":1,"append":1,"except":1,"may":2,"text":1,"charact":1,"depend":1,"invok":3,"builder":1,"format":2,"destinationfor":2,"invoc":2,"instanc":1,"content":1,"specif":1,"sat":1,"retriev":1,"pre":4,"contain":1,"string":11,"reboot":3,"exampl":1,"method":2,"output":2,"destin":1},"maxFreq":11,"totalTerms":77},"loc":4}