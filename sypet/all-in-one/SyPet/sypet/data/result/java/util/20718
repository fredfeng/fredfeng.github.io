{"id":20718,"className":"java.util.List","methodName":"hashCode","signature":"\u003cjava.util.List: int hashCode()\u003e","javadoc":"/** \n * Returns the hash code value for this list.  The hash code of a list is defined to be the result of the following calculation: \u003cpre\u003e int hashCode \u003d 1; for (E e : list) hashCode \u003d 31*hashCode + (e\u003d\u003dnull ? 0 : e.hashCode()); \u003c/pre\u003e This ensures that \u003ctt\u003elist1.equals(list2)\u003c/tt\u003e implies that \u003ctt\u003elist1.hashCode()\u003d\u003dlist2.hashCode()\u003c/tt\u003e for any two lists, \u003ctt\u003elist1\u003c/tt\u003e and \u003ctt\u003elist2\u003c/tt\u003e, as required by the general contract of  {@link Object#hashCode}.\n * @return the hash code value for this list\n * @see Object#equals(Object)\n * @see #equals(Object)\n */\n","tf":{"freq":{"defin":1,"result":1,"contract":1,"hash":11,"link":1,"calcul":1,"list":11,"equal":3,"object":4,"general":1,"ensur":1,"two":1,"requir":1,"pre":2,"impli":1,"valu":2,"follow":1},"maxFreq":11,"totalTerms":44},"loc":0}