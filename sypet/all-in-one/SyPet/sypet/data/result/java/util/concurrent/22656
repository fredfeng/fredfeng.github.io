{"id":22656,"className":"java.util.concurrent.TransferQueue","methodName":"tryTransfer","signature":"\u003cjava.util.concurrent.TransferQueue: boolean tryTransfer(E)\u003e","javadoc":"/** \n * Transfers the element to a waiting consumer immediately, if possible. \u003cp\u003eMore precisely, transfers the specified element immediately if there exists a consumer already waiting to receive it (in {@link #take} or timed {@link #poll(long,TimeUnit) poll}), otherwise returning  {@code false} without enqueuing the element.\n * @param e the element to transfer\n * @return {@code true} if the element was transferred, else{@code false}\n * @throws ClassCastException if the class of the specified elementprevents it from being added to this queue\n * @throws NullPointerException if the specified element is null\n * @throws IllegalArgumentException if some property of the specifiedelement prevents it from being added to this queue\n */\n","tf":{"freq":{"otherwis":1,"fals":2,"queue":2,"link":2,"enqueu":1,"possibl":1,"wait":2,"specifi":3,"consum":2,"time":2,"poll":2,"precis":1,"immedi":2,"exist":1,"argument":1,"element":6,"transfer":5,"except":3,"true":1,"prevent":1,"receiv":1,"illeg":1,"without":1,"els":1,"unit":1,"cast":1,"specifiedel":1,"take":1,"pointer":1,"ad":2,"elementprev":1,"alreadi":1,"properti":1},"maxFreq":6,"totalTerms":55},"loc":0}