{"id":20456,"className":"java.util.BitSet","methodName":"valueOf","signature":"\u003cjava.util.BitSet: java.util.BitSet valueOf(java.nio.ByteBuffer)\u003e","javadoc":"/** \n * Returns a new bit set containing all the bits in the given byte buffer between its position and limit. \u003cp\u003eMore precisely, \u003cbr\u003e {@code BitSet.valueOf(bb).get(n) \u003d\u003d ((bb.get(bb.position()+n/8) \u0026 (1\u003c\u003c(n%8))) !\u003d 0)}\u003cbr\u003efor all  {@code n \u003c 8 * bb.remaining()}. \u003cp\u003eThe byte buffer is not modified by this method, and no reference to the buffer is retained by the bit set.\n * @param bb a byte buffer containing a little-endian representationof a sequence of bits between its position and limit, to be used as the initial bits of the new bit set\n * @since 1.7\n */\n","tf":{"freq":{"littl":1,"limit":2,"use":1,"buffer":4,"bit":7,"given":1,"remain":1,"endian":1,"refer":1,"sequenc":1,"contain":2,"representationof":1,"precis":1,"modifi":1,"retain":1,"valu":2,"method":1,"initi":1,"posit":3},"maxFreq":7,"totalTerms":33},"loc":14}