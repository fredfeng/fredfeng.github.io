{"id":22964,"className":"java.util.concurrent.RejectedExecutionHandler","methodName":"rejectedExecution","signature":"\u003cjava.util.concurrent.RejectedExecutionHandler: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)\u003e","javadoc":"/** \n * Method that may be invoked by a  {@link ThreadPoolExecutor} when{@link ThreadPoolExecutor#execute execute} cannot accept atask.  This may occur when no more threads or queue slots are available because their bounds would be exceeded, or upon shutdown of the Executor. \u003cp\u003eIn the absence of other alternatives, the method may throw an unchecked  {@link RejectedExecutionException}, which will be propagated to the caller of  {@code execute}.\n * @param r the runnable task requested to be executed\n * @param executor the executor attempting to execute this task\n * @throws RejectedExecutionException if there is no remedy\n */\n","tf":{"freq":{"attempt":1,"caller":1,"queue":1,"reject":3,"accept":1,"remedi":1,"link":3,"uncheck":1,"altern":1,"pool":2,"request":1,"thread":3,"propag":1,"absenc":1,"slot":1,"runnabl":1,"shutdown":1,"may":3,"except":2,"task":2,"invok":1,"executor":5,"exceed":1,"avail":1,"will":1,"atask":1,"method":2,"execut":8,"bound":1,"occur":1,"upon":1},"maxFreq":8,"totalTerms":54},"loc":0}