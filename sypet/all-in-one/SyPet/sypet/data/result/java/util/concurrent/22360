{"id":22360,"className":"java.util.concurrent.ExecutorService","methodName":"awaitTermination","signature":"\u003cjava.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first.\n * @param timeout the maximum time to wait\n * @param unit the time unit of the timeout argument\n * @return \u003ctt\u003etrue\u003c/tt\u003e if this executor terminated and\u003ctt\u003efalse\u003c/tt\u003e if the timeout elapsed before termination\n * @throws InterruptedException if interrupted while waiting\n */\n","tf":{"freq":{"fals":1,"block":1,"wait":2,"whichev":1,"elaps":1,"time":2,"thread":1,"request":1,"current":1,"happen":1,"shutdown":1,"complet":1,"argument":1,"except":1,"task":1,"executor":1,"true":1,"interrupt":3,"unit":2,"termin":3,"await":1,"maximum":1,"execut":1,"first":1,"timeout":4,"occur":1},"maxFreq":4,"totalTerms":36},"loc":0}