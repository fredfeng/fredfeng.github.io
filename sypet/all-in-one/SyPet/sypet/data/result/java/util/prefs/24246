{"id":24246,"className":"java.util.prefs.AbstractPreferences","methodName":"getBoolean","signature":"\u003cjava.util.prefs.AbstractPreferences: boolean getBoolean(java.lang.String,boolean)\u003e","javadoc":"/** \n * Implements the \u003ctt\u003egetBoolean\u003c/tt\u003e method as per the specification in {@link Preferences#getBoolean(String,boolean)}. \u003cp\u003eThis implementation invokes  {@link #get(String,String) \u003ctt\u003eget(key,null)\u003c/tt\u003e}.  If the return value is non-null, it is compared with \u003ctt\u003e\"true\"\u003c/tt\u003e using  {@link String#equalsIgnoreCase(String)}.  If the comparison returns \u003ctt\u003etrue\u003c/tt\u003e, this invocation returns \u003ctt\u003etrue\u003c/tt\u003e.  Otherwise, the original return value is compared with \u003ctt\u003e\"false\"\u003c/tt\u003e, again using  {@link String#equalsIgnoreCase(String)}. If the comparison returns \u003ctt\u003etrue\u003c/tt\u003e, this invocation returns \u003ctt\u003efalse\u003c/tt\u003e.  Otherwise, this invocation returns \u003ctt\u003edef\u003c/tt\u003e.\n * @param key key whose associated value is to be returned as a boolean.\n * @param def the value to be returned in the event that thispreference node has no value associated with \u003ctt\u003ekey\u003c/tt\u003e or the associated value cannot be interpreted as a boolean.\n * @return the boolean value represented by the string associated with\u003ctt\u003ekey\u003c/tt\u003e in this preference node, or \u003ctt\u003edef\u003c/tt\u003e if the associated value does not exist or cannot be interpreted as a boolean.\n * @throws IllegalStateException if this node (or an ancestor) has beenremoved with the  {@link #removeNode()} method.\n * @throws NullPointerException if \u003ctt\u003ekey\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e.\n */\n","tf":{"freq":{"otherwis":2,"fals":2,"link":5,"state":1,"interpret":2,"use":2,"def":3,"associ":5,"event":1,"valu":8,"ancestor":1,"exist":1,"key":6,"except":2,"thisprefer":1,"ignor":2,"repres":1,"whose":1,"invok":1,"remov":1,"beenremov":1,"origin":1,"true":4,"equal":2,"illeg":1,"comparison":2,"invoc":3,"non":1,"node":4,"specif":1,"per":1,"string":8,"pointer":1,"method":2,"prefer":2,"compar":2},"maxFreq":8,"totalTerms":84},"loc":12}