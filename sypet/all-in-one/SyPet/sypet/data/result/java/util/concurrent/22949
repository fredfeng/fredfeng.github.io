{"id":22949,"className":"java.util.concurrent.ForkJoinTask","methodName":"getQueuedTaskCount","signature":"\u003cjava.util.concurrent.ForkJoinTask: int getQueuedTaskCount()\u003e","javadoc":"/** \n * Returns an estimate of the number of tasks that have been forked by the current worker thread but not yet executed. This value may be useful for heuristic decisions about whether to fork other tasks. \u003cp\u003eThis method may be invoked only from within  {@code ForkJoinPool} computations (as may be determined using method{@link #inForkJoinPool}).  Attempts to invoke in other contexts result in exceptions or errors, possibly including  {@code ClassCastException}.\n * @return the number of tasks\n */\n","tf":{"freq":{"attempt":1,"result":1,"count":1,"decis":1,"link":1,"possibl":1,"use":2,"whether":1,"estim":1,"pool":2,"thread":1,"current":1,"worker":1,"valu":1,"heurist":1,"except":2,"fork":4,"may":3,"includ":1,"error":1,"task":4,"invok":2,"queu":1,"number":2,"join":2,"cast":1,"determin":1,"context":1,"comput":1,"method":2,"within":1,"execut":1,"yet":1},"maxFreq":4,"totalTerms":48},"loc":4}