{"id":23387,"className":"java.util.concurrent.locks.ReentrantReadWriteLock","methodName":"hasQueuedThread","signature":"\u003cjava.util.concurrent.locks.ReentrantReadWriteLock: boolean hasQueuedThread(java.lang.Thread)\u003e","javadoc":"/** \n * Queries whether the given thread is waiting to acquire either the read or write lock. Note that because cancellations may occur at any time, a  {@code true} return does not guaranteethat this thread will ever acquire a lock.  This method is designed primarily for use in monitoring of the system state.\n * @param thread the thread\n * @return {@code true} if the given thread is queued waiting for this lock\n * @throws NullPointerException if the thread is null\n */\n","tf":{"freq":{"acquir":2,"state":1,"use":1,"cancel":1,"wait":2,"whether":1,"primarili":1,"time":1,"given":2,"guaranteethat":1,"thread":7,"write":1,"read":1,"note":1,"except":1,"may":1,"monitor":1,"lock":3,"queu":2,"true":2,"queri":1,"system":1,"either":1,"will":1,"pointer":1,"method":1,"ever":1,"design":1,"occur":1},"maxFreq":7,"totalTerms":42},"loc":3}