{"id":20971,"className":"java.util.TreeMap","methodName":"TreeMap","signature":"\u003cjava.util.TreeMap: void TreeMap(java.util.Comparator)\u003e","javadoc":"/** \n * Constructs a new, empty tree map, ordered according to the given comparator.  All keys inserted into the map must be \u003cem\u003emutually comparable\u003c/em\u003e by the given comparator:  {@code comparator.compare(k1,k2)} must not throw a {@code ClassCastException} for any keys{@code k1} and {@code k2} in the map.  If the user attempts to puta key into the map that violates this constraint, the  {@code put(Objectkey, Object value)} call will throw a{@code ClassCastException}.\n * @param comparator the comparator that will be used to order this map.If  {@code null}, the  {@linkplain Comparable naturalordering} of the keys will be used.\n */\n","tf":{"freq":{"attempt":1,"linkplain":1,"call":1,"put":1,"use":2,"constraint":1,"object":1,"violat":1,"must":2,"given":2,"order":2,"tree":2,"map":6,"valu":1,"key":4,"naturalord":1,"except":2,"puta":1,"objectkey":1,"accord":1,"empti":1,"mutual":1,"cast":2,"will":3,"construct":1,"insert":1,"compar":8,"user":1},"maxFreq":8,"totalTerms":52},"loc":3}