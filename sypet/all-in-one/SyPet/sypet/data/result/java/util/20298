{"id":20298,"className":"java.util.Arrays","methodName":"hashCode","signature":"\u003cjava.util.Arrays: int hashCode(short[])\u003e","javadoc":"/** \n * Returns a hash code based on the contents of the specified array. For any two \u003ctt\u003eshort\u003c/tt\u003e arrays \u003ctt\u003ea\u003c/tt\u003e and \u003ctt\u003eb\u003c/tt\u003e such that \u003ctt\u003eArrays.equals(a, b)\u003c/tt\u003e, it is also the case that \u003ctt\u003eArrays.hashCode(a) \u003d\u003d Arrays.hashCode(b)\u003c/tt\u003e. \u003cp\u003eThe value returned by this method is the same value that would be obtained by invoking the  {@link List#hashCode() \u003ctt\u003ehashCode\u003c/tt\u003e}method on a  {@link List} containing a sequence of {@link Short}instances representing the elements of \u003ctt\u003ea\u003c/tt\u003e in the same order. If \u003ctt\u003ea\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e, this method returns 0.\n * @param a the array whose hash value to compute\n * @return a content-based hash code for \u003ctt\u003ea\u003c/tt\u003e\n * @since 1.5\n */\n","tf":{"freq":{"element":1,"whose":1,"repres":1,"hash":8,"invok":1,"link":3,"list":2,"equal":1,"instanc":1,"specifi":1,"content":2,"two":1,"obtain":1,"order":1,"sequenc":1,"contain":1,"base":2,"comput":1,"valu":3,"method":3,"also":1,"array":6},"maxFreq":8,"totalTerms":43},"loc":10}