{"id":22853,"className":"java.util.concurrent.Executors","methodName":"privilegedThreadFactory","signature":"\u003cjava.util.concurrent.Executors: java.util.concurrent.ThreadFactory privilegedThreadFactory()\u003e","javadoc":"/** \n * Returns a thread factory used to create new threads that have the same permissions as the current thread. This factory creates threads with the same settings as  {@link Executors#defaultThreadFactory}, additionally setting the AccessControlContext and contextClassLoader of new threads to be the same as the thread invoking this \u003ctt\u003eprivilegedThreadFactory\u003c/tt\u003e method.  A new \u003ctt\u003eprivilegedThreadFactory\u003c/tt\u003e can be created within an {@link AccessController#doPrivileged} action setting thecurrent thread\u0027s access control context to create threads with the selected permission settings holding within that action. \u003cp\u003e Note that while tasks running within such threads will have the same access control and class loader settings as the current thread, they need not have the same  {@link java.lang.ThreadLocal} or {@link java.lang.InheritableThreadLocal} values. If necessary,particular values of thread locals can be set or reset before any task runs in  {@link ThreadPoolExecutor} subclasses using{@link ThreadPoolExecutor#beforeExecute}. Also, if it is necessary to initialize worker threads to have the same InheritableThreadLocal settings as some other designated thread, you can create a custom ThreadFactory in which that thread waits for and services requests to create others that will inherit its values.\n * @return a thread factory\n * @throws AccessControlException if the current access controlcontext does not have permission to both get and set context class loader.\n */\n","tf":{"freq":{"need":1,"servic":1,"link":6,"particular":1,"use":2,"wait":1,"run":2,"necessari":2,"lang":2,"pool":2,"factori":8,"request":1,"thread":25,"current":3,"permiss":3,"action":2,"controlcontext":1,"worker":1,"reset":1,"valu":3,"initi":1,"privileg":4,"note":1,"custom":1,"control":5,"addit":1,"except":1,"creat":6,"loader":3,"invok":1,"select":1,"task":2,"executor":3,"hold":1,"access":6,"subclass":1,"will":2,"context":4,"thecurr":1,"java":2,"method":1,"local":4,"within":3,"execut":1,"also":1,"design":1},"maxFreq":25,"totalTerms":126},"loc":3}