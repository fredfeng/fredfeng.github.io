{"id":20370,"className":"java.util.ResourceBundle$Control","methodName":"getFormats","signature":"\u003cjava.util.ResourceBundle$Control: java.util.List\u003cjava.lang.String\u003e getFormats(java.lang.String)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eList\u003c/code\u003e of \u003ccode\u003eString\u003c/code\u003es containing formats to be used to load resource bundles for the given \u003ccode\u003ebaseName\u003c/code\u003e. The \u003ccode\u003eResourceBundle.getBundle\u003c/code\u003e factory method tries to load resource bundles with formats in the order specified by the list. The list returned by this method must have at least one \u003ccode\u003eString\u003c/code\u003e. The predefined formats are \u003ccode\u003e\"java.class\"\u003c/code\u003e for class-based resource bundles and \u003ccode\u003e\"java.properties\"\u003c/code\u003e for  {@linkplain PropertyResourceBundle properties-based} ones. Strings startingwith \u003ccode\u003e\"java.\"\u003c/code\u003e are reserved for future extensions and must not be used by application-defined formats. \u003cp\u003eIt is not a requirement to return an immutable (unmodifiable) \u003ccode\u003eList\u003c/code\u003e.  However, the returned \u003ccode\u003eList\u003c/code\u003e must not be mutated after it has been returned by \u003ccode\u003egetFormats\u003c/code\u003e. \u003cp\u003eThe default implementation returns  {@link #FORMAT_DEFAULT} sothat the \u003ccode\u003eResourceBundle.getBundle\u003c/code\u003e factory method looks up first class-based resource bundles, then properties-based ones.\n * @param baseName the base name of the resource bundle, a fully qualified class name\n * @return a \u003ccode\u003eList\u003c/code\u003e of \u003ccode\u003eString\u003c/code\u003es containingformats for loading resource bundles.\n * @exception NullPointerException if \u003ccode\u003ebaseName\u003c/code\u003e is null\n * @see #FORMAT_DEFAULT\n * @see #FORMAT_CLASS\n * @see #FORMAT_PROPERTIES\n */\n","tf":{"freq":{"defin":1,"linkplain":1,"startingwith":1,"least":1,"link":1,"one":3,"predefin":1,"use":2,"applic":1,"must":3,"specifi":1,"resourc":9,"requir":1,"given":1,"order":1,"reserv":1,"containingformat":1,"extens":1,"factori":2,"name":5,"howev":1,"look":1,"except":2,"futur":1,"sothat":1,"immut":1,"fulli":1,"list":6,"mutat":1,"format":6,"unmodifi":1,"contain":1,"string":4,"base":8,"pointer":1,"load":3,"method":3,"java":3,"properti":4,"first":1,"qualifi":1,"bundl":11},"maxFreq":11,"totalTerms":100},"loc":6}