{"id":24198,"className":"java.util.prefs.Preferences","methodName":"get","signature":"\u003cjava.util.prefs.Preferences: java.lang.String get(java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Returns the value associated with the specified key in this preference node.  Returns the specified default if there is no value associated with the key, or the backing store is inaccessible. \u003cp\u003eSome implementations may store default values in their backing stores.  If there is no value associated with the specified key but there is such a \u003ci\u003estored default\u003c/i\u003e, it is returned in preference to the specified default.\n * @param key key whose associated value is to be returned.\n * @param def the value to be returned in the event that thispreference node has no value associated with \u003ctt\u003ekey\u003c/tt\u003e.\n * @return the value associated with \u003ctt\u003ekey\u003c/tt\u003e, or \u003ctt\u003edef\u003c/tt\u003eif no value is associated with \u003ctt\u003ekey\u003c/tt\u003e, or the backing store is inaccessible.\n * @throws IllegalStateException if this node (or an ancestor) has beenremoved with the  {@link #removeNode()} method.\n * @throws NullPointerException if \u003ctt\u003ekey\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e.  (A\u003ctt\u003enull\u003c/tt\u003e value for \u003ctt\u003edef\u003c/tt\u003e \u003ci\u003eis\u003c/i\u003e permitted.)\n */\n","tf":{"freq":{"inaccess":2,"except":2,"thisprefer":1,"may":1,"store":5,"whose":1,"permit":1,"link":1,"remov":1,"beenremov":1,"state":1,"back":3,"illeg":1,"specifi":4,"node":4,"def":3,"associ":7,"event":1,"pointer":1,"method":1,"valu":10,"prefer":2,"ancestor":1,"key":9},"maxFreq":10,"totalTerms":64},"loc":0}