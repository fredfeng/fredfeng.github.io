{"id":23331,"className":"java.util.concurrent.locks.ReentrantLock","methodName":"hasQueuedThread","signature":"\u003cjava.util.concurrent.locks.ReentrantLock: boolean hasQueuedThread(java.lang.Thread)\u003e","javadoc":"/** \n * Queries whether the given thread is waiting to acquire this lock. Note that because cancellations may occur at any time, a {@code true} return does not guarantee that this threadwill ever acquire this lock.  This method is designed primarily for use in monitoring of the system state.\n * @param thread the thread\n * @return {@code true} if the given thread is queued waiting for this lock\n * @throws NullPointerException if the thread is null\n */\n","tf":{"freq":{"acquir":2,"state":1,"use":1,"cancel":1,"wait":2,"whether":1,"primarili":1,"time":1,"given":2,"threadwil":1,"thread":6,"note":1,"except":1,"may":1,"monitor":1,"guarante":1,"lock":3,"queu":2,"true":2,"queri":1,"system":1,"pointer":1,"method":1,"ever":1,"design":1,"occur":1},"maxFreq":6,"totalTerms":38},"loc":3}