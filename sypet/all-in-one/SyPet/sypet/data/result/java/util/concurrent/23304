{"id":23304,"className":"java.util.concurrent.Phaser","methodName":"awaitAdvance","signature":"\u003cjava.util.concurrent.Phaser: int awaitAdvance(int)\u003e","javadoc":"/** \n * Awaits the phase of this phaser to advance from the given phase value, returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.\n * @param phase an arrival phase number, or negative value ifterminated; this argument is normally the value returned by a previous call to  {@code arrive} or {@code arriveAndDeregister}.\n * @return the next arrival phase number, or the argument if it isnegative, or the (negative)  {@linkplain #getPhase() current phase}if terminated\n */\n","tf":{"freq":{"argument":2,"linkplain":1,"call":1,"previous":1,"next":1,"normal":1,"equal":1,"number":2,"isneg":1,"iftermin":1,"termin":2,"await":2,"given":2,"advanc":2,"deregist":1,"phaser":2,"current":2,"negat":2,"valu":4,"immedi":1,"arriv":4,"phase":9},"maxFreq":9,"totalTerms":45},"loc":10}