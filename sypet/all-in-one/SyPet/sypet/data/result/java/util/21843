{"id":21843,"className":"java.util.Collections","methodName":"replaceAll","signature":"\u003cjava.util.Collections: boolean replaceAll(java.util.List,T,T)\u003e","javadoc":"/** \n * Replaces all occurrences of one specified value in a list with another. More formally, replaces with \u003ctt\u003enewVal\u003c/tt\u003e each element \u003ctt\u003ee\u003c/tt\u003e in \u003ctt\u003elist\u003c/tt\u003e such that \u003ctt\u003e(oldVal\u003d\u003dnull ? e\u003d\u003dnull : oldVal.equals(e))\u003c/tt\u003e. (This method has no effect on the size of the list.)\n * @param list the list in which replacement is to occur.\n * @param oldVal the old value to be replaced.\n * @param newVal the new value with which \u003ctt\u003eoldVal\u003c/tt\u003e is to bereplaced.\n * @return \u003ctt\u003etrue\u003c/tt\u003e if \u003ctt\u003elist\u003c/tt\u003e contained one or more elements\u003ctt\u003ee\u003c/tt\u003e such that \u003ctt\u003e(oldVal\u003d\u003dnull ?  e\u003d\u003dnull : oldVal.equals(e))\u003c/tt\u003e.\n * @throws UnsupportedOperationException if the specified list orits list-iterator does not support the \u003ctt\u003eset\u003c/tt\u003e operation.\n * @since  1.4\n */\n","tf":{"freq":{"val":8,"element":2,"except":1,"unsupport":1,"bereplac":1,"old":7,"support":1,"orit":1,"one":2,"true":1,"list":8,"equal":2,"anoth":1,"size":1,"occurr":1,"specifi":2,"formal":1,"effect":1,"oper":2,"contain":1,"replac":5,"method":1,"valu":3,"iter":1,"occur":1},"maxFreq":8,"totalTerms":56},"loc":39}