{"id":21505,"className":"java.util.SimpleTimeZone","methodName":"SimpleTimeZone","signature":"\u003cjava.util.SimpleTimeZone: void SimpleTimeZone(int,java.lang.String,int,int,int,int,int,int,int,int,int)\u003e","javadoc":"/** \n * Constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time. Both \u003ccode\u003estartTime\u003c/code\u003e and \u003ccode\u003eendTime\u003c/code\u003e are assumed to be represented in the wall clock time. This constructor is equivalent to: \u003cpre\u003e\u003ccode\u003e SimpleTimeZone(rawOffset, ID, startMonth, startDay, startDayOfWeek, startTime, SimpleTimeZone. {@link #WALL_TIME}, endMonth, endDay, endDayOfWeek, endTime, SimpleTimeZone. {@link #WALL_TIME}, dstSavings) \u003c/code\u003e\u003c/pre\u003e\n * @param rawOffset       The given base time zone offset from GMT.\n * @param ID              The time zone ID which is given to this object.\n * @param startMonth      The daylight saving time starting month. Month isa  {@link Calendar#MONTH MONTH} fieldvalue (0-based. e.g., 0 for January).\n * @param startDay        The day of the month on which the daylight saving time starts.See the class description for the special cases of this parameter.\n * @param startDayOfWeek  The daylight saving time starting day-of-week.See the class description for the special cases of this parameter.\n * @param startTime       The daylight saving time starting time in local wall clocktime, which is local standard time in this case.\n * @param endMonth        The daylight saving time ending month. Month isa  {@link Calendar#MONTH MONTH} fieldvalue (0-based. e.g., 9 for October).\n * @param endDay          The day of the month on which the daylight saving time ends.See the class description for the special cases of this parameter.\n * @param endDayOfWeek    The daylight saving time ending day-of-week.See the class description for the special cases of this parameter.\n * @param endTime         The daylight saving ending time in local wall clock time,which is local daylight time in this case.\n * @param dstSavings      The amount of time in milliseconds saved duringdaylight saving time.\n * @exception IllegalArgumentException if the month, day, dayOfWeek, or timeparameters are out of range for the start or end rule\n * @since 1.2\n */\n","tf":{"freq":{"raw":2,"save":12,"simpl":5,"link":4,"object":1,"dst":2,"duringdaylight":1,"amount":1,"time":31,"given":3,"equival":1,"rang":1,"millisecond":1,"rule":2,"isa":2,"clocktim":1,"timeparamet":1,"offset":4,"end":15,"calendar":2,"constructor":1,"argument":1,"except":2,"assum":1,"standard":1,"januari":1,"repres":1,"clock":2,"paramet":4,"descript":4,"illeg":1,"fieldvalu":2,"start":15,"pre":2,"octob":1,"base":4,"month":11,"special":4,"local":4,"construct":1,"day":14,"daylight":10,"zone":9,"wall":3,"week":7},"maxFreq":31,"totalTerms":198},"loc":6}