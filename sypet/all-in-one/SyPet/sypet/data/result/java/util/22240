{"id":22240,"className":"java.util.Locale","methodName":"forLanguageTag","signature":"\u003cjava.util.Locale: java.util.Locale forLanguageTag(java.lang.String)\u003e","javadoc":"/** \n * Returns a locale for the specified IETF BCP 47 language tag string. \u003cp\u003eIf the specified language tag contains any ill-formed subtags, the first such subtag and all following subtags are ignored.  Compare to  {@link Locale.Builder#setLanguageTag} which throws an exceptionin this case. \u003cp\u003eThe following \u003cb\u003econversions\u003c/b\u003e are performed:\u003cul\u003e \u003cli\u003eThe language code \"und\" is mapped to language \"\". \u003cli\u003eThe language codes \"he\", \"yi\", and \"id\" are mapped to \"iw\", \"ji\", and \"in\" respectively. (This is the same canonicalization that\u0027s done in Locale\u0027s constructors.) \u003cli\u003eThe portion of a private use subtag prefixed by \"lvariant\", if any, is removed and appended to the variant field in the result locale (without case normalization).  If it is then empty, the private use subtag is discarded: \u003cpre\u003e Locale loc; loc \u003d Locale.forLanguageTag(\"en-US-x-lvariant-POSIX\"); loc.getVariant(); // returns \"POSIX\" loc.getExtension(\u0027x\u0027); // returns null loc \u003d Locale.forLanguageTag(\"de-POSIX-x-URP-lvariant-Abc-Def\"); loc.getVariant(); // returns \"POSIX_Abc_Def\" loc.getExtension(\u0027x\u0027); // returns \"urp\" \u003c/pre\u003e \u003cli\u003eWhen the languageTag argument contains an extlang subtag, the first such subtag is used as the language, and the primary language subtag and other extlang subtags are ignored: \u003cpre\u003e Locale.forLanguageTag(\"ar-aao\").getLanguage(); // returns \"aao\" Locale.forLanguageTag(\"en-abc-def-us\").toString(); // returns \"abc_US\" \u003c/pre\u003e \u003cli\u003eCase is normalized except for variant tags, which are left unchanged.  Language is normalized to lower case, script to title case, country to upper case, and extensions to lower case. \u003cli\u003eIf, after processing, the locale would exactly match either ja_JP_JP or th_TH_TH with no extensions, the appropriate extensions are added as though the constructor had been called: \u003cpre\u003e Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\").toLanguageTag(); // returns \"ja-JP-u-ca-japanese-x-lvariant-JP\" Locale.forLanguageTag(\"th-TH-x-lvariant-TH\").toLanguageTag(); // returns \"th-TH-u-nu-thai-x-lvariant-TH\" \u003cpre\u003e\u003c/ul\u003e \u003cp\u003eThis implements the \u0027Language-Tag\u0027 production of BCP47, and so supports grandfathered (regular and irregular) as well as private use language tags.  Stand alone private use tags are represented as empty language and extension \u0027x-whatever\u0027, and grandfathered tags are converted to their canonical replacements where they exist. \u003cp\u003eGrandfathered tags with canonical replacements are as follows: \u003ctable\u003e \u003ctbody align\u003d\"center\"\u003e \u003ctr\u003e\u003cth\u003egrandfathered tag\u003c/th\u003e\u003cth\u003e\u0026nbsp;\u003c/th\u003e\u003cth\u003emodern replacement\u003c/th\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003eart-lojban\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003ejbo\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-ami\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003eami\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-bnn\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003ebnn\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-hak\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003ehak\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-klingon\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003etlh\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-lux\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003elb\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-navajo\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003env\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-pwn\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003epwn\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-tao\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003etao\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-tay\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003etay\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-tsu\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003etsu\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003eno-bok\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003enb\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003eno-nyn\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003enn\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003esgn-BE-FR\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003esfb\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003esgn-BE-NL\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003evgt\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003esgn-CH-DE\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003esgg\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ezh-guoyu\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003ecmn\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ezh-hakka\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003ehak\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ezh-min-nan\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003enan\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ezh-xiang\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003ehsn\u003c/td\u003e\u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003cp\u003eGrandfathered tags with no modern replacement will be converted as follows: \u003ctable\u003e \u003ctbody align\u003d\"center\"\u003e \u003ctr\u003e\u003cth\u003egrandfathered tag\u003c/th\u003e\u003cth\u003e\u0026nbsp;\u003c/th\u003e\u003cth\u003econverts to\u003c/th\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ecel-gaulish\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003extg-x-cel-gaulish\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003een-GB-oed\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003een-GB-x-oed\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-default\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003een-x-i-default\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-enochian\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003eund-x-i-enochian\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ei-mingo\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003esee-x-i-mingo\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd\u003ezh-min\u003c/td\u003e\u003ctd\u003e\u0026nbsp;\u003c/td\u003e\u003ctd\u003enan-x-zh-min\u003c/td\u003e\u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003cp\u003eFor a list of all grandfathered tags, see the IANA Language Subtag Registry (search for \"Type: grandfathered\"). \u003cp\u003e\u003cb\u003eNote\u003c/b\u003e: there is no guarantee that \u003ccode\u003etoLanguageTag\u003c/code\u003e and \u003ccode\u003eforLanguageTag\u003c/code\u003e will round-trip.\n * @param languageTag the language tag\n * @return The locale that best represents the language tag.\n * @throws NullPointerException if \u003ccode\u003elanguageTag\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @see #toLanguageTag()\n * @see java.util.Locale.Builder#setLanguageTag(String)\n * @since 1.7\n */\n","tf":{"freq":{"abc":4,"extlang":2,"lower":2,"tag":31,"languag":32,"vgt":1,"specifi":2,"pwn":2,"center":2,"xiang":1,"search":1,"lux":1,"nbsp":28,"ignor":2,"unchang":1,"support":1,"form":1,"done":1,"art":1,"remov":1,"builder":2,"loc":7,"registri":1,"aao":2,"without":1,"sgn":3,"und":2,"tay":2,"enochian":2,"prefix":1,"will":2,"pointer":1,"sgg":1,"tao":2,"subtag":10,"grandfath":8,"link":1,"use":5,"cmn":1,"discard":1,"variant":4,"modern":2,"navajo":1,"def":3,"tsu":2,"cel":2,"xtg":1,"map":2,"best":1,"left":1,"klingon":1,"note":1,"primari":1,"portion":1,"min":3,"tlh":1,"repres":2,"titl":1,"o":2,"empti":2,"field":1,"exceptionin":1,"process":1,"product":1,"either":1,"appropri":1,"tabl":4,"string":3,"alon":1,"lojban":1,"respect":1,"nyn":1,"gaulish":2,"hak":3,"normal":3,"bok":1,"thai":1,"round":1,"perform":1,"type":1,"though":1,"bnn":2,"exact":1,"mingo":2,"whatev":1,"follow":4,"argument":1,"append":1,"except":2,"align":2,"hakka":1,"script":1,"urp":1,"contain":2,"jbo":1,"irregular":1,"match":1,"compar":1,"util":1,"hsn":1,"countri":1,"canon":2,"result":1,"call":1,"nan":3,"ami":2,"japanes":1,"convers":1,"convert":3,"sfb":1,"well":1,"upper":1,"guoyu":1,"extens":6,"trip":1,"exist":1,"constructor":2,"ill":1,"regular":1,"tbodi":4,"guarante":1,"lvariant":7,"canonic":1,"list":1,"stand":1,"pre":6,"replac":4,"ad":1,"java":1,"local":14,"first":2},"maxFreq":32,"totalTerms":338},"loc":12}