{"id":22025,"className":"java.util.Collections","methodName":"checkedList","signature":"\u003cjava.util.Collections: java.util.List\u003cE\u003e checkedList(java.util.List,java.lang.Class)\u003e","javadoc":"/** \n * Returns a dynamically typesafe view of the specified list. Any attempt to insert an element of the wrong type will result in an immediate  {@link ClassCastException}.  Assuming a list contains no incorrectly typed elements prior to the time a dynamically typesafe view is generated, and that all subsequent access to the list takes place through the view, it is \u003ci\u003eguaranteed\u003c/i\u003e that the list cannot contain an incorrectly typed element. \u003cp\u003eA discussion of the use of dynamically typesafe views may be found in the documentation for the  {@link #checkedCollection checkedCollection} method.\u003cp\u003eThe returned list will be serializable if the specified list is serializable. \u003cp\u003eSince  {@code null} is considered to be a value of any referencetype, the returned list permits insertion of null elements whenever the backing list does.\n * @param list the list for which a dynamically typesafe view is to bereturned\n * @param type the type of element that {@code list} is permitted to hold\n * @return a dynamically typesafe view of the specified list\n * @since 1.5\n */\n","tf":{"freq":{"attempt":1,"result":1,"permit":2,"serializ":2,"link":2,"use":1,"type":5,"consid":1,"specifi":3,"prior":1,"document":1,"time":1,"bereturn":1,"typesaf":5,"valu":1,"immedi":1,"place":1,"incorrect":2,"subsequ":1,"dynam":5,"whenev":1,"element":5,"may":1,"except":1,"assum":1,"check":3,"guarante":1,"hold":1,"back":1,"list":13,"access":1,"referencetyp":1,"cast":1,"discuss":1,"take":1,"contain":2,"generat":1,"will":2,"method":1,"wrong":1,"view":6,"insert":2,"collect":2,"found":1},"maxFreq":13,"totalTerms":89},"loc":5}