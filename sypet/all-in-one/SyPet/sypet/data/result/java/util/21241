{"id":21241,"className":"java.util.Collection","methodName":"removeAll","signature":"\u003cjava.util.Collection: boolean removeAll(java.util.Collection)\u003e","javadoc":"/** \n * Removes all of this collection\u0027s elements that are also contained in the specified collection (optional operation).  After this call returns, this collection will contain no elements in common with the specified collection.\n * @param c collection containing elements to be removed from this collection\n * @return \u003ctt\u003etrue\u003c/tt\u003e if this collection changed as a result of thecall\n * @throws UnsupportedOperationException if the \u003ctt\u003eremoveAll\u003c/tt\u003e methodis not supported by this collection\n * @throws ClassCastException if the types of one or more elementsin this collection are incompatible with the specified collection (\u003ca href\u003d\"#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws NullPointerException if this collection contains one or morenull elements and the specified collection does not support null elements (\u003ca href\u003d\"#optional-restrictions\"\u003eoptional\u003c/a\u003e), or if the specified collection is null\n * @see #remove(Object)\n * @see #contains(Object)\n */\n","tf":{"freq":{"call":1,"result":1,"unsupport":1,"common":1,"one":2,"object":2,"type":1,"morenul":1,"specifi":5,"oper":2,"elementsin":1,"methodi":1,"href":2,"option":5,"element":5,"except":3,"thecal":1,"support":2,"remov":5,"true":1,"incompat":1,"restrict":2,"cast":1,"contain":5,"will":1,"pointer":1,"chang":1,"also":1,"collect":13},"maxFreq":13,"totalTerms":69},"loc":0}