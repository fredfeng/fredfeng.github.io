{"id":23472,"className":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater","methodName":"compareAndSet","signature":"\u003cjava.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(T,int,int)\u003e","javadoc":"/** \n * Atomically sets the field of the given object managed by this updater to the given updated value if the current value  {@code \u003d\u003d} theexpected value. This method is guaranteed to be atomic with respect to other calls to  {@code compareAndSet} and {@code set}, but not necessarily with respect to other changes in the field.\n * @param obj An object whose field to conditionally set\n * @param expect the expected value\n * @param update the new value\n * @return true if successful\n * @throws ClassCastException if {@code obj} is not an instanceof the class possessing the field established in the constructor\n */\n","tf":{"freq":{"atom":2,"call":1,"object":2,"expect":2,"given":2,"theexpect":1,"possess":1,"current":1,"valu":5,"constructor":1,"condit":1,"except":1,"whose":1,"guarante":1,"manag":1,"establish":1,"true":1,"field":4,"updat":3,"cast":1,"method":1,"obj":2,"chang":1,"necessarili":1,"compar":2,"success":1,"respect":2},"maxFreq":5,"totalTerms":43},"loc":0}