{"id":23980,"className":"java.util.regex.MatchResult","methodName":"end","signature":"\u003cjava.util.regex.MatchResult: int end(int)\u003e","javadoc":"/** \n * Returns the offset after the last character of the subsequence captured by the given group during this match. \u003cp\u003e \u003ca href\u003d\"Pattern.html#cg\"\u003eCapturing groups\u003c/a\u003e are indexed from left to right, starting at one.  Group zero denotes the entire pattern, so the expression \u003ci\u003em.\u003c/i\u003e\u003ctt\u003eend(0)\u003c/tt\u003e is equivalent to \u003ci\u003em.\u003c/i\u003e\u003ctt\u003eend()\u003c/tt\u003e.  \u003c/p\u003e\n * @param group The index of a capturing group in this matcher\u0027s pattern\n * @return  The offset after the last character captured by the group,or \u003ctt\u003e-1\u003c/tt\u003e if the match was successful but the group itself did not match anything\n * @throws IllegalStateException If no match has yet been attempted, or if the previous match operation failed\n * @throws IndexOutOfBoundsException If there is no capturing group in the pattern with the given index\n */\n","tf":{"freq":{"attempt":1,"anyth":1,"last":2,"one":1,"state":1,"denot":1,"zero":1,"express":1,"matcher":1,"fail":1,"given":2,"oper":1,"equival":1,"left":1,"captur":5,"subsequ":1,"offset":2,"href":1,"right":1,"end":3,"except":2,"index":4,"previous":1,"charact":2,"illeg":1,"pattern":4,"start":1,"html":1,"match":5,"group":8,"entir":1,"success":1,"bound":1,"yet":1},"maxFreq":8,"totalTerms":62},"loc":0}