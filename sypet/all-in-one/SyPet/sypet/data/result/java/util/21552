{"id":21552,"className":"java.util.Calendar","methodName":"clear","signature":"\u003cjava.util.Calendar: void clear(int)\u003e","javadoc":"/** \n * Sets the given calendar field value and the time value (millisecond offset from the \u003ca href\u003d\"#Epoch\"\u003eEpoch\u003c/a\u003e) of this \u003ccode\u003eCalendar\u003c/code\u003e undefined. This means that  {@link #isSet(int) isSet(field)} will return \u003ccode\u003efalse\u003c/code\u003e, andthe date and time calculations will treat the field as if it had never been set. A \u003ccode\u003eCalendar\u003c/code\u003e implementation class may use the field\u0027s specific default value for date and time calculations. \u003cp\u003eThe  {@link #HOUR_OF_DAY},  {@link #HOUR} and {@link #AM_PM}fields are handled independently and the \u003ca href\u003d\"#time_resolution\"\u003ethe resolution rule for the time of day\u003c/a\u003e is applied. Clearing one of the fields doesn\u0027t reset the hour of day value of this \u003ccode\u003eCalendar\u003c/code\u003e. Use  {@link #set(int,int) set(Calendar.HOUR_OF_DAY, 0)} to reset the hourvalue.\n * @param field the calendar field to be cleared.\n * @see #clear()\n */\n","tf":{"freq":{"fals":1,"hourvalu":1,"one":1,"link":5,"use":2,"date":2,"resolut":2,"clear":4,"independ":1,"time":5,"given":1,"millisecond":1,"rule":1,"reset":2,"mean":1,"valu":4,"undefin":1,"offset":1,"href":2,"calendar":6,"may":1,"epoch":2,"calcul":2,"hour":1,"handl":1,"field":8,"appli":1,"never":1,"specif":1,"will":2,"day":2,"andth":1,"treat":1},"maxFreq":8,"totalTerms":68},"loc":8}