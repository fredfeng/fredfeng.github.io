{"id":22891,"className":"java.util.concurrent.ForkJoinPool","methodName":"ForkJoinPool","signature":"\u003cjava.util.concurrent.ForkJoinPool: void ForkJoinPool()\u003e","javadoc":"/** \n * Creates a  {@code ForkJoinPool} with parallelism equal to {@link java.lang.Runtime#availableProcessors}, using the  {@linkplain #defaultForkJoinWorkerThreadFactory default thread factory}, no UncaughtExceptionHandler, and non-async LIFO processing mode.\n * @throws SecurityException if a security manager exists andthe caller is not permitted to modify threads because it does not hold  {@link java.lang.RuntimePermission}{@code (\"modifyThread\")}\n */\n","tf":{"freq":{"caller":1,"linkplain":1,"permit":1,"link":2,"use":1,"lang":2,"mode":1,"pool":2,"factori":2,"thread":4,"permiss":1,"worker":1,"processor":1,"exist":1,"parallel":1,"fork":3,"except":2,"creat":1,"manag":1,"hold":1,"runtim":2,"avail":1,"equal":1,"uncaught":1,"join":3,"async":1,"non":1,"process":1,"secur":2,"modifi":2,"java":2,"andth":1,"handler":1},"maxFreq":4,"totalTerms":49},"loc":4}