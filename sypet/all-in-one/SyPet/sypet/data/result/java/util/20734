{"id":20734,"className":"java.util.Vector","methodName":"ensureCapacity","signature":"\u003cjava.util.Vector: void ensureCapacity(int)\u003e","javadoc":"/** \n * Increases the capacity of this vector, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument. \u003cp\u003eIf the current capacity of this vector is less than {@code minCapacity}, then its capacity is increased by replacing its internal data array, kept in the field  {@code elementData}, with a larger one.  The size of the new data array will be the old size plus {@code capacityIncrement}, unless the value of {@code capacityIncrement} is less than or equal to zero, in which casethe new capacity will be twice the old capacity; but if this new size is still smaller than  {@code minCapacity}, then the new capacity will be  {@code minCapacity}.\n * @param minCapacity the desired minimum capacity\n */\n","tf":{"freq":{"increas":2,"old":2,"minimum":2,"least":1,"one":1,"data":3,"desir":1,"zero":1,"necessari":1,"smaller":1,"specifi":1,"ensur":2,"twice":1,"unless":1,"vector":2,"current":1,"valu":1,"less":2,"kept":1,"argument":1,"min":4,"increment":2,"plus":1,"element":1,"hold":1,"larger":1,"still":1,"equal":1,"number":1,"caseth":1,"size":3,"field":1,"compon":1,"replac":1,"will":3,"intern":1,"capac":15,"array":2},"maxFreq":15,"totalTerms":69},"loc":6}