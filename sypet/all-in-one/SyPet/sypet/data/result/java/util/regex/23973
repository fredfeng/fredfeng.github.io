{"id":23973,"className":"java.util.regex.Matcher","methodName":"useAnchoringBounds","signature":"\u003cjava.util.regex.Matcher: java.util.regex.Matcher useAnchoringBounds(boolean)\u003e","javadoc":"/** \n * Sets the anchoring of region bounds for this matcher. \u003cp\u003e Invoking this method with an argument of \u003ctt\u003etrue\u003c/tt\u003e will set this matcher to use \u003ci\u003eanchoring\u003c/i\u003e bounds. If the boolean argument is \u003ctt\u003efalse\u003c/tt\u003e, then \u003ci\u003enon-anchoring\u003c/i\u003e bounds will be used. \u003cp\u003e Using anchoring bounds, the boundaries of this matcher\u0027s region match anchors such as ^ and $. \u003cp\u003e Without anchoring bounds, the boundaries of this matcher\u0027s region will not match anchors such as ^ and $. \u003cp\u003e By default, a matcher uses anchoring region boundaries.\n * @param b a boolean indicating whether or not to use anchoring bounds.\n * @return this matcher\n * @see java.util.regex.Matcher#hasAnchoringBounds\n * @since 1.5\n */\n","tf":{"freq":{"region":4,"argument":2,"fals":1,"regex":1,"invok":1,"use":6,"true":1,"without":1,"whether":1,"anchor":11,"non":1,"matcher":7,"indic":1,"will":3,"java":1,"method":1,"match":2,"boundari":3,"util":1,"bound":8},"maxFreq":11,"totalTerms":57},"loc":4}