{"id":20806,"className":"java.util.AbstractMap","methodName":"remove","signature":"\u003cjava.util.AbstractMap: V remove(java.lang.Object)\u003e","javadoc":"/** \n * {@inheritDoc}\u003cp\u003eThis implementation iterates over \u003ctt\u003eentrySet()\u003c/tt\u003e searching for an entry with the specified key.  If such an entry is found, its value is obtained with its \u003ctt\u003egetValue\u003c/tt\u003e operation, the entry is removed from the collection (and the backing map) with the iterator\u0027s \u003ctt\u003eremove\u003c/tt\u003e operation, and the saved value is returned.  If the iteration terminates without finding such an entry, \u003ctt\u003enull\u003c/tt\u003e is returned.  Note that this implementation requires linear time in the size of the map; many implementations will override this method. \u003cp\u003eNote that this implementation throws an \u003ctt\u003eUnsupportedOperationException\u003c/tt\u003e if the \u003ctt\u003eentrySet\u003c/tt\u003e iterator does not support the \u003ctt\u003eremove\u003c/tt\u003e method and this map contains a mapping for the specified key.\n * @throws UnsupportedOperationException {@inheritDoc}\n * @throws ClassCastException            {@inheritDoc}\n * @throws NullPointerException          {@inheritDoc}\n */\n","tf":{"freq":{"unsupport":2,"save":1,"specifi":2,"time":1,"requir":1,"oper":4,"search":1,"map":4,"valu":3,"key":2,"find":1,"note":2,"mani":1,"except":4,"linear":1,"support":1,"entri":6,"remov":4,"back":1,"without":1,"size":1,"obtain":1,"termin":1,"cast":1,"contain":1,"will":1,"pointer":1,"method":2,"iter":4,"collect":1,"found":1},"maxFreq":6,"totalTerms":58},"loc":24}