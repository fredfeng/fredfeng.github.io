{"id":21833,"className":"java.util.Collections","methodName":"shuffle","signature":"\u003cjava.util.Collections: void shuffle(java.util.List)\u003e","javadoc":"/** \n * Randomly permutes the specified list using a default source of randomness.  All permutations occur with approximately equal likelihood.\u003cp\u003e The hedge \"approximately\" is used in the foregoing description because default source of randomness is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm would choose permutations with perfect uniformity.\u003cp\u003e This implementation traverses the list backwards, from the last element up to the second, repeatedly swapping a randomly selected element into the \"current position\".  Elements are randomly selected from the portion of the list that runs from the first element to the current position, inclusive.\u003cp\u003e This method runs in linear time.  If the specified list does not implement the  {@link RandomAccess} interface and is large, thisimplementation dumps the specified list into an array before shuffling it, and dumps the shuffled array back into the list.  This avoids the quadratic behavior that would result from shuffling a \"sequential access\" list in place.\n * @param list the list to be shuffled.\n * @throws UnsupportedOperationException if the specified list orits list-iterator does not support the \u003ctt\u003eset\u003c/tt\u003e operation.\n */\n","tf":{"freq":{"unbias":1,"hedg":1,"unsupport":1,"last":1,"second":1,"orit":1,"permut":3,"approxim":3,"specifi":4,"avoid":1,"independ":1,"time":1,"oper":2,"place":1,"sequenti":1,"element":4,"except":1,"support":1,"select":2,"descript":1,"random":7,"bit":2,"sourc":4,"posit":2,"array":2,"result":1,"dump":2,"backward":1,"behavior":1,"link":1,"use":2,"chosen":2,"repeat":1,"run":2,"likelihood":1,"algorithm":1,"inclus":1,"current":2,"choos":1,"quadrat":1,"perfect":2,"portion":1,"travers":1,"linear":1,"uniform":1,"thisimplement":1,"back":1,"list":11,"equal":1,"access":2,"shuffl":5,"forego":1,"larg":1,"method":1,"swap":1,"iter":1,"first":1,"occur":1},"maxFreq":11,"totalTerms":103},"loc":6}