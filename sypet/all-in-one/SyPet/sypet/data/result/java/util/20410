{"id":20410,"className":"java.util.TimeZone","methodName":"getDisplayName","signature":"\u003cjava.util.TimeZone: java.lang.String getDisplayName(boolean,int)\u003e","javadoc":"/** \n * Returns a name in the specified  {@code style} of this {@code TimeZone}suitable for presentation to the user in the default locale. If the specified  {@code daylight} is {@code true}, a Daylight Saving Time name is returned (even if this  {@code TimeZone} doesn\u0027t observe Daylight SavingTime). Otherwise, a Standard Time name is returned. \u003cp\u003eThis method is equivalent to: \u003cpre\u003e\u003cblockquote\u003e getDisplayName(daylight, style, Locale.getDefault( {@link Locale.Category#DISPLAY})) \u003c/blockquote\u003e\u003c/pre\u003e\n * @param daylight {@code true} specifying a Daylight Saving Time name, or{@code false} specifying a Standard Time name\n * @param style either {@link #LONG} or {@link #SHORT}\n * @return the human-readable name of this time zone in the default locale.\n * @exception IllegalArgumentException if {@code style} is invalid.\n * @since 1.2\n * @see #getDisplayName(boolean,int,Locale)\n * @see Locale#getDefault(Locale.Category)\n * @see Locale.Category\n * @see java.text.DateFormatSymbols#getZoneStrings()\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"save":3,"readabl":1,"suitabl":1,"link":3,"date":1,"specifi":4,"time":8,"observ":1,"invalid":1,"style":4,"equival":1,"blockquot":2,"name":9,"argument":1,"text":1,"except":2,"categori":3,"symbol":1,"standard":2,"true":2,"display":3,"format":1,"illeg":1,"human":1,"present":1,"either":1,"pre":2,"string":1,"java":1,"even":1,"method":1,"local":8,"user":1,"daylight":6,"zone":4},"maxFreq":9,"totalTerms":86},"loc":4}