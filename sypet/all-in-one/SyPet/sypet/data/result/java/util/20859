{"id":20859,"className":"java.util.Date","methodName":"UTC","signature":"\u003cjava.util.Date: long UTC(int,int,int,int,int,int)\u003e","javadoc":"/** \n * Determines the date and time based on the arguments. The arguments are interpreted as a year, month, day of the month, hour of the day, minute within the hour, and second within the minute, exactly as for the \u003ctt\u003eDate\u003c/tt\u003e constructor with six arguments, except that the arguments are interpreted relative to UTC rather than to the local time zone. The time indicated is returned represented as the distance, measured in milliseconds, of that time from the epoch (00:00:00 GMT on January 1, 1970).\n * @param year    the year minus 1900.\n * @param month   the month between 0-11.\n * @param date    the day of the month between 1-31.\n * @param hrs     the hours between 0-23.\n * @param min     the minutes between 0-59.\n * @param sec     the seconds between 0-59.\n * @return  the number of milliseconds since January 1, 1970, 00:00:00 GMT forthe date and time specified by the arguments.\n * @see java.util.Calendar\n * @deprecated As of JDK version 1.1,replaced by \u003ccode\u003eCalendar.set(year + 1900, month, date, hrs, min, sec)\u003c/code\u003e or \u003ccode\u003eGregorianCalendar(year + 1900, month, date, hrs, min, sec)\u003c/code\u003e, using a UTC \u003ccode\u003eTimeZone\u003c/code\u003e, followed by \u003ccode\u003eCalendar.getTime().getTime()\u003c/code\u003e.\n */\n","tf":{"freq":{"forth":1,"deprec":1,"second":2,"interpret":2,"use":1,"date":6,"version":1,"specifi":1,"six":1,"hrs":3,"time":8,"indic":1,"millisecond":2,"exact":1,"relat":1,"rather":1,"year":5,"follow":1,"calendar":4,"constructor":1,"min":3,"argument":5,"minut":3,"except":1,"minus":1,"januari":2,"repres":1,"epoch":1,"number":1,"hour":3,"sec":3,"replac":1,"determin":1,"month":7,"base":1,"distanc":1,"java":1,"measur":1,"within":2,"day":3,"local":1,"gregorian":1,"util":1,"zone":2},"maxFreq":8,"totalTerms":91},"loc":21}