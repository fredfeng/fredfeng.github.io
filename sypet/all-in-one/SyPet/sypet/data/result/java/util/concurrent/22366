{"id":22366,"className":"java.util.concurrent.ExecutorService","methodName":"invokeAny","signature":"\u003cjava.util.concurrent.ExecutorService: T invokeAny(java.util.Collection)\u003e","javadoc":"/** \n * Executes the given tasks, returning the result of one that has completed successfully (i.e., without throwing an exception), if any do. Upon normal or exceptional return, tasks that have not completed are cancelled. The results of this method are undefined if the given collection is modified while this operation is in progress.\n * @param tasks the collection of tasks\n * @return the result returned by one of the tasks\n * @throws InterruptedException if interrupted while waiting\n * @throws NullPointerException if tasks or any element tasksubject to execution is \u003ctt\u003enull\u003c/tt\u003e\n * @throws IllegalArgumentException if tasks is empty\n * @throws ExecutionException if no task successfully completes\n * @throws RejectedExecutionException if tasks cannot be scheduledfor execution\n */\n","tf":{"freq":{"progress":1,"result":3,"reject":1,"normal":1,"one":2,"cancel":1,"wait":1,"given":2,"oper":1,"undefin":1,"tasksubject":1,"complet":3,"argument":1,"element":1,"except":7,"task":9,"invok":1,"scheduledfor":1,"illeg":1,"without":1,"interrupt":2,"empti":1,"modifi":1,"pointer":1,"method":1,"execut":5,"success":2,"upon":1,"collect":2},"maxFreq":9,"totalTerms":56},"loc":0}