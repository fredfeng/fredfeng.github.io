{"id":23006,"className":"java.util.concurrent.BlockingQueue","methodName":"offer","signature":"\u003cjava.util.concurrent.BlockingQueue: boolean offer(E,long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Inserts the specified element into this queue, waiting up to the specified wait time if necessary for space to become available.\n * @param e the element to add\n * @param timeout how long to wait before giving up, in units of\u003ctt\u003eunit\u003c/tt\u003e\n * @param unit a \u003ctt\u003eTimeUnit\u003c/tt\u003e determining how to interpret the\u003ctt\u003etimeout\u003c/tt\u003e parameter\n * @return \u003ctt\u003etrue\u003c/tt\u003e if successful, or \u003ctt\u003efalse\u003c/tt\u003e ifthe specified waiting time elapses before space is available\n * @throws InterruptedException if interrupted while waiting\n * @throws ClassCastException if the class of the specified elementprevents it from being added to this queue\n * @throws NullPointerException if the specified element is null\n * @throws IllegalArgumentException if some property of the specifiedelement prevents it from being added to this queue\n */\n","tf":{"freq":{"fals":1,"queue":3,"give":1,"interpret":1,"wait":5,"add":1,"space":2,"necessari":1,"specifi":5,"elaps":1,"time":3,"becom":1,"argument":1,"element":3,"except":4,"ifth":1,"paramet":1,"true":1,"prevent":1,"avail":2,"offer":1,"illeg":1,"interrupt":2,"unit":4,"cast":1,"specifiedel":1,"determin":1,"pointer":1,"ad":2,"elementprev":1,"properti":1,"insert":1,"success":1,"timeout":2},"maxFreq":5,"totalTerms":59},"loc":0}