{"id":21233,"className":"java.util.Collection","methodName":"contains","signature":"\u003cjava.util.Collection: boolean contains(java.lang.Object)\u003e","javadoc":"/** \n * Returns \u003ctt\u003etrue\u003c/tt\u003e if this collection contains the specified element. More formally, returns \u003ctt\u003etrue\u003c/tt\u003e if and only if this collection contains at least one element \u003ctt\u003ee\u003c/tt\u003e such that \u003ctt\u003e(o\u003d\u003dnull\u0026nbsp;?\u0026nbsp;e\u003d\u003dnull\u0026nbsp;:\u0026nbsp;o.equals(e))\u003c/tt\u003e.\n * @param o element whose presence in this collection is to be tested\n * @return \u003ctt\u003etrue\u003c/tt\u003e if this collection contains the specifiedelement\n * @throws ClassCastException if the type of the specified elementis incompatible with this collection (\u003ca href\u003d\"#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws NullPointerException if the specified element is null and thiscollection does not permit null elements (\u003ca href\u003d\"#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n */\n","tf":{"freq":{"test":1,"least":1,"elementi":1,"permit":1,"one":1,"type":1,"specifi":3,"thiscollect":1,"href":2,"option":4,"nbsp":4,"presenc":1,"element":5,"except":2,"whose":1,"true":3,"equal":1,"incompat":1,"restrict":2,"formal":1,"cast":1,"specifiedel":1,"contain":4,"pointer":1,"collect":5},"maxFreq":5,"totalTerms":49},"loc":0}