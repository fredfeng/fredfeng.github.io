{"id":21245,"className":"java.util.Collection","methodName":"hashCode","signature":"\u003cjava.util.Collection: int hashCode()\u003e","javadoc":"/** \n * Returns the hash code value for this collection.  While the \u003ctt\u003eCollection\u003c/tt\u003e interface adds no stipulations to the general contract for the \u003ctt\u003eObject.hashCode\u003c/tt\u003e method, programmers should take note that any class that overrides the \u003ctt\u003eObject.equals\u003c/tt\u003e method must also override the \u003ctt\u003eObject.hashCode\u003c/tt\u003e method in order to satisfy the general contract for the \u003ctt\u003eObject.hashCode\u003c/tt\u003e method. In particular, \u003ctt\u003ec1.equals(c2)\u003c/tt\u003e implies that \u003ctt\u003ec1.hashCode()\u003d\u003dc2.hashCode()\u003c/tt\u003e.\n * @return the hash code value for this collection\n * @see Object#hashCode()\n * @see Object#equals(Object)\n */\n","tf":{"freq":{"hash":9,"contract":2,"stipul":1,"programm":1,"particular":1,"equal":3,"object":7,"add":1,"must":1,"general":2,"order":1,"take":1,"satisfi":1,"impli":1,"valu":2,"method":4,"also":1,"note":1,"collect":3},"maxFreq":9,"totalTerms":43},"loc":0}