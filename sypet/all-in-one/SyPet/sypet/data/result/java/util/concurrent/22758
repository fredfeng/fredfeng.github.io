{"id":22758,"className":"java.util.concurrent.CyclicBarrier","methodName":"CyclicBarrier","signature":"\u003cjava.util.concurrent.CyclicBarrier: void CyclicBarrier(int)\u003e","javadoc":"/** \n * Creates a new \u003ctt\u003eCyclicBarrier\u003c/tt\u003e that will trip when the given number of parties (threads) are waiting upon it, and does not perform a predefined action when the barrier is tripped.\n * @param parties the number of threads that must invoke {@link #await}before the barrier is tripped\n * @throws IllegalArgumentException if {@code parties} is less than 1\n */\n","tf":{"freq":{"argument":1,"except":1,"creat":1,"invok":1,"link":1,"predefin":1,"number":2,"perform":1,"wait":1,"illeg":1,"must":1,"barrier":4,"await":1,"given":1,"thread":2,"action":1,"will":1,"cyclic":2,"trip":3,"less":1,"parti":3,"upon":1},"maxFreq":4,"totalTerms":32},"loc":3}