{"id":20470,"className":"java.util.BitSet","methodName":"nextSetBit","signature":"\u003cjava.util.BitSet: int nextSetBit(int)\u003e","javadoc":"/** \n * Returns the index of the first bit that is set to  {@code true}that occurs on or after the specified starting index. If no such bit exists then  {@code -1} is returned.\u003cp\u003eTo iterate over the  {@code true} bits in a {@code BitSet}, use the following loop: \u003cpre\u003e  {@code}for (int i \u003d bs.nextSetBit(0); i \u003e\u003d 0; i \u003d bs.nextSetBit(i+1))  // operate on index i here }}\u003c/pre\u003e\n * @param fromIndex the index to start checking from (inclusive)\n * @return the index of the next set bit, or {@code -1} if thereis no such bit\n * @throws IndexOutOfBoundsException if the specified index is negative\n * @since  1.4\n */\n","tf":{"freq":{"except":1,"index":8,"check":1,"next":4,"true":2,"use":1,"specifi":2,"inclus":1,"bit":9,"oper":1,"start":2,"pre":2,"loop":1,"negat":1,"therei":1,"iter":1,"first":1,"exist":1,"bound":1,"occur":1,"follow":1},"maxFreq":9,"totalTerms":43},"loc":20}