{"id":20443,"className":"java.util.GregorianCalendar","methodName":"getActualMaximum","signature":"\u003cjava.util.GregorianCalendar: int getActualMaximum(int)\u003e","javadoc":"/** \n * Returns the maximum value that this calendar field could have, taking into consideration the given time value and the current values of the {@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek}, {@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek}, {@link #getGregorianChange() getGregorianChange} and{@link Calendar#getTimeZone() getTimeZone} methods.For example, if the date of this instance is February 1, 2004, the actual maximum value of the \u003ccode\u003eDAY_OF_MONTH\u003c/code\u003e field is 29 because 2004 is a leap year, and if the date of this instance is February 1, 2005, it\u0027s 28. \u003cp\u003eThis method calculates the maximum value of  {@link Calendar#WEEK_OF_YEAR WEEK_OF_YEAR} based on the {@link Calendar#YEAR YEAR} (calendar year) value, not the \u003cahref\u003d\"#week_year\"\u003eweek year\u003c/a\u003e. Call  {@link #getWeeksInWeekYear()} to get the maximum value of {@code WEEK_OF_YEAR} in the week year of this {@code GregorianCalendar}.\n * @param field the calendar field\n * @return the maximum of the given field for the time value ofthis \u003ccode\u003eGregorianCalendar\u003c/code\u003e\n * @see #getMinimum(int)\n * @see #getMaximum(int)\n * @see #getGreatestMinimum(int)\n * @see #getLeastMaximum(int)\n * @see #getActualMinimum(int)\n * @since 1.2\n */\n","tf":{"freq":{"call":1,"minimum":3,"least":1,"link":7,"februari":2,"date":2,"minim":2,"time":4,"given":2,"consider":1,"current":1,"year":6,"valu":8,"calendar":10,"ahref":1,"calcul":1,"greatest":1,"instanc":2,"ofthi":1,"field":5,"take":1,"maximum":8,"base":1,"exampl":1,"actual":3,"method":2,"day":4,"chang":2,"gregorian":4,"first":4,"zone":2,"leap":1,"week":9},"maxFreq":10,"totalTerms":103},"loc":251}