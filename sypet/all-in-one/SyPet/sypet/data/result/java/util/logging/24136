{"id":24136,"className":"java.util.logging.FileHandler","methodName":"FileHandler","signature":"\u003cjava.util.logging.FileHandler: void FileHandler(java.lang.String,int,int,boolean)\u003e","javadoc":"/** \n * Initialize a \u003ctt\u003eFileHandler\u003c/tt\u003e to write to a set of files with optional append.  When (approximately) the given limit has been written to one file, another file will be opened.  The output will cycle through a set of count files. \u003cp\u003e The \u003ctt\u003eFileHandler\u003c/tt\u003e is configured based on \u003ctt\u003eLogManager\u003c/tt\u003e properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to the limit argument, and the file count is set to the given count argument, and the append mode is set to the given \u003ctt\u003eappend\u003c/tt\u003e argument. \u003cp\u003e The count must be at least 1.\n * @param pattern  the pattern for naming the output file\n * @param limit  the maximum number of bytes to write to any one file\n * @param count  the number of files to use\n * @param append  specifies append mode\n * @exception IOException if there are IO problems opening the files.\n * @exception SecurityException  if a security manager exists and ifthe caller does not have \u003ctt\u003eLoggingPermission(\"control\")\u003c/tt\u003e.\n * @exception IllegalArgumentException if limit \u003c 0, or count \u003c 1.\n * @exception IllegalArgumentException if pattern is an empty string\n */\n","tf":{"freq":{"caller":1,"count":6,"least":1,"one":2,"cycl":1,"use":2,"anoth":1,"approxim":1,"must":1,"specifi":1,"mode":2,"open":2,"given":4,"file":13,"name":1,"written":1,"permiss":1,"write":2,"valu":1,"initi":1,"exist":1,"option":1,"argument":6,"limit":5,"control":1,"append":5,"except":9,"ifth":1,"manag":2,"filenam":1,"problem":1,"number":2,"illeg":2,"log":2,"empti":1,"configur":1,"secur":2,"pattern":5,"maximum":1,"string":1,"will":2,"base":1,"properti":1,"output":2,"handler":3},"maxFreq":13,"totalTerms":104},"loc":12}