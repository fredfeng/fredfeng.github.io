{"id":22997,"className":"java.util.concurrent.DelayQueue","methodName":"toArray","signature":"\u003cjava.util.concurrent.DelayQueue: T[] toArray(T[])\u003e","javadoc":"/** \n * Returns an array containing all of the elements in this queue; the runtime type of the returned array is that of the specified array. The returned array elements are in no particular order. If the queue fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this queue. \u003cp\u003eIf this queue fits in the specified array with room to spare (i.e., the array has more elements than this queue), the element in the array immediately following the end of the queue is set to \u003ctt\u003enull\u003c/tt\u003e. \u003cp\u003eLike the  {@link #toArray()} method, this method acts as bridge betweenarray-based and collection-based APIs.  Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs. \u003cp\u003eThe following code can be used to dump a delay queue into a newly allocated array of \u003ctt\u003eDelayed\u003c/tt\u003e: \u003cpre\u003e Delayed[] a \u003d q.toArray(new Delayed[0]);\u003c/pre\u003e Note that \u003ctt\u003etoArray(new Object[0])\u003c/tt\u003e is identical in function to \u003ctt\u003etoArray()\u003c/tt\u003e.\n * @param a the array into which the elements of the queue are tobe stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose\n * @return an array containing all of the elements in this queue\n * @throws ArrayStoreException if the runtime type of the specified arrayis not a supertype of the runtime type of every element in this queue\n * @throws NullPointerException if the specified array is null\n */\n","tf":{"freq":{"queue":10,"save":1,"store":2,"particular":1,"enough":1,"type":6,"specifi":6,"function":1,"precis":1,"purpos":1,"tobe":1,"everi":1,"follow":2,"therein":1,"element":7,"control":1,"except":2,"spare":1,"runtim":6,"circumst":1,"like":1,"cost":1,"size":1,"newli":1,"contain":2,"pointer":1,"delay":4,"output":1,"big":1,"room":1,"alloc":4,"array":22,"collect":1,"otherwis":2,"dump":1,"allow":1,"link":1,"use":2,"object":1,"fit":2,"order":1,"ident":1,"bridg":1,"immedi":1,"end":1,"note":1,"may":1,"supertyp":1,"arrayi":1,"pre":2,"base":2,"method":3,"certain":1,"act":1,"betweenarray":1},"maxFreq":22,"totalTerms":123},"loc":9}