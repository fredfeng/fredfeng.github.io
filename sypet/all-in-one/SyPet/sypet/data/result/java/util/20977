{"id":20977,"className":"java.util.TreeMap","methodName":"get","signature":"\u003cjava.util.TreeMap: V get(java.lang.Object)\u003e","javadoc":"/** \n * Returns the value to which the specified key is mapped, or  {@code null} if this map contains no mapping for the key.\u003cp\u003eMore formally, if this map contains a mapping from a key {@code k} to a value {@code v} such that {@code key} comparesequal to  {@code k} according to the map\u0027s ordering, then thismethod returns  {@code v}; otherwise it returns  {@code null}. (There can be at most one such mapping.) \u003cp\u003eA return value of  {@code null} does not \u003cem\u003enecessarily\u003c/em\u003eindicate that the map contains no mapping for the key; it\u0027s also possible that the map explicitly maps the key to  {@code null}. The  {@link #containsKey containsKey} operation may be used todistinguish these two cases.\n * @throws ClassCastException if the specified key cannot be comparedwith the keys currently in the map\n * @throws NullPointerException if the specified key is nulland this map uses natural ordering, or its comparator does not permit null keys\n */\n","tf":{"freq":{"otherwis":1,"permit":1,"one":1,"link":1,"nulland":1,"natur":1,"possibl":1,"use":2,"specifi":3,"thismethod":1,"order":2,"indic":1,"oper":1,"current":1,"map":13,"valu":3,"key":12,"except":2,"comparesequ":1,"may":1,"todistinguish":1,"comparedwith":1,"accord":1,"two":1,"formal":1,"cast":1,"explicit":1,"contain":5,"pointer":1,"necessarili":1,"compar":1,"also":1},"maxFreq":13,"totalTerms":66},"loc":4}