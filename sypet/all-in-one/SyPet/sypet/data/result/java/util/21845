{"id":21845,"className":"java.util.Collections","methodName":"lastIndexOfSubList","signature":"\u003cjava.util.Collections: int lastIndexOfSubList(java.util.List,java.util.List)\u003e","javadoc":"/** \n * Returns the starting position of the last occurrence of the specified target list within the specified source list, or -1 if there is no such occurrence.  More formally, returns the highest index \u003ctt\u003ei\u003c/tt\u003e such that \u003ctt\u003esource.subList(i, i+target.size()).equals(target)\u003c/tt\u003e, or -1 if there is no such index.  (Returns -1 if \u003ctt\u003etarget.size() \u003e source.size()\u003c/tt\u003e.) \u003cp\u003eThis implementation uses the \"brute force\" technique of iterating over the source list, looking for a match with the target at each location in turn.\n * @param source the list in which to search for the last occurrenceof \u003ctt\u003etarget\u003c/tt\u003e.\n * @param target the list to search for as a subList of \u003ctt\u003esource\u003c/tt\u003e.\n * @return the starting position of the last occurrence of the specifiedtarget list within the specified source list, or -1 if there is no such occurrence.\n * @since  1.4\n */\n","tf":{"freq":{"sub":3,"last":4,"highest":1,"use":1,"specifi":3,"occurr":4,"brute":1,"search":2,"forc":1,"look":1,"turn":1,"index":3,"locat":1,"specifiedtarget":1,"list":10,"equal":1,"size":3,"techniqu":1,"formal":1,"start":2,"target":7,"sourc":7,"within":2,"match":1,"iter":1,"posit":2,"occurrenceof":1},"maxFreq":10,"totalTerms":66},"loc":36}