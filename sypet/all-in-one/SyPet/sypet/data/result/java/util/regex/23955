{"id":23955,"className":"java.util.regex.Matcher","methodName":"group","signature":"\u003cjava.util.regex.Matcher: java.lang.String group(int)\u003e","javadoc":"/** \n * Returns the input subsequence captured by the given group during the previous match operation. \u003cp\u003e For a matcher \u003ci\u003em\u003c/i\u003e, input sequence \u003ci\u003es\u003c/i\u003e, and group index \u003ci\u003eg\u003c/i\u003e, the expressions \u003ci\u003em.\u003c/i\u003e\u003ctt\u003egroup(\u003c/tt\u003e\u003ci\u003eg\u003c/i\u003e\u003ctt\u003e)\u003c/tt\u003e and \u003ci\u003es.\u003c/i\u003e\u003ctt\u003esubstring(\u003c/tt\u003e\u003ci\u003em.\u003c/i\u003e\u003ctt\u003estart(\u003c/tt\u003e\u003ci\u003eg\u003c/i\u003e\u003ctt\u003e),\u003c/tt\u003e\u0026nbsp;\u003ci\u003em.\u003c/i\u003e\u003ctt\u003eend(\u003c/tt\u003e\u003ci\u003eg\u003c/i\u003e\u003ctt\u003e))\u003c/tt\u003e are equivalent.  \u003c/p\u003e \u003cp\u003e \u003ca href\u003d\"Pattern.html#cg\"\u003eCapturing groups\u003c/a\u003e are indexed from left to right, starting at one.  Group zero denotes the entire pattern, so the expression \u003ctt\u003em.group(0)\u003c/tt\u003e is equivalent to \u003ctt\u003em.group()\u003c/tt\u003e. \u003c/p\u003e \u003cp\u003e If the match was successful but the group specified failed to match any part of the input sequence, then \u003ctt\u003enull\u003c/tt\u003e is returned. Note that some groups, for example \u003ctt\u003e(a*)\u003c/tt\u003e, match the empty string. This method will return the empty string when such a group successfully matches the empty string in the input.  \u003c/p\u003e\n * @param group The index of a capturing group in this matcher\u0027s pattern\n * @return  The (possibly empty) subsequence captured by the groupduring the previous match, or \u003ctt\u003enull\u003c/tt\u003e if the group failed to match part of the input\n * @throws IllegalStateException If no match has yet been attempted, or if the previous match operation failed\n * @throws IndexOutOfBoundsException If there is no capturing group in the pattern with the given index\n */\n","tf":{"freq":{"attempt":1,"one":1,"state":1,"denot":1,"possibl":1,"express":2,"zero":1,"specifi":1,"matcher":2,"fail":3,"given":2,"oper":2,"equival":2,"sequenc":2,"left":1,"captur":5,"subsequ":2,"substr":1,"href":1,"right":1,"note":1,"end":1,"nbsp":1,"except":2,"index":5,"previous":3,"illeg":1,"empti":4,"input":5,"pattern":4,"start":2,"string":3,"will":1,"exampl":1,"groupdur":1,"method":1,"html":1,"match":9,"part":2,"group":15,"success":2,"entir":1,"bound":1,"yet":1},"maxFreq":15,"totalTerms":101},"loc":9}