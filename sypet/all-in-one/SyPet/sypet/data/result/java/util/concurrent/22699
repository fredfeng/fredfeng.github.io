{"id":22699,"className":"java.util.concurrent.ThreadPoolExecutor","methodName":"shutdown","signature":"\u003cjava.util.concurrent.ThreadPoolExecutor: void shutdown()\u003e","javadoc":"/** \n * Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted. Invocation has no additional effect if already shut down. \u003cp\u003eThis method does not wait for previously submitted tasks to complete execution.  Use  {@link #awaitTermination awaitTermination}to do that.\n * @throws SecurityException {@inheritDoc}\n */\n","tf":{"freq":{"addit":1,"except":1,"previous":2,"submit":2,"task":3,"accept":1,"link":1,"use":1,"wait":1,"invoc":1,"termin":2,"secur":1,"await":2,"order":1,"effect":1,"shut":1,"will":1,"method":1,"alreadi":1,"initi":1,"execut":2,"complet":1,"shutdown":2},"maxFreq":3,"totalTerms":31},"loc":13}