{"id":21465,"className":"java.util.Properties","methodName":"store","signature":"\u003cjava.util.Properties: void store(java.io.OutputStream,java.lang.String)\u003e","javadoc":"/** \n * Writes this property list (key and element pairs) in this \u003ccode\u003eProperties\u003c/code\u003e table to the output stream in a format suitable for loading into a \u003ccode\u003eProperties\u003c/code\u003e table using the {@link #load(InputStream) load(InputStream)} method.\u003cp\u003e Properties from the defaults table of this \u003ccode\u003eProperties\u003c/code\u003e table (if any) are \u003ci\u003enot\u003c/i\u003e written out by this method. \u003cp\u003e This method outputs the comments, properties keys and values in the same format as specified in {@link #store(java.io.Writer,java.lang.String) store(Writer)}, with the following differences: \u003cul\u003e \u003cli\u003eThe stream is written using the ISO 8859-1 character encoding. \u003cli\u003eCharacters not in Latin-1 in the comments are written as \u003ccode\u003e\u0026#92;u\u003c/code\u003e\u003ci\u003exxxx\u003c/i\u003e for their appropriate unicode hexadecimal value \u003ci\u003exxxx\u003c/i\u003e. \u003cli\u003eCharacters less than \u003ccode\u003e\u0026#92;u0020\u003c/code\u003e and characters greater than \u003ccode\u003e\u0026#92;u007E\u003c/code\u003e in property keys or values are written as \u003ccode\u003e\u0026#92;u\u003c/code\u003e\u003ci\u003exxxx\u003c/i\u003e for the appropriate hexadecimal value \u003ci\u003exxxx\u003c/i\u003e. \u003c/ul\u003e \u003cp\u003e After the entries have been written, the output stream is flushed. The output stream remains open after this method returns. \u003cp\u003e\n * @param out      an output stream.\n * @param comments   a description of the property list.\n * @exception IOException if writing this property list to the specifiedoutput stream throws an \u003ctt\u003eIOException\u003c/tt\u003e.\n * @exception ClassCastException  if this \u003ccode\u003eProperties\u003c/code\u003e objectcontains any keys or values that are not \u003ccode\u003eStrings\u003c/code\u003e.\n * @exception NullPointerException  if \u003ccode\u003eout\u003c/code\u003e is null.\n * @since 1.2\n */\n","tf":{"freq":{"stream":8,"greater":1,"store":3,"pair":1,"suitabl":1,"link":2,"use":2,"lang":1,"objectcontain":1,"specifi":1,"open":1,"written":5,"write":2,"valu":5,"writer":2,"less":1,"key":4,"follow":1,"element":1,"except":7,"specifiedoutput":1,"xxxx":4,"charact":4,"entri":1,"descript":1,"hexadecim":2,"list":3,"format":2,"differ":1,"encod":1,"input":2,"flush":1,"cast":1,"remain":1,"latin":1,"appropri":2,"tabl":4,"string":2,"unicod":1,"pointer":1,"load":3,"method":4,"java":2,"properti":10,"output":5,"comment":3},"maxFreq":10,"totalTerms":113},"loc":5}