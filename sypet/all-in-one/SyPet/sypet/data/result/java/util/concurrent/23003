{"id":23003,"className":"java.util.concurrent.BlockingQueue","methodName":"add","signature":"\u003cjava.util.concurrent.BlockingQueue: boolean add(E)\u003e","javadoc":"/** \n * Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning \u003ctt\u003etrue\u003c/tt\u003e upon success and throwing an \u003ctt\u003eIllegalStateException\u003c/tt\u003e if no space is currently available. When using a capacity-restricted queue, it is generally preferable to use  {@link #offer(Object) offer}.\n * @param e the element to add\n * @return \u003ctt\u003etrue\u003c/tt\u003e (as specified by {@link Collection#add})\n * @throws IllegalStateException if the element cannot be added at thistime due to capacity restrictions\n * @throws ClassCastException if the class of the specified elementprevents it from being added to this queue\n * @throws NullPointerException if the specified element is null\n * @throws IllegalArgumentException if some property of the specifiedelement prevents it from being added to this queue\n */\n","tf":{"freq":{"queue":4,"link":2,"state":2,"possibl":1,"use":2,"object":1,"violat":1,"add":3,"space":1,"specifi":4,"current":1,"immedi":1,"thistim":1,"argument":1,"element":4,"except":5,"true":2,"prevent":1,"avail":1,"offer":2,"without":1,"illeg":3,"restrict":3,"general":1,"cast":1,"specifiedel":1,"pointer":1,"due":1,"ad":3,"elementprev":1,"properti":1,"capac":3,"insert":1,"prefer":1,"success":1,"collect":1,"upon":1},"maxFreq":5,"totalTerms":65},"loc":0}