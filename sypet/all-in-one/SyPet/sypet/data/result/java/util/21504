{"id":21504,"className":"java.util.SimpleTimeZone","methodName":"SimpleTimeZone","signature":"\u003cjava.util.SimpleTimeZone: void SimpleTimeZone(int,java.lang.String,int,int,int,int,int,int,int,int)\u003e","javadoc":"/** \n * Constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time. Both \u003ccode\u003estartTime\u003c/code\u003e and \u003ccode\u003eendTime\u003c/code\u003e are specified to be represented in the wall clock time. The amount of daylight saving is assumed to be 3600000 milliseconds (i.e., one hour). This constructor is equivalent to: \u003cpre\u003e\u003ccode\u003e SimpleTimeZone(rawOffset, ID, startMonth, startDay, startDayOfWeek, startTime, SimpleTimeZone. {@link #WALL_TIME}, endMonth, endDay, endDayOfWeek, endTime, SimpleTimeZone. {@link #WALL_TIME}, 3600000) \u003c/code\u003e\u003c/pre\u003e\n * @param rawOffset       The given base time zone offset from GMT.\n * @param ID              The time zone ID which is given to this object.\n * @param startMonth      The daylight saving time starting month. Month isa  {@link Calendar#MONTH MONTH} field value (0-based. e.g., 0for January).\n * @param startDay        The day of the month on which the daylight saving time starts.See the class description for the special cases of this parameter.\n * @param startDayOfWeek  The daylight saving time starting day-of-week.See the class description for the special cases of this parameter.\n * @param startTime       The daylight saving time starting time in local wall clocktime (in milliseconds within the day), which is local standard time in this case.\n * @param endMonth        The daylight saving time ending month. Month isa  {@link Calendar#MONTH MONTH} fieldvalue (0-based. e.g., 9 for October).\n * @param endDay          The day of the month on which the daylight saving time ends.See the class description for the special cases of this parameter.\n * @param endDayOfWeek    The daylight saving time ending day-of-week.See the class description for the special cases of this parameter.\n * @param endTime         The daylight saving ending time in local wall clock time,(in milliseconds within the day) which is local daylight time in this case.\n * @exception IllegalArgumentException if the month, day, dayOfWeek, or timeparameters are out of range for the start or end rule\n */\n","tf":{"freq":{"save":9,"simpl":5,"specifi":1,"amount":1,"time":29,"given":3,"equival":1,"rang":1,"clocktim":1,"timeparamet":1,"argument":1,"except":2,"januari":1,"descript":4,"start":15,"month":11,"day":16,"wall":3,"raw":2,"one":1,"link":4,"object":1,"millisecond":3,"rule":2,"isa":2,"valu":1,"offset":4,"end":15,"constructor":1,"calendar":2,"assum":1,"standard":1,"clock":2,"repres":1,"paramet":4,"hour":1,"illeg":1,"field":1,"fieldvalu":1,"pre":2,"octob":1,"base":4,"special":4,"construct":1,"local":4,"within":2,"zone":9,"daylight":11,"week":7},"maxFreq":29,"totalTerms":201},"loc":6}