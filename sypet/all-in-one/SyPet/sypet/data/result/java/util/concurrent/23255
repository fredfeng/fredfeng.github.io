{"id":23255,"className":"java.util.concurrent.CountDownLatch","methodName":"CountDownLatch","signature":"\u003cjava.util.concurrent.CountDownLatch: void CountDownLatch(int)\u003e","javadoc":"/** \n * Constructs a  {@code CountDownLatch} initialized with the given count.\n * @param count the number of times {@link #countDown} must be invokedbefore threads can pass through  {@link #await}\n * @throws IllegalArgumentException if {@code count} is negative\n */\n","tf":{"freq":{"argument":1,"except":1,"latch":2,"count":6,"link":2,"number":1,"illeg":1,"must":1,"pass":1,"time":1,"await":1,"given":1,"invokedbefor":1,"thread":1,"negat":1,"construct":1,"initi":1},"maxFreq":6,"totalTerms":24},"loc":4}