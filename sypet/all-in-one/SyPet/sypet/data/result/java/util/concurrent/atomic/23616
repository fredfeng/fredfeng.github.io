{"id":23616,"className":"java.util.concurrent.atomic.AtomicMarkableReference","methodName":"compareAndSet","signature":"\u003cjava.util.concurrent.atomic.AtomicMarkableReference: boolean compareAndSet(V,V,boolean,boolean)\u003e","javadoc":"/** \n * Atomically sets the value of both the reference and mark to the given update values if the current reference is  {@code \u003d\u003d} to the expected referenceand the current mark is equal to the expected mark.\n * @param expectedReference the expected value of the reference\n * @param newReference the new value for the reference\n * @param expectedMark the expected value of the mark\n * @param newMark the new value for the mark\n * @return true if successful\n */\n","tf":{"freq":{"atom":1,"referenceand":1,"true":1,"mark":7,"equal":1,"expect":6,"given":1,"updat":1,"refer":6,"current":2,"valu":6,"success":1,"compar":1},"maxFreq":7,"totalTerms":35},"loc":9}