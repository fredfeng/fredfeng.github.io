{"id":22789,"className":"java.util.concurrent.ScheduledThreadPoolExecutor","methodName":"shutdownNow","signature":"\u003cjava.util.concurrent.ScheduledThreadPoolExecutor: java.util.List\u003cjava.lang.Runnable\u003e shutdownNow()\u003e","javadoc":"/** \n * Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution. \u003cp\u003eThis method does not wait for actively executing tasks to terminate.  Use  {@link #awaitTermination awaitTermination} todo that. \u003cp\u003eThere are no guarantees beyond best-effort attempts to stop processing actively executing tasks.  This implementation cancels tasks via  {@link Thread#interrupt}, so any task that fails to respond to interrupts may never terminate.\n * @return list of tasks that never commenced execution.Each element of this list is a  {@link ScheduledFuture}, including those tasks submitted using  {@code execute}, which are for scheduling purposes used as the basis of a zero-delay  {@code ScheduledFuture}.\n * @throws SecurityException {@inheritDoc}\n */\n","tf":{"freq":{"attempt":2,"stop":2,"via":1,"link":3,"todo":1,"schedul":3,"use":3,"cancel":1,"wait":2,"zero":1,"activ":3,"beyond":1,"fail":1,"respond":1,"thread":1,"purpos":1,"best":1,"shutdown":1,"element":1,"except":1,"may":1,"includ":1,"futur":2,"submit":1,"task":9,"guarante":1,"effort":1,"list":3,"commenc":1,"interrupt":2,"process":2,"never":2,"termin":4,"secur":1,"await":3,"now":1,"method":1,"delay":1,"basi":1,"halt":1,"execut":6},"maxFreq":9,"totalTerms":76},"loc":3}