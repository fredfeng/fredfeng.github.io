{"id":22917,"className":"java.util.concurrent.ForkJoinPool","methodName":"shutdownNow","signature":"\u003cjava.util.concurrent.ForkJoinPool: java.util.List\u003cjava.lang.Runnable\u003e shutdownNow()\u003e","javadoc":"/** \n * Attempts to cancel and/or stop all tasks, and reject all subsequently submitted tasks.  Tasks that are in the process of being submitted or executed concurrently during the course of this method may or may not be rejected. This method cancels both existing and unexecuted tasks, in order to permit termination in the presence of task dependencies. So the method always returns an empty list (unlike the case for some other Executors).\n * @return an empty list\n * @throws SecurityException if a security manager exists andthe caller is not permitted to modify threads because it does not hold  {@link java.lang.RuntimePermission}{@code (\"modifyThread\")}\n */\n","tf":{"freq":{"caller":1,"attempt":1,"stop":1,"reject":2,"concurr":1,"link":1,"permit":2,"cours":1,"cancel":2,"lang":1,"order":1,"thread":2,"permiss":1,"unlik":1,"subsequ":1,"exist":2,"shutdown":1,"presenc":1,"except":1,"may":2,"submit":2,"manag":1,"task":5,"depend":1,"alway":1,"runtim":1,"hold":1,"executor":1,"list":2,"empti":2,"process":1,"termin":1,"secur":2,"unexecut":1,"now":1,"modifi":2,"java":1,"method":3,"execut":1,"andth":1},"maxFreq":5,"totalTerms":57},"loc":6}