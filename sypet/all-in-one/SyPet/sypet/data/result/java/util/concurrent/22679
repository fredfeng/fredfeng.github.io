{"id":22679,"className":"java.util.concurrent.ConcurrentLinkedQueue","methodName":"size","signature":"\u003cjava.util.concurrent.ConcurrentLinkedQueue: int size()\u003e","javadoc":"/** \n * Returns the number of elements in this queue.  If this queue contains more than  {@code Integer.MAX_VALUE} elements, returns{@code Integer.MAX_VALUE}. \u003cp\u003eBeware that, unlike in most collections, this method is \u003cem\u003eNOT\u003c/em\u003e a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires an O(n) traversal. Additionally, if elements are added or removed during execution of this method, the returned result may be inaccurate.  Thus, this method is typically not very useful in concurrent applications.\n * @return the number of elements in this queue\n */\n","tf":{"freq":{"queue":4,"asynchron":1,"result":1,"concurr":1,"typic":1,"use":1,"natur":1,"applic":1,"time":1,"requir":1,"oper":1,"unlik":1,"current":1,"inaccur":1,"travers":1,"element":5,"addit":1,"may":1,"constant":1,"thus":1,"remov":1,"number":3,"bewar":1,"size":1,"contain":1,"determin":1,"ad":1,"method":3,"execut":1,"integ":2,"collect":1},"maxFreq":5,"totalTerms":43},"loc":9}