{"id":24218,"className":"java.util.prefs.Preferences","methodName":"removeNode","signature":"\u003cjava.util.prefs.Preferences: void removeNode()\u003e","javadoc":"/** \n * Removes this preference node and all of its descendants, invalidating any preferences contained in the removed nodes.  Once a node has been removed, attempting any method other than  {@link #name()}, {@link #absolutePath()},  {@link #isUserNode()},  {@link #flush()} or{@link #node(String) nodeExists(\"\")} on the corresponding\u003ctt\u003ePreferences\u003c/tt\u003e instance will fail with an \u003ctt\u003eIllegalStateException\u003c/tt\u003e.  (The methods defined on  {@link Object}can still be invoked on a node after it has been removed; they will not throw \u003ctt\u003eIllegalStateException\u003c/tt\u003e.) \u003cp\u003eThe removal is not guaranteed to be persistent until the \u003ctt\u003eflush\u003c/tt\u003e method is called on this node (or an ancestor). \u003cp\u003eIf this implementation supports \u003ci\u003estored defaults\u003c/i\u003e, removing a node exposes any stored defaults at or below this node.  Thus, a subsequent call to \u003ctt\u003enodeExists\u003c/tt\u003e on this node\u0027s path name may return \u003ctt\u003etrue\u003c/tt\u003e, and a subsequent call to \u003ctt\u003enode\u003c/tt\u003e on this path name may return a (different) \u003ctt\u003ePreferences\u003c/tt\u003e instance representing a non-empty collection of preferences and/or children.\n * @throws BackingStoreException if this operation cannot be completeddue to a failure in the backing store, or inability to communicate with it.\n * @throws IllegalStateException if this node (or an ancestor) has alreadybeen removed with the  {@link #removeNode()} method.\n * @throws UnsupportedOperationException if this method is invoked onthe root node.\n * @see #flush()\n */\n","tf":{"freq":{"unsupport":1,"store":4,"root":1,"persist":1,"alreadybeen":1,"fail":1,"invalid":1,"oper":2,"except":5,"support":1,"invok":2,"onth":1,"remov":9,"absolut":1,"instanc":2,"non":1,"node":17,"contain":1,"will":2,"prefer":5,"collect":1,"attempt":1,"defin":1,"call":3,"completeddu":1,"correspond":1,"link":7,"state":3,"children":1,"object":1,"name":3,"path":3,"expos":1,"subsequ":2,"exist":2,"ancestor":2,"inabl":1,"may":2,"thus":1,"repres":1,"failur":1,"guarante":1,"true":1,"back":2,"still":1,"illeg":3,"empti":1,"differ":1,"flush":3,"communic":1,"string":1,"method":5,"descend":1,"user":1},"maxFreq":17,"totalTerms":120},"loc":0}