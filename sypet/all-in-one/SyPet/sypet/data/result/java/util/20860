{"id":20860,"className":"java.util.Date","methodName":"parse","signature":"\u003cjava.util.Date: long parse(java.lang.String)\u003e","javadoc":"/** \n * Attempts to interpret the string \u003ctt\u003es\u003c/tt\u003e as a representation of a date and time. If the attempt is successful, the time indicated is returned represented as the distance, measured in milliseconds, of that time from the epoch (00:00:00 GMT on January 1, 1970). If the attempt fails, an \u003ctt\u003eIllegalArgumentException\u003c/tt\u003e is thrown. \u003cp\u003e It accepts many syntaxes; in particular, it recognizes the IETF standard date syntax: \"Sat, 12 Aug 1995 13:30:00 GMT\". It also understands the continental U.S. time-zone abbreviations, but for general use, a time-zone offset should be used: \"Sat, 12 Aug 1995 13:30:00 GMT+0430\" (4 hours, 30 minutes west of the Greenwich meridian). If no time zone is specified, the local time zone is assumed. GMT and UTC are considered equivalent. \u003cp\u003e The string \u003ctt\u003es\u003c/tt\u003e is processed from left to right, looking for data of interest. Any material in \u003ctt\u003es\u003c/tt\u003e that is within the ASCII parenthesis characters \u003ctt\u003e(\u003c/tt\u003e and \u003ctt\u003e)\u003c/tt\u003e is ignored. Parentheses may be nested. Otherwise, the only characters permitted within \u003ctt\u003es\u003c/tt\u003e are these ASCII characters: \u003cblockquote\u003e\u003cpre\u003e abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789,+-:/\u003c/pre\u003e\u003c/blockquote\u003e and whitespace characters.\u003cp\u003e A consecutive sequence of decimal digits is treated as a decimal number:\u003cul\u003e \u003cli\u003eIf a number is preceded by \u003ctt\u003e+\u003c/tt\u003e or \u003ctt\u003e-\u003c/tt\u003e and a year has already been recognized, then the number is a time-zone offset. If the number is less than 24, it is an offset measured in hours. Otherwise, it is regarded as an offset in minutes, expressed in 24-hour time format without punctuation. A preceding \u003ctt\u003e-\u003c/tt\u003e means a westward offset. Time zone offsets are always relative to UTC (Greenwich). Thus, for example, \u003ctt\u003e-5\u003c/tt\u003e occurring in the string would mean \"five hours west of Greenwich\" and \u003ctt\u003e+0430\u003c/tt\u003e would mean \"four hours and thirty minutes east of Greenwich.\" It is permitted for the string to specify \u003ctt\u003eGMT\u003c/tt\u003e, \u003ctt\u003eUT\u003c/tt\u003e, or \u003ctt\u003eUTC\u003c/tt\u003e redundantly-for example, \u003ctt\u003eGMT-5\u003c/tt\u003e or \u003ctt\u003eutc+0430\u003c/tt\u003e. \u003cli\u003eThe number is regarded as a year number if one of the following conditions is true: \u003cul\u003e \u003cli\u003eThe number is equal to or greater than 70 and followed by a space, comma, slash, or end of string \u003cli\u003eThe number is less than 70, and both a month and a day of the month have already been recognized\u003c/li\u003e \u003c/ul\u003e If the recognized year number is less than 100, it is interpreted as an abbreviated year relative to a century of which dates are within 80 years before and 19 years after the time when the Date class is initialized. After adjusting the year number, 1900 is subtracted from it. For example, if the current year is 1999 then years in the range 19 to 99 are assumed to mean 1919 to 1999, while years from 0 to 18 are assumed to mean 2000 to 2018.  Note that this is slightly different from the interpretation of years less than 100 that is used in  {@link java.text.SimpleDateFormat}. \u003cli\u003eIf the number is followed by a colon, it is regarded as an hour, unless an hour has already been recognized, in which case it is regarded as a minute. \u003cli\u003eIf the number is followed by a slash, it is regarded as a month (it is decreased by 1 to produce a number in the range \u003ctt\u003e0\u003c/tt\u003e to \u003ctt\u003e11\u003c/tt\u003e), unless a month has already been recognized, in which case it is regarded as a day of the month. \u003cli\u003eIf the number is followed by whitespace, a comma, a hyphen, or end of string, then if an hour has been recognized but not a minute, it is regarded as a minute; otherwise, if a minute has been recognized but not a second, it is regarded as a second; otherwise, it is regarded as a day of the month. \u003c/ul\u003e\u003cp\u003e A consecutive sequence of letters is regarded as a word and treated as follows:\u003cul\u003e \u003cli\u003eA word that matches \u003ctt\u003eAM\u003c/tt\u003e, ignoring case, is ignored (but the parse fails if an hour has not been recognized or is less than \u003ctt\u003e1\u003c/tt\u003e or greater than \u003ctt\u003e12\u003c/tt\u003e). \u003cli\u003eA word that matches \u003ctt\u003ePM\u003c/tt\u003e, ignoring case, adds \u003ctt\u003e12\u003c/tt\u003e to the hour (but the parse fails if an hour has not been recognized or is less than \u003ctt\u003e1\u003c/tt\u003e or greater than \u003ctt\u003e12\u003c/tt\u003e). \u003cli\u003eAny word that matches any prefix of \u003ctt\u003eSUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY\u003c/tt\u003e, or \u003ctt\u003eSATURDAY\u003c/tt\u003e, ignoring case, is ignored. For example, \u003ctt\u003esat, Friday, TUE\u003c/tt\u003e, and \u003ctt\u003eThurs\u003c/tt\u003e are ignored. \u003cli\u003eOtherwise, any word that matches any prefix of \u003ctt\u003eJANUARY, FEBRUARY, MARCH, APRIL, MAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER\u003c/tt\u003e, or \u003ctt\u003eDECEMBER\u003c/tt\u003e, ignoring case, and considering them in the order given here, is recognized as specifying a month and is converted to a number (\u003ctt\u003e0\u003c/tt\u003e to \u003ctt\u003e11\u003c/tt\u003e). For example, \u003ctt\u003eaug, Sept, april\u003c/tt\u003e, and \u003ctt\u003eNOV\u003c/tt\u003e are recognized as months. So is \u003ctt\u003eMa\u003c/tt\u003e, which is recognized as \u003ctt\u003eMARCH\u003c/tt\u003e, not \u003ctt\u003eMAY\u003c/tt\u003e. \u003cli\u003eAny word that matches \u003ctt\u003eGMT, UT\u003c/tt\u003e, or \u003ctt\u003eUTC\u003c/tt\u003e, ignoring case, is treated as referring to UTC. \u003cli\u003eAny word that matches \u003ctt\u003eEST, CST, MST\u003c/tt\u003e, or \u003ctt\u003ePST\u003c/tt\u003e, ignoring case, is recognized as referring to the time zone in North America that is five, six, seven, or eight hours west of Greenwich, respectively. Any word that matches \u003ctt\u003eEDT, CDT, MDT\u003c/tt\u003e, or \u003ctt\u003ePDT\u003c/tt\u003e, ignoring case, is recognized as referring to the same time zone, respectively, during daylight saving time.\u003c/ul\u003e\u003cp\u003e Once the entire string s has been scanned, it is converted to a time result in one of two ways. If a time zone or time-zone offset has been recognized, then the year, month, day of month, hour, minute, and second are interpreted in UTC and then the time-zone offset is applied. Otherwise, the year, month, day of month, hour, minute, and second are interpreted in the local time zone.\n * @param s   a string to be parsed as a date.\n * @return  the number of milliseconds since January 1, 1970, 00:00:00 GMTrepresented by the string argument.\n * @see java.text.DateFormat\n * @deprecated As of JDK version 1.1,replaced by \u003ccode\u003eDateFormat.parse(String s)\u003c/code\u003e.\n */\n","tf":{"freq":{"deprec":1,"greater":3,"understand":1,"decreas":1,"accept":1,"thirti":1,"particular":1,"trepres":1,"abcdefghijklmnopqrstuvwxyz":1,"specifi":3,"parenthes":1,"westward":1,"time":19,"given":1,"fail":3,"refer":3,"rang":2,"interest":1,"blockquot":2,"sequenc":2,"relat":2,"year":13,"recogn":16,"right":1,"mani":1,"ignor":11,"charact":4,"alway":1,"number":16,"regard":10,"without":1,"greenwich":5,"consecut":2,"digit":1,"sat":3,"prefix":2,"month":12,"distanc":1,"entir":1,"america":1,"link":1,"data":1,"redund":1,"use":3,"space":1,"date":8,"decim":2,"express":1,"consid":2,"version":1,"six":1,"unless":2,"indic":1,"current":1,"adjust":1,"left":1,"initi":1,"note":1,"end":2,"punctuat":1,"look":1,"may":1,"slash":2,"assum":3,"repres":1,"utc":1,"true":1,"hour":14,"represent":1,"process":1,"differ":1,"preced":2,"string":10,"exampl":5,"alreadi":4,"meridian":1,"within":3,"pars":5,"respect":2,"zone":12,"save":1,"second":4,"simpl":1,"permit":2,"eight":1,"slight":1,"equival":1,"abbrevi":2,"friday":1,"follow":6,"argument":2,"text":2,"comma":2,"minut":9,"except":1,"thrown":1,"letter":1,"januari":2,"format":4,"appli":1,"syntax":2,"materi":1,"word":8,"match":7,"day":5,"west":3,"hyphen":1,"treat":3,"attempt":3,"otherwis":6,"result":1,"one":2,"interpret":5,"way":1,"convert":2,"colon":1,"north":1,"add":1,"order":1,"millisecond":2,"sept":1,"mean":5,"four":1,"east":1,"offset":8,"less":6,"condit":1,"five":2,"april":1,"standard":1,"thus":1,"thur":1,"epoch":1,"nest":1,"whitespac":2,"produc":1,"equal":1,"illeg":1,"general":1,"two":1,"subtract":1,"seven":1,"parenthesi":1,"pre":2,"replac":1,"continent":1,"centuri":1,"scan":1,"java":2,"measur":2,"local":2,"aug":3,"also":1,"success":1,"daylight":1,"occur":1},"maxFreq":19,"totalTerms":418},"loc":165}