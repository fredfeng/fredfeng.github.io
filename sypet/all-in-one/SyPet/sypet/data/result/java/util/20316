{"id":20316,"className":"java.util.Arrays","methodName":"deepToString","signature":"\u003cjava.util.Arrays: java.lang.String deepToString(java.lang.Object[])\u003e","javadoc":"/** \n * Returns a string representation of the \"deep contents\" of the specified array.  If the array contains other arrays as elements, the string representation contains their contents and so on.  This method is designed for converting multidimensional arrays to strings. \u003cp\u003eThe string representation consists of a list of the array\u0027s elements, enclosed in square brackets (\u003ctt\u003e\"[]\"\u003c/tt\u003e).  Adjacent elements are separated by the characters \u003ctt\u003e\", \"\u003c/tt\u003e (a comma followed by a space).  Elements are converted to strings as by \u003ctt\u003eString.valueOf(Object)\u003c/tt\u003e, unless they are themselves arrays. \u003cp\u003eIf an element \u003ctt\u003ee\u003c/tt\u003e is an array of a primitive type, it is converted to a string as by invoking the appropriate overloading of \u003ctt\u003eArrays.toString(e)\u003c/tt\u003e.  If an element \u003ctt\u003ee\u003c/tt\u003e is an array of a reference type, it is converted to a string as by invoking this method recursively. \u003cp\u003eTo avoid infinite recursion, if the specified array contains itself as an element, or contains an indirect reference to itself through one or more levels of arrays, the self-reference is converted to the string \u003ctt\u003e\"[...]\"\u003c/tt\u003e.  For example, an array containing only a reference to itself would be rendered as \u003ctt\u003e\"[[...]]\"\u003c/tt\u003e. \u003cp\u003eThis method returns \u003ctt\u003e\"null\"\u003c/tt\u003e if the specified array is \u003ctt\u003enull\u003c/tt\u003e.\n * @param a the array whose string representation to return\n * @return a string representation of \u003ctt\u003ea\u003c/tt\u003e\n * @see #toString(Object[])\n * @since 1.5\n */\n","tf":{"freq":{"primit":1,"squar":1,"one":1,"convert":5,"self":1,"object":2,"type":2,"space":1,"bracket":1,"specifi":3,"indirect":1,"avoid":1,"infinit":1,"level":1,"multidimension":1,"unless":1,"refer":4,"valu":1,"deep":2,"follow":1,"adjac":1,"element":7,"comma":1,"whose":1,"consist":1,"charact":1,"invok":2,"overload":1,"list":1,"render":1,"represent":5,"content":2,"separ":1,"appropri":1,"contain":5,"string":14,"enclos":1,"exampl":1,"method":3,"recurs":2,"design":1,"array":14},"maxFreq":14,"totalTerms":99},"loc":11}