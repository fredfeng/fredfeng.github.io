{"id":22280,"className":"java.util.AbstractList","methodName":"iterator","signature":"\u003cjava.util.AbstractList: java.util.Iterator\u003cE\u003e iterator()\u003e","javadoc":"/** \n * Returns an iterator over the elements in this list in proper sequence. \u003cp\u003eThis implementation returns a straightforward implementation of the iterator interface, relying on the backing list\u0027s  {@code size()}, {@code get(int)}, and  {@code remove(int)} methods.\u003cp\u003eNote that the iterator returned by this method will throw an {@link UnsupportedOperationException} in response to its{@code remove} method unless the list\u0027s {@code remove(int)} method isoverridden. \u003cp\u003eThis implementation can be made to throw runtime exceptions in the face of concurrent modification, as described in the specification for the (protected)  {@link #modCount} field.\n * @return an iterator over the elements in this list in proper sequence\n */\n","tf":{"freq":{"face":1,"unsupport":1,"count":1,"concurr":1,"link":2,"made":1,"isoverridden":1,"reli":1,"unless":1,"oper":1,"sequenc":2,"proper":2,"note":1,"element":2,"except":2,"respons":1,"mod":1,"runtim":1,"remov":3,"describ":1,"back":1,"list":4,"size":1,"field":1,"specif":1,"will":1,"method":4,"iter":5,"modif":1,"straightforward":1},"maxFreq":5,"totalTerms":47},"loc":3}