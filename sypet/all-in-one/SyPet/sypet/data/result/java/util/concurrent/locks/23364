{"id":23364,"className":"java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock","methodName":"lock","signature":"\u003cjava.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()\u003e","javadoc":"/** \n * Acquires the read lock. \u003cp\u003eAcquires the read lock if the write lock is not held by another thread and returns immediately. \u003cp\u003eIf the write lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until the read lock has been acquired.\n */\n","tf":{"freq":{"acquir":3,"held":2,"lock":6,"schedul":1,"anoth":2,"becom":1,"disabl":1,"thread":4,"write":2,"current":1,"purpos":1,"read":3,"immedi":1,"lie":1,"dormant":1},"maxFreq":6,"totalTerms":30},"loc":3}