{"id":20751,"className":"java.util.Vector","methodName":"removeElementAt","signature":"\u003cjava.util.Vector: void removeElementAt(int)\u003e","javadoc":"/** \n * Deletes the component at the specified index. Each component in this vector with an index greater or equal to the specified {@code index} is shifted downward to have an index onesmaller than the value it had previously. The size of this vector is decreased by  {@code 1}. \u003cp\u003eThe index must be a value greater than or equal to  {@code 0}and less than the current size of the vector. \u003cp\u003eThis method is identical in functionality to the  {@link #remove(int)}method (which is part of the  {@link List} interface).  Note that the{@code remove} method returns the old value that was stored at thespecified position.\n * @param index   the index of the object to remove\n * @throws ArrayIndexOutOfBoundsException if the index is out of range( {@code index \u003c 0 || index \u003e\u003d size()})\n */\n","tf":{"freq":{"old":1,"greater":2,"store":1,"decreas":1,"delet":1,"link":2,"object":1,"must":1,"specifi":2,"function":1,"ident":1,"rang":1,"vector":3,"downward":1,"current":1,"thespecifi":1,"valu":3,"note":1,"less":1,"element":1,"except":1,"index":11,"previous":1,"remov":4,"list":1,"equal":2,"size":3,"compon":2,"method":3,"onesmal":1,"part":1,"posit":1,"bound":1,"shift":1,"array":1},"maxFreq":11,"totalTerms":61},"loc":16}