{"id":23873,"className":"java.util.jar.Manifest","methodName":"getAttributes","signature":"\u003cjava.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)\u003e","javadoc":"/** \n * Returns the Attributes for the specified entry name. This method is defined as: \u003cpre\u003e return (Attributes)getEntries().get(name) \u003c/pre\u003e Though  {@code null} is a valid {@code name}, when {@code getAttributes(null)} is invoked on a {@code Manifest}obtained from a jar file,  {@code null} will be returned.  While jarfiles themselves do not allow  {@code null}-named attributes, it is possible to invoke  {@link #getEntries} on a {@code Manifest}, and on that result, invoke  {@code put} with a null key and anarbitrary value.  Subsequent invocations of {@code getAttributes(null)} will return the just-{@code put}value. \u003cp\u003e Note that this method does not return the manifest\u0027s main attributes; see  {@link #getMainAttributes}.\n * @param name entry name\n * @return the Attributes for the specified entry name\n */\n","tf":{"freq":{"valid":1,"defin":1,"result":1,"put":2,"allow":1,"link":2,"manifest":3,"possibl":1,"jarfil":1,"though":1,"specifi":2,"attribut":9,"jar":1,"file":1,"name":7,"valu":2,"subsequ":1,"note":1,"key":1,"just":1,"invok":3,"entri":5,"invoc":1,"main":2,"obtain":1,"pre":2,"will":2,"method":2,"anarbitrari":1},"maxFreq":9,"totalTerms":59},"loc":3}