{"id":21935,"className":"java.util.Collections","methodName":"synchronizedCollection","signature":"\u003cjava.util.Collections: java.util.Collection\u003cT\u003e synchronizedCollection(java.util.Collection)\u003e","javadoc":"/** \n * Returns a synchronized (thread-safe) collection backed by the specified collection.  In order to guarantee serial access, it is critical that \u003cstrong\u003eall\u003c/strong\u003e access to the backing collection is accomplished through the returned collection.\u003cp\u003e It is imperative that the user manually synchronize on the returned collection when iterating over it: \u003cpre\u003e Collection c \u003d Collections.synchronizedCollection(myCollection); ... synchronized (c) { Iterator i \u003d c.iterator(); // Must be in the synchronized block while (i.hasNext()) foo(i.next()); } \u003c/pre\u003e Failure to follow this advice may result in non-deterministic behavior. \u003cp\u003eThe returned collection does \u003ci\u003enot\u003c/i\u003e pass the \u003ctt\u003ehashCode\u003c/tt\u003e and \u003ctt\u003eequals\u003c/tt\u003e operations through to the backing collection, but relies on \u003ctt\u003eObject\u003c/tt\u003e\u0027s equals and hashCode methods.  This is necessary to preserve the contracts of these operations in the case that the backing collection is a set or a list.\u003cp\u003e The returned collection will be serializable if the specified collection is serializable.\n * @param c the collection to be \"wrapped\" in a synchronized collection.\n * @return a synchronized view of the specified collection.\n */\n","tf":{"freq":{"result":1,"accomplish":1,"behavior":1,"serializ":2,"next":2,"block":1,"foo":1,"object":1,"necessari":1,"must":1,"reli":1,"specifi":3,"order":1,"oper":2,"determinist":1,"thread":1,"imper":1,"advic":1,"follow":1,"wrap":1,"safe":1,"may":1,"contract":1,"hash":2,"failur":1,"guarante":1,"preserv":1,"back":4,"list":1,"equal":2,"access":2,"pass":1,"non":1,"manual":1,"strong":2,"pre":2,"will":1,"method":1,"view":1,"iter":3,"serial":1,"user":1,"critic":1,"collect":18},"maxFreq":18,"totalTerms":76},"loc":3}