{"id":22849,"className":"java.util.concurrent.Executors","methodName":"newScheduledThreadPool","signature":"\u003cjava.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)\u003e","javadoc":"/** \n * Creates a thread pool that can schedule commands to run after a given delay, or to execute periodically.\n * @param corePoolSize the number of threads to keep in the pool,even if they are idle.\n * @param threadFactory the factory to use when the executorcreates a new thread.\n * @return a newly created scheduled thread pool\n * @throws IllegalArgumentException if {@code corePoolSize \u003c 0}\n * @throws NullPointerException if threadFactory is null\n */\n","tf":{"freq":{"argument":1,"except":2,"creat":2,"use":1,"schedul":3,"executorcr":1,"number":1,"run":1,"period":1,"illeg":1,"idl":1,"size":2,"newli":1,"given":1,"pool":6,"factori":3,"thread":7,"command":1,"pointer":1,"even":1,"core":2,"delay":1,"execut":1,"keep":1},"maxFreq":7,"totalTerms":43},"loc":3}