{"id":21551,"className":"java.util.Calendar","methodName":"clear","signature":"\u003cjava.util.Calendar: void clear()\u003e","javadoc":"/** \n * Sets all the calendar field values and the time value (millisecond offset from the \u003ca href\u003d\"#Epoch\"\u003eEpoch\u003c/a\u003e) of this \u003ccode\u003eCalendar\u003c/code\u003e undefined. This means that  {@link #isSet(int) isSet()} will return \u003ccode\u003efalse\u003c/code\u003e for all thecalendar fields, and the date and time calculations will treat the fields as if they had never been set. A \u003ccode\u003eCalendar\u003c/code\u003e implementation class may use its specific default field values for date/time calculations. For example, \u003ccode\u003eGregorianCalendar\u003c/code\u003e uses 1970 if the \u003ccode\u003eYEAR\u003c/code\u003e field value is undefined.\n * @see #clear(int)\n */\n","tf":{"freq":{"fals":1,"may":1,"calcul":2,"epoch":2,"link":1,"use":2,"date":2,"clear":2,"field":5,"specif":1,"never":1,"time":3,"thecalendar":1,"millisecond":1,"exampl":1,"will":2,"mean":1,"valu":4,"gregorian":1,"offset":1,"undefin":2,"href":1,"treat":1,"calendar":4},"maxFreq":5,"totalTerms":43},"loc":8}