{"id":23339,"className":"java.util.concurrent.locks.Condition","methodName":"await","signature":"\u003cjava.util.concurrent.locks.Condition: boolean await(long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Causes the current thread to wait until it is signalled or interrupted, or the specified waiting time elapses. This method is behaviorally equivalent to:\u003cbr\u003e \u003cpre\u003e awaitNanos(unit.toNanos(time)) \u0026gt; 0 \u003c/pre\u003e\n * @param time the maximum time to wait\n * @param unit the time unit of the {@code time} argument\n * @return {@code false} if the waiting time detectably elapsedbefore return from the method, else  {@code true}\n * @throws InterruptedException if the current thread is interrupted(and interruption of thread suspension is supported)\n */\n","tf":{"freq":{"fals":1,"argument":1,"detect":1,"except":1,"support":1,"behavior":1,"true":1,"elapsedbefor":1,"signal":1,"nano":2,"wait":4,"els":1,"interrupt":4,"specifi":1,"suspens":1,"unit":3,"elaps":1,"time":7,"caus":1,"await":2,"equival":1,"maximum":1,"pre":2,"thread":3,"current":2,"method":2},"maxFreq":7,"totalTerms":47},"loc":0}