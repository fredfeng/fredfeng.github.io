{"id":21238,"className":"java.util.Collection","methodName":"remove","signature":"\u003cjava.util.Collection: boolean remove(java.lang.Object)\u003e","javadoc":"/** \n * Removes a single instance of the specified element from this collection, if it is present (optional operation).  More formally, removes an element \u003ctt\u003ee\u003c/tt\u003e such that \u003ctt\u003e(o\u003d\u003dnull\u0026nbsp;?\u0026nbsp;e\u003d\u003dnull\u0026nbsp;:\u0026nbsp;o.equals(e))\u003c/tt\u003e, if this collection contains one or more such elements.  Returns \u003ctt\u003etrue\u003c/tt\u003e if this collection contained the specified element (or equivalently, if this collection changed as a result of the call).\n * @param o element to be removed from this collection, if present\n * @return \u003ctt\u003etrue\u003c/tt\u003e if an element was removed as a result of this call\n * @throws ClassCastException if the type of the specified elementis incompatible with this collection (\u003ca href\u003d\"#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws NullPointerException if the specified element is null and thiscollection does not permit null elements (\u003ca href\u003d\"#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws UnsupportedOperationException if the \u003ctt\u003eremove\u003c/tt\u003e operationis not supported by this collection\n */\n","tf":{"freq":{"result":2,"call":2,"unsupport":1,"singl":1,"elementi":1,"permit":1,"one":1,"type":1,"specifi":4,"oper":2,"equival":1,"thiscollect":1,"href":2,"option":5,"nbsp":4,"element":8,"except":3,"support":1,"remov":6,"true":2,"equal":1,"incompat":1,"restrict":2,"instanc":1,"present":2,"formal":1,"cast":1,"operationi":1,"contain":2,"pointer":1,"chang":1,"collect":7},"maxFreq":8,"totalTerms":70},"loc":0}