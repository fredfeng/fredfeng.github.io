{"id":21229,"className":"java.util.Objects","methodName":"requireNonNull","signature":"\u003cjava.util.Objects: T requireNonNull(T)\u003e","javadoc":"/** \n * Checks that the specified object reference is not  {@code null}. This method is designed primarily for doing parameter validation in methods and constructors, as demonstrated below: \u003cblockquote\u003e\u003cpre\u003e public Foo(Bar bar) { this.bar \u003d Objects.requireNonNull(bar); } \u003c/pre\u003e\u003c/blockquote\u003e\n * @param obj the object reference to check for nullity\n * @param \u003c T \u003e the type of the reference\n * @return {@code obj} if not {@code null}\n * @throws NullPointerException if {@code obj} is {@code null}\n */\n","tf":{"freq":{"valid":1,"except":1,"nulliti":1,"check":2,"paramet":1,"foo":1,"object":3,"type":1,"primarili":1,"non":2,"specifi":1,"requir":2,"refer":3,"pre":2,"blockquot":2,"pointer":1,"obj":3,"method":2,"demonstr":1,"bar":4,"design":1,"constructor":1},"maxFreq":4,"totalTerms":37},"loc":5}