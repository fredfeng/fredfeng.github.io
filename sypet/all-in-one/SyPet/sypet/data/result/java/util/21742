{"id":21742,"className":"java.util.Map$Entry","methodName":"equals","signature":"\u003cjava.util.Map$Entry: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares the specified object with this entry for equality. Returns \u003ctt\u003etrue\u003c/tt\u003e if the given object is also a map entry and the two entries represent the same mapping.  More formally, two entries \u003ctt\u003ee1\u003c/tt\u003e and \u003ctt\u003ee2\u003c/tt\u003e represent the same mapping if\u003cpre\u003e (e1.getKey()\u003d\u003dnull ? e2.getKey()\u003d\u003dnull : e1.getKey().equals(e2.getKey()))  \u0026amp;\u0026amp; (e1.getValue()\u003d\u003dnull ? e2.getValue()\u003d\u003dnull : e1.getValue().equals(e2.getValue())) \u003c/pre\u003e This ensures that the \u003ctt\u003eequals\u003c/tt\u003e method works properly across different implementations of the \u003ctt\u003eMap.Entry\u003c/tt\u003e interface.\n * @param o object to be compared for equality with this map entry\n * @return \u003ctt\u003etrue\u003c/tt\u003e if the specified object is equal to this mapentry\n */\n","tf":{"freq":{"work":1,"repres":2,"entri":6,"true":2,"equal":7,"object":4,"across":1,"ensur":1,"specifi":2,"differ":1,"two":2,"formal":1,"given":1,"pre":2,"mapentri":1,"map":5,"method":1,"valu":4,"proper":1,"amp":2,"compar":2,"also":1,"key":4},"maxFreq":7,"totalTerms":54},"loc":0}