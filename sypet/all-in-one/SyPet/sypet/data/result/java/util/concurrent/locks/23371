{"id":23371,"className":"java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock","methodName":"lock","signature":"\u003cjava.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()\u003e","javadoc":"/** \n * Acquires the write lock. \u003cp\u003eAcquires the write lock if neither the read nor write lock are held by another thread and returns immediately, setting the write lock hold count to one. \u003cp\u003eIf the current thread already holds the write lock then the hold count is incremented by one and the method returns immediately. \u003cp\u003eIf the lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until the write lock has been acquired, at which time the write lock hold count is set to one.\n */\n","tf":{"freq":{"acquir":3,"increment":1,"held":2,"count":3,"hold":4,"one":3,"lock":9,"schedul":1,"anoth":2,"neither":1,"time":1,"becom":1,"disabl":1,"thread":5,"current":2,"write":7,"purpos":1,"read":1,"method":1,"alreadi":1,"immedi":2,"lie":1,"dormant":1},"maxFreq":9,"totalTerms":54},"loc":3}