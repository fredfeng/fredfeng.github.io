{"id":23585,"className":"java.util.concurrent.atomic.AtomicStampedReference","methodName":"compareAndSet","signature":"\u003cjava.util.concurrent.atomic.AtomicStampedReference: boolean compareAndSet(V,V,int,int)\u003e","javadoc":"/** \n * Atomically sets the value of both the reference and stamp to the given update values if the current reference is  {@code \u003d\u003d} to the expected referenceand the current stamp is equal to the expected stamp.\n * @param expectedReference the expected value of the reference\n * @param newReference the new value for the reference\n * @param expectedStamp the expected value of the stamp\n * @param newStamp the new value for the stamp\n * @return true if successful\n */\n","tf":{"freq":{"atom":1,"stamp":7,"referenceand":1,"true":1,"equal":1,"expect":6,"given":1,"updat":1,"refer":6,"current":2,"valu":6,"success":1,"compar":1},"maxFreq":7,"totalTerms":35},"loc":9}