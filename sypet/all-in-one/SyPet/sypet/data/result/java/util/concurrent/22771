{"id":22771,"className":"java.util.concurrent.ScheduledThreadPoolExecutor","methodName":"ScheduledThreadPoolExecutor","signature":"\u003cjava.util.concurrent.ScheduledThreadPoolExecutor: void ScheduledThreadPoolExecutor(int,java.util.concurrent.ThreadFactory)\u003e","javadoc":"/** \n * Creates a new  {@code ScheduledThreadPoolExecutor} with thegiven initial parameters.\n * @param corePoolSize the number of threads to keep in the pool, evenif they are idle, unless  {@code allowCoreThreadTimeOut} is set\n * @param threadFactory the factory to use when the executorcreates a new thread\n * @throws IllegalArgumentException if {@code corePoolSize \u003c 0}\n * @throws NullPointerException if {@code threadFactory} is null\n */\n","tf":{"freq":{"argument":1,"except":2,"allow":1,"creat":1,"executor":2,"paramet":1,"use":1,"schedul":2,"executorcr":1,"number":1,"illeg":1,"idl":1,"size":2,"time":1,"unless":1,"pool":5,"factori":3,"thread":7,"pointer":1,"core":3,"thegiven":1,"initi":1,"evenif":1,"keep":1},"maxFreq":7,"totalTerms":42},"loc":4}