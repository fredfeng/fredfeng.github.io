{"id":22916,"className":"java.util.concurrent.ForkJoinPool","methodName":"shutdown","signature":"\u003cjava.util.concurrent.ForkJoinPool: void shutdown()\u003e","javadoc":"/** \n * Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted. Invocation has no additional effect if already shut down. Tasks that are in the process of being submitted concurrently during the course of this method may or may not be rejected.\n * @throws SecurityException if a security manager exists andthe caller is not permitted to modify threads because it does not hold  {@link java.lang.RuntimePermission}{@code (\"modifyThread\")}\n */\n","tf":{"freq":{"caller":1,"reject":1,"accept":1,"concurr":1,"link":1,"permit":1,"cours":1,"lang":1,"order":1,"shut":1,"thread":2,"permiss":1,"initi":1,"exist":1,"shutdown":2,"addit":1,"may":2,"except":1,"submit":2,"previous":1,"task":3,"manag":1,"runtim":1,"hold":1,"invoc":1,"process":1,"secur":2,"effect":1,"modifi":2,"will":1,"java":1,"alreadi":1,"method":1,"execut":1,"andth":1},"maxFreq":3,"totalTerms":43},"loc":5}