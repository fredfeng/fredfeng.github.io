{"id":20373,"className":"java.util.ResourceBundle$Control","methodName":"newBundle","signature":"\u003cjava.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)\u003e","javadoc":"/** \n * Instantiates a resource bundle for the given bundle name of the given format and locale, using the given class loader if necessary. This method returns \u003ccode\u003enull\u003c/code\u003e if there is no resource bundle available for the given parameters. If a resource bundle can\u0027t be instantiated due to an unexpected error, the error must be reported by throwing an \u003ccode\u003eError\u003c/code\u003e or \u003ccode\u003eException\u003c/code\u003e rather than simply returning \u003ccode\u003enull\u003c/code\u003e. \u003cp\u003eIf the \u003ccode\u003ereload\u003c/code\u003e flag is \u003ccode\u003etrue\u003c/code\u003e, it indicates that this method is being called because the previously loaded resource bundle has expired. \u003cp\u003eThe default implementation instantiates a \u003ccode\u003eResourceBundle\u003c/code\u003e as follows. \u003cul\u003e \u003cli\u003eThe bundle name is obtained by calling  {@link #toBundleName(String,Locale) toBundleName(baseName,locale)}.\u003c/li\u003e \u003cli\u003eIf \u003ccode\u003eformat\u003c/code\u003e is \u003ccode\u003e\"java.class\"\u003c/code\u003e, the {@link Class} specified by the bundle name is loaded by calling{@link ClassLoader#loadClass(String)}. Then, a \u003ccode\u003eResourceBundle\u003c/code\u003e is instantiated by calling  {@link Class#newInstance()}.  Note that the \u003ccode\u003ereload\u003c/code\u003e flag is ignored for loading class-based resource bundles in this default implementation.\u003c/li\u003e \u003cli\u003eIf \u003ccode\u003eformat\u003c/code\u003e is \u003ccode\u003e\"java.properties\"\u003c/code\u003e, {@link #toResourceName(String,String) toResourceName(bundlename,\"properties\")} is called to get the resource name.If \u003ccode\u003ereload\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e,  {@link ClassLoader#getResource(String) load.getResource} is calledto get a  {@link URL} for creating a {@link URLConnection}. This \u003ccode\u003eURLConnection\u003c/code\u003e is used to {@linkplain URLConnection#setUseCaches(boolean) disable thecaches} of the underlying resource loading layers,and to  {@linkplain URLConnection#getInputStream() get an\u003ccode\u003eInputStream\u003c/code\u003e}. Otherwise,  {@link ClassLoader#getResourceAsStream(String) loader.getResourceAsStream} is called to get an {@link InputStream}. Then, a  {@link PropertyResourceBundle} is constructed with the\u003ccode\u003eInputStream\u003c/code\u003e.\u003c/li\u003e \u003cli\u003eIf \u003ccode\u003eformat\u003c/code\u003e is neither \u003ccode\u003e\"java.class\"\u003c/code\u003e nor \u003ccode\u003e\"java.properties\"\u003c/code\u003e, an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown.\u003c/li\u003e \u003c/ul\u003e\n * @param baseName the base bundle name of the resource bundle, a fully qualified class name\n * @param locale the locale for which the resource bundle should be instantiated\n * @param format the resource bundle format to be loaded\n * @param loader the \u003ccode\u003eClassLoader\u003c/code\u003e to use to load the bundle\n * @param reload the flag to indicate bundle reloading; \u003ccode\u003etrue\u003c/code\u003e if reloading an expired resource bundle, \u003ccode\u003efalse\u003c/code\u003e otherwise\n * @return the resource bundle instance,or \u003ccode\u003enull\u003c/code\u003e if none could be found.\n * @exception NullPointerException if \u003ccode\u003ebundleName\u003c/code\u003e, \u003ccode\u003elocale\u003c/code\u003e, \u003ccode\u003eformat\u003c/code\u003e, or \u003ccode\u003eloader\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, or if \u003ccode\u003enull\u003c/code\u003e is returned by {@link #toBundleName(String,Locale) toBundleName}\n * @exception IllegalArgumentException if \u003ccode\u003eformat\u003c/code\u003e is unknown, or if the resource found for the given parameters contains malformed data.\n * @exception ClassCastException if the loaded class cannot be cast to \u003ccode\u003eResourceBundle\u003c/code\u003e\n * @exception IllegalAccessException if the class or its nullary constructor is not accessible.\n * @exception InstantiationException if the instantiation of a class fails for some other reason.\n * @exception ExceptionInInitializerError if the initialization provoked by this method fails.\n * @exception SecurityException If a security manager is present and creation of new instances is denied. See  {@link Class#newInstance()}for details.\n * @exception IOException if an error occurred when reading resources using any I/O operations\n */\n","tf":{"freq":{"fals":1,"detail":1,"reason":1,"instanti":7,"necessari":1,"must":1,"specifi":1,"expir":2,"nullari":1,"fail":2,"given":5,"oper":1,"report":1,"none":1,"deni":1,"lconnect":4,"follow":1,"argument":2,"thrown":1,"except":18,"ignor":1,"creat":1,"loader":8,"thecach":1,"avail":1,"format":8,"instanc":4,"present":1,"malform":1,"input":4,"obtain":1,"flag":3,"cast":2,"disabl":1,"contain":1,"pointer":1,"due":1,"load":9,"properti":4,"reload":6,"bundl":26,"otherwis":2,"creation":1,"call":6,"linkplain":2,"stream":6,"simpli":1,"unexpect":1,"link":13,"data":1,"use":5,"resourc":24,"indic":2,"name":15,"read":1,"rather":1,"initi":2,"note":1,"constructor":1,"error":5,"previous":1,"calledto":1,"manag":1,"layer":1,"paramet":2,"true":3,"fulli":1,"unknown":1,"cach":1,"access":2,"illeg":3,"bundlenam":1,"neither":1,"secur":2,"string":7,"base":4,"provok":1,"method":3,"java":4,"construct":1,"local":7,"qualifi":1,"occur":1,"found":2},"maxFreq":26,"totalTerms":280},"loc":60}