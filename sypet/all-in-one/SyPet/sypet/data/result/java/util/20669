{"id":20669,"className":"java.util.IdentityHashMap","methodName":"entrySet","signature":"\u003cjava.util.IdentityHashMap: java.util.Set\u003cjava.util.Map.Entry\u003cK,V\u003e\u003e entrySet()\u003e","javadoc":"/** \n * Returns a  {@link Set} view of the mappings contained in this map.Each element in the returned set is a reference-equality-based \u003ctt\u003eMap.Entry\u003c/tt\u003e.  The set is backed by the map, so changes to the map are reflected in the set, and vice-versa.  If the map is modified while an iteration over the set is in progress, the results of the iteration are undefined.  The set supports element removal, which removes the corresponding mapping from the map, via the \u003ctt\u003eIterator.remove\u003c/tt\u003e, \u003ctt\u003eSet.remove\u003c/tt\u003e, \u003ctt\u003eremoveAll\u003c/tt\u003e, \u003ctt\u003eretainAll\u003c/tt\u003e and \u003ctt\u003eclear\u003c/tt\u003e methods.  It does not support the \u003ctt\u003eadd\u003c/tt\u003e or \u003ctt\u003eaddAll\u003c/tt\u003e methods. \u003cp\u003eLike the backing map, the \u003ctt\u003eMap.Entry\u003c/tt\u003e objects in the set returned by this method define key and value equality as reference-equality rather than object-equality.  This affects the behavior of the \u003ctt\u003eequals\u003c/tt\u003e and \u003ctt\u003ehashCode\u003c/tt\u003e methods of these \u003ctt\u003eMap.Entry\u003c/tt\u003e objects.  A reference-equality based \u003ctt\u003eMap.Entry e\u003c/tt\u003e is equal to an object \u003ctt\u003eo\u003c/tt\u003e if and only if \u003ctt\u003eo\u003c/tt\u003e is a \u003ctt\u003eMap.Entry\u003c/tt\u003e and \u003ctt\u003ee.getKey()\u003d\u003do.getKey() \u0026amp;\u0026amp; e.getValue()\u003d\u003do.getValue()\u003c/tt\u003e.  To accommodate these equals semantics, the \u003ctt\u003ehashCode\u003c/tt\u003e method returns \u003ctt\u003eSystem.identityHashCode(e.getKey()) ^ System.identityHashCode(e.getValue())\u003c/tt\u003e. \u003cp\u003e\u003cb\u003eOwing to the reference-equality-based semantics of the \u003ctt\u003eMap.Entry\u003c/tt\u003e instances in the set returned by this method, it is possible that the symmetry and transitivity requirements of the  {@link Object#equals(Object)} contract may be violated if any ofthe entries in the set is compared to a normal map entry, or if the set returned by this method is compared to a set of normal map entries (such as would be returned by a call to this method on a normal map).  However, the \u003ctt\u003eObject.equals\u003c/tt\u003e contract is guaranteed to hold among identity-based map entries, and among sets of such entries. \u003c/b\u003e\n * @return a set view of the identity-mappings contained in this map\n */\n","tf":{"freq":{"progress":1,"via":1,"normal":3,"possibl":1,"violat":1,"transit":1,"requir":1,"refer":4,"among":2,"howev":1,"undefin":1,"key":4,"versa":1,"element":2,"support":2,"hash":4,"contract":2,"hold":1,"remov":5,"symmetri":1,"like":1,"instanc":1,"system":2,"contain":2,"retain":1,"view":2,"compar":2,"amp":2,"call":1,"result":1,"defin":1,"vice":1,"correspond":1,"behavior":1,"link":2,"object":7,"add":2,"affect":1,"owe":1,"clear":1,"accommod":1,"ident":4,"ofth":1,"semant":2,"map":20,"rather":1,"valu":4,"may":1,"guarante":1,"entri":12,"back":2,"equal":11,"modifi":1,"base":4,"method":8,"chang":1,"iter":3,"reflect":1},"maxFreq":20,"totalTerms":150},"loc":7}