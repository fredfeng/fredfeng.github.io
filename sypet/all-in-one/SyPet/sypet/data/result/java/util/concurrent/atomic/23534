{"id":23534,"className":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater","methodName":"compareAndSet","signature":"\u003cjava.util.concurrent.atomic.AtomicReferenceFieldUpdater: boolean compareAndSet(T,V,V)\u003e","javadoc":"/** \n * Atomically sets the field of the given object managed by this updater to the given updated value if the current value  {@code \u003d\u003d} theexpected value. This method is guaranteed to be atomic with respect to other calls to  {@code compareAndSet} and {@code set}, but not necessarily with respect to other changes in the field.\n * @param obj An object whose field to conditionally set\n * @param expect the expected value\n * @param update the new value\n * @return true if successful.\n */\n","tf":{"freq":{"condit":1,"call":1,"atom":2,"whose":1,"manag":1,"guarante":1,"true":1,"object":2,"expect":2,"field":3,"given":2,"updat":3,"theexpect":1,"current":1,"obj":1,"valu":5,"method":1,"chang":1,"necessarili":1,"success":1,"compar":2,"respect":2},"maxFreq":5,"totalTerms":36},"loc":0}