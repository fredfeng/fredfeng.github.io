{"id":23023,"className":"java.util.concurrent.CopyOnWriteArrayList","methodName":"indexOf","signature":"\u003cjava.util.concurrent.CopyOnWriteArrayList: int indexOf(E,int)\u003e","javadoc":"/** \n * Returns the index of the first occurrence of the specified element in this list, searching forwards from \u003ctt\u003eindex\u003c/tt\u003e, or returns -1 if the element is not found. More formally, returns the lowest index \u003ctt\u003ei\u003c/tt\u003e such that \u003ctt\u003e(i\u0026nbsp;\u0026gt;\u003d\u0026nbsp;index\u0026nbsp;\u0026amp;\u0026amp;\u0026nbsp;(e\u003d\u003dnull\u0026nbsp;?\u0026nbsp;get(i)\u003d\u003dnull\u0026nbsp;:\u0026nbsp;e.equals(get(i))))\u003c/tt\u003e, or -1 if there is no such index.\n * @param e element to search for\n * @param index index to start searching from\n * @return the index of the first occurrence of the element inthis list at position \u003ctt\u003eindex\u003c/tt\u003e or later in the list; \u003ctt\u003e-1\u003c/tt\u003e if the element is not found.\n * @throws IndexOutOfBoundsException if the specified index is negative\n */\n","tf":{"freq":{"inthi":1,"element":5,"except":1,"index":12,"later":1,"equal":1,"list":3,"occurr":2,"specifi":2,"formal":1,"start":1,"search":3,"forward":1,"negat":1,"posit":1,"amp":2,"first":2,"lowest":1,"bound":1,"found":2,"nbsp":8},"maxFreq":12,"totalTerms":52},"loc":4}