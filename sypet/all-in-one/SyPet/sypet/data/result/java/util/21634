{"id":21634,"className":"java.util.JapaneseImperialCalendar","methodName":"roll","signature":"\u003cjava.util.JapaneseImperialCalendar: void roll(int,int)\u003e","javadoc":"/** \n * Adds a signed amount to the specified calendar field without changing larger fields. A negative roll amount means to subtract from field without changing larger fields. If the specified amount is 0, this method performs nothing. \u003cp\u003eThis method calls  {@link #complete()} before adding theamount so that all the calendar fields are normalized. If there is any calendar field having an out-of-range value in non-lenient mode, then an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown.\n * @param field the calendar field.\n * @param amount the signed amount to add to \u003ccode\u003efield\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003efield\u003c/code\u003e is\u003ccode\u003eZONE_OFFSET\u003c/code\u003e, \u003ccode\u003eDST_OFFSET\u003c/code\u003e, or unknown, or if any calendar fields have out-of-range values in non-lenient mode.\n * @see #roll(int,boolean)\n * @see #add(int,int)\n * @see #set(int,int)\n */\n","tf":{"freq":{"call":1,"link":1,"normal":1,"perform":1,"add":3,"lenient":2,"mode":2,"specifi":2,"amount":5,"roll":3,"rang":2,"mean":1,"noth":1,"valu":2,"calendar":5,"complet":1,"argument":2,"thrown":1,"except":3,"larger":2,"unknown":1,"illeg":2,"without":2,"non":2,"field":11,"sign":2,"subtract":1,"theamount":1,"ad":1,"negat":1,"method":2,"chang":2},"maxFreq":11,"totalTerms":69},"loc":427}