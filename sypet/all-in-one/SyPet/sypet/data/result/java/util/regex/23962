{"id":23962,"className":"java.util.regex.Matcher","methodName":"quoteReplacement","signature":"\u003cjava.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)\u003e","javadoc":"/** \n * Returns a literal replacement \u003ccode\u003eString\u003c/code\u003e for the specified \u003ccode\u003eString\u003c/code\u003e. This method produces a \u003ccode\u003eString\u003c/code\u003e that will work as a literal replacement \u003ccode\u003es\u003c/code\u003e in the \u003ccode\u003eappendReplacement\u003c/code\u003e method of the  {@link Matcher} class.The \u003ccode\u003eString\u003c/code\u003e produced will match the sequence of characters in \u003ccode\u003es\u003c/code\u003e treated as a literal sequence. Slashes (\u0027\\\u0027) and dollar signs (\u0027$\u0027) will be given no special meaning.\n * @param s The string to be literalized\n * @return  A literal string replacement\n * @since 1.5\n */\n","tf":{"freq":{"work":1,"append":1,"liter":5,"slash":1,"charact":1,"link":1,"produc":2,"specifi":1,"sign":1,"matcher":1,"given":1,"sequenc":2,"replac":5,"string":6,"will":3,"mean":1,"special":1,"dollar":1,"method":2,"match":1,"quot":1,"treat":1},"maxFreq":6,"totalTerms":40},"loc":13}