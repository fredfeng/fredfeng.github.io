{"id":21574,"className":"java.util.Calendar","methodName":"setWeekDate","signature":"\u003cjava.util.Calendar: void setWeekDate(int,int,int)\u003e","javadoc":"/** \n * Sets the date of this  {@code Calendar} with the the given datespecifiers - week year, week of year, and day of week. \u003cp\u003eUnlike the  {@code set} method, all of the calendar fieldsand  {@code time} values are calculated upon return.\u003cp\u003eIf  {@code weekOfYear} is out of the valid week-of-year rangein  {@code weekYear}, the  {@code weekYear} and {@code weekOfYear} values are adjusted in lenient mode, or an {@code IllegalArgumentException} is thrown in non-lenient mode.\u003cp\u003eThe default implementation of this method throws an {@code UnsupportedOperationException}.\n * @param weekYear   the week year\n * @param weekOfYear the week number based on {@code weekYear}\n * @param dayOfWeek  the day of week value: one of the constantsfor the  {@link #DAY_OF_WEEK} field: {@link #SUNDAY}, ...,  {@link #SATURDAY}.\n * @exception IllegalArgumentException if any of the given date specifiers is invalid or any of the calendar fields are inconsistent with the given date specifiers in non-lenient mode\n * @exception UnsupportedOperationException if any week year numbering isn\u0027t supported in this {@code Calendar}.\n * @see #isWeekDateSupported()\n * @see #getFirstDayOfWeek()\n * @see #getMinimalDaysInFirstWeek()\n * @since 1.7\n */\n","tf":{"freq":{"inconsist":1,"valid":1,"unsupport":2,"datespecifi":1,"link":3,"one":1,"fieldsand":1,"date":5,"lenient":3,"specifi":2,"mode":3,"minim":1,"time":1,"invalid":1,"given":3,"oper":2,"constantsfor":1,"unlik":1,"adjust":1,"valu":3,"year":12,"calendar":4,"argument":2,"except":6,"thrown":1,"support":2,"calcul":1,"number":2,"illeg":2,"non":2,"field":2,"rangein":1,"base":1,"method":2,"day":5,"first":2,"week":20,"upon":1},"maxFreq":20,"totalTerms":105},"loc":3}