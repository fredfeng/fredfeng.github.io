{"id":20698,"className":"java.util.Set","methodName":"retainAll","signature":"\u003cjava.util.Set: boolean retainAll(java.util.Collection)\u003e","javadoc":"/** \n * Retains only the elements in this set that are contained in the specified collection (optional operation).  In other words, removes from this set all of its elements that are not contained in the specified collection.  If the specified collection is also a set, this operation effectively modifies this set so that its value is the \u003ci\u003eintersection\u003c/i\u003e of the two sets.\n * @param c collection containing elements to be retained in this set\n * @return \u003ctt\u003etrue\u003c/tt\u003e if this set changed as a result of the call\n * @throws UnsupportedOperationException if the \u003ctt\u003eretainAll\u003c/tt\u003e operationis not supported by this set\n * @throws ClassCastException if the class of an element of this setis incompatible with the specified collection (\u003ca href\u003d\"Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e)\n * @throws NullPointerException if this set contains a null element and thespecified collection does not permit null elements (\u003ca href\u003d\"Collection.html#optional-restrictions\"\u003eoptional\u003c/a\u003e), or if the specified collection is null\n * @see #remove(Object)\n */\n","tf":{"freq":{"result":1,"call":1,"unsupport":1,"permit":1,"object":1,"seti":1,"specifi":5,"oper":3,"thespecifi":1,"valu":1,"href":2,"option":5,"element":6,"except":3,"support":1,"remov":2,"true":1,"incompat":1,"restrict":2,"two":1,"effect":1,"cast":1,"operationi":1,"contain":4,"intersect":1,"modifi":1,"pointer":1,"retain":4,"html":2,"word":1,"chang":1,"also":1,"collect":9},"maxFreq":9,"totalTerms":68},"loc":0}