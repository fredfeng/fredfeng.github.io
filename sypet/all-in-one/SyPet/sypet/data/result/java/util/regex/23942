{"id":23942,"className":"java.util.regex.Pattern","methodName":"split","signature":"\u003cjava.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)\u003e","javadoc":"/** \n * Splits the given input sequence around matches of this pattern. \u003cp\u003e This method works as if by invoking the two-argument  {@link #split(java.lang.CharSequence,int) split} method with the given inputsequence and a limit argument of zero.  Trailing empty strings are therefore not included in the resulting array. \u003c/p\u003e \u003cp\u003e The input \u003ctt\u003e\"boo:and:foo\"\u003c/tt\u003e, for example, yields the following results with these expressions: \u003cblockquote\u003e\u003ctable cellpadding\u003d1 cellspacing\u003d0 summary\u003d\"Split examples showing regex and result\"\u003e \u003ctr\u003e\u003cth\u003e\u003cP align\u003d\"left\"\u003e\u003ci\u003eRegex\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003c/i\u003e\u003c/th\u003e \u003cth\u003e\u003cP align\u003d\"left\"\u003e\u003ci\u003eResult\u003c/i\u003e\u003c/th\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd align\u003dcenter\u003e:\u003c/td\u003e \u003ctd\u003e\u003ctt\u003e{ \"boo\", \"and\", \"foo\" }\u003c/tt\u003e\u003c/td\u003e\u003c/tr\u003e \u003ctr\u003e\u003ctd align\u003dcenter\u003eo\u003c/td\u003e \u003ctd\u003e\u003ctt\u003e{ \"b\", \"\", \":and:f\" }\u003c/tt\u003e\u003c/td\u003e\u003c/tr\u003e \u003c/table\u003e\u003c/blockquote\u003e\n * @param input The character sequence to be split\n * @return  The array of strings computed by splitting the inputaround matches of this pattern\n */\n","tf":{"freq":{"result":4,"yield":1,"link":1,"show":1,"foo":2,"inputsequ":1,"therefor":1,"express":1,"zero":1,"lang":1,"center":2,"given":2,"blockquot":2,"sequenc":3,"trail":1,"cellspac":1,"left":2,"nbsp":4,"follow":1,"argument":2,"work":1,"limit":1,"includ":1,"charact":1,"regex":2,"invok":1,"align":4,"around":1,"empti":1,"two":1,"input":3,"summari":1,"boo":2,"cellpad":1,"pattern":2,"inputaround":1,"tabl":2,"string":2,"exampl":2,"comput":1,"method":2,"split":7,"java":1,"match":2,"array":2},"maxFreq":7,"totalTerms":79},"loc":3}