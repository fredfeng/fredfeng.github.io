{"id":21990,"className":"java.util.Collections","methodName":"synchronizedSortedMap","signature":"\u003cjava.util.Collections: java.util.SortedMap\u003cK,V\u003e synchronizedSortedMap(java.util.SortedMap)\u003e","javadoc":"/** \n * Returns a synchronized (thread-safe) sorted map backed by the specified sorted map.  In order to guarantee serial access, it is critical that \u003cstrong\u003eall\u003c/strong\u003e access to the backing sorted map is accomplished through the returned sorted map (or its views).\u003cp\u003e It is imperative that the user manually synchronize on the returned sorted map when iterating over any of its collection views, or the collections views of any of its \u003ctt\u003esubMap\u003c/tt\u003e, \u003ctt\u003eheadMap\u003c/tt\u003e or \u003ctt\u003etailMap\u003c/tt\u003e views. \u003cpre\u003e SortedMap m \u003d Collections.synchronizedSortedMap(new TreeMap()); ... Set s \u003d m.keySet();  // Needn\u0027t be in synchronized block ... synchronized (m) {  // Synchronizing on m, not s! Iterator i \u003d s.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } \u003c/pre\u003e or: \u003cpre\u003e SortedMap m \u003d Collections.synchronizedSortedMap(new TreeMap()); SortedMap m2 \u003d m.subMap(foo, bar); ... Set s2 \u003d m2.keySet();  // Needn\u0027t be in synchronized block ... synchronized (m) {  // Synchronizing on m, not m2 or s2! Iterator i \u003d s.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } \u003c/pre\u003e Failure to follow this advice may result in non-deterministic behavior. \u003cp\u003eThe returned sorted map will be serializable if the specified sorted map is serializable.\n * @param m the sorted map to be \"wrapped\" in a synchronized sorted map.\n * @return a synchronized view of the specified sorted map.\n */\n","tf":{"freq":{"result":1,"accomplish":1,"sub":2,"sort":16,"behavior":1,"serializ":2,"next":4,"block":4,"foo":3,"must":2,"specifi":3,"order":1,"tree":2,"determinist":1,"thread":1,"map":22,"head":1,"imper":1,"advic":1,"key":2,"follow":1,"wrap":1,"safe":1,"may":1,"needn":2,"failur":1,"guarante":1,"back":2,"access":2,"tail":1,"non":1,"manual":1,"strong":2,"pre":4,"will":1,"view":5,"bar":1,"iter":5,"serial":1,"user":1,"critic":1,"collect":4},"maxFreq":22,"totalTerms":111},"loc":3}