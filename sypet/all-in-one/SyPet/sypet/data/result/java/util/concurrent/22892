{"id":22892,"className":"java.util.concurrent.ForkJoinPool","methodName":"ForkJoinPool","signature":"\u003cjava.util.concurrent.ForkJoinPool: void ForkJoinPool(int)\u003e","javadoc":"/** \n * Creates a  {@code ForkJoinPool} with the indicated parallelismlevel, the  {@linkplain #defaultForkJoinWorkerThreadFactory default thread factory}, no UncaughtExceptionHandler, and non-async LIFO processing mode.\n * @param parallelism the parallelism level\n * @throws IllegalArgumentException if parallelism less than orequal to zero, or greater than implementation limit\n * @throws SecurityException if a security manager exists andthe caller is not permitted to modify threads because it does not hold  {@link java.lang.RuntimePermission}{@code (\"modifyThread\")}\n */\n","tf":{"freq":{"caller":1,"linkplain":1,"greater":1,"link":1,"permit":1,"zero":1,"lang":1,"mode":1,"level":1,"indic":1,"pool":2,"factori":2,"thread":4,"permiss":1,"worker":1,"exist":1,"less":1,"limit":1,"argument":1,"parallelismlevel":1,"parallel":3,"except":3,"fork":3,"creat":1,"manag":1,"runtim":1,"hold":1,"uncaught":1,"join":3,"illeg":1,"async":1,"non":1,"process":1,"secur":2,"orequ":1,"modifi":2,"java":1,"andth":1,"handler":1},"maxFreq":4,"totalTerms":54},"loc":3}