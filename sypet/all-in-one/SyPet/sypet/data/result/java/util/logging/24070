{"id":24070,"className":"java.util.logging.LogManager","methodName":"getLoggerNames","signature":"\u003cjava.util.logging.LogManager: java.util.Enumeration\u003cjava.lang.String\u003e getLoggerNames()\u003e","javadoc":"/** \n * Get an enumeration of known logger names. \u003cp\u003e Note:  Loggers may be added dynamically as new classes are loaded. This method only reports on the loggers that are currently registered. It is also important to note that this method only returns the name of a Logger, not a strong reference to the Logger itself. The returned String does nothing to prevent the Logger from being garbage collected. In particular, if the returned name is passed to  {@code LogManager.getLogger()}, then the caller must check the return value from  {@code LogManager.getLogger()} for null to properlyhandle the case where the Logger has been garbage collected in the time since its name was returned by this method. \u003cp\u003e\n * @return  enumeration of logger name strings\n */\n","tf":{"freq":{"caller":1,"particular":1,"garbag":2,"must":1,"time":1,"refer":1,"name":6,"current":1,"report":1,"logger":11,"regist":1,"noth":1,"valu":1,"dynam":1,"note":2,"may":1,"check":1,"manag":2,"prevent":1,"properlyhandl":1,"log":2,"pass":1,"strong":1,"string":2,"ad":1,"method":3,"load":1,"known":1,"also":1,"collect":2},"maxFreq":11,"totalTerms":53},"loc":3}