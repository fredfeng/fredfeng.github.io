{"id":22162,"className":"java.util.Collections","methodName":"nCopies","signature":"\u003cjava.util.Collections: java.util.List\u003cT\u003e nCopies(int,T)\u003e","javadoc":"/** \n * Returns an immutable list consisting of \u003ctt\u003en\u003c/tt\u003e copies of the specified object.  The newly allocated data object is tiny (it contains a single reference to the data object).  This method is useful in combination with the \u003ctt\u003eList.addAll\u003c/tt\u003e method to grow lists. The returned list is serializable.\n * @param n the number of elements in the returned list.\n * @param o the element to appear repeatedly in the returned list.\n * @return an immutable list consisting of \u003ctt\u003en\u003c/tt\u003e copies of thespecified object.\n * @throws IllegalArgumentException if {@code n \u003c 0}\n * @see List#addAll(Collection)\n * @see List#addAll(int,Collection)\n */\n","tf":{"freq":{"appear":1,"singl":1,"serializ":1,"data":2,"use":1,"object":4,"repeat":1,"add":3,"copi":3,"specifi":1,"refer":1,"combin":1,"thespecifi":1,"argument":1,"element":2,"except":1,"consist":2,"immut":2,"list":9,"number":1,"tini":1,"illeg":1,"newli":1,"contain":1,"grow":1,"method":2,"collect":2,"alloc":1},"maxFreq":9,"totalTerms":49},"loc":5}