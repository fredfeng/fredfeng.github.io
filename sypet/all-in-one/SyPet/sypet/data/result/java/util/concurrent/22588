{"id":22588,"className":"java.util.concurrent.ConcurrentLinkedDeque","methodName":"size","signature":"\u003cjava.util.concurrent.ConcurrentLinkedDeque: int size()\u003e","javadoc":"/** \n * Returns the number of elements in this deque.  If this deque contains more than  {@code Integer.MAX_VALUE} elements, itreturns  {@code Integer.MAX_VALUE}. \u003cp\u003eBeware that, unlike in most collections, this method is \u003cem\u003eNOT\u003c/em\u003e a constant-time operation. Because of the asynchronous nature of these deques, determining the current number of elements requires traversing them all to count them. Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate. Thus, this method is typically not very useful in concurrent applications.\n * @return the number of elements in this deque\n */\n","tf":{"freq":{"result":1,"asynchron":1,"count":1,"concurr":1,"typic":1,"use":1,"natur":1,"possibl":1,"applic":1,"time":1,"requir":1,"oper":1,"unlik":1,"current":1,"inaccur":1,"travers":1,"element":4,"addit":1,"constant":1,"thus":1,"number":3,"itreturn":1,"bewar":1,"size":2,"contain":1,"determin":1,"will":1,"dequ":4,"method":3,"chang":1,"execut":1,"integ":2,"collect":1},"maxFreq":4,"totalTerms":45},"loc":9}