{"id":22717,"className":"java.util.concurrent.ThreadPoolExecutor","methodName":"setKeepAliveTime","signature":"\u003cjava.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Sets the time limit for which threads may remain idle before being terminated.  If there are more than the core number of threads currently in the pool, after waiting this amount of time without processing a task, excess threads will be terminated.  This overrides any value set in the constructor.\n * @param time the time to wait.  A time value of zero will causeexcess threads to terminate immediately after executing tasks.\n * @param unit the time unit of the {@code time} argument\n * @throws IllegalArgumentException if {@code time} less than zero orif  {@code time} is zero and {@code allowsCoreThreadTimeOut}\n * @see #getKeepAliveTime\n */\n","tf":{"freq":{"allow":1,"excess":1,"orif":1,"wait":2,"zero":3,"amount":1,"time":12,"pool":1,"causeexcess":1,"thread":5,"current":1,"immedi":1,"valu":2,"less":1,"constructor":1,"argument":2,"limit":1,"except":1,"may":1,"task":2,"number":1,"illeg":1,"without":1,"idl":1,"process":1,"unit":2,"termin":3,"remain":1,"aliv":2,"will":2,"core":2,"execut":1,"keep":2},"maxFreq":12,"totalTerms":61},"loc":11}