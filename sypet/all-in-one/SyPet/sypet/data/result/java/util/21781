{"id":21781,"className":"java.util.Scanner","methodName":"findInLine","signature":"\u003cjava.util.Scanner: java.lang.String findInLine(java.lang.String)\u003e","javadoc":"/** \n * Attempts to find the next occurrence of a pattern constructed from the specified string, ignoring delimiters. \u003cp\u003eAn invocation of this method of the form \u003ctt\u003efindInLine(pattern)\u003c/tt\u003e behaves in exactly the same way as the invocation \u003ctt\u003efindInLine(Pattern.compile(pattern))\u003c/tt\u003e.\n * @param pattern a string specifying the pattern to search for\n * @return the text that matched the specified pattern\n * @throws IllegalStateException if this scanner is closed\n */\n","tf":{"freq":{"attempt":1,"behav":1,"next":1,"state":1,"line":3,"way":1,"close":1,"specifi":3,"occurr":1,"search":1,"exact":1,"scanner":1,"find":4,"delimit":1,"ignor":1,"text":1,"except":1,"form":1,"illeg":1,"invoc":2,"pattern":7,"string":2,"method":1,"construct":1,"match":1,"compil":1},"maxFreq":7,"totalTerms":41},"loc":3}