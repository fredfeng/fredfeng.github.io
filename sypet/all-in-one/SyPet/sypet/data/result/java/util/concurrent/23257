{"id":23257,"className":"java.util.concurrent.CountDownLatch","methodName":"await","signature":"\u003cjava.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Causes the current thread to wait until the latch has counted down to zero, unless the thread is  {@linkplain Thread#interrupt interrupted}, or the specified waiting time elapses. \u003cp\u003eIf the current count is zero then this method returns immediately with the value  {@code true}. \u003cp\u003eIf the current count is greater than zero then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of three things happen: \u003cul\u003e \u003cli\u003eThe count reaches zero due to invocations of the {@link #countDown} method; or\u003cli\u003eSome other thread  {@linkplain Thread#interrupt interrupts}the current thread; or \u003cli\u003eThe specified waiting time elapses. \u003c/ul\u003e \u003cp\u003eIf the count reaches zero then the method returns with the value  {@code true}. \u003cp\u003eIf the current thread: \u003cul\u003e \u003cli\u003ehas its interrupted status set on entry to this method; or \u003cli\u003eis  {@linkplain Thread#interrupt interrupted} while waiting,\u003c/ul\u003e then  {@link InterruptedException} is thrown and the current thread\u0027sinterrupted status is cleared. \u003cp\u003eIf the specified waiting time elapses then the value  {@code false}is returned.  If the time is less than or equal to zero, the method will not wait at all.\n * @param timeout the maximum time to wait\n * @param unit the time unit of the {@code timeout} argument\n * @return {@code true} if the count reached zero and {@code false}if the waiting time elapsed before the count reached zero\n * @throws InterruptedException if the current thread is interruptedwhile waiting\n */\n","tf":{"freq":{"fals":2,"linkplain":3,"greater":1,"count":8,"link":2,"one":1,"schedul":1,"wait":9,"zero":8,"specifi":3,"clear":1,"interruptedwhil":1,"reach":4,"elaps":4,"time":7,"becom":1,"unless":1,"thread":12,"three":1,"current":8,"purpos":1,"immedi":1,"valu":3,"happen":1,"sinterrupt":1,"less":1,"argument":1,"thrown":1,"except":2,"latch":1,"status":2,"entri":1,"true":3,"equal":1,"invoc":1,"interrupt":9,"unit":2,"caus":1,"await":1,"disabl":1,"maximum":1,"will":1,"due":1,"method":5,"timeout":2,"lie":1,"thing":1,"dormant":1},"maxFreq":12,"totalTerms":126},"loc":3}