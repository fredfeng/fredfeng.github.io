{"id":22938,"className":"java.util.concurrent.ForkJoinTask","methodName":"completeExceptionally","signature":"\u003cjava.util.concurrent.ForkJoinTask: void completeExceptionally(java.lang.Throwable)\u003e","javadoc":"/** \n * Completes this task abnormally, and if not already aborted or cancelled, causes it to throw the given exception upon {@code join} and related operations. This method may be usedto induce exceptions in asynchronous tasks, or to force completion of tasks that would not otherwise complete.  Its use in other situations is discouraged.  This method is overridable, but overridden versions must invoke  {@code super}implementation to maintain guarantees.\n * @param ex the exception to throw. If this exception is not a{@code RuntimeException} or {@code Error}, the actual exception thrown will be a  {@code RuntimeException} with cause {@code ex}.\n */\n","tf":{"freq":{"otherwis":1,"asynchron":1,"overridden":1,"maintain":1,"use":1,"cancel":1,"must":1,"situat":1,"version":1,"given":1,"oper":1,"relat":1,"forc":1,"complet":4,"usedto":1,"thrown":1,"except":8,"may":1,"error":1,"guarante":1,"invok":1,"task":3,"runtim":2,"join":1,"discourag":1,"abnorm":1,"caus":2,"will":1,"actual":1,"alreadi":1,"method":2,"induc":1,"upon":1,"abort":1},"maxFreq":8,"totalTerms":49},"loc":5}