{"id":20496,"className":"java.util.NavigableSet","methodName":"subSet","signature":"\u003cjava.util.NavigableSet: java.util.NavigableSet\u003cE\u003e subSet(E,boolean,E,boolean)\u003e","javadoc":"/** \n * Returns a view of the portion of this set whose elements range from {@code fromElement} to {@code toElement}.  If  {@code fromElement} and{@code toElement} are equal, the returned set is empty unless {@code fromInclusive} and {@code toInclusive} are both true.  The returned setis backed by this set, so changes in the returned set are reflected in this set, and vice-versa.  The returned set supports all optional set operations that this set supports. \u003cp\u003eThe returned set will throw an  {@code IllegalArgumentException}on an attempt to insert an element outside its range.\n * @param fromElement low endpoint of the returned set\n * @param fromInclusive {@code true} if the low endpointis to be included in the returned view\n * @param toElement high endpoint of the returned set\n * @param toInclusive {@code true} if the high endpointis to be included in the returned view\n * @return a view of the portion of this set whose elements range from{@code fromElement}, inclusive, to  {@code toElement}, exclusive\n * @throws ClassCastException if {@code fromElement} and{@code toElement} cannot be compared to one another using thisset\u0027s comparator (or, if the set has no comparator, using natural ordering).  Implementations may, but are not required to, throw this exception if  {@code fromElement} or{@code toElement} cannot be compared to elements currently inthe set.\n * @throws NullPointerException if {@code fromElement} or{@code toElement} is null and this set doesnot permit null elements\n * @throws IllegalArgumentException if {@code fromElement} isgreater than  {@code toElement}; or if this set itself has a restricted range, and  {@code fromElement} or{@code toElement} lies outside the bounds of the range.\n */\n","tf":{"freq":{"permit":1,"natur":1,"seti":1,"requir":1,"oper":1,"rang":5,"option":1,"argument":2,"versa":1,"element":23,"except":5,"support":2,"whose":2,"restrict":1,"isgreat":1,"endpoint":2,"cast":1,"outsid":2,"will":1,"pointer":1,"view":4,"low":2,"compar":4,"attempt":1,"sub":1,"vice":1,"one":1,"use":2,"anoth":1,"inclus":5,"inth":1,"unless":1,"order":1,"current":1,"doesnot":1,"exclus":1,"portion":2,"may":1,"includ":2,"back":1,"true":3,"thisset":1,"equal":1,"illeg":2,"endpointi":2,"empti":1,"chang":1,"high":2,"insert":1,"bound":1,"lie":1,"reflect":1},"maxFreq":23,"totalTerms":106},"loc":0}