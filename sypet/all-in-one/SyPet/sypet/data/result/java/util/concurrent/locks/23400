{"id":23400,"className":"java.util.concurrent.locks.AbstractQueuedSynchronizer","methodName":"hasQueuedThreads","signature":"\u003cjava.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasQueuedThreads()\u003e","javadoc":"/** \n * Queries whether any threads are waiting to acquire. Note that because cancellations due to interrupts and timeouts may occur at any time, a  {@code true} return does not guarantee that anyother thread will ever acquire. \u003cp\u003eIn this implementation, this operation returns in constant time.\n * @return {@code true} if there may be other threads waiting to acquire\n */\n","tf":{"freq":{"acquir":3,"may":2,"constant":1,"guarante":1,"queu":1,"true":2,"cancel":1,"wait":2,"anyoth":1,"whether":1,"interrupt":1,"queri":1,"time":2,"oper":1,"thread":4,"will":1,"due":1,"ever":1,"note":1,"timeout":1,"occur":1},"maxFreq":4,"totalTerms":30},"loc":3}