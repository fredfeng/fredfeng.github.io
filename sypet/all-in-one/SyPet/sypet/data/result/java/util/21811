{"id":21811,"className":"java.util.Scanner","methodName":"nextBigInteger","signature":"\u003cjava.util.Scanner: java.math.BigInteger nextBigInteger()\u003e","javadoc":"/** \n * Scans the next token of the input as a  {@link java.math.BigInteger BigInteger}. \u003cp\u003e An invocation of this method of the form \u003ctt\u003enextBigInteger()\u003c/tt\u003e behaves in exactly the same way as the invocation \u003ctt\u003enextBigInteger(radix)\u003c/tt\u003e, where \u003ccode\u003eradix\u003c/code\u003e is the default radix of this scanner.\n * @return the \u003ctt\u003eBigInteger\u003c/tt\u003e scanned from the input\n * @throws InputMismatchException if the next token does not match the \u003ci\u003eInteger\u003c/i\u003e regular expression, or is out of range\n * @throws NoSuchElementException if the input is exhausted\n * @throws IllegalStateException if this scanner is closed\n */\n","tf":{"freq":{"behav":1,"link":1,"next":5,"state":1,"way":1,"express":1,"close":1,"token":2,"rang":1,"exact":1,"scanner":2,"element":1,"except":3,"form":1,"regular":1,"illeg":1,"invoc":2,"math":1,"input":4,"radix":3,"exhaust":1,"method":1,"java":1,"scan":2,"match":1,"big":6,"mismatch":1,"integ":7},"maxFreq":7,"totalTerms":54},"loc":3}