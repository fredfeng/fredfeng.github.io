{"id":22315,"className":"java.util.TreeSet","methodName":"TreeSet","signature":"\u003cjava.util.TreeSet: void TreeSet()\u003e","javadoc":"/** \n * Constructs a new, empty tree set, sorted according to the natural ordering of its elements.  All elements inserted into the set must implement the  {@link Comparable} interface.Furthermore, all such elements must be \u003ci\u003emutually comparable\u003c/i\u003e:  {@code e1.compareTo(e2)} must not throw a{@code ClassCastException} for any elements {@code e1} and{@code e2} in the set.  If the user attempts to add an elementto the set that violates this constraint (for example, the user attempts to add a string element to a set whose elements are integers), the  {@code add} call will throw a{@code ClassCastException}.\n */\n","tf":{"freq":{"attempt":2,"call":1,"furthermor":1,"sort":1,"link":1,"natur":1,"constraint":1,"add":3,"violat":1,"must":3,"order":1,"tree":2,"element":6,"except":2,"whose":1,"accord":1,"empti":1,"mutual":1,"cast":2,"string":1,"will":1,"exampl":1,"construct":1,"elementto":1,"insert":1,"integ":1,"compar":3,"user":2},"maxFreq":6,"totalTerms":44},"loc":3}