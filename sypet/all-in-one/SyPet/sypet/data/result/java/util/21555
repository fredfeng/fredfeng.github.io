{"id":21555,"className":"java.util.Calendar","methodName":"getDisplayNames","signature":"\u003cjava.util.Calendar: java.util.Map\u003cjava.lang.String,java.lang.Integer\u003e getDisplayNames(int,int,java.util.Locale)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eMap\u003c/code\u003e containing all names of the calendar \u003ccode\u003efield\u003c/code\u003e in the given \u003ccode\u003estyle\u003c/code\u003e and \u003ccode\u003elocale\u003c/code\u003e and their corresponding field values. For example, if this \u003ccode\u003eCalendar\u003c/code\u003e is a  {@link GregorianCalendar}, the returned map would contain \"Jan\" to {@link #JANUARY}, \"Feb\" to  {@link #FEBRUARY}, and so on, in the {@linkplain #SHORT short} style in an English locale.\u003cp\u003eThe values of other calendar fields may be taken into account to determine a set of display names. For example, if this \u003ccode\u003eCalendar\u003c/code\u003e is a lunisolar calendar system and the year value given by the  {@link #YEAR} field has a leapmonth, this method would return month names containing the leap month name, and month names are mapped to their values specific for the year. \u003cp\u003eThe default implementation supports display names contained in a  {@link DateFormatSymbols}. For example, if \u003ccode\u003efield\u003c/code\u003e is  {@link #MONTH} and \u003ccode\u003estyle\u003c/code\u003e is {@link #ALL_STYLES}, this method returns a \u003ccode\u003eMap\u003c/code\u003e containing all strings returned by  {@link DateFormatSymbols#getShortMonths()}and  {@link DateFormatSymbols#getMonths()}.\n * @param field the calendar field for which the display names are returned\n * @param style the style applied to the display names; one of  {@link #SHORT},  {@link #LONG}, or  {@link #ALL_STYLES}.\n * @param locale the locale for the display names\n * @return a \u003ccode\u003eMap\u003c/code\u003e containing all display names in\u003ccode\u003estyle\u003c/code\u003e and \u003ccode\u003elocale\u003c/code\u003e and their field values, or \u003ccode\u003enull\u003c/code\u003e if no display names are defined for \u003ccode\u003efield\u003c/code\u003e\n * @exception IllegalArgumentException if \u003ccode\u003efield\u003c/code\u003e or \u003ccode\u003estyle\u003c/code\u003e is invalid, or if this \u003ccode\u003eCalendar\u003c/code\u003e is non-lenient and any of the calendar fields have invalid values\n * @exception NullPointerException if \u003ccode\u003elocale\u003c/code\u003e is null\n * @since 1.6\n */\n","tf":{"freq":{"defin":1,"linkplain":1,"correspond":1,"one":1,"link":12,"date":3,"lenient":1,"invalid":2,"style":7,"given":2,"name":12,"map":5,"year":2,"valu":6,"jan":1,"taken":1,"calendar":9,"argument":1,"except":4,"may":1,"support":1,"symbol":3,"lunisolar":1,"display":8,"format":3,"illeg":1,"non":1,"field":11,"appli":1,"specif":1,"system":1,"leapmonth":1,"feb":1,"string":1,"contain":6,"determin":1,"month":5,"exampl":3,"pointer":1,"account":1,"method":2,"local":6,"gregorian":1,"english":1,"leap":1},"maxFreq":12,"totalTerms":136},"loc":25}