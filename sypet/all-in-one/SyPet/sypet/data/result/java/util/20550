{"id":20550,"className":"java.util.Hashtable","methodName":"entrySet","signature":"\u003cjava.util.Hashtable: java.util.Set\u003cjava.util.Map.Entry\u003cK,V\u003e\u003e entrySet()\u003e","javadoc":"/** \n * Returns a  {@link Set} view of the mappings contained in this map.The set is backed by the map, so changes to the map are reflected in the set, and vice-versa.  If the map is modified while an iteration over the set is in progress (except through the iterator\u0027s own \u003ctt\u003eremove\u003c/tt\u003e operation, or through the \u003ctt\u003esetValue\u003c/tt\u003e operation on a map entry returned by the iterator) the results of the iteration are undefined.  The set supports element removal, which removes the corresponding mapping from the map, via the \u003ctt\u003eIterator.remove\u003c/tt\u003e, \u003ctt\u003eSet.remove\u003c/tt\u003e, \u003ctt\u003eremoveAll\u003c/tt\u003e, \u003ctt\u003eretainAll\u003c/tt\u003e and \u003ctt\u003eclear\u003c/tt\u003e operations.  It does not support the \u003ctt\u003eadd\u003c/tt\u003e or \u003ctt\u003eaddAll\u003c/tt\u003e operations.\n * @since 1.2\n */\n","tf":{"freq":{"progress":1,"versa":1,"element":1,"result":1,"except":1,"via":1,"support":2,"vice":1,"correspond":1,"entri":2,"link":1,"remov":6,"back":1,"add":2,"clear":1,"oper":4,"contain":1,"map":8,"modifi":1,"retain":1,"valu":1,"view":1,"chang":1,"undefin":1,"iter":5,"reflect":1},"maxFreq":8,"totalTerms":48},"loc":5}