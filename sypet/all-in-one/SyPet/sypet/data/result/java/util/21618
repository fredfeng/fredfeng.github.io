{"id":21618,"className":"java.util.Observable","methodName":"notifyObservers","signature":"\u003cjava.util.Observable: void notifyObservers()\u003e","javadoc":"/** \n * If this object has changed, as indicated by the \u003ccode\u003ehasChanged\u003c/code\u003e method, then notify all of its observers and then call the \u003ccode\u003eclearChanged\u003c/code\u003e method to indicate that this object has no longer changed. \u003cp\u003e Each observer has its \u003ccode\u003eupdate\u003c/code\u003e method called with two arguments: this observable object and \u003ccode\u003enull\u003c/code\u003e. In other words, this method is equivalent to: \u003cblockquote\u003e\u003ctt\u003e notifyObservers(null)\u003c/tt\u003e\u003c/blockquote\u003e\n * @see java.util.Observable#clearChanged()\n * @see java.util.Observable#hasChanged()\n * @see java.util.Observer#update(java.util.Observable,java.lang.Object)\n */\n","tf":{"freq":{"notifi":3,"argument":1,"call":2,"object":4,"lang":1,"clear":2,"two":1,"observ":9,"indic":2,"updat":2,"equival":1,"blockquot":2,"longer":1,"java":5,"word":1,"method":4,"chang":6,"util":4},"maxFreq":9,"totalTerms":51},"loc":3}