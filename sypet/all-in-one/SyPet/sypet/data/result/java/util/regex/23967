{"id":23967,"className":"java.util.regex.Matcher","methodName":"region","signature":"\u003cjava.util.regex.Matcher: java.util.regex.Matcher region(int,int)\u003e","javadoc":"/** \n * Sets the limits of this matcher\u0027s region. The region is the part of the input sequence that will be searched to find a match. Invoking this method resets the matcher, and then sets the region to start at the index specified by the \u003ccode\u003estart\u003c/code\u003e parameter and end at the index specified by the \u003ccode\u003eend\u003c/code\u003e parameter. \u003cp\u003eDepending on the transparency and anchoring being used (see {@link #useTransparentBounds useTransparentBounds} and{@link #useAnchoringBounds useAnchoringBounds}), certain constructs such as anchors may behave differently at or around the boundaries of the region.\n * @param start The index to start searching at (inclusive)\n * @param end The index to end searching at (exclusive)\n * @throws IndexOutOfBoundsException If start or end is less than zero, if start is greater than the length of the input sequence, if end is greater than the length of the input sequence, or if start is greater than end.\n * @return  this matcher\n * @since 1.5\n */\n","tf":{"freq":{"region":5,"greater":3,"behav":1,"link":2,"use":5,"zero":1,"specifi":2,"anchor":4,"inclus":1,"transpar":3,"matcher":3,"search":3,"sequenc":3,"length":2,"reset":1,"exclus":1,"less":1,"find":1,"end":7,"limit":1,"except":1,"may":1,"index":5,"invok":1,"depend":1,"paramet":2,"around":1,"differ":1,"input":3,"start":7,"will":1,"method":1,"construct":1,"certain":1,"match":1,"part":1,"boundari":1,"bound":5},"maxFreq":7,"totalTerms":85},"loc":12}