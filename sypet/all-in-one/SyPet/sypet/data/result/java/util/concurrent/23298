{"id":23298,"className":"java.util.concurrent.Phaser","methodName":"Phaser","signature":"\u003cjava.util.concurrent.Phaser: void Phaser(java.util.concurrent.Phaser,int)\u003e","javadoc":"/** \n * Creates a new phaser with the given parent and number of registered unarrived parties.  When the given parent is non-null and the given number of parties is greater than zero, this child phaser is registered with its parent.\n * @param parent the parent phaser\n * @param parties the number of parties required to advance to thenext phase\n * @throws IllegalArgumentException if parties less than zeroor greater than the maximum number of parties supported\n */\n","tf":{"freq":{"argument":1,"unarriv":1,"except":1,"support":1,"greater":2,"creat":1,"parent":5,"number":4,"zero":1,"illeg":1,"non":1,"child":1,"requir":1,"given":3,"advanc":1,"maximum":1,"phaser":4,"regist":2,"thenext":1,"zeroor":1,"phase":1,"less":1,"parti":6},"maxFreq":6,"totalTerms":42},"loc":23}