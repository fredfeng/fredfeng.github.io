{"id":20249,"className":"java.util.Arrays","methodName":"equals","signature":"\u003cjava.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])\u003e","javadoc":"/** \n * Returns \u003ctt\u003etrue\u003c/tt\u003e if the two specified arrays of Objects are \u003ci\u003eequal\u003c/i\u003e to one another.  The two arrays are considered equal if both arrays contain the same number of elements, and all corresponding pairs of elements in the two arrays are equal.  Two objects \u003ctt\u003ee1\u003c/tt\u003e and \u003ctt\u003ee2\u003c/tt\u003e are considered \u003ci\u003eequal\u003c/i\u003e if \u003ctt\u003e(e1\u003d\u003dnull ? e2\u003d\u003dnull : e1.equals(e2))\u003c/tt\u003e.  In other words, the two arrays are equal if they contain the same elements in the same order.  Also, two array references are considered equal if both are \u003ctt\u003enull\u003c/tt\u003e.\u003cp\u003e\n * @param a one array to be tested for equality\n * @param a2 the other array to be tested for equality\n * @return \u003ctt\u003etrue\u003c/tt\u003e if the two arrays are equal\n */\n","tf":{"freq":{"element":3,"test":2,"pair":1,"correspond":1,"one":2,"true":2,"equal":11,"number":1,"object":2,"anoth":1,"consid":3,"specifi":1,"two":7,"order":1,"refer":1,"contain":2,"word":1,"also":1,"array":9},"maxFreq":11,"totalTerms":52},"loc":19}