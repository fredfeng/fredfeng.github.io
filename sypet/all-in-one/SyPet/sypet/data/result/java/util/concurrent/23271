{"id":23271,"className":"java.util.concurrent.LinkedTransferQueue","methodName":"transfer","signature":"\u003cjava.util.concurrent.LinkedTransferQueue: void transfer(E)\u003e","javadoc":"/** \n * Transfers the element to a consumer, waiting if necessary to do so. \u003cp\u003eMore precisely, transfers the specified element immediately if there exists a consumer already waiting to receive it (in {@link #take} or timed {@link #poll(long,TimeUnit) poll}), else inserts the specified element at the tail of this queue and waits until the element is received by a consumer.\n * @throws NullPointerException if the specified element is null\n */\n","tf":{"freq":{"queue":1,"element":5,"except":1,"transfer":3,"link":2,"receiv":2,"wait":3,"tail":1,"necessari":1,"els":1,"specifi":3,"consum":3,"unit":1,"time":2,"poll":2,"take":1,"precis":1,"pointer":1,"immedi":1,"alreadi":1,"insert":1,"exist":1},"maxFreq":5,"totalTerms":38},"loc":6}