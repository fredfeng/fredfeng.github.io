{"id":20368,"className":"java.util.ResourceBundle$Control","methodName":"getControl","signature":"\u003cjava.util.ResourceBundle$Control: java.util.ResourceBundle$Control getControl(java.util.List)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eResourceBundle.Control\u003c/code\u003e in which the  {@link #getFormats(String) getFormats} method returns the specified\u003ccode\u003eformats\u003c/code\u003e. The \u003ccode\u003eformats\u003c/code\u003e must be equal to one of  {@link Control#FORMAT_PROPERTIES},  {@link Control#FORMAT_CLASS} or {@link Control#FORMAT_DEFAULT}. \u003ccode\u003eResourceBundle.Control\u003c/code\u003e instances returned by this method are singletons and thread-safe. \u003cp\u003eSpecifying  {@link Control#FORMAT_DEFAULT} is equivalent toinstantiating the \u003ccode\u003eResourceBundle.Control\u003c/code\u003e class, except that this method returns a singleton.\n * @param formats the formats to be returned by the \u003ccode\u003eResourceBundle.Control.getFormats\u003c/code\u003e method\n * @return a \u003ccode\u003eResourceBundle.Control\u003c/code\u003e supporting thespecified \u003ccode\u003eformats\u003c/code\u003e\n * @exception NullPointerException if \u003ccode\u003eformats\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @exception IllegalArgumentException if \u003ccode\u003eformats\u003c/code\u003e is unknown\n */\n","tf":{"freq":{"argument":1,"safe":1,"control":10,"except":5,"support":1,"singleton":2,"link":5,"one":1,"equal":1,"unknown":1,"format":10,"illeg":1,"must":1,"specifi":2,"instanc":1,"resourc":5,"equival":1,"thread":1,"string":1,"pointer":1,"thespecifi":1,"method":4,"toinstanti":1,"bundl":5},"maxFreq":10,"totalTerms":63},"loc":12}