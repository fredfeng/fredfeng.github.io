{"id":22940,"className":"java.util.concurrent.ForkJoinTask","methodName":"get","signature":"\u003cjava.util.concurrent.ForkJoinTask: V get()\u003e","javadoc":"/** \n * Waits if necessary for the computation to complete, and then retrieves its result.\n * @return the computed result\n * @throws CancellationException if the computation was cancelled\n * @throws ExecutionException if the computation threw anexception\n * @throws InterruptedException if the current thread is not amember of a ForkJoinPool and was interrupted while waiting\n */\n","tf":{"freq":{"result":2,"fork":1,"except":3,"cancel":2,"join":1,"wait":2,"necessari":1,"interrupt":2,"threw":1,"pool":1,"anexcept":1,"retriev":1,"thread":1,"current":1,"comput":4,"execut":1,"amemb":1,"complet":1},"maxFreq":4,"totalTerms":27},"loc":10}