{"id":22937,"className":"java.util.concurrent.ForkJoinTask","methodName":"getException","signature":"\u003cjava.util.concurrent.ForkJoinTask: java.lang.Throwable getException()\u003e","javadoc":"/** \n * Returns the exception thrown by the base computation, or a {@code CancellationException} if cancelled, or {@code null} ifnone or if the method has not yet completed.\n * @return the exception, or {@code null} if none\n */\n","tf":{"freq":{"thrown":1,"except":4,"base":1,"none":1,"ifnon":1,"comput":1,"method":1,"cancel":2,"complet":1,"yet":1},"maxFreq":4,"totalTerms":14},"loc":6}