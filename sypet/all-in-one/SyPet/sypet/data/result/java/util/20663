{"id":20663,"className":"java.util.IdentityHashMap","methodName":"values","signature":"\u003cjava.util.IdentityHashMap: java.util.Collection\u003cV\u003e values()\u003e","javadoc":"/** \n * Returns a  {@link Collection} view of the values contained in this map.The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa.  If the map is modified while an iteration over the collection is in progress, the results of the iteration are undefined.  The collection supports element removal, which removes the corresponding mapping from the map, via the \u003ctt\u003eIterator.remove\u003c/tt\u003e, \u003ctt\u003eCollection.remove\u003c/tt\u003e, \u003ctt\u003eremoveAll\u003c/tt\u003e, \u003ctt\u003eretainAll\u003c/tt\u003e and \u003ctt\u003eclear\u003c/tt\u003e methods.  It does not support the \u003ctt\u003eadd\u003c/tt\u003e or \u003ctt\u003eaddAll\u003c/tt\u003e methods. \u003cp\u003e\u003cb\u003eWhile the object returned by this method implements the \u003ctt\u003eCollection\u003c/tt\u003e interface, it does \u003ci\u003enot\u003c/i\u003e obey \u003ctt\u003eCollection\u0027s\u003c/tt\u003e general contract.  Like its backing map, the collection returned by this method defines element equality as reference-equality rather than object-equality.  This affects the behavior of its \u003ctt\u003econtains\u003c/tt\u003e, \u003ctt\u003eremove\u003c/tt\u003e and \u003ctt\u003econtainsAll\u003c/tt\u003e methods.\u003c/b\u003e\n */\n","tf":{"freq":{"progress":1,"defin":1,"result":1,"via":1,"vice":1,"behavior":1,"correspond":1,"link":1,"object":2,"add":2,"affect":1,"clear":1,"refer":1,"map":7,"rather":1,"valu":2,"undefin":1,"versa":1,"element":2,"support":2,"contract":1,"remov":6,"back":2,"equal":3,"like":1,"general":1,"obey":1,"contain":3,"modifi":1,"retain":1,"method":5,"chang":1,"view":1,"iter":3,"reflect":1,"collect":9},"maxFreq":9,"totalTerms":71},"loc":7}