{"id":23191,"className":"java.util.concurrent.BlockingDeque","methodName":"addFirst","signature":"\u003cjava.util.concurrent.BlockingDeque: void addFirst(E)\u003e","javadoc":"/** \n * Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an \u003ctt\u003eIllegalStateException\u003c/tt\u003e if no space is currently available.  When using a capacity-restricted deque, it is generally preferable to use  {@link #offerFirst(Object) offerFirst}.\n * @param e the element to add\n * @throws IllegalStateException {@inheritDoc}\n * @throws ClassCastException {@inheritDoc}\n * @throws NullPointerException if the specified element is null\n * @throws IllegalArgumentException {@inheritDoc}\n */\n","tf":{"freq":{"link":1,"state":2,"possibl":1,"use":2,"object":1,"violat":1,"add":2,"space":1,"specifi":2,"current":1,"immedi":1,"argument":1,"element":3,"except":5,"front":1,"avail":1,"offer":2,"without":1,"illeg":3,"restrict":2,"general":1,"cast":1,"pointer":1,"dequ":2,"capac":2,"insert":1,"prefer":1,"first":3},"maxFreq":5,"totalTerms":46},"loc":0}