{"id":21449,"className":"java.util.SortedMap","methodName":"headMap","signature":"\u003cjava.util.SortedMap: java.util.SortedMap\u003cK,V\u003e headMap(K)\u003e","javadoc":"/** \n * Returns a view of the portion of this map whose keys are strictly less than  {@code toKey}.  The returned map is backed by this map, so changes in the returned map are reflected in this map, and vice-versa.  The returned map supports all optional map operations that this map supports. \u003cp\u003eThe returned map will throw an  {@code IllegalArgumentException}on an attempt to insert a key outside its range.\n * @param toKey high endpoint (exclusive) of the keys in the returned map\n * @return a view of the portion of this map whose keys are strictlyless than  {@code toKey}\n * @throws ClassCastException if {@code toKey} is not compatiblewith this map\u0027s comparator (or, if the map has no comparator, if  {@code toKey} does not implement {@link Comparable}). Implementations may, but are not required to, throw this exception if  {@code toKey} cannot be compared to keyscurrently in the map.\n * @throws NullPointerException if {@code toKey} is null andthis map does not permit null keys\n * @throws IllegalArgumentException if this map itself has arestricted range, and  {@code toKey} lies outside thebounds of the range\n */\n","tf":{"freq":{"attempt":1,"andthi":1,"vice":1,"permit":1,"link":1,"requir":1,"compatiblewith":1,"oper":1,"rang":3,"map":17,"exclus":1,"head":1,"less":1,"key":13,"option":1,"portion":2,"versa":1,"argument":2,"keyscurr":1,"may":1,"except":5,"support":2,"whose":2,"arestrict":1,"back":1,"thebound":1,"illeg":2,"endpoint":1,"cast":1,"outsid":2,"strictlyless":1,"will":1,"pointer":1,"high":1,"chang":1,"view":2,"strict":1,"insert":1,"compar":4,"lie":1,"reflect":1},"maxFreq":17,"totalTerms":85},"loc":0}