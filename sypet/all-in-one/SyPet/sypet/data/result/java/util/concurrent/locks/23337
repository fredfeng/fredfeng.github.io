{"id":23337,"className":"java.util.concurrent.locks.Condition","methodName":"awaitUninterruptibly","signature":"\u003cjava.util.concurrent.locks.Condition: void awaitUninterruptibly()\u003e","javadoc":"/** \n * Causes the current thread to wait until it is signalled. \u003cp\u003eThe lock associated with this condition is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until \u003cem\u003eone\u003c/em\u003e of three things happens: \u003cul\u003e \u003cli\u003eSome other thread invokes the  {@link #signal} method for this{@code Condition} and the current thread happens to be chosen as thethread to be awakened; or \u003cli\u003eSome other thread invokes the  {@link #signalAll} method for this{@code Condition}; or \u003cli\u003eA \u0026quot;\u003cem\u003espurious wakeup\u003c/em\u003e\u0026quot; occurs. \u003c/ul\u003e \u003cp\u003eIn all cases, before this method can return the current thread must re-acquire the lock associated with this condition. When the thread returns it is \u003cem\u003eguaranteed\u003c/em\u003e to hold this lock. \u003cp\u003eIf the current thread\u0027s interrupted status is set when it enters this method, or it is  {@linkplain Thread#interrupt interrupted}while waiting, it will continue to wait until signalled. When it finally returns from this method its interrupted status will still be set. \u003cp\u003e\u003cb\u003eImplementation Considerations\u003c/b\u003e \u003cp\u003eThe current thread is assumed to hold the lock associated with this {@code Condition} when this method is called.It is up to the implementation to determine if this is the case and if not, how to respond. Typically, an exception will be thrown (such as  {@link IllegalMonitorStateException}) and the implementation must document that fact.\n */\n","tf":{"freq":{"acquir":1,"atom":1,"wait":3,"must":2,"becom":1,"respond":1,"thread":11,"wakeup":1,"three":1,"purpos":1,"happen":2,"uninterrupt":1,"quot":2,"awaken":1,"thrown":1,"except":2,"monitor":1,"spurious":1,"status":2,"invok":2,"hold":2,"enter":1,"continu":1,"disabl":1,"await":1,"determin":1,"will":3,"thing":1,"linkplain":1,"call":1,"link":3,"one":1,"state":1,"typic":1,"schedul":1,"signal":4,"chosen":1,"document":1,"releas":1,"associ":3,"consider":1,"current":6,"condit":5,"assum":1,"guarante":1,"lock":4,"still":1,"illeg":1,"interrupt":4,"thethread":1,"fact":1,"caus":1,"method":6,"lie":1,"dormant":1,"occur":1},"maxFreq":11,"totalTerms":104},"loc":0}