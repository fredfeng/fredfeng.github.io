{"id":21314,"className":"java.util.ArrayDeque","methodName":"toArray","signature":"\u003cjava.util.ArrayDeque: T[] toArray(T[])\u003e","javadoc":"/** \n * Returns an array containing all of the elements in this deque in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.  If the deque fits in the specified array, it is returned therein.  Otherwise, a new array is allocated with the runtime type of the specified array and the size of this deque. \u003cp\u003eIf this deque fits in the specified array with room to spare (i.e., the array has more elements than this deque), the element in the array immediately following the end of the deque is set to \u003ctt\u003enull\u003c/tt\u003e. \u003cp\u003eLike the  {@link #toArray()} method, this method acts as bridge betweenarray-based and collection-based APIs.  Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs. \u003cp\u003eSuppose \u003ctt\u003ex\u003c/tt\u003e is a deque known to contain only strings. The following code can be used to dump the deque into a newly allocated array of \u003ctt\u003eString\u003c/tt\u003e: \u003cpre\u003e String[] y \u003d x.toArray(new String[0]);\u003c/pre\u003e Note that \u003ctt\u003etoArray(new Object[0])\u003c/tt\u003e is identical in function to \u003ctt\u003etoArray()\u003c/tt\u003e.\n * @param a the array into which the elements of the deque are tobe stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose\n * @return an array containing all of the elements in this deque\n * @throws ArrayStoreException if the runtime type of the specified arrayis not a supertype of the runtime type of every element in this deque\n * @throws NullPointerException if the specified array is null\n */\n","tf":{"freq":{"store":2,"last":1,"save":1,"enough":1,"type":6,"function":1,"specifi":6,"sequenc":1,"precis":1,"purpos":1,"tobe":1,"proper":1,"everi":1,"follow":2,"therein":1,"element":7,"control":1,"except":2,"spare":1,"runtim":6,"circumst":1,"like":1,"cost":1,"size":1,"newli":1,"contain":3,"pointer":1,"dequ":11,"known":1,"big":1,"output":1,"room":1,"alloc":4,"array":21,"collect":1,"otherwis":2,"dump":1,"allow":1,"link":1,"use":2,"object":1,"fit":2,"ident":1,"immedi":1,"bridg":1,"end":1,"note":1,"may":1,"supertyp":1,"suppos":1,"arrayi":1,"pre":2,"string":4,"base":2,"method":3,"certain":1,"act":1,"first":1,"betweenarray":1},"maxFreq":21,"totalTerms":128},"loc":10}