{"id":23428,"className":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer","methodName":"tryAcquireSharedNanos","signature":"\u003cjava.util.concurrent.locks.AbstractQueuedLongSynchronizer: boolean tryAcquireSharedNanos(long,long)\u003e","javadoc":"/** \n * Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses.  Implemented by first checking interrupt status, then invoking at least once  {@link #tryAcquireShared}, returning on success.  Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking  {@link #tryAcquireShared} until success or the threadis interrupted or the timeout elapses.\n * @param arg the acquire argument.  This value is conveyed to{@link #tryAcquireShared} but is otherwise uninterpretedand can represent anything you like.\n * @param nanosTimeout the maximum number of nanoseconds to wait\n * @return {@code true} if acquired; {@code false} if timed out\n * @throws InterruptedException if the current thread is interrupted\n */\n","tf":{"freq":{"fals":1,"attempt":1,"acquir":7,"otherwis":2,"anyth":1,"unblock":1,"least":1,"link":3,"possibl":1,"block":1,"wait":1,"nanosecond":1,"uninterpretedand":1,"repeat":1,"mode":1,"convey":1,"arg":1,"elaps":2,"time":1,"share":5,"given":1,"fail":1,"thread":2,"current":1,"valu":1,"argument":1,"threadi":1,"except":1,"check":1,"repres":1,"status":1,"invok":2,"queu":1,"true":1,"number":1,"nano":2,"like":1,"interrupt":5,"maximum":1,"first":1,"success":2,"timeout":3,"abort":1},"maxFreq":7,"totalTerms":67},"loc":6}