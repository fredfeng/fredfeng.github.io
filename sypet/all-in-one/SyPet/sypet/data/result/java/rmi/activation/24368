{"id":24368,"className":"java.rmi.activation.ActivationSystem","methodName":"activeGroup","signature":"\u003cjava.rmi.activation.ActivationSystem: java.rmi.activation.ActivationMonitor activeGroup(java.rmi.activation.ActivationGroupID,java.rmi.activation.ActivationInstantiator,long)\u003e","javadoc":"/** \n * Callback to inform activation system that group is now active. This call is made internally by the \u003ccode\u003eActivationGroup.createGroup\u003c/code\u003e method to inform the \u003ccode\u003eActivationSystem\u003c/code\u003e that the group is now active.\n * @param id the activation group\u0027s identifier\n * @param group the group\u0027s instantiator\n * @param incarnation the group\u0027s incarnation number\n * @return monitor for activation group\n * @exception UnknownGroupException if group is not registered\n * @exception ActivationException if a group for the specified\u003ccode\u003eid\u003c/code\u003e is already active and that group is not equal to the specified \u003ccode\u003egroup\u003c/code\u003e or that group has a different \u003ccode\u003eincarnation\u003c/code\u003e than the specified \u003ccode\u003egroup\u003c/code\u003e\n * @exception RemoteException if remote call fails\n * @since 1.2\n */\n","tf":{"freq":{"call":2,"except":6,"monitor":1,"creat":1,"instanti":1,"made":1,"equal":1,"number":1,"identifi":1,"unknown":1,"activ":10,"specifi":3,"differ":1,"inform":2,"system":2,"fail":1,"incarn":3,"now":2,"remot":2,"callback":1,"intern":1,"regist":1,"alreadi":1,"method":1,"group":17},"maxFreq":17,"totalTerms":64},"loc":0}