{"id":24505,"className":"java.rmi.registry.Registry","methodName":"lookup","signature":"\u003cjava.rmi.registry.Registry: java.rmi.Remote lookup(java.lang.String)\u003e","javadoc":"/** \n * Returns the remote reference bound to the specified \u003ccode\u003ename\u003c/code\u003e in this registry.\n * @param name the name for the remote reference to look up\n * @return  a reference to a remote object\n * @throws NotBoundException if \u003ccode\u003ename\u003c/code\u003e is not currently bound\n * @throws RemoteException if remote communication with theregistry failed; if exception is a \u003ccode\u003eServerException\u003c/code\u003e containing an \u003ccode\u003eAccessException\u003c/code\u003e, then the registry denies the caller access to perform this operation\n * @throws AccessException if this registry is local and it deniesthe caller access to perform this operation\n * @throws NullPointerException if \u003ccode\u003ename\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"caller":2,"look":1,"except":7,"perform":2,"registri":3,"object":1,"access":4,"lookup":1,"specifi":1,"deniesth":1,"theregistri":1,"fail":1,"communic":1,"oper":2,"refer":3,"remot":5,"contain":1,"name":5,"current":1,"pointer":1,"server":1,"local":1,"deni":1,"bound":3},"maxFreq":7,"totalTerms":50},"loc":0}