{"id":24518,"className":"java.rmi.registry.LocateRegistry","methodName":"createRegistry","signature":"\u003cjava.rmi.registry.LocateRegistry: java.rmi.registry.Registry createRegistry(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)\u003e","javadoc":"/** \n * Creates and exports a \u003ccode\u003eRegistry\u003c/code\u003e instance on the local host that uses custom socket factories for communication with that instance.  The registry that is created listens for incoming requests on the given \u003ccode\u003eport\u003c/code\u003e using a \u003ccode\u003eServerSocket\u003c/code\u003e created from the supplied \u003ccode\u003eRMIServerSocketFactory\u003c/code\u003e. \u003cp\u003eThe \u003ccode\u003eRegistry\u003c/code\u003e instance is exported as if the static  {@link UnicastRemoteObject#exportObject(Remote,int,RMIClientSocketFactory,RMIServerSocketFactory) UnicastRemoteObject.exportObject} method is invoked, passing the\u003ccode\u003eRegistry\u003c/code\u003e instance, the specified \u003ccode\u003eport\u003c/code\u003e, the specified \u003ccode\u003eRMIClientSocketFactory\u003c/code\u003e, and the specified \u003ccode\u003eRMIServerSocketFactory\u003c/code\u003e as arguments, except that the \u003ccode\u003eRegistry\u003c/code\u003e instance is exported with a well-known object identifier, an  {@link ObjID} instance constructed with the value{@link ObjID#REGISTRY_ID}.\n * @param port port on which the registry accepts requests\n * @param csf  client-side \u003ccode\u003eSocket\u003c/code\u003e factory used tomake connections to the registry\n * @param ssf  server-side \u003ccode\u003eServerSocket\u003c/code\u003e factoryused to accept connections to the registry\n * @return the registry\n * @exception RemoteException if the registry could not be exported\n * @since 1.2\n */\n","tf":{"freq":{"ssf":1,"port":4,"connect":2,"client":1,"accept":2,"link":3,"use":3,"identifi":1,"well":1,"object":5,"specifi":3,"given":1,"factoryus":1,"side":2,"factori":7,"request":2,"socket":9,"valu":1,"unicast":2,"listen":1,"custom":1,"argument":1,"except":3,"export":6,"host":1,"creat":4,"invok":1,"iserv":3,"registri":11,"suppli":1,"pass":1,"instanc":6,"iclient":2,"csf":1,"communic":1,"tomak":1,"remot":4,"obj":2,"method":1,"server":3,"construct":1,"known":1,"local":1,"incom":1},"maxFreq":11,"totalTerms":110},"loc":3}