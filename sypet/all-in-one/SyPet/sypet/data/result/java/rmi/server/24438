{"id":24438,"className":"java.rmi.server.UID","methodName":"read","signature":"\u003cjava.rmi.server.UID: java.rmi.server.UID read(java.io.DataInput)\u003e","javadoc":"/** \n * Constructs and returns a new \u003ccode\u003eUID\u003c/code\u003e instance by unmarshalling a binary representation from an \u003ccode\u003eDataInput\u003c/code\u003e instance. \u003cp\u003eSpecifically, this method first invokes the given stream\u0027s {@link DataInput#readInt()} method to read a \u003ccode\u003eunique\u003c/code\u003e value,then it invoke\u0027s the stream\u0027s {@link DataInput#readLong()} method to read a \u003ccode\u003etime\u003c/code\u003e value,then it invoke\u0027s the stream\u0027s {@link DataInput#readShort()} method to read a \u003ccode\u003ecount\u003c/code\u003e value,and then it creates and returns a new \u003ccode\u003eUID\u003c/code\u003e instance that contains the \u003ccode\u003eunique\u003c/code\u003e, \u003ccode\u003etime\u003c/code\u003e, and \u003ccode\u003ecount\u003c/code\u003e values that were read from the stream.\n * @param in the \u003ccode\u003eDataInput\u003c/code\u003e instance to read\u003ccode\u003eUID\u003c/code\u003e from\n * @return  unmarshalled \u003ccode\u003eUID\u003c/code\u003e instance\n * @throws IOException if an I/O error occurs while performingthis operation\n */\n","tf":{"freq":{"except":1,"stream":4,"binari":1,"error":1,"count":2,"creat":1,"invok":3,"link":3,"data":5,"performingthi":1,"unmarshal":2,"instanc":5,"represent":1,"time":2,"uniqu":2,"input":5,"specif":1,"given":1,"oper":1,"contain":1,"read":9,"valu":4,"method":4,"construct":1,"first":1,"occur":1},"maxFreq":9,"totalTerms":63},"loc":6}