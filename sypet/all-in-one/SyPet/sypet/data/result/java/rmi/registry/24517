{"id":24517,"className":"java.rmi.registry.LocateRegistry","methodName":"createRegistry","signature":"\u003cjava.rmi.registry.LocateRegistry: java.rmi.registry.Registry createRegistry(int)\u003e","javadoc":"/** \n * Creates and exports a \u003ccode\u003eRegistry\u003c/code\u003e instance on the local host that accepts requests on the specified \u003ccode\u003eport\u003c/code\u003e. \u003cp\u003eThe \u003ccode\u003eRegistry\u003c/code\u003e instance is exported as if the static {@link UnicastRemoteObject#exportObject(Remote,int) UnicastRemoteObject.exportObject} method is invoked, passing the\u003ccode\u003eRegistry\u003c/code\u003e instance and the specified \u003ccode\u003eport\u003c/code\u003e as arguments, except that the \u003ccode\u003eRegistry\u003c/code\u003e instance is exported with a well-known object identifier, an  {@link ObjID}instance constructed with the value  {@link ObjID#REGISTRY_ID}.\n * @param port the port on which the registry accepts requests\n * @return the registry\n * @exception RemoteException if the registry could not be exported\n * @since JDK1.1\n */\n","tf":{"freq":{"port":4,"accept":2,"link":3,"identifi":1,"object":5,"well":1,"specifi":2,"request":2,"valu":1,"unicast":2,"argument":1,"export":6,"except":3,"host":1,"creat":2,"invok":1,"registri":8,"instanc":5,"pass":1,"remot":4,"method":1,"obj":2,"local":1,"known":1,"construct":1},"maxFreq":8,"totalTerms":61},"loc":3}