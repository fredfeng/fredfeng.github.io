{"id":24482,"className":"java.rmi.server.RMIClassLoader","methodName":"loadClass","signature":"\u003cjava.rmi.server.RMIClassLoader: java.lang.Class\u003c?\u003e loadClass(java.net.URL,java.lang.String)\u003e","javadoc":"/** \n * Loads a class from a codebase URL. If \u003ccode\u003ecodebase\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, then this method will behave the same as  {@link #loadClass(String,String)} with a\u003ccode\u003enull\u003c/code\u003e \u003ccode\u003ecodebase\u003c/code\u003e and the given class name. \u003cp\u003eThis method delegates to the {@link RMIClassLoaderSpi#loadClass(String,String,ClassLoader)}method of the provider instance, passing the result of invoking {@link URL#toString} on the given URL (or \u003ccode\u003enull\u003c/code\u003e if\u003ccode\u003ecodebase\u003c/code\u003e is null) as the first argument, \u003ccode\u003ename\u003c/code\u003e as the second argument, and \u003ccode\u003enull\u003c/code\u003e as the third argument.\n * @param codebase the URL to load the class from, or \u003ccode\u003enull\u003c/code\u003e\n * @param name the name of the class to load\n * @return  the \u003ccode\u003eClass\u003c/code\u003e object representing the loaded class\n * @throws MalformedURLException if \u003ccode\u003ecodebase\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e and a provider-specific URL used to load classes is invalid\n * @throws ClassNotFoundException if a definition for the classcould not be found at the specified URL\n */\n","tf":{"freq":{"result":1,"iclass":1,"second":1,"behav":1,"link":3,"lexcept":1,"use":1,"object":1,"codebas":6,"specifi":1,"deleg":1,"invalid":1,"given":2,"name":4,"spi":1,"argument":3,"except":1,"repres":1,"loader":2,"invok":1,"classcould":1,"provid":2,"third":1,"instanc":1,"pass":1,"specif":1,"malform":1,"definit":1,"string":5,"will":1,"method":3,"load":8,"first":1,"found":2},"maxFreq":8,"totalTerms":63},"loc":4}