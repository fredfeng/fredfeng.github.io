{"id":24316,"className":"java.rmi.dgc.DGC","methodName":"dirty","signature":"\u003cjava.rmi.dgc.DGC: java.rmi.dgc.Lease dirty(java.rmi.server.ObjID[],long,java.rmi.dgc.Lease)\u003e","javadoc":"/** \n * The dirty call requests leases for the remote object references associated with the object identifiers contained in the array \u0027ids\u0027. The \u0027lease\u0027 contains a client\u0027s unique VM identifier (VMID) and a requested lease period. For each remote object exported in the local VM, the garbage collector maintains a reference list-a list of clients that hold references to it. If the lease is granted, the garbage collector adds the client\u0027s VMID to the reference list for each remote object indicated in \u0027ids\u0027. The \u0027sequenceNum\u0027 parameter is a sequence number that is used to detect and discard late calls to the garbage collector. The sequence number should always increase for each subsequent call to the garbage collector. Some clients are unable to generate a VMID, since a VMID is a universally unique identifier that contains a host address which some clients are unable to obtain due to security restrictions. In this case, a client can use a VMID of null, and the distributed garbage collector will assign a VMID for the client. The dirty call returns a Lease object that contains the VMID used and the lease period granted for the remote references (a server may decide to grant a smaller lease period than the client requests). A client must use the VMID the garbage collector uses in order to make corresponding clean calls when the client drops remote object references. A client VM need only make one initial dirty call for each remote reference referenced in the VM (even if it has multiple references to the same remote object). The client must also make a dirty call to renew leases on remote references before such leases expire. When the client no longer has any references to a specific remote object, it must schedule a clean call for the object ID associated with the reference.\n * @param ids IDs of objects to mark as referenced by calling client\n * @param sequenceNum sequence number\n * @param lease requested lease\n * @return granted lease\n * @throws RemoteException if dirty call fails\n */\n","tf":{"freq":{"need":1,"assign":1,"grant":4,"client":14,"drop":1,"maintain":1,"distribut":1,"renew":1,"garbag":6,"must":3,"expir":1,"referenc":2,"uniqu":2,"fail":1,"refer":11,"univers":1,"sequenc":5,"request":4,"longer":1,"except":1,"host":1,"multipl":1,"alway":1,"hold":1,"mark":1,"number":3,"period":3,"restrict":1,"obtain":1,"remot":10,"contain":4,"late":1,"will":1,"due":1,"even":1,"make":3,"leas":12,"array":1,"increas":1,"call":10,"correspond":1,"one":1,"schedul":1,"dirti":6,"use":5,"identifi":3,"object":10,"add":1,"discard":1,"smaller":1,"id":4,"collector":6,"clean":2,"order":1,"indic":1,"associ":2,"initi":1,"subsequ":1,"detect":1,"may":1,"export":1,"paramet":1,"list":3,"unabl":2,"specif":1,"num":2,"secur":1,"decid":1,"address":1,"generat":1,"server":1,"local":1,"also":1},"maxFreq":14,"totalTerms":187},"loc":0}