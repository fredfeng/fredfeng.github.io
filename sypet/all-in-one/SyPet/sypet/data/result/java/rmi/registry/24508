{"id":24508,"className":"java.rmi.registry.Registry","methodName":"rebind","signature":"\u003cjava.rmi.registry.Registry: void rebind(java.lang.String,java.rmi.Remote)\u003e","javadoc":"/** \n * Replaces the binding for the specified \u003ccode\u003ename\u003c/code\u003e in this registry with the supplied remote reference.  If there is an existing binding for the specified \u003ccode\u003ename\u003c/code\u003e, it is discarded.\n * @param name the name to associate with the remote reference\n * @param obj a reference to a remote object (usually a stub)\n * @throws RemoteException if remote communication with theregistry failed; if exception is a \u003ccode\u003eServerException\u003c/code\u003e containing an \u003ccode\u003eAccessException\u003c/code\u003e, then the registry denies the caller access to perform this operation (if originating from a non-local host, for example)\n * @throws AccessException if this registry is local and it deniesthe caller access to perform this operation\n * @throws NullPointerException if \u003ccode\u003ename\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e, or if \u003ccode\u003eobj\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"caller":2,"perform":2,"object":1,"discard":1,"specifi":2,"deniesth":1,"theregistri":1,"fail":1,"oper":2,"associ":1,"refer":3,"name":5,"exist":1,"deni":1,"usual":1,"except":6,"host":1,"stub":1,"origin":1,"suppli":1,"registri":3,"access":4,"non":1,"communic":1,"remot":5,"replac":1,"contain":1,"exampl":1,"rebind":1,"pointer":1,"obj":2,"server":1,"local":2,"bind":2},"maxFreq":6,"totalTerms":61},"loc":0}