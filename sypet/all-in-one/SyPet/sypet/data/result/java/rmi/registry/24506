{"id":24506,"className":"java.rmi.registry.Registry","methodName":"bind","signature":"\u003cjava.rmi.registry.Registry: void bind(java.lang.String,java.rmi.Remote)\u003e","javadoc":"/** \n * Binds a remote reference to the specified \u003ccode\u003ename\u003c/code\u003e in this registry.\n * @param name the name to associate with the remote reference\n * @param obj a reference to a remote object (usually a stub)\n * @throws AlreadyBoundException if \u003ccode\u003ename\u003c/code\u003e is already bound\n * @throws RemoteException if remote communication with theregistry failed; if exception is a \u003ccode\u003eServerException\u003c/code\u003e containing an \u003ccode\u003eAccessException\u003c/code\u003e, then the registry denies the caller access to perform this operation (if originating from a non-local host, for example)\n * @throws AccessException if this registry is local and it deniesthe caller access to perform this operation\n * @throws NullPointerException if \u003ccode\u003ename\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e, or if \u003ccode\u003eobj\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"caller":2,"perform":2,"object":1,"specifi":1,"deniesth":1,"theregistri":1,"fail":1,"associ":1,"refer":3,"oper":2,"name":5,"deni":1,"usual":1,"except":7,"host":1,"stub":1,"origin":1,"registri":3,"access":4,"non":1,"communic":1,"remot":5,"contain":1,"exampl":1,"pointer":1,"alreadi":2,"obj":2,"server":1,"local":2,"bind":2,"bound":2},"maxFreq":7,"totalTerms":60},"loc":0}