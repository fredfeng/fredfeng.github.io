{"id":24355,"className":"java.rmi.activation.ActivationDesc","methodName":"ActivationDesc","signature":"\u003cjava.rmi.activation.ActivationDesc: void ActivationDesc(java.lang.String,java.lang.String,java.rmi.MarshalledObject,boolean)\u003e","javadoc":"/** \n * Constructs an object descriptor for an object whose class name is \u003ccode\u003eclassName\u003c/code\u003e, that can be loaded from the code \u003ccode\u003elocation\u003c/code\u003e and whose initialization information is \u003ccode\u003edata\u003c/code\u003e. If this form of the constructor is used, the \u003ccode\u003egroupID\u003c/code\u003e defaults to the current id for \u003ccode\u003eActivationGroup\u003c/code\u003e for this VM. All objects with the same \u003ccode\u003eActivationGroupID\u003c/code\u003e are activated in the same VM. \u003cp\u003eThis constructor will throw \u003ccode\u003eActivationException\u003c/code\u003e if there is no current activation group for this VM.  To create an \u003ccode\u003eActivationGroup\u003c/code\u003e use the \u003ccode\u003eActivationGroup.createGroup\u003c/code\u003e method.\n * @param className the object\u0027s fully package qualified class name\n * @param location the object\u0027s code location (from where the class isloaded)\n * @param data the object\u0027s initialization (activation) data containedin marshalled form.\n * @param restart if true, the object is restarted (reactivated) wheneither the activator is restarted or the object\u0027s activation group is restarted after an unexpected crash; if false, the object is only activated on demand.  Specifying \u003ccode\u003erestart\u003c/code\u003e to be \u003ccode\u003etrue\u003c/code\u003e does not force an initial immediate activation of a newly registered object;  initial activation is lazy.\n * @exception ActivationException if the current group is nonexistent\n * @since 1.2\n */\n","tf":{"freq":{"fals":1,"unexpect":1,"desc":1,"descriptor":1,"data":3,"use":2,"object":10,"activ":15,"specifi":1,"name":4,"current":3,"regist":1,"immedi":1,"initi":4,"forc":1,"marshal":1,"crash":1,"demand":1,"constructor":2,"restart":5,"locat":3,"except":3,"containedin":1,"form":2,"nonexist":1,"whose":2,"creat":2,"true":2,"lazi":1,"fulli":1,"isload":1,"newli":1,"inform":1,"reactiv":1,"will":1,"load":1,"method":1,"construct":1,"group":9,"qualifi":1,"wheneith":1},"maxFreq":15,"totalTerms":96},"loc":4}