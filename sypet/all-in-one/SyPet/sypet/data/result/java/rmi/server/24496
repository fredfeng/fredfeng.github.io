{"id":24496,"className":"java.rmi.server.RemoteRef","methodName":"invoke","signature":"\u003cjava.rmi.server.RemoteRef: java.lang.Object invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)\u003e","javadoc":"/** \n * Invoke a method. This form of delegating method invocation to the reference allows the reference to take care of setting up the connection to the remote host, marshaling some representation for the method and parameters, then communicating the method invocation to the remote host. This method either returns the result of a method invocation on the remote object which resides on the remote host or throws a RemoteException if the call failed or an application-level exception if the remote invocation throws an exception.\n * @param obj the object that contains the RemoteRef (e.g., theRemoteStub for the object.\n * @param method the method to be invoked\n * @param params the parameter list\n * @param opnum  a hash that may be used to represent the method\n * @return result of remote method invocation\n * @exception Exception if any exception occurs during remote methodinvocation\n * @since 1.2\n */\n","tf":{"freq":{"result":2,"call":1,"connect":1,"allow":1,"use":1,"object":3,"applic":1,"level":1,"deleg":1,"fail":1,"methodinvoc":1,"refer":2,"care":1,"opnum":1,"marshal":1,"may":1,"except":6,"host":3,"resid":1,"form":1,"repres":1,"hash":1,"stub":1,"invok":3,"paramet":2,"list":1,"invoc":5,"represent":1,"ref":1,"either":1,"communic":1,"remot":10,"take":1,"contain":1,"obj":1,"method":10,"occur":1},"maxFreq":10,"totalTerms":73},"loc":0}