{"id":24365,"className":"java.rmi.activation.ActivationSystem","methodName":"registerObject","signature":"\u003cjava.rmi.activation.ActivationSystem: java.rmi.activation.ActivationID registerObject(java.rmi.activation.ActivationDesc)\u003e","javadoc":"/** \n * The \u003ccode\u003eregisterObject\u003c/code\u003e method is used to register an activation descriptor, \u003ccode\u003edesc\u003c/code\u003e, and obtain an activation identifier for a activatable remote object. The \u003ccode\u003eActivationSystem\u003c/code\u003e creates an \u003ccode\u003eActivationID\u003c/code\u003e (a activation identifier) for the object specified by the descriptor, \u003ccode\u003edesc\u003c/code\u003e, and records, in stable storage, the activation descriptor and its associated identifier for later use. When the \u003ccode\u003eActivator\u003c/code\u003e receives an \u003ccode\u003eactivate\u003c/code\u003e request for a specific identifier, it looks up the activation descriptor (registered previously) for the specified identifier and uses that information to activate the object. \u003cp\u003e\n * @param desc the object\u0027s activation descriptor\n * @return the activation id that can be used to activate the object\n * @exception ActivationException if registration fails (e.g., databaseupdate failure, etc).\n * @exception UnknownGroupException if group referred to in\u003ccode\u003edesc\u003c/code\u003e is not registered with this system\n * @exception RemoteException if remote call fails\n * @since 1.2\n */\n","tf":{"freq":{"call":1,"desc":4,"databaseupd":1,"descriptor":5,"etc":1,"use":4,"identifi":5,"object":7,"activ":14,"specifi":2,"stabl":1,"fail":2,"refer":1,"associ":1,"request":1,"regist":5,"look":1,"except":6,"previous":1,"failur":1,"creat":1,"later":1,"receiv":1,"unknown":1,"registr":1,"storag":1,"inform":1,"record":1,"system":2,"obtain":1,"specif":1,"activat":1,"remot":3,"method":1,"group":2},"maxFreq":14,"totalTerms":83},"loc":0}