{"id":24483,"className":"java.rmi.server.RMIClassLoader","methodName":"loadClass","signature":"\u003cjava.rmi.server.RMIClassLoader: java.lang.Class\u003c?\u003e loadClass(java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Loads a class from a codebase URL path. \u003cp\u003eThis method delegates to the {@link RMIClassLoaderSpi#loadClass(String,String,ClassLoader)}method of the provider instance, passing \u003ccode\u003ecodebase\u003c/code\u003e as the first argument, \u003ccode\u003ename\u003c/code\u003e as the second argument, and \u003ccode\u003enull\u003c/code\u003e as the third argument.\n * @param codebase the list of URLs (separated by spaces) to loadthe class from, or \u003ccode\u003enull\u003c/code\u003e\n * @param name the name of the class to load\n * @return  the \u003ccode\u003eClass\u003c/code\u003e object representing the loaded class\n * @throws MalformedURLException if \u003ccode\u003ecodebase\u003c/code\u003e isnon-\u003ccode\u003enull\u003c/code\u003e and contains an invalid URL, or if \u003ccode\u003ecodebase\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e and a provider-specific URL used to load classes is invalid\n * @throws ClassNotFoundException if a definition for the classcould not be found at the specified location\n * @since   1.2\n */\n","tf":{"freq":{"iclass":1,"second":1,"link":1,"lexcept":1,"use":1,"object":1,"space":1,"codebas":5,"specifi":1,"deleg":1,"invalid":2,"spi":1,"name":3,"path":1,"isnon":1,"argument":3,"locat":1,"except":1,"repres":1,"loader":2,"list":1,"classcould":1,"provid":2,"third":1,"instanc":1,"pass":1,"loadth":1,"specif":1,"malform":1,"separ":1,"definit":1,"contain":1,"string":2,"method":2,"load":6,"first":1,"found":2},"maxFreq":6,"totalTerms":56},"loc":3}