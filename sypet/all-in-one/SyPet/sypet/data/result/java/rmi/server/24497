{"id":24497,"className":"java.rmi.server.RemoteRef","methodName":"newCall","signature":"\u003cjava.rmi.server.RemoteRef: java.rmi.server.RemoteCall newCall(java.rmi.server.RemoteObject,java.rmi.server.Operation[],int,long)\u003e","javadoc":"/** \n * Creates an appropriate call object for a new remote method invocation on this object.  Passing operation array and index, allows the stubs generator to assign the operation indexes and interpret them. The remote reference may need the operation to encode in the call.\n * @since JDK1.1\n * @deprecated 1.2 style stubs no longer use this method. Instead ofusing a sequence of method calls on the stub\u0027s the remote reference (\u003ccode\u003enewCall\u003c/code\u003e, \u003ccode\u003einvoke\u003c/code\u003e, and \u003ccode\u003edone\u003c/code\u003e), a stub uses a single method, \u003ccode\u003einvoke(Remote, Method, Object[], int)\u003c/code\u003e, on the remote reference to carry out parameter marshalling, remote method executing and unmarshalling of the return value.\n * @param obj remote stub through which to make call\n * @param op array of stub operations\n * @param opnum operation number\n * @param hash stub/skeleton interface hash\n * @return call object representing remote call\n * @throws RemoteException if failed to initiate new remote call\n * @see #invoke(Remote,java.lang.reflect.Method,Object[],long)\n */\n","tf":{"freq":{"need":1,"call":9,"assign":1,"deprec":1,"allow":1,"singl":1,"interpret":1,"use":2,"skeleton":1,"object":5,"carri":1,"lang":1,"unmarshal":1,"fail":1,"style":1,"oper":5,"refer":3,"sequenc":1,"longer":1,"valu":1,"initi":1,"opnum":1,"marshal":1,"except":1,"index":2,"may":1,"repres":1,"hash":2,"creat":1,"invok":3,"stub":7,"done":1,"paramet":1,"number":1,"ofus":1,"invoc":1,"pass":1,"encod":1,"remot":11,"appropri":1,"generat":1,"instead":1,"java":1,"obj":1,"method":7,"execut":1,"make":1,"reflect":1,"array":2},"maxFreq":11,"totalTerms":95},"loc":0}