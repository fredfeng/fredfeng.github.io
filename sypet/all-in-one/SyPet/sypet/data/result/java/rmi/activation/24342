{"id":24342,"className":"java.rmi.activation.ActivationGroup","methodName":"createGroup","signature":"\u003cjava.rmi.activation.ActivationGroup: java.rmi.activation.ActivationGroup createGroup(java.rmi.activation.ActivationGroupID,java.rmi.activation.ActivationGroupDesc,long)\u003e","javadoc":"/** \n * Create and set the activation group for the current VM.  The activation group can only be set if it is not currently set. An activation group is set using the \u003ccode\u003ecreateGroup\u003c/code\u003e method when the \u003ccode\u003eActivator\u003c/code\u003e initiates the re-creation of an activation group in order to carry out incoming \u003ccode\u003eactivate\u003c/code\u003e requests. A group must first be registered with the \u003ccode\u003eActivationSystem\u003c/code\u003e before it can be created via this method. \u003cp\u003eThe group class specified by the \u003ccode\u003eActivationGroupDesc\u003c/code\u003e must be a concrete subclass of \u003ccode\u003eActivationGroup\u003c/code\u003e and have a public constructor that takes two arguments: the \u003ccode\u003eActivationGroupID\u003c/code\u003e for the group and the \u003ccode\u003eMarshalledObject\u003c/code\u003e containing the group\u0027s initialization data (obtained from the \u003ccode\u003eActivationGroupDesc\u003c/code\u003e. \u003cp\u003eIf the group class name specified in the \u003ccode\u003eActivationGroupDesc\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, then this method will behave as if the group descriptor contained the name of the default activation group implementation class. \u003cp\u003eNote that if your application creates its own custom activation group, a security manager must be set for that group.  Otherwise objects cannot be activated in the group. \u003ccode\u003ejava.rmi.RMISecurityManager\u003c/code\u003e is set by default. \u003cp\u003eIf a security manager is already set in the group VM, this method first calls the security manager\u0027s \u003ccode\u003echeckSetFactory\u003c/code\u003e method.  This could result in a \u003ccode\u003eSecurityException\u003c/code\u003e. If your application needs to set a different security manager, you must ensure that the policy file specified by the group\u0027s \u003ccode\u003eActivationGroupDesc\u003c/code\u003e grants the group the necessary permissions to set a new security manager.  (Note: This will be necessary if your group downloads and sets a security manager). \u003cp\u003eAfter the group is created, the \u003ccode\u003eActivationSystem\u003c/code\u003e is informed that the group is active by calling the \u003ccode\u003eactiveGroup\u003c/code\u003e method which returns the \u003ccode\u003eActivationMonitor\u003c/code\u003e for the group. The application need not call \u003ccode\u003eactiveGroup\u003c/code\u003e independently since it is taken care of by this method. \u003cp\u003eOnce a group is created, subsequent calls to the \u003ccode\u003ecurrentGroupID\u003c/code\u003e method will return the identifier for this group until the group becomes inactive.\n * @param id the activation group\u0027s identifier\n * @param desc the activation group\u0027s descriptor\n * @param incarnation the group\u0027s incarnation number (zero on group\u0027sinitial creation)\n * @return the activation group for the VM\n * @exception ActivationException if group already exists or if erroroccurs during group creation\n * @exception SecurityException if permission to create group is denied.(Note: The default implementation of the security manager \u003ccode\u003echeckSetFactory\u003c/code\u003e method requires the RuntimePermission \"setFactory\")\n * @see SecurityManager#checkSetFactory\n * @since 1.2\n */\n","tf":{"freq":{"need":2,"via":1,"grant":1,"behav":1,"download":1,"zero":1,"inact":1,"carri":1,"necessari":2,"must":4,"specifi":3,"independ":1,"requir":1,"becom":1,"siniti":1,"file":1,"request":1,"care":1,"permiss":3,"taken":1,"marshal":1,"deni":1,"custom":1,"argument":1,"except":5,"monitor":1,"creat":8,"runtim":1,"number":1,"polici":1,"inform":1,"system":2,"obtain":1,"contain":2,"subclass":1,"will":3,"incom":1,"otherwis":1,"creation":3,"call":4,"result":1,"isecur":1,"desc":5,"descriptor":2,"data":1,"use":1,"identifi":2,"object":2,"activ":25,"applic":3,"ensur":1,"order":1,"incarn":2,"factori":4,"name":2,"concret":1,"current":3,"regist":1,"initi":2,"subsequ":1,"exist":1,"note":3,"constructor":1,"check":3,"erroroccur":1,"manag":9,"differ":1,"two":1,"secur":10,"take":1,"method":9,"java":1,"alreadi":2,"group":43,"first":2,"rmi":1},"maxFreq":43,"totalTerms":219},"loc":66}