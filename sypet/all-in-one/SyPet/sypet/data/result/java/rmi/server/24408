{"id":24408,"className":"java.rmi.server.RMIClassLoaderSpi","methodName":"loadProxyClass","signature":"\u003cjava.rmi.server.RMIClassLoaderSpi: java.lang.Class\u003c?\u003e loadProxyClass(java.lang.String,java.lang.String[],java.lang.ClassLoader)\u003e","javadoc":"/** \n * Provides the implementation for {@link RMIClassLoader#loadProxyClass(String,String[],ClassLoader)}. Loads a dynamic proxy class (see  {@link java.lang.reflect.Proxy}that implements a set of interfaces with the given names from a codebase URL path, optionally using the supplied loader. \u003cp\u003eAn implementation of this method must either return a proxy class that implements the named interfaces or throw an exception.\n * @param codebase the list of URLs (space-separated) to loadclasses from, or \u003ccode\u003enull\u003c/code\u003e\n * @param interfaces the names of the interfaces for the proxy classto implement\n * @return  a dynamic proxy class that implements the named interfaces\n * @param defaultLoader additional contextual class loaderto use, or \u003ccode\u003enull\u003c/code\u003e\n * @throws MalformedURLException if \u003ccode\u003ecodebase\u003c/code\u003e isnon-\u003ccode\u003enull\u003c/code\u003e and contains an invalid URL, or if \u003ccode\u003ecodebase\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e and a provider-specific URL used to load classes is invalid\n * @throws ClassNotFoundException if a definition for one ofthe named interfaces could not be found at the specified location, or if creation of the dynamic proxy class failed (such as if {@link java.lang.reflect.Proxy#getProxyClass(ClassLoader,Class[])}would throw an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e for the given interface list)\n */\n","tf":{"freq":{"creation":1,"iclass":1,"one":1,"link":3,"lexcept":1,"use":3,"loaderto":1,"space":1,"lang":2,"codebas":4,"must":1,"specifi":1,"fail":1,"invalid":2,"given":2,"ofth":1,"name":5,"contextu":1,"path":1,"isnon":1,"dynam":3,"option":1,"loadclass":1,"argument":1,"addit":1,"locat":1,"except":3,"proxi":10,"loader":5,"suppli":1,"list":2,"classto":1,"illeg":1,"provid":2,"specif":1,"malform":1,"either":1,"separ":1,"definit":1,"contain":1,"string":2,"java":2,"load":4,"method":1,"reflect":2,"found":2},"maxFreq":10,"totalTerms":86},"loc":0}