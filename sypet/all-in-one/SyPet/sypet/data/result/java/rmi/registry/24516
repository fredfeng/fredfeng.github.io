{"id":24516,"className":"java.rmi.registry.LocateRegistry","methodName":"getRegistry","signature":"\u003cjava.rmi.registry.LocateRegistry: java.rmi.registry.Registry getRegistry(java.lang.String,int,java.rmi.server.RMIClientSocketFactory)\u003e","javadoc":"/** \n * Returns a locally created remote reference to the remote object \u003ccode\u003eRegistry\u003c/code\u003e on the specified \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eport\u003c/code\u003e.  Communication with this remote registry will use the supplied \u003ccode\u003eRMIClientSocketFactory\u003c/code\u003e \u003ccode\u003ecsf\u003c/code\u003e to create \u003ccode\u003eSocket\u003c/code\u003e connections to the registry on the remote \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eport\u003c/code\u003e.\n * @param host host for the remote registry\n * @param port port on which the registry accepts requests\n * @param csf  client-side \u003ccode\u003eSocket\u003c/code\u003e factory used tomake connections to the registry.  If \u003ccode\u003ecsf\u003c/code\u003e is null, then the default client-side \u003ccode\u003eSocket\u003c/code\u003e factory will be used in the registry stub.\n * @return reference (a stub) to the remote registry\n * @exception RemoteException if the reference could not be created\n * @since 1.2\n */\n","tf":{"freq":{"port":4,"except":2,"host":4,"client":2,"connect":2,"creat":3,"stub":2,"accept":1,"use":3,"suppli":1,"registri":9,"object":1,"specifi":1,"iclient":1,"csf":3,"communic":1,"tomak":1,"side":2,"refer":3,"factori":3,"remot":7,"request":1,"will":2,"socket":4,"local":1},"maxFreq":9,"totalTerms":64},"loc":37}