{"id":24499,"className":"java.rmi.server.RemoteRef","methodName":"done","signature":"\u003cjava.rmi.server.RemoteRef: void done(java.rmi.server.RemoteCall)\u003e","javadoc":"/** \n * Allows the remote reference to clean up (or reuse) the connection. Done should only be called if the invoke returns successfully (non-exceptionally) to the stub.\n * @since JDK1.1\n * @deprecated 1.2 style stubs no longer use this method. Instead ofusing a sequence of method calls to the remote reference (\u003ccode\u003enewCall\u003c/code\u003e, \u003ccode\u003einvoke\u003c/code\u003e, and \u003ccode\u003edone\u003c/code\u003e), a stub uses a single method, \u003ccode\u003einvoke(Remote, Method, Object[], int)\u003c/code\u003e, on the remote reference to carry out parameter marshalling, remote method executing and unmarshalling of the return value.\n * @param call object representing remote call\n * @throws RemoteException if remote error occurs during call cleanup\n * @see #invoke(Remote,java.lang.reflect.Method,Object[],long)\n */\n","tf":{"freq":{"cleanup":1,"call":6,"deprec":1,"connect":1,"allow":1,"singl":1,"use":2,"object":3,"carri":1,"lang":1,"unmarshal":1,"reus":1,"clean":1,"style":1,"refer":3,"sequenc":1,"longer":1,"valu":1,"marshal":1,"except":2,"error":1,"repres":1,"invok":4,"stub":3,"done":3,"paramet":1,"ofus":1,"non":1,"remot":9,"instead":1,"java":1,"method":6,"execut":1,"success":1,"reflect":1,"occur":1},"maxFreq":9,"totalTerms":67},"loc":0}