{"id":24344,"className":"java.rmi.activation.ActivationGroup","methodName":"setSystem","signature":"\u003cjava.rmi.activation.ActivationGroup: void setSystem(java.rmi.activation.ActivationSystem)\u003e","javadoc":"/** \n * Set the activation system for the VM.  The activation system can only be set it if no group is currently active. If the activation system is not set via this call, then the \u003ccode\u003egetSystem\u003c/code\u003e method attempts to obtain a reference to the \u003ccode\u003eActivationSystem\u003c/code\u003e by looking up the name \"java.rmi.activation.ActivationSystem\" in the Activator\u0027s registry. By default, the port number used to look up the activation system is defined by \u003ccode\u003eActivationSystem.SYSTEM_PORT\u003c/code\u003e. This port can be overridden by setting the property \u003ccode\u003ejava.rmi.activation.port\u003c/code\u003e. \u003cp\u003eIf there is a security manager, this method first calls the security manager\u0027s \u003ccode\u003echeckSetFactory\u003c/code\u003e method. This could result in a SecurityException.\n * @param system remote reference to the \u003ccode\u003eActivationSystem\u003c/code\u003e\n * @exception ActivationException if activation system is already set\n * @exception SecurityException if permission to set the activation system is denied.(Note: The default implementation of the security manager \u003ccode\u003echeckSetFactory\u003c/code\u003e method requires the RuntimePermission \"setFactory\")\n * @see #getSystem\n * @see SecurityManager#checkSetFactory\n * @since 1.2\n */\n","tf":{"freq":{"attempt":1,"port":3,"result":1,"call":2,"defin":1,"via":1,"overridden":1,"use":1,"activ":15,"requir":1,"refer":2,"factori":4,"name":1,"permiss":2,"current":1,"note":1,"deni":1,"look":2,"except":5,"check":3,"manag":4,"runtim":1,"registri":1,"number":1,"obtain":1,"system":14,"secur":6,"remot":1,"alreadi":1,"method":4,"java":2,"properti":1,"group":1,"first":1,"rmi":2},"maxFreq":15,"totalTerms":90},"loc":10}