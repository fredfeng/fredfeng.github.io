{"id":11055,"className":"java.io.ObjectInputStream","methodName":"ObjectInputStream","signature":"\u003cjava.io.ObjectInputStream: void ObjectInputStream(java.io.InputStream)\u003e","javadoc":"/** \n * Creates an ObjectInputStream that reads from the specified InputStream. A serialization stream header is read from the stream and verified. This constructor will block until the corresponding ObjectOutputStream has written and flushed the header. \u003cp\u003eIf a security manager is installed, this constructor will check for the \"enableSubclassImplementation\" SerializablePermission when invoked directly or indirectly by the constructor of a subclass which overrides the ObjectInputStream.readFields or ObjectInputStream.readUnshared methods.\n * @param in input stream to read from\n * @throws StreamCorruptedException if the stream header is incorrect\n * @throws IOException if an I/O error occurs while reading stream header\n * @throws SecurityException if untrusted subclass illegally overridessecurity-sensitive methods\n * @throws NullPointerException if \u003ccode\u003ein\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @see ObjectInputStream#ObjectInputStream()\n * @see ObjectInputStream#readFields()\n * @see ObjectOutputStream#ObjectOutputStream(OutputStream)\n */\n","tf":{"freq":{"stream":18,"correspond":1,"serializ":1,"block":1,"object":10,"corrupt":1,"specifi":1,"indirect":1,"verifi":1,"written":1,"permiss":1,"read":7,"incorrect":1,"constructor":3,"direct":1,"sensit":1,"except":4,"error":1,"check":1,"creat":1,"invok":1,"manag":1,"enabl":1,"instal":1,"illeg":1,"header":4,"field":2,"overridessecur":1,"input":9,"flush":1,"secur":2,"will":2,"subclass":3,"pointer":1,"method":2,"output":4,"serial":1,"untrust":1,"unshar":1,"occur":1},"maxFreq":18,"totalTerms":97},"loc":9}