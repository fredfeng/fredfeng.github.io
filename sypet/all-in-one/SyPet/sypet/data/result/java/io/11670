{"id":11670,"className":"java.io.File","methodName":"getCanonicalPath","signature":"\u003cjava.io.File: java.lang.String getCanonicalPath()\u003e","javadoc":"/** \n * Returns the canonical pathname string of this abstract pathname. \u003cp\u003e A canonical pathname is both absolute and unique.  The precise definition of canonical form is system-dependent.  This method first converts this pathname to absolute form if necessary, as if by invoking the {@link #getAbsolutePath} method, and then maps it to its unique form in asystem-dependent way.  This typically involves removing redundant names such as \u003ctt\u003e\".\"\u003c/tt\u003e and \u003ctt\u003e\"..\"\u003c/tt\u003e from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms). \u003cp\u003e Every pathname that denotes an existing file or directory has a unique canonical form.  Every pathname that denotes a nonexistent file or directory also has a unique canonical form.  The canonical form of the pathname of a nonexistent file or directory may be different from the canonical form of the same pathname after the file or directory is created.  Similarly, the canonical form of the pathname of an existing file or directory may be different from the canonical form of the same pathname after the file or directory is deleted.\n * @return  The canonical pathname string denoting the same file ordirectory as this abstract pathname\n * @throws IOException If an I/O error occurs, which is possible because the construction of the canonical pathname may require filesystem queries\n * @throws SecurityException If a required system property value cannot be accessed, or if a security manager exists and its \u003ccode\u003e {@link java.lang.SecurityManager#checkRead}\u003c/code\u003e method denies read access to the file\n * @since   JDK1.1\n * @see Path#toRealPath\n */\n","tf":{"freq":{"possibl":1,"necessari":1,"uniqu":4,"requir":2,"drive":1,"file":8,"precis":1,"everi":2,"deni":1,"platform":2,"pathnam":14,"except":2,"form":9,"symbol":1,"letter":1,"nonexist":2,"creat":1,"invok":1,"remov":1,"resolv":1,"involv":1,"absolut":3,"queri":1,"system":2,"window":1,"definit":1,"properti":1,"canon":12,"directori":6,"delet":1,"link":3,"redund":1,"typic":1,"denot":3,"way":1,"convert":2,"lang":1,"microsoft":1,"ordirectori":1,"real":1,"name":1,"map":1,"path":4,"read":2,"valu":1,"exist":3,"similar":1,"may":3,"check":1,"standard":1,"error":1,"manag":2,"depend":2,"access":2,"differ":2,"asystem":1,"secur":3,"string":2,"java":1,"method":3,"construct":1,"first":1,"also":1,"filesystem":1,"occur":1},"maxFreq":14,"totalTerms":142},"loc":3}