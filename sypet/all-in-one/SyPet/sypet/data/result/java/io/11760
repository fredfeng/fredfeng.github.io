{"id":11760,"className":"java.io.DataInputStream","methodName":"readUTF","signature":"\u003cjava.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)\u003e","javadoc":"/** \n * Reads from the stream \u003ccode\u003ein\u003c/code\u003e a representation of a Unicode  character string encoded in \u003ca href\u003d\"DataInput.html#modified-utf-8\"\u003emodified UTF-8\u003c/a\u003e format; this string of characters is then returned as a \u003ccode\u003eString\u003c/code\u003e. The details of the modified UTF-8 representation are  exactly the same as for the \u003ccode\u003ereadUTF\u003c/code\u003e method of \u003ccode\u003eDataInput\u003c/code\u003e.\n * @param in   a data input stream.\n * @return     a Unicode string.\n * @exception EOFException            if the input stream reaches the endbefore all the bytes.\n * @exception IOException   the stream has been closed and the containedinput stream does not support reading after close, or another I/O error occurs.\n * @exception UTFDataFormatException  if the bytes do not represent avalid modified UTF-8 encoding of a Unicode string.\n * @see java.io.DataInputStream#readUnsignedShort()\n */\n","tf":{"freq":{"stream":6,"detail":1,"data":4,"anoth":1,"close":2,"reach":1,"avalid":1,"exact":1,"read":5,"href":1,"except":5,"support":1,"error":1,"repres":1,"charact":2,"utf":1,"format":2,"fexcept":1,"represent":2,"containedinput":1,"input":5,"encod":2,"fdata":1,"unsign":1,"string":5,"modifi":4,"unicod":3,"java":1,"html":1,"method":1,"endbefor":1,"occur":1},"maxFreq":6,"totalTerms":66},"loc":75}