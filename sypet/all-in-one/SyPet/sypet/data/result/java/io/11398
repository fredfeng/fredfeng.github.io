{"id":11398,"className":"java.io.RandomAccessFile","methodName":"readInt","signature":"\u003cjava.io.RandomAccessFile: int readInt()\u003e","javadoc":"/** \n * Reads a signed 32-bit integer from this file. This method reads 4 bytes from the file, starting at the current file pointer. If the bytes read, in order, are \u003ccode\u003eb1\u003c/code\u003e, \u003ccode\u003eb2\u003c/code\u003e, \u003ccode\u003eb3\u003c/code\u003e, and \u003ccode\u003eb4\u003c/code\u003e, where \u003ccode\u003e0\u0026nbsp;\u0026lt;\u003d\u0026nbsp;b1, b2, b3, b4\u0026nbsp;\u0026lt;\u003d\u0026nbsp;255\u003c/code\u003e, then the result is equal to: \u003cblockquote\u003e\u003cpre\u003e (b1 \u0026lt;\u0026lt; 24) | (b2 \u0026lt;\u0026lt; 16) + (b3 \u0026lt;\u0026lt; 8) + b4 \u003c/pre\u003e\u003c/blockquote\u003e \u003cp\u003e This method blocks until the four bytes are read, the end of the stream is detected, or an exception is thrown.\n * @return     the next four bytes of this file, interpreted as an\u003ccode\u003eint\u003c/code\u003e.\n * @exception EOFException  if this file reaches the end before readingfour bytes.\n * @exception IOException   if an I/O error occurs.\n */\n","tf":{"freq":{"result":1,"stream":1,"next":1,"interpret":1,"block":1,"reach":1,"order":1,"file":5,"blockquot":2,"current":1,"read":5,"four":2,"end":2,"nbsp":4,"detect":1,"except":4,"thrown":1,"error":1,"equal":1,"fexcept":1,"readingfour":1,"sign":1,"bit":1,"start":1,"pre":2,"pointer":1,"method":2,"integ":1,"occur":1},"maxFreq":5,"totalTerms":48},"loc":9}