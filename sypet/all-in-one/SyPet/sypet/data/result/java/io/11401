{"id":11401,"className":"java.io.RandomAccessFile","methodName":"readDouble","signature":"\u003cjava.io.RandomAccessFile: double readDouble()\u003e","javadoc":"/** \n * Reads a \u003ccode\u003edouble\u003c/code\u003e from this file. This method reads a \u003ccode\u003elong\u003c/code\u003e value, starting at the current file pointer, as if by the \u003ccode\u003ereadLong\u003c/code\u003e method and then converts that \u003ccode\u003elong\u003c/code\u003e to a \u003ccode\u003edouble\u003c/code\u003e using the \u003ccode\u003elongBitsToDouble\u003c/code\u003e method in class \u003ccode\u003eDouble\u003c/code\u003e. \u003cp\u003e This method blocks until the eight bytes are read, the end of the stream is detected, or an exception is thrown.\n * @return     the next eight bytes of this file, interpreted as a\u003ccode\u003edouble\u003c/code\u003e.\n * @exception EOFException  if this file reaches the end before readingeight bytes.\n * @exception IOException   if an I/O error occurs.\n * @see java.io.RandomAccessFile#readLong()\n * @see java.lang.Double#longBitsToDouble(long)\n */\n","tf":{"freq":{"stream":1,"next":1,"interpret":1,"block":1,"use":1,"convert":1,"readingeight":1,"lang":1,"eight":2,"reach":1,"file":5,"current":1,"read":6,"valu":1,"end":2,"detect":1,"except":4,"thrown":1,"error":1,"random":1,"access":1,"fexcept":1,"bit":2,"start":1,"pointer":1,"java":2,"method":4,"occur":1},"maxFreq":6,"totalTerms":47},"loc":3}