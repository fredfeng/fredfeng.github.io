{"id":11519,"className":"java.io.StringReader","methodName":"mark","signature":"\u003cjava.io.StringReader: void mark(int)\u003e","javadoc":"/** \n * Marks the present position in the stream.  Subsequent calls to reset() will reposition the stream to this point.\n * @param readAheadLimit  Limit on the number of characters that may beread while still preserving the mark.  Because the stream\u0027s input comes from a string, there is no actual limit, so this argument must not be negative, but is otherwise ignored.\n * @exception IllegalArgumentException  If readAheadLimit is \u003c 0\n * @exception IOException  If an I/O error occurs\n */\n","tf":{"freq":{"otherwis":1,"call":1,"stream":3,"must":1,"read":2,"reset":1,"subsequ":1,"reposit":1,"limit":4,"argument":2,"except":4,"ignor":1,"may":1,"error":1,"charact":1,"ahead":2,"preserv":1,"come":1,"mark":3,"number":1,"beread":1,"still":1,"illeg":1,"point":1,"present":1,"input":1,"string":1,"will":1,"actual":1,"negat":1,"posit":1,"occur":1},"maxFreq":4,"totalTerms":45},"loc":9}