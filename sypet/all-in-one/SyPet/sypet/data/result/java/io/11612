{"id":11612,"className":"java.io.PrintStream","methodName":"append","signature":"\u003cjava.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence)\u003e","javadoc":"/** \n * Appends the specified character sequence to this output stream. \u003cp\u003e An invocation of this method of the form \u003ctt\u003eout.append(csq)\u003c/tt\u003e behaves in exactly the same way as the invocation \u003cpre\u003e out.print(csq.toString()) \u003c/pre\u003e \u003cp\u003e Depending on the specification of \u003ctt\u003etoString\u003c/tt\u003e for the character sequence \u003ctt\u003ecsq\u003c/tt\u003e, the entire sequence may not be appended.  For instance, invoking then \u003ctt\u003etoString\u003c/tt\u003e method of a character buffer will return a subsequence whose content depends upon the buffer\u0027s position and limit.\n * @param csq The character sequence to append.  If \u003ctt\u003ecsq\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e, then the four characters \u003ctt\u003e\"null\"\u003c/tt\u003e are appended to this output stream.\n * @return  This output stream\n * @since  1.5\n */\n","tf":{"freq":{"stream":3,"behav":1,"way":1,"specifi":1,"buffer":2,"sequenc":4,"exact":1,"four":1,"subsequ":1,"limit":1,"append":6,"may":1,"form":1,"whose":1,"charact":5,"depend":2,"invok":1,"invoc":2,"print":1,"instanc":1,"content":1,"specif":1,"pre":2,"string":3,"will":1,"method":2,"csq":5,"output":3,"posit":1,"entir":1,"upon":1},"maxFreq":6,"totalTerms":58},"loc":7}