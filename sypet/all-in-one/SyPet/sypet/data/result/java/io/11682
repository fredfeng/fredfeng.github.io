{"id":11682,"className":"java.io.File","methodName":"createNewFile","signature":"\u003cjava.io.File: boolean createNewFile()\u003e","javadoc":"/** \n * Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist.  The check for the existence of the file and the creation of the file if it does not exist are a single operation that is atomic with respect to all other filesystem activities that might affect the file. \u003cP\u003e Note: this method should \u003ci\u003enot\u003c/i\u003e be used for file-locking, as the resulting protocol cannot be made to work reliably. The {@link java.nio.channels.FileLock FileLock}facility should be used instead.\n * @return  \u003ccode\u003etrue\u003c/code\u003e if the named file does not exist and wassuccessfully created; \u003ccode\u003efalse\u003c/code\u003e if the named file already exists\n * @throws IOException If an I/O error occurred\n * @throws SecurityException If a security manager exists and its \u003ccode\u003e {@link java.lang.SecurityManager#checkWrite(java.lang.String)}\u003c/code\u003e method denies write access to the file\n * @since 1.2\n */\n","tf":{"freq":{"fals":1,"creation":1,"atom":2,"might":1,"result":1,"singl":1,"link":2,"made":1,"use":2,"activ":1,"lang":2,"affect":1,"oper":1,"file":12,"name":4,"write":2,"exist":6,"deni":1,"note":1,"facil":1,"work":1,"except":2,"pathnam":1,"protocol":1,"error":1,"check":2,"creat":3,"manag":2,"lock":3,"true":1,"access":1,"empti":1,"secur":3,"reliabl":1,"string":1,"instead":1,"wassuccess":1,"alreadi":1,"nio":1,"java":3,"method":2,"channel":1,"respect":1,"filesystem":1,"occur":1,"yet":1},"maxFreq":12,"totalTerms":82},"loc":5}