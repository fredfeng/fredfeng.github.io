{"id":11494,"className":"java.io.Writer","methodName":"append","signature":"\u003cjava.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)\u003e","javadoc":"/** \n * Appends a subsequence of the specified character sequence to this writer. \u003ctt\u003eAppendable\u003c/tt\u003e. \u003cp\u003e An invocation of this method of the form \u003ctt\u003eout.append(csq, start, end)\u003c/tt\u003e when \u003ctt\u003ecsq\u003c/tt\u003e is not \u003ctt\u003enull\u003c/tt\u003e behaves in exactly the same way as the invocation \u003cpre\u003e out.write(csq.subSequence(start, end).toString()) \u003c/pre\u003e\n * @param csq The character sequence from which a subsequence will be appended.  If \u003ctt\u003ecsq\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e, then characters will be appended as if \u003ctt\u003ecsq\u003c/tt\u003e contained the four characters \u003ctt\u003e\"null\"\u003c/tt\u003e.\n * @param start The index of the first character in the subsequence\n * @param end The index of the character following the last character in the subsequence\n * @return  This writer\n * @throws IndexOutOfBoundsException If \u003ctt\u003estart\u003c/tt\u003e or \u003ctt\u003eend\u003c/tt\u003e are negative, \u003ctt\u003estart\u003c/tt\u003e is greater than \u003ctt\u003eend\u003c/tt\u003e, or \u003ctt\u003eend\u003c/tt\u003e is greater than \u003ctt\u003ecsq.length()\u003c/tt\u003e\n * @throws IOException If an I/O error occurs\n * @since  1.5\n */\n","tf":{"freq":{"sub":1,"greater":2,"last":1,"behav":1,"way":1,"specifi":1,"sequenc":3,"exact":1,"length":1,"write":1,"four":1,"writer":2,"subsequ":4,"end":6,"follow":1,"append":6,"except":2,"index":3,"error":1,"form":1,"charact":7,"invoc":2,"start":5,"pre":2,"string":1,"contain":1,"will":2,"negat":1,"method":1,"csq":7,"first":1,"bound":1,"occur":1},"maxFreq":7,"totalTerms":72},"loc":5}