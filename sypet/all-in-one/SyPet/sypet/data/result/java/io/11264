{"id":11264,"className":"java.io.BufferedInputStream","methodName":"read","signature":"\u003cjava.io.BufferedInputStream: int read(byte[],int,int)\u003e","javadoc":"/** \n * Reads bytes from this byte-input stream into the specified byte array, starting at the given offset. \u003cp\u003e This method implements the general contract of the corresponding \u003ccode\u003e {@link InputStream#read(byte[],int,int) read}\u003c/code\u003e method of the \u003ccode\u003e {@link InputStream}\u003c/code\u003e class.  As an additional convenience, it attempts to read as many bytes as possible by repeatedly invoking the \u003ccode\u003eread\u003c/code\u003e method of the underlying stream.  This iterated \u003ccode\u003eread\u003c/code\u003e continues until one of the following conditions becomes true: \u003cul\u003e \u003cli\u003e The specified number of bytes have been read, \u003cli\u003e The \u003ccode\u003eread\u003c/code\u003e method of the underlying stream returns \u003ccode\u003e-1\u003c/code\u003e, indicating end-of-file, or \u003cli\u003e The \u003ccode\u003eavailable\u003c/code\u003e method of the underlying stream returns zero, indicating that further input requests would block. \u003c/ul\u003e If the first \u003ccode\u003eread\u003c/code\u003e on the underlying stream returns \u003ccode\u003e-1\u003c/code\u003e to indicate end-of-file then this method returns \u003ccode\u003e-1\u003c/code\u003e.  Otherwise this method returns the number of bytes actually read. \u003cp\u003e Subclasses of this class are encouraged, but not required, to attempt to read as many bytes as possible in the same fashion.\n * @param b     destination buffer.\n * @param off   offset at which to start storing bytes.\n * @param len   maximum number of bytes to read.\n * @return     the number of bytes read, or \u003ccode\u003e-1\u003c/code\u003e if the end ofthe stream has been reached.\n * @exception IOException  if this input stream has been closed byinvoking its  {@link #close()} method,or an I/O error occurs.\n */\n","tf":{"freq":{"store":1,"possibl":2,"zero":1,"close":2,"specifi":2,"buffer":1,"becom":1,"requir":1,"given":1,"file":2,"request":1,"encourag":1,"follow":1,"mani":2,"except":2,"contract":1,"invok":1,"number":4,"avail":1,"continu":1,"input":5,"start":2,"maximum":1,"subclass":1,"array":1,"attempt":2,"otherwis":1,"stream":9,"fashion":1,"byinvok":1,"correspond":1,"one":1,"link":3,"block":1,"repeat":1,"reach":1,"indic":3,"ofth":1,"read":14,"offset":2,"conveni":1,"end":3,"condit":1,"addit":1,"error":1,"true":1,"len":1,"general":1,"actual":1,"method":8,"iter":1,"first":1,"occur":1,"destin":1},"maxFreq":14,"totalTerms":104},"loc":22}