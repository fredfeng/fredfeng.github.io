{"id":11790,"className":"java.io.OutputStream","methodName":"write","signature":"\u003cjava.io.OutputStream: void write(byte[],int,int)\u003e","javadoc":"/** \n * Writes \u003ccode\u003elen\u003c/code\u003e bytes from the specified byte array starting at offset \u003ccode\u003eoff\u003c/code\u003e to this output stream. The general contract for \u003ccode\u003ewrite(b, off, len)\u003c/code\u003e is that some of the bytes in the array \u003ccode\u003eb\u003c/code\u003e are written to the output stream in order; element \u003ccode\u003eb[off]\u003c/code\u003e is the first byte written and \u003ccode\u003eb[off+len-1]\u003c/code\u003e is the last byte written by this operation. \u003cp\u003e The \u003ccode\u003ewrite\u003c/code\u003e method of \u003ccode\u003eOutputStream\u003c/code\u003e calls the write method of one argument on each of the bytes to be written out. Subclasses are encouraged to override this method and provide a more efficient implementation. \u003cp\u003e If \u003ccode\u003eb\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, a \u003ccode\u003eNullPointerException\u003c/code\u003e is thrown. \u003cp\u003e If \u003ccode\u003eoff\u003c/code\u003e is negative, or \u003ccode\u003elen\u003c/code\u003e is negative, or \u003ccode\u003eoff+len\u003c/code\u003e is greater than the length of the array \u003ccode\u003eb\u003c/code\u003e, then an \u003ctt\u003eIndexOutOfBoundsException\u003c/tt\u003e is thrown.\n * @param b     the data.\n * @param off   the start offset in the data.\n * @param len   the number of bytes to write.\n * @exception IOException  if an I/O error occurs. In particular,an \u003ccode\u003eIOException\u003c/code\u003e is thrown if the output stream is closed.\n */\n","tf":{"freq":{"call":1,"stream":4,"greater":1,"last":1,"one":1,"data":2,"particular":1,"close":1,"specifi":1,"order":1,"oper":1,"written":4,"encourag":1,"length":1,"write":6,"effici":1,"offset":2,"argument":1,"element":1,"index":1,"thrown":3,"except":5,"error":1,"contract":1,"number":1,"len":6,"provid":1,"general":1,"start":2,"subclass":1,"pointer":1,"negat":2,"method":3,"output":4,"first":1,"bound":1,"occur":1,"array":3},"maxFreq":6,"totalTerms":71},"loc":13}