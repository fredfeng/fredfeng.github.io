{"id":11688,"className":"java.io.File","methodName":"listFiles","signature":"\u003cjava.io.File: java.io.File[] listFiles(java.io.FilenameFilter)\u003e","javadoc":"/** \n * Returns an array of abstract pathnames denoting the files and directories in the directory denoted by this abstract pathname that satisfy the specified filter.  The behavior of this method is the same as that of the  {@link #listFiles()} method, except that the pathnames inthe returned array must satisfy the filter.  If the given  {@code filter}is  {@code null} then all pathnames are accepted.  Otherwise, a pathnamesatisfies the filter if and only if the value  {@code true} results whenthe  {@link FilenameFilter#accept FilenameFilter.accept(File,\u0026nbsp;String)} method of the filter isinvoked on this abstract pathname and the name of a file or directory in the directory that it denotes.\n * @param filter A filename filter\n * @return  An array of abstract pathnames denoting the files anddirectories in the directory denoted by this abstract pathname. The array will be empty if the directory is empty.  Returns {@code null} if this abstract pathname does not denote adirectory, or if an I/O error occurs.\n * @throws SecurityException If a security manager exists and its  {@link SecurityManager#checkRead(String)} method denies read access tothe directory\n * @since  1.2\n * @see java.nio.file.Files#newDirectoryStream(Path,String)\n */\n","tf":{"freq":{"otherwis":1,"result":1,"stream":1,"whenth":1,"directori":8,"behavior":1,"accept":3,"link":3,"denot":6,"toth":1,"pathnamesatisfi":1,"must":1,"specifi":1,"inth":1,"given":1,"file":8,"name":1,"path":1,"read":2,"valu":1,"exist":1,"deni":1,"nbsp":1,"adirectori":1,"pathnam":8,"except":2,"check":1,"error":1,"manag":2,"isinvok":1,"filenam":3,"true":1,"list":2,"access":1,"empti":2,"secur":3,"anddirectori":1,"string":3,"satisfi":2,"will":1,"nio":1,"java":1,"method":4,"filter":9,"occur":1,"array":4},"maxFreq":9,"totalTerms":102},"loc":9}