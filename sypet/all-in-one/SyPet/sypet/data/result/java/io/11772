{"id":11772,"className":"java.io.StreamTokenizer","methodName":"parseNumbers","signature":"\u003cjava.io.StreamTokenizer: void parseNumbers()\u003e","javadoc":"/** \n * Specifies that numbers should be parsed by this tokenizer. The syntax table of this tokenizer is modified so that each of the twelve characters: \u003cblockquote\u003e\u003cpre\u003e 0 1 2 3 4 5 6 7 8 9 . - \u003c/pre\u003e\u003c/blockquote\u003e \u003cp\u003e has the \"numeric\" attribute. \u003cp\u003e When the parser encounters a word token that has the format of a double precision floating-point number, it treats the token as a number rather than a word, by setting the \u003ccode\u003ettype\u003c/code\u003e field to the value \u003ccode\u003eTT_NUMBER\u003c/code\u003e and putting the numeric value of the token into the \u003ccode\u003enval\u003c/code\u003e field.\n * @see java.io.StreamTokenizer#nval\n * @see java.io.StreamTokenizer#TT_NUMBER\n * @see java.io.StreamTokenizer#ttype\n */\n","tf":{"freq":{"stream":3,"put":1,"nval":2,"specifi":1,"attribut":1,"token":8,"blockquot":2,"precis":1,"rather":1,"valu":2,"numer":2,"charact":1,"ttype":2,"number":4,"format":1,"field":2,"point":1,"syntax":1,"twelv":1,"pre":2,"tabl":1,"encount":1,"modifi":1,"java":3,"word":2,"pars":2,"parser":1,"treat":1},"maxFreq":8,"totalTerms":51},"loc":6}