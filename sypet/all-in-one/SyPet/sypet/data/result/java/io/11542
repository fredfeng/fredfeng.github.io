{"id":11542,"className":"java.io.DataInput","methodName":"readUTF","signature":"\u003cjava.io.DataInput: java.lang.String readUTF()\u003e","javadoc":"/** \n * Reads in a string that has been encoded using a \u003ca href\u003d\"#modified-utf-8\"\u003emodified UTF-8\u003c/a\u003e format. The general contract of \u003ccode\u003ereadUTF\u003c/code\u003e is that it reads a representation of a Unicode character string encoded in modified UTF-8 format; this string of characters is then returned as a \u003ccode\u003eString\u003c/code\u003e. \u003cp\u003e First, two bytes are read and used to construct an unsigned 16-bit integer in exactly the manner of the \u003ccode\u003ereadUnsignedShort\u003c/code\u003e method . This integer value is called the \u003ci\u003eUTF length\u003c/i\u003e and specifies the number of additional bytes to be read. These bytes are then converted to characters by considering them in groups. The length of each group is computed from the value of the first byte of the group. The byte following a group, if any, is the first byte of the next group. \u003cp\u003e If the first byte of a group matches the bit pattern \u003ccode\u003e0xxxxxxx\u003c/code\u003e (where \u003ccode\u003ex\u003c/code\u003e means \"may be \u003ccode\u003e0\u003c/code\u003e or \u003ccode\u003e1\u003c/code\u003e\"), then the group consists of just that byte. The byte is zero-extended to form a character. \u003cp\u003e If the first byte of a group matches the bit pattern \u003ccode\u003e110xxxxx\u003c/code\u003e, then the group consists of that byte \u003ccode\u003ea\u003c/code\u003e and a second byte \u003ccode\u003eb\u003c/code\u003e. If there is no byte \u003ccode\u003eb\u003c/code\u003e (because byte \u003ccode\u003ea\u003c/code\u003e was the last of the bytes to be read), or if byte \u003ccode\u003eb\u003c/code\u003e does not match the bit pattern \u003ccode\u003e10xxxxxx\u003c/code\u003e, then a \u003ccode\u003eUTFDataFormatException\u003c/code\u003e is thrown. Otherwise, the group is converted to the character:\u003cp\u003e \u003cpre\u003e\u003ccode\u003e(char)(((a\u0026amp; 0x1F) \u0026lt;\u0026lt; 6) | (b \u0026amp; 0x3F)) \u003c/code\u003e\u003c/pre\u003e If the first byte of a group matches the bit pattern \u003ccode\u003e1110xxxx\u003c/code\u003e, then the group consists of that byte \u003ccode\u003ea\u003c/code\u003e and two more bytes \u003ccode\u003eb\u003c/code\u003e and \u003ccode\u003ec\u003c/code\u003e. If there is no byte \u003ccode\u003ec\u003c/code\u003e (because byte \u003ccode\u003ea\u003c/code\u003e was one of the last two of the bytes to be read), or either byte \u003ccode\u003eb\u003c/code\u003e or byte \u003ccode\u003ec\u003c/code\u003e does not match the bit pattern \u003ccode\u003e10xxxxxx\u003c/code\u003e, then a \u003ccode\u003eUTFDataFormatException\u003c/code\u003e is thrown. Otherwise, the group is converted to the character:\u003cp\u003e \u003cpre\u003e\u003ccode\u003e (char)(((a \u0026amp; 0x0F) \u0026lt;\u0026lt; 12) | ((b \u0026amp; 0x3F) \u0026lt;\u0026lt; 6) | (c \u0026amp; 0x3F)) \u003c/code\u003e\u003c/pre\u003e If the first byte of a group matches the pattern \u003ccode\u003e1111xxxx\u003c/code\u003e or the pattern \u003ccode\u003e10xxxxxx\u003c/code\u003e, then a \u003ccode\u003eUTFDataFormatException\u003c/code\u003e is thrown. \u003cp\u003e If end of file is encountered at any time during this entire process, then an \u003ccode\u003eEOFException\u003c/code\u003e is thrown. \u003cp\u003e After every group has been converted to a character by this process, the characters are gathered, in the same order in which their corresponding groups were read from the input stream, to form a \u003ccode\u003eString\u003c/code\u003e, which is returned. \u003cp\u003e The \u003ccode\u003ewriteUTF\u003c/code\u003e method of interface \u003ccode\u003eDataOutput\u003c/code\u003e may be used to write data that is suitable for reading by this method.\n * @return     a Unicode string.\n * @exception EOFException            if this stream reaches the endbefore reading all the bytes.\n * @exception IOException             if an I/O error occurs.\n * @exception UTFDataFormatException  if the bytes do not represent avalid modified UTF-8 encoding of a string.\n */\n","tf":{"freq":{"second":1,"last":2,"suitabl":1,"zero":1,"specifi":1,"time":1,"gather":1,"file":1,"exact":1,"everi":1,"href":1,"follow":1,"xxxxxx":3,"thrown":4,"except":8,"form":2,"charact":8,"contract":1,"consist":3,"number":1,"format":6,"bit":6,"input":1,"encod":3,"fdata":4,"unsign":2,"comput":1,"match":6,"output":1,"entir":1,"amp":5,"otherwis":2,"call":1,"stream":2,"correspond":1,"one":1,"next":1,"data":2,"use":3,"convert":4,"consid":1,"xxxxx":1,"reach":1,"avalid":1,"order":1,"write":2,"length":2,"read":12,"mean":1,"valu":2,"end":1,"just":1,"addit":1,"xxxxxxx":1,"may":2,"error":1,"repres":1,"xxxx":2,"utf":1,"fexcept":2,"general":1,"represent":1,"process":2,"two":3,"either":1,"pattern":7,"encount":1,"pre":4,"string":7,"modifi":4,"unicod":2,"method":3,"manner":1,"construct":1,"group":16,"integ":2,"first":7,"endbefor":1,"occur":1},"maxFreq":16,"totalTerms":198},"loc":0}