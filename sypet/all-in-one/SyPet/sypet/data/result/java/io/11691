{"id":11691,"className":"java.io.File","methodName":"mkdirs","signature":"\u003cjava.io.File: boolean mkdirs()\u003e","javadoc":"/** \n * Creates the directory named by this abstract pathname, including any necessary but nonexistent parent directories.  Note that if this operation fails it may have succeeded in creating some of the necessary parent directories.\n * @return  \u003ccode\u003etrue\u003c/code\u003e if and only if the directory was created,along with all necessary parent directories; \u003ccode\u003efalse\u003c/code\u003e otherwise\n * @throws SecurityException If a security manager exists and its \u003ccode\u003e {@link java.lang.SecurityManager#checkRead(java.lang.String)}\u003c/code\u003e method does not permit verification of the existence of the named directory and all necessary parent directories; or if the \u003ccode\u003e {@link java.lang.SecurityManager#checkWrite(java.lang.String)}\u003c/code\u003e method does not permit the named directory and all necessary parent directories to be created\n */\n","tf":{"freq":{"verif":1,"fals":1,"otherwis":1,"directori":9,"permit":2,"link":2,"lang":4,"necessari":5,"fail":1,"oper":1,"name":3,"write":1,"read":1,"along":1,"exist":2,"note":1,"pathnam":1,"may":1,"except":1,"includ":1,"succeed":1,"check":2,"nonexist":1,"creat":4,"manag":3,"parent":5,"true":1,"mkdir":1,"secur":4,"string":2,"method":2,"java":4},"maxFreq":9,"totalTerms":70},"loc":18}