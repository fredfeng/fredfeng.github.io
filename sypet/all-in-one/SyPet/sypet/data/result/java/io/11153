{"id":11153,"className":"java.io.PipedOutputStream","methodName":"write","signature":"\u003cjava.io.PipedOutputStream: void write(byte[],int,int)\u003e","javadoc":"/** \n * Writes \u003ccode\u003elen\u003c/code\u003e bytes from the specified byte array starting at offset \u003ccode\u003eoff\u003c/code\u003e to this piped output stream. This method blocks until all the bytes are written to the output stream.\n * @param b     the data.\n * @param off   the start offset in the data.\n * @param len   the number of bytes to write.\n * @exception IOException if the pipe is \u003ca href\u003d#BROKEN\u003e broken\u003c/a\u003e,{@link #connect(java.io.PipedInputStream) unconnected}, closed, or if an I/O error occurs.\n */\n","tf":{"freq":{"unconnect":1,"stream":3,"connect":1,"link":1,"data":2,"block":1,"pipe":3,"specifi":1,"close":1,"written":1,"write":3,"offset":2,"href":1,"except":2,"error":1,"number":1,"len":2,"broken":1,"input":1,"start":2,"method":1,"java":1,"output":2,"occur":1,"array":1},"maxFreq":3,"totalTerms":37},"loc":13}