{"id":11680,"className":"java.io.File","methodName":"lastModified","signature":"\u003cjava.io.File: long lastModified()\u003e","javadoc":"/** \n * Returns the time that the file denoted by this abstract pathname was last modified. \u003cp\u003e Where it is required to distinguish an I/O exception from the case where  {@code 0L} is returned, or where several attributes of thesame file are required at the same time, or where the time of last access or the creation time are required, then the  {@link java.nio.file.Files#readAttributes(Path,Class,LinkOption[]) Files.readAttributes} method may be used.\n * @return  A \u003ccode\u003elong\u003c/code\u003e value representing the time the file waslast modified, measured in milliseconds since the epoch (00:00:00 GMT, January 1, 1970), or \u003ccode\u003e0L\u003c/code\u003e if the file does not exist or if an I/O error occurs\n * @throws SecurityException If a security manager exists and its \u003ccode\u003e {@link java.lang.SecurityManager#checkRead(java.lang.String)}\u003c/code\u003e method denies read access to the file\n */\n","tf":{"freq":{"creation":1,"last":3,"link":3,"denot":1,"use":1,"lang":2,"time":5,"attribut":3,"requir":3,"millisecond":1,"file":8,"waslast":1,"path":1,"read":4,"valu":1,"thesam":1,"exist":2,"deni":1,"option":1,"except":2,"pathnam":1,"may":1,"check":1,"error":1,"januari":1,"repres":1,"manag":2,"epoch":1,"access":2,"sever":1,"secur":3,"string":1,"modifi":3,"distinguish":1,"measur":1,"java":3,"nio":1,"method":2,"occur":1},"maxFreq":8,"totalTerms":73},"loc":7}