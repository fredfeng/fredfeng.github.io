{"id":11220,"className":"java.io.DataOutput","methodName":"writeChars","signature":"\u003cjava.io.DataOutput: void writeChars(java.lang.String)\u003e","javadoc":"/** \n * Writes every character in the string \u003ccode\u003es\u003c/code\u003e, to the output stream, in order, two bytes per character. If \u003ccode\u003es\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, a \u003ccode\u003eNullPointerException\u003c/code\u003e is thrown.  If \u003ccode\u003es.length\u003c/code\u003e is zero, then no characters are written. Otherwise, the character \u003ccode\u003es[0]\u003c/code\u003e is written first, then \u003ccode\u003es[1]\u003c/code\u003e, and so on; the last character written is \u003ccode\u003es[s.length-1]\u003c/code\u003e. For each character, two bytes are actually written, high-order byte first, in exactly the manner of the \u003ccode\u003ewriteChar\u003c/code\u003e method.\n * @param s   the string value to be written.\n * @throws IOException  if an I/O error occurs.\n */\n","tf":{"freq":{"otherwis":1,"stream":1,"last":1,"zero":1,"order":2,"written":5,"exact":1,"write":3,"length":2,"valu":1,"everi":1,"thrown":1,"except":2,"error":1,"charact":6,"two":2,"per":1,"string":2,"pointer":1,"actual":1,"manner":1,"method":1,"high":1,"output":1,"first":2,"occur":1},"maxFreq":6,"totalTerms":43},"loc":0}