{"id":11266,"className":"java.io.BufferedInputStream","methodName":"available","signature":"\u003cjava.io.BufferedInputStream: int available()\u003e","javadoc":"/** \n * Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream. The next invocation might be the same thread or another thread.  A single read or skip of this many bytes will not block, but may read or skip fewer bytes. \u003cp\u003e This method returns the sum of the number of bytes remaining to be read in the buffer (\u003ccode\u003ecount\u0026nbsp;- pos\u003c/code\u003e) and the result of calling the {@link java.io.FilterInputStream#in in}.available().\n * @return     an estimate of the number of bytes that can be read (or skippedover) from this input stream without blocking.\n * @exception IOException  if this input stream has been closed byinvoking its  {@link #close()} method,or an I/O error occurs.\n */\n","tf":{"freq":{"call":1,"result":1,"might":1,"stream":5,"byinvok":1,"count":1,"singl":1,"link":2,"next":2,"block":3,"sum":1,"anoth":1,"skip":3,"close":2,"pos":1,"buffer":1,"estim":2,"thread":2,"read":5,"nbsp":1,"mani":1,"except":2,"may":1,"error":1,"skippedov":1,"number":3,"avail":2,"without":2,"invoc":2,"input":5,"remain":1,"will":1,"fewer":1,"java":1,"method":3,"filter":1,"occur":1},"maxFreq":5,"totalTerms":66},"loc":7}