{"id":11769,"className":"java.io.StreamTokenizer","methodName":"ordinaryChar","signature":"\u003cjava.io.StreamTokenizer: void ordinaryChar(int)\u003e","javadoc":"/** \n * Specifies that the character argument is \"ordinary\" in this tokenizer. It removes any special significance the character has as a comment character, word component, string delimiter, white space, or number character. When such a character is encountered by the parser, the parser treats it as a single-character token and sets \u003ccode\u003ettype\u003c/code\u003e field to the character value. \u003cp\u003eMaking a line terminator character \"ordinary\" may interfere with the ability of a \u003ccode\u003eStreamTokenizer\u003c/code\u003e to count lines. The \u003ccode\u003elineno\u003c/code\u003e method may no longer reflect the presence of such terminator characters in its line count.\n * @param ch   the character.\n * @see java.io.StreamTokenizer#ttype\n */\n","tf":{"freq":{"stream":2,"count":2,"singl":1,"line":3,"space":1,"abil":1,"specifi":1,"ordinari":3,"token":4,"longer":1,"valu":1,"argument":1,"presenc":1,"delimit":1,"may":2,"charact":10,"signific":1,"remov":1,"white":1,"ttype":2,"number":1,"field":1,"termin":2,"compon":1,"lineno":1,"interfer":1,"encount":1,"string":1,"java":1,"method":1,"word":1,"special":1,"comment":1,"parser":2,"make":1,"reflect":1,"treat":1},"maxFreq":10,"totalTerms":59},"loc":4}