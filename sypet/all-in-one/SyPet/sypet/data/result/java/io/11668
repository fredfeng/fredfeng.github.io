{"id":11668,"className":"java.io.File","methodName":"getAbsolutePath","signature":"\u003cjava.io.File: java.lang.String getAbsolutePath()\u003e","javadoc":"/** \n * Returns the absolute pathname string of this abstract pathname. \u003cp\u003e If this abstract pathname is already absolute, then the pathname string is simply returned as if by the \u003ccode\u003e {@link #getPath}\u003c/code\u003e method.  If this abstract pathname is the empty abstract pathname then the pathname string of the current user directory, which is named by the system property \u003ccode\u003euser.dir\u003c/code\u003e, is returned.  Otherwise this pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory.  On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.\n * @return  The absolute pathname string denoting the same file ordirectory as this abstract pathname\n * @throws SecurityException If a required system property value cannot be accessed.\n * @see java.io.File#isAbsolute()\n */\n","tf":{"freq":{"otherwis":1,"simpli":1,"directori":4,"link":1,"denot":1,"made":2,"way":1,"ordirectori":1,"microsoft":1,"requir":1,"dir":1,"file":2,"drive":1,"name":2,"current":4,"path":2,"relat":2,"valu":1,"except":1,"pathnam":13,"depend":1,"resolv":4,"absolut":7,"access":1,"empti":1,"system":5,"secur":1,"window":1,"string":4,"java":1,"method":1,"alreadi":1,"properti":2,"user":4},"maxFreq":13,"totalTerms":77},"loc":3}