{"id":11809,"className":"java.io.ObjectOutputStream","methodName":"writeObject","signature":"\u003cjava.io.ObjectOutputStream: void writeObject(java.lang.Object)\u003e","javadoc":"/** \n * Write the specified object to the ObjectOutputStream.  The class of the object, the signature of the class, and the values of the non-transient and non-static fields of the class and all of its supertypes are written.  Default serialization for a class can be overridden using the writeObject and the readObject methods.  Objects referenced by this object are written transitively so that a complete equivalent graph of objects can be reconstructed by an ObjectInputStream. \u003cp\u003eExceptions are thrown for problems with the OutputStream and for classes that should not be serialized.  All exceptions are fatal to the OutputStream, which is left in an indeterminate state, and it is up to the caller to ignore or recover the stream state.\n * @throws InvalidClassException Something is wrong with a class used byserialization.\n * @throws NotSerializableException Some object to be serialized does notimplement the java.io.Serializable interface.\n * @throws IOException Any exception thrown by the underlyingOutputStream.\n */\n","tf":{"freq":{"caller":1,"byseri":1,"stream":6,"overridden":1,"serializ":2,"state":2,"use":2,"object":11,"notimpl":1,"someth":1,"signatur":1,"transit":1,"specifi":1,"recov":1,"referenc":1,"graph":1,"invalid":1,"equival":1,"reconstruct":1,"written":2,"write":3,"indetermin":1,"read":1,"left":1,"valu":1,"complet":1,"ignor":1,"thrown":2,"except":6,"supertyp":1,"fatal":1,"problem":1,"non":2,"field":1,"input":1,"java":1,"wrong":1,"method":1,"output":4,"serial":3},"maxFreq":11,"totalTerms":73},"loc":14}