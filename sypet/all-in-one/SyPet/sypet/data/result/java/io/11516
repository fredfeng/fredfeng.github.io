{"id":11516,"className":"java.io.StringReader","methodName":"skip","signature":"\u003cjava.io.StringReader: long skip(long)\u003e","javadoc":"/** \n * Skips the specified number of characters in the stream. Returns the number of characters that were skipped. \u003cp\u003eThe \u003ccode\u003ens\u003c/code\u003e parameter may be negative, even though the \u003ccode\u003eskip\u003c/code\u003e method of the  {@link Reader} superclass throwsan exception in this case. Negative values of \u003ccode\u003ens\u003c/code\u003e cause the stream to skip backwards. Negative return values indicate a skip backwards. It is not possible to skip backwards past the beginning of the string. \u003cp\u003eIf the entire string has been read or skipped, then this method has no effect and always returns 0.\n * @exception IOException  If an I/O error occurs\n */\n","tf":{"freq":{"stream":2,"backward":3,"link":1,"possibl":1,"skip":8,"though":1,"specifi":1,"indic":1,"read":1,"valu":2,"may":1,"except":3,"error":1,"charact":2,"alway":1,"paramet":1,"number":2,"past":1,"begin":1,"reader":1,"superclass":1,"caus":1,"effect":1,"throwsan":1,"string":2,"method":2,"even":1,"negat":3,"entir":1,"occur":1},"maxFreq":8,"totalTerms":49},"loc":12}