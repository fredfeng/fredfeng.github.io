{"id":11423,"className":"java.io.BufferedReader","methodName":"mark","signature":"\u003cjava.io.BufferedReader: void mark(int)\u003e","javadoc":"/** \n * Marks the present position in the stream.  Subsequent calls to reset() will attempt to reposition the stream to this point.\n * @param readAheadLimit   Limit on the number of characters that may beread while still preserving the mark. An attempt to reset the stream after reading characters up to this limit or beyond may fail. A limit value larger than the size of the input buffer will cause a new buffer to be allocated whose size is no smaller than limit. Therefore large values should be used with care.\n * @exception IllegalArgumentException  If readAheadLimit is \u003c 0\n * @exception IOException  If an I/O error occurs\n */\n","tf":{"freq":{"attempt":2,"call":1,"stream":3,"use":1,"therefor":1,"smaller":1,"beyond":1,"buffer":2,"fail":1,"care":1,"read":3,"reset":2,"valu":2,"subsequ":1,"argument":1,"reposit":1,"limit":6,"except":4,"may":2,"error":1,"whose":1,"charact":2,"ahead":2,"larger":1,"preserv":1,"mark":3,"number":1,"beread":1,"still":1,"illeg":1,"size":2,"point":1,"present":1,"input":1,"caus":1,"larg":1,"will":2,"posit":1,"occur":1,"alloc":1},"maxFreq":6,"totalTerms":63},"loc":11}