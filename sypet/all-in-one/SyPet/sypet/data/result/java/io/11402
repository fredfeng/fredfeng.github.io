{"id":11402,"className":"java.io.RandomAccessFile","methodName":"readLine","signature":"\u003cjava.io.RandomAccessFile: java.lang.String readLine()\u003e","javadoc":"/** \n * Reads the next line of text from this file.  This method successively reads bytes from the file, starting at the current file pointer, until it reaches a line terminator or the end of the file.  Each byte is converted into a character by taking the byte\u0027s value for the lower eight bits of the character and setting the high eight bits of the character to zero.  This method does not, therefore, support the full Unicode character set. \u003cp\u003e A line of text is terminated by a carriage-return character (\u003ccode\u003e\u0027\u0026#92;r\u0027\u003c/code\u003e), a newline character (\u003ccode\u003e\u0027\u0026#92;n\u0027\u003c/code\u003e), a carriage-return character immediately followed by a newline character, or the end of the file.  Line-terminating characters are discarded and are not included as part of the string returned. \u003cp\u003e This method blocks until a newline character is read, a carriage return and the byte following it are read (to see if it is a newline), the end of the file is reached, or an exception is thrown.\n * @return     the next line of text from this file, or null if endof file is encountered before even one byte is read.\n * @exception IOException  if an I/O error occurs.\n */\n","tf":{"freq":{"lower":1,"one":1,"next":2,"block":1,"line":6,"convert":1,"newlin":4,"therefor":1,"discard":1,"zero":1,"eight":2,"reach":2,"endof":1,"full":1,"file":8,"current":1,"carriag":3,"read":6,"immedi":1,"valu":1,"end":3,"follow":2,"thrown":1,"except":3,"text":3,"includ":1,"support":1,"error":1,"charact":10,"bit":2,"termin":3,"start":1,"encount":1,"take":1,"string":1,"unicod":1,"pointer":1,"even":1,"method":3,"high":1,"part":1,"success":1,"occur":1},"maxFreq":10,"totalTerms":89},"loc":29}