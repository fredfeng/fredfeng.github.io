{"id":11163,"className":"java.io.FilterInputStream","methodName":"mark","signature":"\u003cjava.io.FilterInputStream: void mark(int)\u003e","javadoc":"/** \n * Marks the current position in this input stream. A subsequent call to the \u003ccode\u003ereset\u003c/code\u003e method repositions this stream at the last marked position so that subsequent reads re-read the same bytes. \u003cp\u003e The \u003ccode\u003ereadlimit\u003c/code\u003e argument tells this input stream to allow that many bytes to be read before the mark position gets invalidated. \u003cp\u003e This method simply performs \u003ccode\u003ein.mark(readlimit)\u003c/code\u003e.\n * @param readlimit   the maximum limit of bytes that can be read beforethe mark position becomes invalid.\n * @see java.io.FilterInputStream#in\n * @see java.io.FilterInputStream#reset()\n */\n","tf":{"freq":{"call":1,"stream":5,"simpli":1,"last":1,"allow":1,"perform":1,"becom":1,"invalid":2,"current":1,"read":4,"reset":2,"tell":1,"subsequ":2,"reposit":1,"argument":1,"limit":1,"mani":1,"mark":6,"beforeth":1,"readlimit":3,"input":4,"maximum":1,"java":2,"method":2,"posit":4,"filter":2},"maxFreq":6,"totalTerms":52},"loc":3}