{"id":11319,"className":"java.io.PipedReader","methodName":"read","signature":"\u003cjava.io.PipedReader: int read()\u003e","javadoc":"/** \n * Reads the next character of data from this piped stream. If no character is available because the end of the stream has been reached, the value \u003ccode\u003e-1\u003c/code\u003e is returned. This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.\n * @return     the next character of data, or \u003ccode\u003e-1\u003c/code\u003e if the end of thestream is reached.\n * @exception IOException  if the pipe is\u003ca href\u003dPipedInputStream.html#BROKEN\u003e \u003ccode\u003ebroken\u003c/code\u003e\u003c/a\u003e, {@link #connect(java.io.PipedWriter) unconnected}, closed, or an I/O error occurs.\n */\n","tf":{"freq":{"unconnect":1,"stream":4,"connect":1,"next":2,"link":1,"data":3,"block":1,"pipe":4,"close":1,"reach":2,"read":2,"valu":1,"writer":1,"href":1,"end":3,"detect":1,"except":3,"thrown":1,"error":1,"charact":3,"avail":2,"broken":1,"input":2,"thestream":1,"method":1,"html":1,"java":1,"occur":1},"maxFreq":4,"totalTerms":47},"loc":38}