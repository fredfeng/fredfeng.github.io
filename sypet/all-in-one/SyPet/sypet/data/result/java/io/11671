{"id":11671,"className":"java.io.File","methodName":"getCanonicalFile","signature":"\u003cjava.io.File: java.io.File getCanonicalFile()\u003e","javadoc":"/** \n * Returns the canonical form of this abstract pathname.  Equivalent to \u003ccode\u003enew\u0026nbsp;File(this. {@link #getCanonicalPath})\u003c/code\u003e.\n * @return  The canonical pathname string denoting the same file ordirectory as this abstract pathname\n * @throws IOException If an I/O error occurs, which is possible because the construction of the canonical pathname may require filesystem queries\n * @throws SecurityException If a required system property value cannot be accessed, or if a security manager exists and its \u003ccode\u003e {@link java.lang.SecurityManager#checkRead}\u003c/code\u003e method denies read access to the file\n * @since 1.2\n * @see Path#toRealPath\n */\n","tf":{"freq":{"canon":5,"link":2,"denot":1,"possibl":1,"lang":1,"ordirectori":1,"real":1,"requir":2,"equival":1,"file":4,"path":3,"read":2,"valu":1,"exist":1,"deni":1,"nbsp":1,"except":2,"pathnam":4,"may":1,"check":1,"form":1,"error":1,"manag":2,"access":2,"queri":1,"system":1,"secur":3,"string":1,"method":1,"java":1,"construct":1,"properti":1,"filesystem":1,"occur":1},"maxFreq":5,"totalTerms":54},"loc":4}