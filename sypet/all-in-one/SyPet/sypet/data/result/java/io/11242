{"id":11242,"className":"java.io.PipedInputStream","methodName":"connect","signature":"\u003cjava.io.PipedInputStream: void connect(java.io.PipedOutputStream)\u003e","javadoc":"/** \n * Causes this piped input stream to be connected to the piped  output stream \u003ccode\u003esrc\u003c/code\u003e. If this object is already connected to some other piped output  stream, an \u003ccode\u003eIOException\u003c/code\u003e is thrown. \u003cp\u003e If \u003ccode\u003esrc\u003c/code\u003e is an unconnected piped output stream and \u003ccode\u003esnk\u003c/code\u003e is an unconnected piped input stream, they may be connected by either the call: \u003cp\u003e \u003cpre\u003e\u003ccode\u003esnk.connect(src)\u003c/code\u003e \u003c/pre\u003e \u003cp\u003e or the call: \u003cp\u003e \u003cpre\u003e\u003ccode\u003esrc.connect(snk)\u003c/code\u003e \u003c/pre\u003e \u003cp\u003e The two calls have the same effect.\n * @param src   The piped output stream to connect to.\n * @exception IOException  if an I/O error occurs.\n */\n","tf":{"freq":{"unconnect":2,"call":3,"may":1,"stream":6,"except":3,"thrown":1,"error":1,"connect":7,"snk":3,"object":1,"pipe":6,"two":1,"either":1,"input":2,"caus":1,"effect":1,"pre":4,"alreadi":1,"src":5,"output":4,"occur":1},"maxFreq":7,"totalTerms":55},"loc":3}