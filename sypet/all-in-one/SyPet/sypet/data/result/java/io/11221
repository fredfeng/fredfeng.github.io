{"id":11221,"className":"java.io.DataOutput","methodName":"writeUTF","signature":"\u003cjava.io.DataOutput: void writeUTF(java.lang.String)\u003e","javadoc":"/** \n * Writes two bytes of length information to the output stream, followed by the \u003ca href\u003d\"DataInput.html#modified-utf-8\"\u003emodified UTF-8\u003c/a\u003e representation of  every character in the string \u003ccode\u003es\u003c/code\u003e. If \u003ccode\u003es\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, a \u003ccode\u003eNullPointerException\u003c/code\u003e is thrown. Each character in the string \u003ccode\u003es\u003c/code\u003e is converted to a group of one, two, or three bytes, depending on the value of the character.\u003cp\u003e If a character \u003ccode\u003ec\u003c/code\u003e is in the range \u003ccode\u003e\u0026#92;u0001\u003c/code\u003e through \u003ccode\u003e\u0026#92;u007f\u003c/code\u003e, it is represented by one byte:\u003cp\u003e \u003cpre\u003e(byte)c \u003c/pre\u003e  \u003cp\u003e If a character \u003ccode\u003ec\u003c/code\u003e is \u003ccode\u003e\u0026#92;u0000\u003c/code\u003e or is in the range \u003ccode\u003e\u0026#92;u0080\u003c/code\u003e through \u003ccode\u003e\u0026#92;u07ff\u003c/code\u003e, then it is represented by two bytes, to be written in the order shown:\u003cp\u003e \u003cpre\u003e\u003ccode\u003e (byte)(0xc0 | (0x1f \u0026amp; (c \u0026gt;\u0026gt; 6))) (byte)(0x80 | (0x3f \u0026amp; c)) \u003c/code\u003e\u003c/pre\u003e  \u003cp\u003e If a character \u003ccode\u003ec\u003c/code\u003e is in the range \u003ccode\u003e\u0026#92;u0800\u003c/code\u003e through \u003ccode\u003euffff\u003c/code\u003e, then it is represented by three bytes, to be written in the order shown:\u003cp\u003e \u003cpre\u003e\u003ccode\u003e (byte)(0xe0 | (0x0f \u0026amp; (c \u0026gt;\u0026gt; 12))) (byte)(0x80 | (0x3f \u0026amp; (c \u0026gt;\u0026gt;  6))) (byte)(0x80 | (0x3f \u0026amp; c)) \u003c/code\u003e\u003c/pre\u003e  \u003cp\u003e First, the total number of bytes needed to represent all the characters of \u003ccode\u003es\u003c/code\u003e is calculated. If this number is larger than \u003ccode\u003e65535\u003c/code\u003e, then a \u003ccode\u003eUTFDataFormatException\u003c/code\u003e is thrown. Otherwise, this length is written to the output stream in exactly the manner of the \u003ccode\u003ewriteShort\u003c/code\u003e method; after this, the one-, two-, or three-byte representation of each character in the string \u003ccode\u003es\u003c/code\u003e is written.\u003cp\u003e  The bytes written by this method may be read by the \u003ccode\u003ereadUTF\u003c/code\u003e method of interface \u003ccode\u003eDataInput\u003c/code\u003e , which will then return a \u003ccode\u003eString\u003c/code\u003e equal to \u003ccode\u003es\u003c/code\u003e.\n * @param s   the string value to be written.\n * @throws IOException  if an I/O error occurs.\n */\n","tf":{"freq":{"total":1,"need":1,"rang":3,"exact":1,"three":3,"everi":1,"href":1,"follow":1,"thrown":2,"except":3,"charact":8,"calcul":1,"shown":2,"number":2,"format":1,"inform":1,"input":2,"fdata":1,"will":1,"pointer":1,"output":2,"amp":5,"otherwis":1,"stream":2,"one":3,"data":2,"convert":1,"order":2,"written":6,"write":3,"length":2,"read":2,"valu":2,"uffff":1,"may":1,"error":1,"repres":4,"depend":1,"larger":1,"equal":1,"utf":1,"represent":2,"two":4,"pre":6,"string":5,"modifi":2,"html":1,"manner":1,"method":3,"group":1,"first":1,"occur":1},"maxFreq":8,"totalTerms":108},"loc":0}