{"id":11218,"className":"java.io.DataOutput","methodName":"writeDouble","signature":"\u003cjava.io.DataOutput: void writeDouble(double)\u003e","javadoc":"/** \n * Writes a \u003ccode\u003edouble\u003c/code\u003e value, which is comprised of eight bytes, to the output stream. It does this as if it first converts this \u003ccode\u003edouble\u003c/code\u003e value to a \u003ccode\u003elong\u003c/code\u003e in exactly the manner of the \u003ccode\u003eDouble.doubleToLongBits\u003c/code\u003e method  and then writes the \u003ccode\u003elong\u003c/code\u003e value in exactly the manner of the  \u003ccode\u003ewriteLong\u003c/code\u003e method. The bytes written by this method may be read by the \u003ccode\u003ereadDouble\u003c/code\u003e method of interface \u003ccode\u003eDataInput\u003c/code\u003e, which will then return a \u003ccode\u003edouble\u003c/code\u003e equal to \u003ccode\u003ev\u003c/code\u003e.\n * @param v   the \u003ccode\u003edouble\u003c/code\u003e value to be written.\n * @throws IOException  if an I/O error occurs.\n */\n","tf":{"freq":{"except":1,"may":1,"stream":1,"error":1,"data":1,"convert":1,"equal":1,"eight":1,"compris":1,"bit":1,"input":1,"written":2,"exact":2,"will":1,"write":4,"read":2,"valu":4,"manner":2,"method":4,"output":1,"first":1,"occur":1},"maxFreq":4,"totalTerms":35},"loc":0}