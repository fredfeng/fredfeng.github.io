{"id":11583,"className":"java.io.PrintStream","methodName":"PrintStream","signature":"\u003cjava.io.PrintStream: void PrintStream(java.io.File,java.lang.String)\u003e","javadoc":"/** \n * Creates a new print stream, without automatic line flushing, with the specified file and charset.  This convenience constructor creates the necessary intermediate  {@link java.io.OutputStreamWriter OutputStreamWriter}, which will encode characters using the provided charset.\n * @param file The file to use as the destination of this print stream.  If the file exists, then it will be truncated to zero size; otherwise, a new file will be created.  The output will be written to the file and is buffered.\n * @param csn The name of a supported  {@linkplain java.nio.charset.Charset charset}\n * @throws FileNotFoundException If the given file object does not denote an existing, writable regular file and a new regular file of that name cannot be created, or if some other error occurs while opening or creating the file\n * @throws SecurityException If a security manager is presentand  {@link SecurityManager#checkWrite checkWrite(file.getPath())}denies write access to the file\n * @throws UnsupportedEncodingException If the named charset is not supported\n * @since  1.5\n */\n","tf":{"freq":{"unsupport":1,"zero":1,"necessari":1,"intermedi":1,"specifi":1,"buffer":1,"open":1,"given":1,"file":13,"writer":2,"deni":1,"except":3,"support":2,"charact":1,"creat":5,"charset":6,"writabl":1,"provid":1,"without":1,"size":1,"encod":2,"will":4,"output":3,"otherwis":1,"linkplain":1,"stream":5,"link":2,"denot":1,"use":2,"line":1,"truncat":1,"object":1,"automat":1,"written":1,"name":3,"path":1,"write":3,"exist":2,"conveni":1,"constructor":1,"check":2,"error":1,"regular":2,"manag":2,"access":1,"presentand":1,"print":3,"flush":1,"secur":3,"java":2,"nio":1,"csn":1,"destin":1,"found":1,"occur":1},"maxFreq":13,"totalTerms":105},"loc":4}