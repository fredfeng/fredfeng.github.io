{"id":11525,"className":"java.io.BufferedOutputStream","methodName":"write","signature":"\u003cjava.io.BufferedOutputStream: void write(byte[],int,int)\u003e","javadoc":"/** \n * Writes \u003ccode\u003elen\u003c/code\u003e bytes from the specified byte array starting at offset \u003ccode\u003eoff\u003c/code\u003e to this buffered output stream. \u003cp\u003e Ordinarily this method stores bytes from the given array into this stream\u0027s buffer, flushing the buffer to the underlying output stream as needed.  If the requested length is at least as large as this stream\u0027s buffer, however, then this method will flush the buffer and write the bytes directly to the underlying output stream.  Thus redundant \u003ccode\u003eBufferedOutputStream\u003c/code\u003es will not copy data unnecessarily.\n * @param b     the data.\n * @param off   the start offset in the data.\n * @param len   the number of bytes to write.\n * @exception IOException  if an I/O error occurs.\n */\n","tf":{"freq":{"need":1,"stream":6,"store":1,"least":1,"data":3,"redund":1,"copi":1,"specifi":1,"buffer":6,"given":1,"request":1,"write":4,"length":1,"offset":2,"howev":1,"direct":1,"except":2,"ordinarili":1,"error":1,"thus":1,"number":1,"len":2,"flush":2,"start":2,"larg":1,"will":2,"unnecessarili":1,"method":2,"output":4,"occur":1,"array":2},"maxFreq":6,"totalTerms":57},"loc":15}