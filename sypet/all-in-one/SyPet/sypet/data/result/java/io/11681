{"id":11681,"className":"java.io.File","methodName":"length","signature":"\u003cjava.io.File: long length()\u003e","javadoc":"/** \n * Returns the length of the file denoted by this abstract pathname. The return value is unspecified if this pathname denotes a directory. \u003cp\u003e Where it is required to distinguish an I/O exception from the case that  {@code 0L} is returned, or where several attributes of the same fileare required at the same time, then the  {@link java.nio.file.Files#readAttributes(Path,Class,LinkOption[]) Files.readAttributes} method may be used.\n * @return  The length, in bytes, of the file denoted by this abstractpathname, or \u003ccode\u003e0L\u003c/code\u003e if the file does not exist.  Some operating systems may return \u003ccode\u003e0L\u003c/code\u003e for pathnames denoting system-dependent entities such as devices or pipes.\n * @throws SecurityException If a security manager exists and its \u003ccode\u003e {@link java.lang.SecurityManager#checkRead(java.lang.String)}\u003c/code\u003e method denies read access to the file\n */\n","tf":{"freq":{"filear":1,"unspecifi":1,"directori":1,"link":3,"denot":4,"use":1,"lang":2,"pipe":1,"time":1,"attribut":3,"requir":2,"oper":1,"file":7,"length":3,"path":1,"read":4,"valu":1,"exist":2,"deni":1,"option":1,"except":2,"pathnam":3,"may":2,"check":1,"manag":2,"depend":1,"access":1,"sever":1,"abstractpathnam":1,"system":2,"secur":3,"entiti":1,"string":1,"distinguish":1,"java":3,"nio":1,"method":2,"devic":1},"maxFreq":7,"totalTerms":70},"loc":7}