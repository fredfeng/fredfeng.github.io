{"id":11788,"className":"java.io.OutputStream","methodName":"write","signature":"\u003cjava.io.OutputStream: void write(int)\u003e","javadoc":"/** \n * Writes the specified byte to this output stream. The general contract for \u003ccode\u003ewrite\u003c/code\u003e is that one byte is written to the output stream. The byte to be written is the eight low-order bits of the argument \u003ccode\u003eb\u003c/code\u003e. The 24 high-order bits of \u003ccode\u003eb\u003c/code\u003e are ignored. \u003cp\u003e Subclasses of \u003ccode\u003eOutputStream\u003c/code\u003e must provide an implementation for this method.\n * @param b   the \u003ccode\u003ebyte\u003c/code\u003e.\n * @exception IOException  if an I/O error occurs. In particular,an \u003ccode\u003eIOException\u003c/code\u003e may be thrown if the output stream has been closed.\n */\n","tf":{"freq":{"stream":4,"one":1,"particular":1,"eight":1,"must":1,"close":1,"specifi":1,"order":2,"written":2,"write":3,"argument":1,"thrown":1,"ignor":1,"except":3,"may":1,"error":1,"contract":1,"provid":1,"general":1,"bit":2,"subclass":1,"method":1,"high":1,"low":1,"output":4,"occur":1},"maxFreq":4,"totalTerms":39},"loc":0}