{"id":11716,"className":"java.io.FileOutputStream","methodName":"FileOutputStream","signature":"\u003cjava.io.FileOutputStream: void FileOutputStream(java.io.File,boolean)\u003e","javadoc":"/** \n * Creates a file output stream to write to the file represented by the specified \u003ccode\u003eFile\u003c/code\u003e object. If the second argument is \u003ccode\u003etrue\u003c/code\u003e, then bytes will be written to the end of the file rather than the beginning. A new \u003ccode\u003eFileDescriptor\u003c/code\u003e object is created to represent this file connection. \u003cp\u003e First, if there is a security manager, its \u003ccode\u003echeckWrite\u003c/code\u003e method is called with the path represented by the \u003ccode\u003efile\u003c/code\u003e argument as its argument. \u003cp\u003e If the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason then a \u003ccode\u003eFileNotFoundException\u003c/code\u003e is thrown.\n * @param file               the file to be opened for writing.\n * @param append      if \u003ccode\u003etrue\u003c/code\u003e, then bytes will be writtento the end of the file rather than the beginning\n * @exception FileNotFoundException  if the file exists but is a directoryrather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason\n * @exception SecurityException  if a security manager exists and its\u003ccode\u003echeckWrite\u003c/code\u003e method denies write access to the file.\n * @see java.io.File#getPath()\n * @see java.lang.SecurityException\n * @see java.lang.SecurityManager#checkWrite(java.lang.String)\n * @since 1.4\n */\n","tf":{"freq":{"writtento":1,"call":1,"stream":2,"second":1,"connect":1,"reason":2,"directori":1,"descriptor":1,"object":2,"lang":3,"specifi":1,"open":3,"file":19,"written":1,"directoryrath":1,"path":2,"write":6,"rather":3,"exist":5,"deni":1,"end":2,"argument":3,"append":1,"thrown":1,"except":6,"check":3,"regular":2,"repres":3,"creat":4,"manag":3,"true":2,"access":1,"begin":2,"secur":5,"string":1,"will":2,"java":4,"method":2,"output":2,"first":1,"found":2},"maxFreq":19,"totalTerms":109},"loc":15}