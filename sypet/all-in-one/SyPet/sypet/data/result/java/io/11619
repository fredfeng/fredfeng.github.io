{"id":11619,"className":"java.io.PushbackInputStream","methodName":"read","signature":"\u003cjava.io.PushbackInputStream: int read(byte[],int,int)\u003e","javadoc":"/** \n * Reads up to \u003ccode\u003elen\u003c/code\u003e bytes of data from this input stream into an array of bytes.  This method first reads any pushed-back bytes; after that, if fewer than \u003ccode\u003elen\u003c/code\u003e bytes have been read then it reads from the underlying input stream. If \u003ccode\u003elen\u003c/code\u003e is not zero, the method blocks until at least 1 byte of input is available; otherwise, no bytes are read and \u003ccode\u003e0\u003c/code\u003e is returned.\n * @param b     the buffer into which the data is read.\n * @param off   the start offset in the destination array \u003ccode\u003eb\u003c/code\u003e\n * @param len   the maximum number of bytes read.\n * @return     the total number of bytes read into the buffer, or\u003ccode\u003e-1\u003c/code\u003e if there is no more data because the end of the stream has been reached.\n * @exception NullPointerException If \u003ccode\u003eb\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @exception IndexOutOfBoundsException If \u003ccode\u003eoff\u003c/code\u003e is negative,\u003ccode\u003elen\u003c/code\u003e is negative, or \u003ccode\u003elen\u003c/code\u003e is greater than \u003ccode\u003eb.length - off\u003c/code\u003e\n * @exception IOException  if this input stream has been closed byinvoking its  {@link #close()} method,or an I/O error occurs.\n * @see java.io.InputStream#read(byte[],int,int)\n */\n","tf":{"freq":{"otherwis":1,"total":1,"stream":5,"byinvok":1,"greater":1,"least":1,"link":1,"data":3,"block":1,"zero":1,"push":1,"close":2,"buffer":2,"reach":1,"length":1,"read":10,"offset":1,"end":1,"index":1,"except":6,"error":1,"back":1,"avail":1,"number":2,"len":6,"input":5,"start":1,"maximum":1,"pointer":1,"fewer":1,"java":1,"negat":2,"method":3,"first":1,"bound":1,"occur":1,"array":2,"destin":1},"maxFreq":10,"totalTerms":74},"loc":29}