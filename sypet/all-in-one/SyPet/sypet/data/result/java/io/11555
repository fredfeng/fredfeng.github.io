{"id":11555,"className":"java.io.LineNumberInputStream","methodName":"read","signature":"\u003cjava.io.LineNumberInputStream: int read(byte[],int,int)\u003e","javadoc":"/** \n * Reads up to \u003ccode\u003elen\u003c/code\u003e bytes of data from this input stream into an array of bytes. This method blocks until some input is available. \u003cp\u003e The \u003ccode\u003eread\u003c/code\u003e method of \u003ccode\u003eLineNumberInputStream\u003c/code\u003e repeatedly calls the \u003ccode\u003eread\u003c/code\u003e method of zero arguments to fill in the byte array.\n * @param b     the buffer into which the data is read.\n * @param off   the start offset of the data.\n * @param len   the maximum number of bytes read.\n * @return     the total number of bytes read into the buffer, or\u003ccode\u003e-1\u003c/code\u003e if there is no more data because the end of this stream has been reached.\n * @exception IOException  if an I/O error occurs.\n * @see java.io.LineNumberInputStream#read()\n */\n","tf":{"freq":{"total":1,"call":1,"stream":4,"data":4,"line":2,"block":1,"repeat":1,"zero":1,"buffer":2,"reach":1,"read":8,"offset":1,"end":1,"argument":1,"except":2,"error":1,"fill":1,"number":4,"avail":1,"len":2,"input":4,"start":1,"maximum":1,"java":1,"method":3,"occur":1,"array":2},"maxFreq":8,"totalTerms":53},"loc":31}