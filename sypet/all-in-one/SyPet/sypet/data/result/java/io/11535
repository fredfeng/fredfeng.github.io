{"id":11535,"className":"java.io.DataInput","methodName":"readUnsignedShort","signature":"\u003cjava.io.DataInput: int readUnsignedShort()\u003e","javadoc":"/** \n * Reads two input bytes and returns an \u003ccode\u003eint\u003c/code\u003e value in the range \u003ccode\u003e0\u003c/code\u003e through \u003ccode\u003e65535\u003c/code\u003e. Let \u003ccode\u003ea\u003c/code\u003e be the first byte read and \u003ccode\u003eb\u003c/code\u003e be the second byte. The value returned is: \u003cp\u003e\u003cpre\u003e\u003ccode\u003e(((a \u0026amp; 0xff) \u0026lt;\u0026lt; 8) | (b \u0026amp; 0xff)) \u003c/code\u003e\u003c/pre\u003e This method is suitable for reading the bytes written by the \u003ccode\u003ewriteShort\u003c/code\u003e method of interface \u003ccode\u003eDataOutput\u003c/code\u003e  if the argument to \u003ccode\u003ewriteShort\u003c/code\u003e was intended to be a value in the range \u003ccode\u003e0\u003c/code\u003e through \u003ccode\u003e65535\u003c/code\u003e.\n * @return     the unsigned 16-bit value read.\n * @exception EOFException  if this stream reaches the end before readingall the bytes.\n * @exception IOException   if an I/O error occurs.\n */\n","tf":{"freq":{"stream":1,"second":1,"suitabl":1,"xff":2,"data":1,"reach":1,"rang":2,"written":1,"write":2,"read":5,"valu":4,"end":1,"argument":1,"except":3,"error":1,"readingal":1,"fexcept":1,"two":1,"bit":1,"input":1,"pre":2,"unsign":2,"method":2,"output":1,"intend":1,"amp":2,"first":1,"occur":1},"maxFreq":5,"totalTerms":44},"loc":0}