{"id":13773,"className":"java.lang.AbstractStringBuilder","methodName":"deleteCharAt","signature":"\u003cjava.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder deleteCharAt(int)\u003e","javadoc":"/** \n * Removes the \u003ccode\u003echar\u003c/code\u003e at the specified position in this sequence. This sequence is shortened by one \u003ccode\u003echar\u003c/code\u003e. \u003cp\u003eNote: If the character at the given index is a supplementary character, this method does not remove the entire character. If correct handling of supplementary characters is required, determine the number of \u003ccode\u003echar\u003c/code\u003es to remove by calling \u003ccode\u003eCharacter.charCount(thisSequence.codePointAt(index))\u003c/code\u003e, where \u003ccode\u003ethisSequence\u003c/code\u003e is this sequence.\n * @param index  Index of \u003ccode\u003echar\u003c/code\u003e to remove\n * @return      This object.\n * @throws StringIndexOutOfBoundsException  if the \u003ccode\u003eindex\u003c/code\u003eis negative or greater than or equal to \u003ccode\u003elength()\u003c/code\u003e.\n */\n","tf":{"freq":{"supplementari":2,"call":1,"greater":1,"count":1,"delet":1,"one":1,"object":1,"specifi":1,"requir":1,"given":1,"correct":1,"sequenc":5,"length":1,"note":1,"except":1,"index":6,"charact":5,"remov":4,"equal":1,"number":1,"handl":1,"point":1,"shorten":1,"determin":1,"string":1,"negat":1,"method":1,"posit":1,"entir":1,"bound":1},"maxFreq":6,"totalTerms":47},"loc":7}