{"id":13783,"className":"java.lang.AbstractStringBuilder","methodName":"insert","signature":"\u003cjava.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder insert(int,java.lang.CharSequence,int,int)\u003e","javadoc":"/** \n * Inserts a subsequence of the specified  {@code CharSequence} intothis sequence. \u003cp\u003e The subsequence of the argument  {@code s} specified by{@code start} and {@code end} are inserted,in order, into this sequence at the specified destination offset, moving up any characters originally above that position. The length of this sequence is increased by  {@code end - start}. \u003cp\u003e The character at index \u003ci\u003ek\u003c/i\u003e in this sequence becomes equal to: \u003cul\u003e \u003cli\u003ethe character at index \u003ci\u003ek\u003c/i\u003e in this sequence, if \u003ci\u003ek\u003c/i\u003e is less than  {@code dstOffset}\u003cli\u003ethe character at index \u003ci\u003ek\u003c/i\u003e {@code +start-dstOffset} inthe argument  {@code s}, if \u003ci\u003ek\u003c/i\u003e is greater than or equal to {@code dstOffset} but is less than {@code dstOffset+end-start}\u003cli\u003ethe character at index \u003ci\u003ek\u003c/i\u003e {@code -(end-start)} in thissequence, if \u003ci\u003ek\u003c/i\u003e is greater than or equal to {@code dstOffset+end-start}\u003c/ul\u003e\u003cp\u003e The  {@code dstOffset} argument must be greater than or equal to{@code 0}, and less than or equal to the  {@linkplain #length() length}of this sequence. \u003cp\u003eThe start argument must be nonnegative, and not greater than {@code end}. \u003cp\u003eThe end argument must be greater than or equal to {@code start}, and less than or equal to the length of s. \u003cp\u003eIf  {@code s} is {@code null}, then this method inserts characters as if the s parameter was a sequence containing the four characters  {@code \"null\"}.\n * @param dstOffset   the offset in this sequence.\n * @param s       the sequence to be inserted.\n * @param start   the starting index of the subsequence to be inserted.\n * @param end     the end index of the subsequence to be inserted.\n * @return     a reference to this object.\n * @throws IndexOutOfBoundsException  if {@code dstOffset}is negative or greater than  {@code this.length()}, or {@code start} or {@code end} are negative, or{@code start} is greater than {@code end} or{@code end} is greater than {@code s.length()}\n */\n","tf":{"freq":{"increas":1,"linkplain":1,"greater":8,"object":1,"dst":8,"must":3,"specifi":3,"thissequ":1,"inth":1,"becom":1,"order":1,"refer":1,"sequenc":10,"length":6,"four":1,"offset":10,"subsequ":4,"move":1,"end":12,"less":4,"argument":5,"except":1,"index":7,"charact":7,"paramet":1,"origin":1,"equal":7,"start":12,"nonneg":1,"contain":1,"intothi":1,"negat":2,"method":1,"insert":7,"posit":1,"bound":1,"destin":1},"maxFreq":12,"totalTerms":135},"loc":18}