{"id":13287,"className":"java.lang.SecurityManager","methodName":"checkSetFactory","signature":"\u003cjava.lang.SecurityManager: void checkSetFactory()\u003e","javadoc":"/** \n * Throws a \u003ccode\u003eSecurityException\u003c/code\u003e if the calling thread is not allowed to set the socket factory used by \u003ccode\u003eServerSocket\u003c/code\u003e or \u003ccode\u003eSocket\u003c/code\u003e, or the stream handler factory used by \u003ccode\u003eURL\u003c/code\u003e. \u003cp\u003e This method calls \u003ccode\u003echeckPermission\u003c/code\u003e with the \u003ccode\u003eRuntimePermission(\"setFactory\")\u003c/code\u003e permission. \u003cp\u003e If you override this method, then you should make a call to \u003ccode\u003esuper.checkSetFactory\u003c/code\u003e at the point the overridden method would normally throw an exception. \u003cp\u003e\n * @exception SecurityException  if the calling thread does not havepermission to specify a socket factory or a stream handler factory.\n * @see java.net.ServerSocket#setSocketFactory(java.net.SocketImplFactory) setSocketFactory\n * @see java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory) setSocketImplFactory\n * @see java.net.URL#setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory) setURLStreamHandlerFactory\n * @see #checkPermission(java.security.Permission) checkPermission\n */\n","tf":{"freq":{"call":4,"except":4,"stream":2,"impl":4,"check":5,"allow":1,"overridden":1,"normal":1,"runtim":1,"use":2,"net":6,"specifi":1,"havepermiss":1,"point":1,"secur":3,"lstream":3,"factori":16,"thread":2,"permiss":6,"socket":12,"java":7,"method":3,"server":2,"make":1,"handler":5},"maxFreq":16,"totalTerms":94},"loc":3}