{"id":14425,"className":"java.lang.invoke.MethodHandle","methodName":"invokeExact","signature":"\u003cjava.lang.invoke.MethodHandle: java.lang.Object invokeExact(java.lang.Object[])\u003e","javadoc":"/** \n * Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match. The symbolic type descriptor at the call site of  {@code invokeExact} mustexactly match this method handle\u0027s  {@link #type type}. No conversions are allowed on arguments or return values. \u003cp\u003e When this method is observed via the Core Reflection API, it will appear as a single native method, taking an object array and returning an object. If this native method is invoked directly via {@link java.lang.reflect.Method#invoke java.lang.reflect.Method.invoke}, via JNI, or indirectly via  {@link java.lang.invoke.MethodHandles.Lookup#unreflect Lookup.unreflect}, it will throw an  {@code UnsupportedOperationException}.\n * @throws WrongMethodTypeException if the target\u0027s type is not identical with the caller\u0027s symbolic type descriptor\n * @throws Throwable anything thrown by the underlying method propagates unchanged through the method handle call\n */\n","tf":{"freq":{"caller":2,"anyth":1,"call":2,"unsupport":1,"via":4,"appear":1,"allow":2,"singl":1,"descriptor":3,"mustexact":1,"link":3,"convers":1,"object":2,"type":8,"lookup":2,"lang":3,"indirect":1,"requir":1,"observ":1,"ident":1,"oper":1,"unreflect":2,"exact":3,"propag":1,"valu":1,"direct":1,"site":1,"argument":1,"thrown":1,"except":2,"unchang":1,"symbol":2,"invok":7,"handl":4,"take":1,"target":1,"will":2,"wrong":1,"java":3,"method":11,"core":1,"throwabl":1,"match":2,"reflect":3,"array":1},"maxFreq":11,"totalTerms":96},"loc":0}