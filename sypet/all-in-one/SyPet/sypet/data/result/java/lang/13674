{"id":13674,"className":"java.lang.Class","methodName":"newInstance","signature":"\u003cjava.lang.Class: T newInstance()\u003e","javadoc":"/** \n * Creates a new instance of the class represented by this  {@code Class}object.  The class is instantiated as if by a  {@code new}expression with an empty argument list.  The class is initialized if it has not already been initialized. \u003cp\u003eNote that this method propagates any exception thrown by the nullary constructor, including a checked exception.  Use of this method effectively bypasses the compile-time exception checking that would otherwise be performed by the compiler. The  {@link java.lang.reflect.Constructor#newInstance(java.lang.Object...) Constructor.newInstance} method avoids this problem by wrappingany exception thrown by the constructor in a (checked)  {@link java.lang.reflect.InvocationTargetException}.\n * @return     a newly allocated instance of the class represented by thisobject.\n * @exception IllegalAccessException  if the class or its nullaryconstructor is not accessible.\n * @exception InstantiationException if this  {@code Class} represents an abstract class,an interface, an array class, a primitive type, or void; or if the class has no nullary constructor; or if the instantiation fails for some other reason.\n * @exception ExceptionInInitializerError if the initializationprovoked by this method fails.\n * @exception SecurityException If a security manager, \u003ci\u003es\u003c/i\u003e, is present and any of the following conditions is met: \u003cul\u003e \u003cli\u003e invocation of {@link SecurityManager#checkMemberAccess s.checkMemberAccess(this, Member.PUBLIC)} deniescreation of new instances of this class \u003cli\u003e the caller\u0027s class loader is not the same as or an ancestor of the class loader for the current class and invocation of  {@link SecurityManager#checkPackageAccess s.checkPackageAccess()} denies access to the packageof this class \u003c/ul\u003e\n */\n","tf":{"freq":{"reason":1,"instanti":3,"perform":1,"type":1,"avoid":1,"nullari":2,"time":1,"fail":2,"propag":1,"wrappingani":1,"deni":1,"follow":1,"argument":1,"thrown":2,"except":13,"creat":1,"loader":2,"invoc":3,"instanc":6,"nullaryconstructor":1,"present":1,"newli":1,"deniescr":1,"compil":2,"alloc":1,"array":1,"caller":1,"otherwis":1,"primit":1,"packageof":1,"link":4,"use":1,"object":2,"express":1,"lang":3,"met":1,"current":1,"thisobject":1,"initi":3,"ancestor":1,"note":1,"constructor":5,"member":3,"condit":1,"includ":1,"initializationprovok":1,"check":7,"error":1,"repres":3,"manag":3,"list":1,"problem":1,"access":7,"illeg":1,"empti":1,"secur":4,"effect":1,"bypass":1,"target":1,"method":4,"alreadi":1,"java":3,"reflect":2},"maxFreq":13,"totalTerms":128},"loc":6}