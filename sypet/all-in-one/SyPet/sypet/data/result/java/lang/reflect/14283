{"id":14283,"className":"java.lang.reflect.Method","methodName":"toGenericString","signature":"\u003cjava.lang.reflect.Method: java.lang.String toGenericString()\u003e","javadoc":"/** \n * Returns a string describing this  {@code Method}, including type parameters.  The string is formatted as the method access modifiers, if any, followed by an angle-bracketed comma-separated list of the method\u0027s type parameters, if any, followed by the method\u0027s generic return type, followed by a space, followed by the class declaring the method, followed by a period, followed by the method name, followed by a parenthesized, comma-separated list of the method\u0027s generic formal parameter types. If this method was declared to take a variable number of arguments, instead of denoting the last parameter as \"\u003ctt\u003e\u003ci\u003eType\u003c/i\u003e[]\u003c/tt\u003e\", it is denoted as \"\u003ctt\u003e\u003ci\u003eType\u003c/i\u003e...\u003c/tt\u003e\". A space is used to separate access modifiers from one another and from the type parameters or return type.  If there are no type parameters, the type parameter list is elided; if the type parameter list is present, a space separates the list from the class name.  If the method is declared to throw exceptions, the parameter list is followed by a space, followed by the word throws followed by a comma-separated list of the generic thrown exception types.  If there are no type parameters, the type parameter list is elided. \u003cp\u003eThe access modifiers are placed in canonical order as specified by \"The Java Language Specification\".  This is {@code public},  {@code protected} or {@code private} first,and then other modifiers in the following order: {@code abstract},  {@code static},  {@code final}, {@code synchronized},  {@code native},  {@code strictfp}.\n * @return a string describing this {@code Method}, include type parameters\n * @since 1.5\n */\n","tf":{"freq":{"canon":1,"generic":4,"last":1,"one":1,"variabl":1,"denot":2,"use":1,"languag":1,"elid":2,"anoth":1,"type":15,"space":4,"bracket":1,"specifi":1,"parenthes":1,"order":2,"declar":3,"name":2,"place":1,"follow":11,"argument":1,"thrown":1,"except":2,"comma":3,"includ":2,"paramet":12,"describ":2,"number":1,"list":8,"format":1,"access":3,"period":1,"present":1,"specif":1,"formal":1,"separ":5,"take":1,"string":4,"instead":1,"modifi":4,"java":1,"word":1,"angl":1,"method":10,"first":1},"maxFreq":15,"totalTerms":125},"loc":57}