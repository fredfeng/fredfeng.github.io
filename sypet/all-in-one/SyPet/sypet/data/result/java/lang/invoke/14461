{"id":14461,"className":"java.lang.invoke.MethodHandles$Lookup","methodName":"unreflectSetter","signature":"\u003cjava.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle unreflectSetter(java.lang.reflect.Field)\u003e","javadoc":"/** \n * Produces a method handle giving write access to a reflected field. The type of the method handle will have a void return type. If the field is static, the method handle will take a single argument, of the field\u0027s value type, the value to be stored. Otherwise, the two arguments will be the instance containing the field, and the value to be stored. If the field\u0027s  {@code accessible} flag is not set,access checking is performed immediately on behalf of the lookup class.\n * @param f the reflected field\n * @return a method handle which can store values into the reflected field\n * @throws IllegalAccessException if access checking fails\n * @throws NullPointerException if the argument is null\n */\n","tf":{"freq":{"behalf":1,"otherwis":1,"store":3,"give":1,"singl":1,"perform":1,"type":3,"lookup":1,"fail":1,"unreflect":1,"write":1,"setter":1,"immedi":1,"valu":4,"argument":3,"except":2,"check":2,"produc":1,"access":5,"illeg":1,"handl":4,"instanc":1,"field":7,"two":1,"flag":1,"take":1,"contain":1,"will":3,"pointer":1,"method":4,"reflect":3},"maxFreq":7,"totalTerms":62},"loc":3}