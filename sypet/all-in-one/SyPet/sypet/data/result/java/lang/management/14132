{"id":14132,"className":"java.lang.management.MemoryPoolMXBean","methodName":"setCollectionUsageThreshold","signature":"\u003cjava.lang.management.MemoryPoolMXBean: void setCollectionUsageThreshold(long)\u003e","javadoc":"/** \n * Sets the collection usage threshold of this memory pool to the given \u003ctt\u003ethreshold\u003c/tt\u003e value. When this threshold is set to positive, the Java virtual machine will check the memory usage at its best appropriate time after it has expended effort in recycling unused objects in this memory pool. \u003cp\u003e The collection usage threshold crossing checking is enabled in this memory pool if the threshold is set to a positive value. The collection usage threshold crossing checking is disabled if it is set to zero.\n * @param threshold the new collection usage threshold value in bytes.Must be non-negative.\n * @throws IllegalArgumentException if \u003ctt\u003ethreshold\u003c/tt\u003e is negativeor greater than the maximum amount of memory for this memory pool if defined.\n * @throws UnsupportedOperationException if this memory pooldoes not support a collection usage threshold.\n * @throws java.lang.SecurityException if a security managerexists and the caller does not have ManagementPermission(\"control\").\n * @see #isCollectionUsageThresholdSupported\n * @see \u003ca href\u003d\"#CollectionThreshold\"\u003eCollection usage threshold\u003c/a\u003e\n */\n","tf":{"freq":{"caller":1,"virtual":1,"defin":1,"recycl":1,"unsupport":1,"memori":7,"greater":1,"expend":1,"object":1,"zero":1,"lang":1,"must":1,"amount":1,"time":1,"given":1,"oper":1,"pool":4,"permiss":1,"best":1,"valu":3,"href":1,"pooldo":1,"argument":1,"control":1,"except":3,"support":2,"check":3,"manag":1,"enabl":1,"effort":1,"negativeor":1,"managerexist":1,"illeg":1,"non":1,"threshold":14,"machin":1,"secur":2,"unus":1,"disabl":1,"maximum":1,"appropri":1,"will":1,"negat":1,"java":2,"usag":9,"posit":2,"collect":9,"cross":2},"maxFreq":14,"totalTerms":97},"loc":0}