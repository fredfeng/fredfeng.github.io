{"id":13233,"className":"java.lang.Float","methodName":"equals","signature":"\u003cjava.lang.Float: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares this object against the specified object.  The result is  {@code true} if and only if the argument is not{@code null} and is a {@code Float} object thatrepresents a  {@code float} with the same value as the{@code float} represented by this object. For thispurpose, two  {@code float} values are considered to be thesame if and only if the method  {@link #floatToIntBits(float)}returns the identical  {@code int} value when applied toeach. \u003cp\u003eNote that in most cases, for two instances of class {@code Float},  {@code f1} and {@code f2}, the value of  {@code f1.equals(f2)} is {@code true} if and only if\u003cblockquote\u003e\u003cpre\u003e f1.floatValue() \u003d\u003d f2.floatValue() \u003c/pre\u003e\u003c/blockquote\u003e \u003cp\u003ealso has the value  {@code true}. However, there are two exceptions: \u003cul\u003e \u003cli\u003eIf  {@code f1} and {@code f2} both represent{@code Float.NaN}, then the  {@code equals} method returns{@code true}, even though  {@code Float.NaN\u003d\u003dFloat.NaN}has the value  {@code false}. \u003cli\u003eIf  {@code f1} represents {@code +0.0f} while{@code f2} represents {@code -0.0f}, or vice versa, the  {@code equal} test has the value{@code false}, even though  {@code 0.0f\u003d\u003d-0.0f}has the value  {@code true}. \u003c/ul\u003e This definition allows hash tables to operate properly.\n * @param obj the object to be compared\n * @return  {@code true} if the objects are the same;{@code false} otherwise.\n * @see java.lang.Float#floatToIntBits(float)\n */\n","tf":{"freq":{"otherwis":1,"fals":3,"result":1,"allow":1,"test":1,"vice":1,"link":1,"object":6,"lang":1,"though":2,"consid":1,"specifi":1,"toeach":1,"ident":1,"oper":1,"blockquot":2,"valu":10,"proper":1,"thispurpos":1,"thesam":1,"howev":1,"note":1,"versa":1,"argument":1,"except":1,"hash":1,"repres":4,"true":6,"equal":4,"thatrepres":1,"instanc":1,"two":3,"bit":2,"appli":1,"tabl":1,"pre":2,"definit":1,"java":1,"obj":1,"even":2,"method":2,"also":1,"compar":2},"maxFreq":10,"totalTerms":79},"loc":4}