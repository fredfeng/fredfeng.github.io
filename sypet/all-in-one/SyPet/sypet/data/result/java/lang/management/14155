{"id":14155,"className":"java.lang.management.ThreadMXBean","methodName":"getCurrentThreadUserTime","signature":"\u003cjava.lang.management.ThreadMXBean: long getCurrentThreadUserTime()\u003e","javadoc":"/** \n * Returns the CPU time that the current thread has executed in user mode in nanoseconds. The returned value is of nanoseconds precision but not necessarily nanoseconds accuracy. \u003cp\u003e This is a convenient method for local management use and is equivalent to calling: \u003cblockquote\u003e\u003cpre\u003e {@link #getThreadUserTime getThreadUserTime}(Thread.currentThread().getId()); \u003c/pre\u003e\u003c/blockquote\u003e\n * @return the user-level CPU time for the current thread if CPU timemeasurement is enabled; \u003ctt\u003e-1\u003c/tt\u003e otherwise.\n * @throws java.lang.UnsupportedOperationException if the Javavirtual machine does not support CPU time measurement for the current thread.\n * @see #getCurrentThreadCpuTime\n * @see #isCurrentThreadCpuTimeSupported\n * @see #isThreadCpuTimeEnabled\n * @see #setThreadCpuTimeEnabled\n */\n","tf":{"freq":{"otherwis":1,"call":1,"unsupport":1,"link":1,"use":1,"nanosecond":3,"lang":1,"mode":1,"time":10,"level":1,"timemeasur":1,"oper":1,"equival":1,"blockquot":2,"thread":12,"precis":1,"current":7,"valu":1,"conveni":1,"except":1,"support":2,"manag":1,"enabl":3,"cpu":4,"javavirtu":1,"accuraci":1,"machin":1,"pre":2,"measur":1,"java":1,"method":1,"local":1,"necessarili":1,"execut":1,"user":5},"maxFreq":12,"totalTerms":75},"loc":0}