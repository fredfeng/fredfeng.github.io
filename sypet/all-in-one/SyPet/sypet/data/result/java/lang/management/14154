{"id":14154,"className":"java.lang.management.ThreadMXBean","methodName":"getCurrentThreadCpuTime","signature":"\u003cjava.lang.management.ThreadMXBean: long getCurrentThreadCpuTime()\u003e","javadoc":"/** \n * Returns the total CPU time for the current thread in nanoseconds. The returned value is of nanoseconds precision but not necessarily nanoseconds accuracy. If the implementation distinguishes between user mode time and system mode time, the returned CPU time is the amount of time that the current thread has executed in user mode or system mode. \u003cp\u003e This is a convenient method for local management use and is equivalent to calling: \u003cblockquote\u003e\u003cpre\u003e {@link #getThreadCpuTime getThreadCpuTime}(Thread.currentThread().getId()); \u003c/pre\u003e\u003c/blockquote\u003e\n * @return the total CPU time for the current thread if CPU timemeasurement is enabled; \u003ctt\u003e-1\u003c/tt\u003e otherwise.\n * @throws java.lang.UnsupportedOperationException if the Javavirtual machine does not support CPU time measurement for the current thread.\n * @see #getCurrentThreadUserTime\n * @see #isCurrentThreadCpuTimeSupported\n * @see #isThreadCpuTimeEnabled\n * @see #setThreadCpuTimeEnabled\n */\n","tf":{"freq":{"otherwis":1,"total":2,"call":1,"unsupport":1,"link":1,"use":1,"nanosecond":3,"lang":1,"mode":4,"amount":1,"time":14,"timemeasur":1,"oper":1,"equival":1,"blockquot":2,"thread":13,"precis":1,"current":8,"valu":1,"conveni":1,"except":1,"support":2,"enabl":3,"manag":1,"cpu":6,"javavirtu":1,"accuraci":1,"machin":1,"system":2,"pre":2,"distinguish":1,"measur":1,"java":1,"method":1,"local":1,"necessarili":1,"execut":1,"user":3},"maxFreq":14,"totalTerms":89},"loc":0}