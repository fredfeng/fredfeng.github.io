{"id":13296,"className":"java.lang.Byte","methodName":"parseByte","signature":"\u003cjava.lang.Byte: byte parseByte(java.lang.String)\u003e","javadoc":"/** \n * Parses the string argument as a signed decimal  {@code byte}. The characters in the string must all be decimal digits, except that the first character may be an ASCII minus sign {@code \u0027-\u0027} (\u003ccode\u003e\u0027\u0026#92;u002D\u0027\u003c/code\u003e) to indicate a negativevalue or an ASCII plus sign  {@code \u0027+\u0027}(\u003ccode\u003e\u0027\u0026#92;u002B\u0027\u003c/code\u003e) to indicate a positive value. The resulting  {@code byte} value is returned, exactly as if theargument and the radix 10 were given as arguments to the  {@link #parseByte(java.lang.String,int)} method.\n * @param s         a {@code String} containing the{@code byte} representation to be parsed\n * @return          the {@code byte} value represented by theargument in decimal\n * @throws NumberFormatException if the string does notcontain a parsable  {@code byte}.\n */\n","tf":{"freq":{"result":1,"theargument":2,"link":1,"decim":3,"parsabl":1,"lang":1,"must":1,"indic":2,"given":1,"exact":1,"valu":3,"negativevalu":1,"argument":2,"plus":1,"may":1,"except":2,"minus":1,"notcontain":1,"repres":1,"charact":2,"number":1,"format":1,"represent":1,"digit":1,"sign":3,"radix":1,"contain":1,"string":5,"method":1,"java":1,"first":1,"pars":4,"posit":1},"maxFreq":5,"totalTerms":51},"loc":3}