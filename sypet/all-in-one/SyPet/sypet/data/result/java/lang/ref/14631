{"id":14631,"className":"java.lang.ref.ReferenceQueue","methodName":"remove","signature":"\u003cjava.lang.ref.ReferenceQueue: java.lang.ref.Reference\u003c? extends T\u003e remove(long)\u003e","javadoc":"/** \n * Removes the next reference object in this queue, blocking until either one becomes available or the given timeout period expires. \u003cp\u003e This method does not offer real-time guarantees: It schedules the timeout as if by invoking the  {@link Object#wait(long)} method.\n * @param timeout  If positive, block for up to \u003ccode\u003etimeout\u003c/code\u003emilliseconds while waiting for a reference to be added to this queue.  If zero, block indefinitely.\n * @return  A reference object, if one was available within the specifiedtimeout period, otherwise \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException If the value of the timeout argument is negative\n * @throws InterruptedException If the timeout wait is interrupted\n */\n","tf":{"freq":{"otherwis":1,"queue":2,"one":2,"next":1,"link":1,"block":3,"schedul":1,"object":3,"wait":3,"zero":1,"expir":1,"real":1,"time":1,"becom":1,"given":1,"refer":3,"millisecond":1,"valu":1,"argument":2,"except":2,"guarante":1,"invok":1,"specifiedtimeout":1,"remov":2,"avail":2,"offer":1,"period":2,"illeg":1,"interrupt":2,"either":1,"ad":1,"negat":1,"indefinit":1,"method":2,"within":1,"posit":1,"timeout":6},"maxFreq":6,"totalTerms":59},"loc":15}