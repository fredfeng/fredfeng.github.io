{"id":13065,"className":"java.lang.StrictMath","methodName":"ulp","signature":"\u003cjava.lang.StrictMath: float ulp(float)\u003e","javadoc":"/** \n * Returns the size of an ulp of the argument.  An ulp of a {@code float} value is the positive distance between thisfloating-point value and the  {@code float} value nextlarger in magnitude.  Note that for non-NaN \u003ci\u003ex\u003c/i\u003e, \u003ccode\u003eulp(-\u003ci\u003ex\u003c/i\u003e) \u003d\u003d ulp(\u003ci\u003ex\u003c/i\u003e)\u003c/code\u003e. \u003cp\u003eSpecial Cases: \u003cul\u003e \u003cli\u003e If the argument is NaN, then the result is NaN. \u003cli\u003e If the argument is positive or negative infinity, then the result is positive infinity. \u003cli\u003e If the argument is positive or negative zero, then the result is {@code Float.MIN_VALUE}. \u003cli\u003e If the argument is \u0026plusmn; {@code Float.MAX_VALUE}, then the result is equal to 2\u003csup\u003e104\u003c/sup\u003e. \u003c/ul\u003e\n * @param f the floating-point value whose ulp is to be returned\n * @return the size of an ulp of the argument\n * @author Joseph D. Darcy\n * @since 1.5\n */\n","tf":{"freq":{"argument":6,"result":4,"whose":1,"darci":1,"infin":2,"ulp":7,"magnitud":1,"equal":1,"sup":2,"zero":1,"size":2,"non":1,"author":1,"point":2,"joseph":1,"plusmn":1,"distanc":1,"negat":2,"special":1,"valu":4,"thisfloat":1,"posit":4,"note":1,"nextlarg":1},"maxFreq":7,"totalTerms":49},"loc":3}