{"id":13590,"className":"java.lang.Throwable","methodName":"setStackTrace","signature":"\u003cjava.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])\u003e","javadoc":"/** \n * Sets the stack trace elements that will be returned by {@link #getStackTrace()} and printed by {@link #printStackTrace()}and related methods. This method, which is designed for use by RPC frameworks and other advanced systems, allows the client to override the default stack trace that is either generated by  {@link #fillInStackTrace()}when a throwable is constructed or deserialized when a throwable is read from a serialization stream. \u003cp\u003eIf the stack trace of this  {@code Throwable} {@linkplain Throwable#Throwable(String,Throwable,boolean,boolean) is notwritable}, calling this method has no effect other than validating its argument.\n * @param stackTrace the stack trace elements to be associated withthis  {@code Throwable}.  The specified array is copied by this call; changes in the specified array after the method invocation returns will have no affect on this  {@code Throwable}\u0027s stack trace.\n * @throws NullPointerException if {@code stackTrace} is{@code null} or if any of the elements of{@code stackTrace} are {@code null}\n * @since  1.4\n */\n","tf":{"freq":{"valid":1,"call":2,"linkplain":1,"stream":1,"allow":1,"client":1,"link":3,"use":1,"affect":1,"copi":1,"specifi":2,"associ":1,"relat":1,"read":1,"argument":1,"element":3,"except":1,"trace":12,"fill":1,"notwrit":1,"framework":1,"invoc":1,"print":2,"system":1,"either":1,"effect":1,"advanc":1,"string":1,"generat":1,"will":2,"pointer":1,"method":4,"chang":1,"withthi":1,"throwabl":8,"construct":1,"stack":12,"deseri":1,"serial":1,"design":1,"array":2},"maxFreq":12,"totalTerms":82},"loc":15}