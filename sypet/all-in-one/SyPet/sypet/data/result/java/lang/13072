{"id":13072,"className":"java.lang.StrictMath","methodName":"expm1","signature":"\u003cjava.lang.StrictMath: double expm1(double)\u003e","javadoc":"/** \n * Returns \u003ci\u003ee\u003c/i\u003e\u003csup\u003ex\u003c/sup\u003e\u0026nbsp;-1.  Note that for values of \u003ci\u003ex\u003c/i\u003e near 0, the exact sum of {@code expm1(x)}\u0026nbsp;+\u0026nbsp;1 is much closer to the true result of \u003ci\u003ee\u003c/i\u003e\u003csup\u003ex\u003c/sup\u003e than  {@code exp(x)}. \u003cp\u003eSpecial cases: \u003cul\u003e \u003cli\u003eIf the argument is NaN, the result is NaN. \u003cli\u003eIf the argument is positive infinity, then the result is positive infinity. \u003cli\u003eIf the argument is negative infinity, then the result is -1.0. \u003cli\u003eIf the argument is zero, then the result is a zero with the same sign as the argument. \u003c/ul\u003e\n * @param x   the exponent to raise \u003ci\u003ee\u003c/i\u003e to in the computation of\u003ci\u003ee\u003c/i\u003e\u003csup\u003e {@code x}\u003c/sup\u003e\u0026nbsp;-1.\n * @return  the value \u003ci\u003ee\u003c/i\u003e\u003csup\u003e{@code x}\u003c/sup\u003e\u0026nbsp;-\u0026nbsp;1.\n * @since 1.5\n */\n","tf":{"freq":{"expon":1,"argument":5,"result":5,"infin":3,"sum":1,"true":1,"zero":2,"sup":8,"closer":1,"much":1,"expm":2,"sign":1,"exp":1,"rais":1,"near":1,"exact":1,"comput":1,"negat":1,"special":1,"valu":2,"posit":2,"note":1,"nbsp":6},"maxFreq":8,"totalTerms":49},"loc":0}