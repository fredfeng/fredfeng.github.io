{"id":14127,"className":"java.lang.management.MemoryPoolMXBean","methodName":"setUsageThreshold","signature":"\u003cjava.lang.management.MemoryPoolMXBean: void setUsageThreshold(long)\u003e","javadoc":"/** \n * Sets the threshold of this memory pool to the given \u003ctt\u003ethreshold\u003c/tt\u003e value if this memory pool supports the usage threshold. The usage threshold crossing checking is enabled in this memory pool if the threshold is set to a positive value. The usage threshold crossing checking is disabled if it is set to zero.\n * @param threshold the new threshold value in bytes. Must be non-negative.\n * @throws IllegalArgumentException if \u003ctt\u003ethreshold\u003c/tt\u003e is negativeor greater than the maximum amount of memory for this memory pool if defined.\n * @throws UnsupportedOperationException if this memory pooldoes not support a usage threshold.\n * @throws java.lang.SecurityException if a security managerexists and the caller does not have ManagementPermission(\"control\").\n * @see #isUsageThresholdSupported\n * @see \u003ca href\u003d\"#UsageThreshold\"\u003eUsage threshold\u003c/a\u003e\n */\n","tf":{"freq":{"caller":1,"defin":1,"unsupport":1,"memori":6,"greater":1,"zero":1,"lang":1,"must":1,"amount":1,"given":1,"oper":1,"pool":4,"permiss":1,"valu":3,"href":1,"pooldo":1,"argument":1,"control":1,"except":3,"support":3,"check":2,"manag":1,"enabl":1,"negativeor":1,"managerexist":1,"illeg":1,"threshold":14,"non":1,"secur":2,"disabl":1,"maximum":1,"java":1,"negat":1,"usag":8,"posit":1,"cross":2},"maxFreq":14,"totalTerms":73},"loc":0}