{"id":14599,"className":"java.lang.invoke.MethodTypeForm","methodName":"primsAtEndOrder","signature":"\u003cjava.lang.invoke.MethodTypeForm: int[] primsAtEndOrder(java.lang.invoke.MethodType)\u003e","javadoc":"/** \n * Compute a new ordering of parameters so that all references are before all ints or longs, and all ints are before all longs. For this ordering, doubles count as longs, and all other primitive values count as ints. As a special case, if the parameters are already in the specified order, this method returns a null reference, rather than an array specifying a null permutation. \u003cp\u003e For example, the type  {@code (int,boolean,int,Object,String)void}produces the order  {@code} 3,4,0,1,2}}, the type {@code (long,int,String)void} produces {@code} 2,1,2}}, and the type  {@code (Object,int)Object} produces {@code null}.\n */\n","tf":{"freq":{"primit":1,"count":2,"paramet":2,"permut":1,"produc":3,"object":3,"type":3,"specifi":2,"prim":1,"order":5,"refer":2,"string":2,"exampl":1,"rather":1,"comput":1,"method":1,"valu":1,"special":1,"alreadi":1,"end":1,"array":1},"maxFreq":5,"totalTerms":36},"loc":33}