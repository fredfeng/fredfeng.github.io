{"id":14093,"className":"java.lang.management.MemoryUsage","methodName":"MemoryUsage","signature":"\u003cjava.lang.management.MemoryUsage: void MemoryUsage(long,long,long,long)\u003e","javadoc":"/** \n * Constructs a \u003ctt\u003eMemoryUsage\u003c/tt\u003e object.\n * @param init      the initial amount of memory in bytes thatthe Java virtual machine allocates; or \u003ctt\u003e-1\u003c/tt\u003e if undefined.\n * @param used      the amount of used memory in bytes.\n * @param committed the amount of committed memory in bytes.\n * @param max       the maximum amount of memory in bytes thatcan be used; or \u003ctt\u003e-1\u003c/tt\u003e if undefined.\n * @throws IllegalArgumentException if\u003cul\u003e \u003cli\u003e the value of \u003ctt\u003einit\u003c/tt\u003e or \u003ctt\u003emax\u003c/tt\u003e is negative but not \u003ctt\u003e-1\u003c/tt\u003e; or\u003c/li\u003e \u003cli\u003e the value of \u003ctt\u003eused\u003c/tt\u003e or \u003ctt\u003ecommitted\u003c/tt\u003e is negative; or\u003c/li\u003e \u003cli\u003e \u003ctt\u003eused\u003c/tt\u003e is greater than the value of \u003ctt\u003ecommitted\u003c/tt\u003e; or\u003c/li\u003e \u003cli\u003e \u003ctt\u003ecommitted\u003c/tt\u003e is greater than the value of \u003ctt\u003emax\u003c/tt\u003e \u003ctt\u003emax\u003c/tt\u003e if defined.\u003c/li\u003e \u003c/ul\u003e\n */\n","tf":{"freq":{"argument":1,"virtual":1,"defin":1,"except":1,"memori":6,"greater":2,"max":4,"use":5,"init":2,"object":1,"illeg":1,"amount":4,"thatcan":1,"machin":1,"commit":5,"maximum":1,"thatth":1,"negat":2,"valu":4,"java":1,"usag":2,"construct":1,"initi":1,"undefin":2,"alloc":1},"maxFreq":6,"totalTerms":52},"loc":31}