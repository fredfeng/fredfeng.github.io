{"id":13170,"className":"java.lang.Character","methodName":"isJavaIdentifierStart","signature":"\u003cjava.lang.Character: boolean isJavaIdentifierStart(char)\u003e","javadoc":"/** \n * Determines if the specified character is permissible as the first character in a Java identifier. \u003cp\u003e A character may start a Java identifier if and only if one of the following conditions is true: \u003cul\u003e \u003cli\u003e  {@link #isLetter(char) isLetter(ch)} returns {@code true}\u003cli\u003e  {@link #getType(char) getType(ch)} returns {@code LETTER_NUMBER}\u003cli\u003e  {@code ch} is a currency symbol (such as {@code \u0027$\u0027}) \u003cli\u003e  {@code ch} is a connecting punctuation character (such as {@code \u0027_\u0027}). \u003c/ul\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e This method cannot handle \u003ca href\u003d\"#supplementary\"\u003e supplementary characters\u003c/a\u003e. To support all Unicode characters, including supplementary characters, use the  {@link #isJavaIdentifierStart(int)} method.\n * @param ch the character to be tested.\n * @return  {@code true} if the character may start a Java identifier;{@code false} otherwise.\n * @see Character#isJavaIdentifierPart(char)\n * @see Character#isLetter(char)\n * @see Character#isUnicodeIdentifierStart(char)\n * @see javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n * @since   1.1\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"supplementari":3,"model":1,"connect":1,"test":1,"one":1,"link":3,"currenc":1,"use":1,"identifi":8,"type":2,"lang":1,"version":1,"specifi":1,"sequenc":1,"javax":1,"permiss":1,"href":1,"punctuat":1,"note":1,"follow":1,"condit":1,"may":2,"includ":1,"support":1,"symbol":1,"charact":12,"letter":3,"true":3,"handl":1,"start":5,"determin":1,"unicod":2,"sourc":1,"java":6,"method":2,"part":1,"first":1},"maxFreq":12,"totalTerms":78},"loc":3}