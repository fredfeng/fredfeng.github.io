{"id":13202,"className":"java.lang.Character","methodName":"isMirrored","signature":"\u003cjava.lang.Character: boolean isMirrored(char)\u003e","javadoc":"/** \n * Determines whether the character is mirrored according to the Unicode specification.  Mirrored characters should have their glyphs horizontally mirrored when displayed in text that is right-to-left.  For example,  {@code \u0027\\u005Cu0028\u0027} LEFTPARENTHESIS is semantically defined to be an \u003ci\u003eopening parenthesis\u003c/i\u003e.  This will appear as a \"(\" in text that is left-to-right but as a \")\" in text that is right-to-left. \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e This method cannot handle \u003ca href\u003d\"#supplementary\"\u003e supplementary characters\u003c/a\u003e. To support all Unicode characters, including supplementary characters, use the  {@link #isMirrored(int)} method.\n * @param ch {@code char} for which the mirrored property is requested\n * @return {@code true} if the char is mirrored, {@code false}if the  {@code char} is not mirrored or is not defined.\n * @since 1.4\n */\n","tf":{"freq":{"fals":1,"supplementari":3,"defin":2,"appear":1,"link":1,"use":1,"whether":1,"mirror":8,"open":1,"request":1,"semant":1,"horizont":1,"left":3,"right":3,"href":1,"note":1,"text":3,"includ":1,"support":1,"charact":5,"glyph":1,"true":1,"display":1,"accord":1,"handl":1,"specif":1,"parenthesi":1,"determin":1,"unicod":2,"exampl":1,"will":1,"method":2,"properti":1},"maxFreq":8,"totalTerms":55},"loc":3}