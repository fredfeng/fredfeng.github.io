{"id":13166,"className":"java.lang.Character","methodName":"isJavaLetter","signature":"\u003cjava.lang.Character: boolean isJavaLetter(char)\u003e","javadoc":"/** \n * Determines if the specified character is permissible as the first character in a Java identifier. \u003cp\u003e A character may start a Java identifier if and only if one of the following is true: \u003cul\u003e \u003cli\u003e  {@link #isLetter(char) isLetter(ch)} returns {@code true}\u003cli\u003e  {@link #getType(char) getType(ch)} returns {@code LETTER_NUMBER}\u003cli\u003e  {@code ch} is a currency symbol (such as {@code \u0027$\u0027}) \u003cli\u003e  {@code ch} is a connecting punctuation character (such as {@code \u0027_\u0027}). \u003c/ul\u003e\n * @param ch the character to be tested.\n * @return  {@code true} if the character may start a Javaidentifier;  {@code false} otherwise.\n * @see Character#isJavaLetterOrDigit(char)\n * @see Character#isJavaIdentifierStart(char)\n * @see Character#isJavaIdentifierPart(char)\n * @see Character#isLetter(char)\n * @see Character#isLetterOrDigit(char)\n * @see Character#isUnicodeIdentifierStart(char)\n * @since   1.02\n * @deprecated Replaced by isJavaIdentifierStart(char).\n */\n","tf":{"freq":{"fals":1,"otherwis":1,"deprec":1,"connect":1,"test":1,"one":1,"link":2,"currenc":1,"identifi":6,"type":2,"specifi":1,"permiss":1,"punctuat":1,"follow":1,"may":2,"symbol":1,"charact":12,"letter":6,"true":3,"digit":2,"start":5,"replac":1,"determin":1,"unicod":1,"java":7,"javaidentifi":1,"part":1,"first":1},"maxFreq":12,"totalTerms":65},"loc":3}