{"id":14010,"className":"java.lang.Double","methodName":"equals","signature":"\u003cjava.lang.Double: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares this object against the specified object.  The result is  {@code true} if and only if the argument is not{@code null} and is a {@code Double} object thatrepresents a  {@code double} that has the same value as the{@code double} represented by this object. For thispurpose, two  {@code double} values are considered to bethe same if and only if the method  {@link #doubleToLongBits(double)} returns the identical{@code long} value when applied to each.\u003cp\u003eNote that in most cases, for two instances of class {@code Double},  {@code d1} and {@code d2}, the value of  {@code d1.equals(d2)} is {@code true} if andonly if \u003cblockquote\u003e {@code d1.doubleValue() \u003d\u003d d2.doubleValue()}\u003c/blockquote\u003e \u003cp\u003ealso has the value  {@code true}. However, there are two exceptions: \u003cul\u003e \u003cli\u003eIf  {@code d1} and {@code d2} both represent{@code Double.NaN}, then the  {@code equals} methodreturns  {@code true}, even though {@code Double.NaN\u003d\u003dDouble.NaN} has the value{@code false}. \u003cli\u003eIf  {@code d1} represents {@code +0.0} while{@code d2} represents {@code -0.0}, or vice versa, the  {@code equal} test has the value {@code false}, even though  {@code +0.0\u003d\u003d-0.0} has the value {@code true}. \u003c/ul\u003e This definition allows hash tables to operate properly.\n * @param obj   the object to compare with.\n * @return  {@code true} if the objects are the same;{@code false} otherwise.\n * @see java.lang.Double#doubleToLongBits(double)\n */\n","tf":{"freq":{"otherwis":1,"fals":3,"result":1,"allow":1,"test":1,"vice":1,"link":1,"object":6,"beth":1,"lang":1,"though":2,"consid":1,"specifi":1,"ident":1,"oper":1,"blockquot":2,"valu":10,"proper":1,"thispurpos":1,"howev":1,"note":1,"versa":1,"argument":1,"methodreturn":1,"except":1,"hash":1,"repres":4,"true":6,"equal":4,"thatrepres":1,"instanc":1,"two":3,"bit":2,"appli":1,"andon":1,"tabl":1,"definit":1,"java":1,"obj":1,"even":2,"method":1,"compar":2,"also":1},"maxFreq":10,"totalTerms":77},"loc":5}