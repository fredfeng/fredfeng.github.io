{"id":13894,"className":"java.lang.Object","methodName":"notifyAll","signature":"\u003cjava.lang.Object: void notifyAll()\u003e","javadoc":"/** \n * Wakes up all threads that are waiting on this object\u0027s monitor. A thread waits on an object\u0027s monitor by calling one of the {@code wait} methods.\u003cp\u003e The awakened threads will not be able to proceed until the current thread relinquishes the lock on this object. The awakened threads will compete in the usual manner with any other threads that might be actively competing to synchronize on this object; for example, the awakened threads enjoy no reliable privilege or disadvantage in being the next thread to lock this object. \u003cp\u003e This method should only be called by a thread that is the owner of this object\u0027s monitor. See the  {@code notify} method for adescription of the ways in which a thread can become the owner of a monitor.\n * @exception IllegalMonitorStateException  if the current thread is notthe owner of this object\u0027s monitor.\n * @see java.lang.Object#notify()\n * @see java.lang.Object#wait()\n */\n","tf":{"freq":{"call":2,"might":1,"compet":2,"next":1,"one":1,"state":1,"way":1,"abl":1,"object":9,"wait":4,"activ":1,"lang":2,"becom":1,"wake":1,"thread":11,"proceed":1,"current":2,"privileg":1,"awaken":3,"notifi":3,"usual":1,"except":2,"notth":1,"monitor":6,"lock":2,"disadvantag":1,"enjoy":1,"illeg":1,"adescript":1,"relinquish":1,"reliabl":1,"owner":3,"will":2,"exampl":1,"java":2,"method":3,"manner":1},"maxFreq":11,"totalTerms":79},"loc":0}