{"id":14299,"className":"java.lang.reflect.Proxy","methodName":"getInvocationHandler","signature":"\u003cjava.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)\u003e","javadoc":"/** \n * Returns the invocation handler for the specified proxy instance.\n * @param proxy the proxy instance to return the invocation handler for\n * @return  the invocation handler for the proxy instance\n * @throws IllegalArgumentException if the argument is not aproxy instance\n */\n","tf":{"freq":{"argument":2,"except":1,"proxi":4,"aproxi":1,"illeg":1,"invoc":4,"instanc":4,"specifi":1,"handler":4},"maxFreq":4,"totalTerms":22},"loc":11}