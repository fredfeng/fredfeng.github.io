{"id":13881,"className":"java.lang.Runtime","methodName":"getLocalizedOutputStream","signature":"\u003cjava.lang.Runtime: java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream)\u003e","javadoc":"/** \n * Creates a localized version of an output stream. This method takes an \u003ccode\u003eOutputStream\u003c/code\u003e and returns an \u003ccode\u003eOutputStream\u003c/code\u003e equivalent to the argument in all respects except that it is localized: as Unicode characters are written to the stream, they are automatically converted to the local character set. \u003cp\u003e If the argument is already a localized stream, it may be returned as the result.\n * @deprecated As of JDK\u0026nbsp;1.1, the preferred way to translate aUnicode character stream into a byte stream in the local encoding is via the \u003ccode\u003eOutputStreamWriter\u003c/code\u003e, \u003ccode\u003eBufferedWriter\u003c/code\u003e, and \u003ccode\u003ePrintWriter\u003c/code\u003e classes.\n * @param out OutputStream to localize\n * @return     a localized output stream\n * @see java.io.OutputStream\n * @see java.io.BufferedWriter#BufferedWriter(java.io.Writer)\n * @see java.io.OutputStreamWriter#OutputStreamWriter(java.io.OutputStream)\n * @see java.io.PrintWriter#PrintWriter(java.io.OutputStream)\n */\n","tf":{"freq":{"result":1,"stream":16,"deprec":1,"via":1,"convert":1,"way":1,"automat":1,"version":1,"buffer":3,"equival":1,"written":1,"writer":10,"nbsp":1,"argument":2,"except":1,"may":1,"creat":1,"charact":3,"translat":1,"print":3,"encod":1,"take":1,"unicod":2,"java":7,"method":1,"alreadi":1,"local":8,"output":12,"prefer":1,"respect":1},"maxFreq":16,"totalTerms":86},"loc":3}