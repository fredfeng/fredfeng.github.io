{"id":14044,"className":"java.lang.ThreadGroup","methodName":"resume","signature":"\u003cjava.lang.ThreadGroup: void resume()\u003e","javadoc":"/** \n * Resumes all threads in this thread group. \u003cp\u003e First, the \u003ccode\u003echeckAccess\u003c/code\u003e method of this thread group is called with no arguments; this may result in a security exception. \u003cp\u003e This method then calls the \u003ccode\u003eresume\u003c/code\u003e method on all the threads in this thread group and in all of its sub groups.\n * @exception SecurityException  if the current thread is not allowed toaccess this thread group or any of the threads in the thread group.\n * @see java.lang.SecurityException\n * @see java.lang.Thread#resume()\n * @see java.lang.ThreadGroup#checkAccess()\n * @since      JDK1.0\n * @deprecated    This method is used solely in conjunction with\u003ctt\u003eThread.suspend\u003c/tt\u003e and \u003ctt\u003eThreadGroup.suspend\u003c/tt\u003e, both of which have been deprecated, as they are inherently deadlock-prone.  See  {@link Thread#suspend} for details.\n */\n","tf":{"freq":{"suspend":3,"result":1,"call":2,"detail":1,"sub":1,"deprec":2,"allow":1,"link":1,"use":1,"resum":4,"lang":3,"thread":14,"current":1,"sole":1,"deadlock":1,"argument":1,"toaccess":1,"may":1,"except":4,"check":2,"access":2,"prone":1,"inher":1,"conjunct":1,"secur":3,"method":4,"java":3,"group":8,"first":1},"maxFreq":14,"totalTerms":70},"loc":19}