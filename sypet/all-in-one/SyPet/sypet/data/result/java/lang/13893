{"id":13893,"className":"java.lang.Object","methodName":"notify","signature":"\u003cjava.lang.Object: void notify()\u003e","javadoc":"/** \n * Wakes up a single thread that is waiting on this object\u0027s monitor. If any threads are waiting on this object, one of them is chosen to be awakened. The choice is arbitrary and occurs at the discretion of the implementation. A thread waits on an object\u0027s monitor by calling one of the  {@code wait} methods.\u003cp\u003e The awakened thread will not be able to proceed until the current thread relinquishes the lock on this object. The awakened thread will compete in the usual manner with any other threads that might be actively competing to synchronize on this object; for example, the awakened thread enjoys no reliable privilege or disadvantage in being the next thread to lock this object. \u003cp\u003e This method should only be called by a thread that is the owner of this object\u0027s monitor. A thread becomes the owner of the object\u0027s monitor in one of three ways: \u003cul\u003e \u003cli\u003eBy executing a synchronized instance method of that object. \u003cli\u003eBy executing the body of a  {@code synchronized} statementthat synchronizes on the object. \u003cli\u003eFor objects of type  {@code Class,} by executing asynchronized static method of that class. \u003c/ul\u003e \u003cp\u003e Only one thread at a time can own an object\u0027s monitor.\n * @exception IllegalMonitorStateException  if the current thread is notthe owner of this object\u0027s monitor.\n * @see java.lang.Object#notifyAll()\n * @see java.lang.Object#wait()\n */\n","tf":{"freq":{"singl":1,"abl":1,"wait":5,"type":1,"arbitrari":1,"time":1,"becom":1,"thread":13,"proceed":1,"three":1,"notifi":2,"awaken":4,"except":2,"monitor":7,"statementthat":1,"instanc":1,"bodi":1,"reliabl":1,"will":2,"owner":3,"execut":3,"call":2,"discret":1,"might":1,"asynchron":1,"compet":2,"one":4,"next":1,"state":1,"way":1,"object":15,"chosen":1,"activ":1,"lang":2,"wake":1,"current":2,"privileg":1,"usual":1,"notth":1,"lock":2,"choic":1,"disadvantag":1,"enjoy":1,"illeg":1,"relinquish":1,"exampl":1,"java":2,"method":4,"manner":1,"occur":1},"maxFreq":15,"totalTerms":108},"loc":0}