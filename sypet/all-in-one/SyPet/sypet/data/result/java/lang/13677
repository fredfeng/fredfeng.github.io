{"id":13677,"className":"java.lang.Class","methodName":"isAssignableFrom","signature":"\u003cjava.lang.Class: boolean isAssignableFrom(java.lang.Class)\u003e","javadoc":"/** \n * Determines if the class or interface represented by this {@code Class} object is either the same as, or is a superclass orsuperinterface of, the class or interface represented by the specified {@code Class} parameter. It returns {@code true} if so;otherwise it returns  {@code false}. If this  {@code Class}object represents a primitive type, this method returns {@code true} if the specified {@code Class} parameter isexactly this  {@code Class} object; otherwise it returns{@code false}. \u003cp\u003e Specifically, this method tests whether the type represented by the specified  {@code Class} parameter can be converted to the typerepresented by this  {@code Class} object via an identity conversionor via a widening reference conversion. See \u003cem\u003eThe Java Language Specification\u003c/em\u003e, sections 5.1.1 and 5.1.4 , for details.\n * @param cls the {@code Class} object to be checked\n * @return the {@code boolean} value indicating whether objects of thetype  {@code cls} can be assigned to objects of this class\n * @exception NullPointerException if the specified Class parameter isnull.\n * @since JDK1.1\n */\n","tf":{"freq":{"fals":2,"otherwis":2,"primit":1,"detail":1,"orsuperinterfac":1,"assign":2,"via":2,"thetyp":1,"test":1,"convers":1,"convert":1,"languag":1,"object":7,"type":2,"typerepres":1,"whether":2,"specifi":4,"indic":1,"ident":1,"refer":1,"isnul":1,"valu":1,"conversionor":1,"except":2,"isexact":1,"cls":2,"check":1,"repres":4,"paramet":4,"true":2,"section":1,"either":1,"specif":2,"superclass":1,"widen":1,"determin":1,"pointer":1,"java":1,"method":2},"maxFreq":7,"totalTerms":65},"loc":0}