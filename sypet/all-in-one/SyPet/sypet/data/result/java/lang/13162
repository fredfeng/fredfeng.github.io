{"id":13162,"className":"java.lang.Character","methodName":"isLetter","signature":"\u003cjava.lang.Character: boolean isLetter(char)\u003e","javadoc":"/** \n * Determines if the specified character is a letter. \u003cp\u003e A character is considered to be a letter if its general category type, provided by  {@code Character.getType(ch)}, is any of the following: \u003cul\u003e \u003cli\u003e  {@code UPPERCASE_LETTER}\u003cli\u003e  {@code LOWERCASE_LETTER}\u003cli\u003e  {@code TITLECASE_LETTER}\u003cli\u003e  {@code MODIFIER_LETTER}\u003cli\u003e  {@code OTHER_LETTER}\u003c/ul\u003e Not all letters have case. Many characters are letters but are neither uppercase nor lowercase nor titlecase. \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e This method cannot handle \u003ca href\u003d\"#supplementary\"\u003e supplementary characters\u003c/a\u003e. To support all Unicode characters, including supplementary characters, use the  {@link #isLetter(int)} method.\n * @param ch   the character to be tested.\n * @return  {@code true} if the character is a letter;{@code false} otherwise.\n * @see Character#isDigit(char)\n * @see Character#isJavaIdentifierStart(char)\n * @see Character#isJavaLetter(char)\n * @see Character#isJavaLetterOrDigit(char)\n * @see Character#isLetterOrDigit(char)\n * @see Character#isLowerCase(char)\n * @see Character#isTitleCase(char)\n * @see Character#isUnicodeIdentifierStart(char)\n * @see Character#isUpperCase(char)\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"supplementari":3,"lower":1,"test":1,"link":1,"use":1,"identifi":2,"type":2,"consid":1,"specifi":1,"upper":1,"uppercas":1,"titlecas":1,"href":1,"note":1,"follow":1,"mani":1,"categori":1,"lowercas":1,"support":1,"includ":1,"charact":18,"letter":10,"titl":1,"true":1,"provid":1,"general":1,"handl":1,"digit":3,"neither":1,"start":2,"determin":1,"unicod":2,"java":3,"method":2},"maxFreq":18,"totalTerms":73},"loc":3}