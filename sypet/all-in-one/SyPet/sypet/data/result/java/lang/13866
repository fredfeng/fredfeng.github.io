{"id":13866,"className":"java.lang.Runtime","methodName":"exec","signature":"\u003cjava.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)\u003e","javadoc":"/** \n * Executes the specified string command in a separate process with the specified environment and working directory. \u003cp\u003eThis is a convenience method.  An invocation of the form \u003ctt\u003eexec(command, envp, dir)\u003c/tt\u003e behaves in exactly the same way as the invocation \u003ctt\u003e {@link #exec(String[],String[],File) exec}(cmdarray, envp, dir)\u003c/tt\u003e, where \u003ccode\u003ecmdarray\u003c/code\u003e is an array of all the tokens in \u003ccode\u003ecommand\u003c/code\u003e. \u003cp\u003eMore precisely, the \u003ccode\u003ecommand\u003c/code\u003e string is broken into tokens using a  {@link StringTokenizer} created by the call\u003ccode\u003enew  {@link StringTokenizer}(command)\u003c/code\u003e with no further modification of the character categories.  The tokens produced by the tokenizer are then placed in the new string array \u003ccode\u003ecmdarray\u003c/code\u003e, in the same order.\n * @param command   a specified system command.\n * @param envp      array of strings, each element of whichhas environment variable settings in the format \u003ci\u003ename\u003c/i\u003e\u003d\u003ci\u003evalue\u003c/i\u003e, or \u003ctt\u003enull\u003c/tt\u003e if the subprocess should inherit the environment of the current process.\n * @param dir       the working directory of the subprocess, or\u003ctt\u003enull\u003c/tt\u003e if the subprocess should inherit the working directory of the current process.\n * @return  A new {@link Process} object for managing the subprocess\n * @throws SecurityException If a security manager exists and its {@link SecurityManager#checkExec checkExec}method doesn\u0027t allow creation of the subprocess\n * @throws IOException If an I/O error occurs\n * @throws NullPointerException If \u003ccode\u003ecommand\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, or one of the elements of \u003ccode\u003eenvp\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException If \u003ccode\u003ecommand\u003c/code\u003e is empty\n * @see ProcessBuilder\n * @since 1.3\n */\n","tf":{"freq":{"subprocess":5,"behav":1,"variabl":1,"envp":4,"specifi":3,"file":1,"exact":1,"precis":1,"place":1,"argument":1,"work":3,"element":2,"except":4,"categori":1,"form":1,"creat":1,"charact":1,"builder":1,"environ":3,"format":1,"invoc":2,"system":1,"separ":1,"pointer":1,"exec":6,"execut":1,"array":3,"creation":1,"call":1,"allow":1,"cmdarray":3,"directori":3,"one":1,"link":5,"way":1,"use":1,"object":1,"whichha":1,"order":1,"token":6,"dir":3,"name":1,"command":9,"current":2,"valu":1,"exist":1,"conveni":1,"error":1,"check":2,"manag":3,"produc":1,"illeg":1,"empti":1,"process":5,"broken":1,"secur":3,"string":8,"method":2,"modif":1,"occur":1},"maxFreq":9,"totalTerms":126},"loc":10}