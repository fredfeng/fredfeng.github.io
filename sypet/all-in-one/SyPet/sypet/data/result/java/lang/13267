{"id":13267,"className":"java.lang.SecurityManager","methodName":"checkRead","signature":"\u003cjava.lang.SecurityManager: void checkRead(java.lang.String,java.lang.Object)\u003e","javadoc":"/** \n * Throws a \u003ccode\u003eSecurityException\u003c/code\u003e if the specified security context is not allowed to read the file specified by the string argument. The context must be a security context returned by a previous call to \u003ccode\u003egetSecurityContext\u003c/code\u003e. \u003cp\u003e If \u003ccode\u003econtext\u003c/code\u003e is an instance of \u003ccode\u003eAccessControlContext\u003c/code\u003e then the \u003ccode\u003eAccessControlContext.checkPermission\u003c/code\u003e method will be invoked with the \u003ccode\u003eFilePermission(file,\"read\")\u003c/code\u003e permission. \u003cp\u003e If \u003ccode\u003econtext\u003c/code\u003e is not an instance of \u003ccode\u003eAccessControlContext\u003c/code\u003e then a \u003ccode\u003eSecurityException\u003c/code\u003e is thrown. \u003cp\u003e If you override this method, then you should make a call to \u003ccode\u003esuper.checkRead\u003c/code\u003e at the point the overridden method would normally throw an exception.\n * @param file      the system-dependent filename.\n * @param context   a system-dependent security context.\n * @exception SecurityException  if the specified security contextis not an instance of \u003ccode\u003eAccessControlContext\u003c/code\u003e (e.g., is \u003ccode\u003enull\u003c/code\u003e), or does not have permission to read the specified file.\n * @exception NullPointerException if the \u003ccode\u003efile\u003c/code\u003e argument is\u003ccode\u003enull\u003c/code\u003e.\n * @see java.lang.SecurityManager#getSecurityContext()\n * @see java.security.AccessControlContext#checkPermission(java.security.Permission)\n */\n","tf":{"freq":{"call":2,"allow":1,"overridden":1,"normal":1,"lang":1,"must":1,"specifi":4,"file":6,"permiss":6,"read":5,"argument":2,"control":5,"except":7,"thrown":1,"previous":1,"check":4,"manag":1,"depend":2,"invok":1,"contexti":1,"filenam":1,"access":5,"instanc":3,"point":1,"system":2,"secur":12,"string":1,"context":14,"will":1,"pointer":1,"java":3,"method":3,"make":1},"maxFreq":14,"totalTerms":101},"loc":5}