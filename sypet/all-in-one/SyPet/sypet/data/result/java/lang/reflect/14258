{"id":14258,"className":"java.lang.reflect.Constructor","methodName":"toString","signature":"\u003cjava.lang.reflect.Constructor: java.lang.String toString()\u003e","javadoc":"/** \n * Returns a string describing this  {@code Constructor}.  The string is formatted as the constructor access modifiers, if any, followed by the fully-qualified name of the declaring class, followed by a parenthesized, comma-separated list of the constructor\u0027s formal parameter types.  For example: \u003cpre\u003e public java.util.Hashtable(int,float) \u003c/pre\u003e \u003cp\u003eThe only possible modifiers for constructors are the access modifiers  {@code public},  {@code protected} or{@code private}.  Only one of these may appear, or none if the constructor has default (package) access.\n */\n","tf":{"freq":{"appear":1,"one":1,"possibl":1,"type":1,"parenthes":1,"declar":1,"name":1,"none":1,"follow":2,"constructor":5,"may":1,"comma":1,"hashtabl":1,"paramet":1,"describ":1,"fulli":1,"list":1,"format":1,"access":3,"formal":1,"separ":1,"pre":2,"string":3,"modifi":3,"exampl":1,"java":1,"qualifi":1,"util":1},"maxFreq":5,"totalTerms":40},"loc":30}