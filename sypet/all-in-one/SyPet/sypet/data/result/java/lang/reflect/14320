{"id":14320,"className":"java.lang.reflect.Field","methodName":"getFloat","signature":"\u003cjava.lang.reflect.Field: float getFloat(java.lang.Object)\u003e","javadoc":"/** \n * Gets the value of a static or instance field of type {@code float} or of another primitive type convertible totype  {@code float} via a widening conversion.\n * @param obj the object to extract the {@code float} valuefrom\n * @return the value of the field converted to type {@code float}\n * @exception IllegalAccessException    if this {@code Field} objectis enforcing Java language access control and the underlying field is inaccessible.\n * @exception IllegalArgumentException  if the specified object is notan instance of the class or interface declaring the underlying field (or a subclass or implementor thereof), or if the field value cannot be converted to the type  {@code float} by awidening conversion.\n * @exception NullPointerException      if the specified object is nulland the field is an instance field.\n * @exception ExceptionInInitializerError if the initialization provokedby this method fails.\n * @see Field#get\n */\n","tf":{"freq":{"primit":1,"inaccess":1,"objecti":1,"via":1,"nulland":1,"convers":2,"convert":3,"languag":1,"anoth":1,"object":3,"awiden":1,"type":4,"valuefrom":1,"specifi":2,"fail":1,"declar":1,"valu":3,"initi":2,"implementor":1,"argument":1,"control":1,"except":8,"error":1,"enforc":1,"totyp":1,"provokedbi":1,"access":2,"illeg":2,"extract":1,"instanc":3,"field":9,"notan":1,"thereof":1,"widen":1,"subclass":1,"pointer":1,"method":1,"obj":1,"java":1},"maxFreq":9,"totalTerms":70},"loc":3}