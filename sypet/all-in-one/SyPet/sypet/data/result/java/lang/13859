{"id":13859,"className":"java.lang.Runtime","methodName":"exit","signature":"\u003cjava.lang.Runtime: void exit(int)\u003e","javadoc":"/** \n * Terminates the currently running Java virtual machine by initiating its shutdown sequence.  This method never returns normally.  The argument serves as a status code; by convention, a nonzero status code indicates abnormal termination. \u003cp\u003e The virtual machine\u0027s shutdown sequence consists of two phases.  In the first phase all registered  {@link #addShutdownHook shutdown hooks}, if any, are started in some unspecified order and allowed to run concurrently until they finish.  In the second phase all uninvoked finalizers are run if  {@link #runFinalizersOnExit finalization-on-exit}has been enabled.  Once this is done the virtual machine  {@link #halt halts}. \u003cp\u003e If this method is invoked after the virtual machine has begun its shutdown sequence then if shutdown hooks are being run this method will block indefinitely.  If shutdown hooks have already been run and on-exit finalization has been enabled then this method halts the virtual machine with the given status code if the status is nonzero; otherwise, it blocks indefinitely. \u003cp\u003e The \u003ctt\u003e {@link System#exit(int) System.exit}\u003c/tt\u003e method is the conventional and convenient means of invoking this method. \u003cp\u003e\n * @param status Termination status.  By convention, a nonzero status code indicates abnormal termination.\n * @throws SecurityException If a security manager is present and its \u003ctt\u003e {@link SecurityManager#checkExit checkExit}\u003c/tt\u003e method does not permit exiting with the specified status\n * @see java.lang.SecurityException\n * @see java.lang.SecurityManager#checkExit(int)\n * @see #addShutdownHook\n * @see #removeShutdownHook\n * @see #runFinalizersOnExit\n * @see #halt(int)\n */\n","tf":{"freq":{"second":1,"permit":1,"normal":1,"specifi":1,"given":1,"sequenc":3,"nonzero":3,"argument":1,"hook":6,"except":2,"consist":1,"status":8,"enabl":2,"invok":2,"done":1,"remov":1,"exit":11,"present":1,"finish":1,"machin":5,"system":2,"start":1,"will":1,"phase":3,"virtual":5,"otherwis":1,"unspecifi":1,"convent":3,"allow":1,"concurr":1,"link":5,"block":2,"run":7,"add":2,"lang":2,"indic":2,"order":1,"current":1,"mean":1,"regist":1,"serv":1,"initi":1,"conveni":1,"shutdown":9,"uninvok":1,"check":3,"manag":3,"abnorm":2,"two":1,"termin":4,"never":1,"secur":5,"begun":1,"java":3,"method":7,"indefinit":2,"alreadi":1,"halt":4,"first":1},"maxFreq":11,"totalTerms":147},"loc":7}