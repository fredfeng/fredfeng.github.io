{"id":13051,"className":"java.lang.StrictMath","methodName":"random","signature":"\u003cjava.lang.StrictMath: double random()\u003e","javadoc":"/** \n * Returns a  {@code double} value with a positive sign, greaterthan or equal to  {@code 0.0} and less than {@code 1.0}. Returned values are chosen pseudorandomly with (approximately) uniform distribution from that range. \u003cp\u003eWhen this method is first called, it creates a single new pseudorandom-number generator, exactly as if by the expression \u003cblockquote\u003e {@code new java.util.Random()}\u003c/blockquote\u003e This new pseudorandom-number generator is used thereafter for all calls to this method and is used nowhere else. \u003cp\u003eThis method is properly synchronized to allow correct use by more than one thread. However, if many threads need to generate pseudorandom numbers at a great rate, it may reduce contention for each thread to have its own pseudorandom number generator.\n * @return  a pseudorandom {@code double} greater than or equalto  {@code 0.0} and less than {@code 1.0}.\n * @see Random#nextDouble()\n */\n","tf":{"freq":{"need":1,"call":2,"greater":1,"allow":1,"singl":1,"next":1,"one":1,"distribut":1,"use":3,"approxim":1,"chosen":1,"express":1,"rate":1,"correct":1,"rang":1,"blockquot":2,"thread":3,"exact":1,"valu":2,"proper":1,"howev":1,"less":2,"mani":1,"may":1,"nowher":1,"uniform":1,"creat":1,"random":3,"equal":1,"number":4,"els":1,"greaterthan":1,"content":1,"sign":1,"great":1,"generat":4,"equalto":1,"method":3,"java":1,"reduc":1,"thereaft":1,"posit":1,"first":1,"util":1,"pseudorandom":6},"maxFreq":6,"totalTerms":68},"loc":5}