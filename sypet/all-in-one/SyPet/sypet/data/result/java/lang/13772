{"id":13772,"className":"java.lang.AbstractStringBuilder","methodName":"appendCodePoint","signature":"\u003cjava.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendCodePoint(int)\u003e","javadoc":"/** \n * Appends the string representation of the  {@code codePoint}argument to this sequence. \u003cp\u003e The argument is appended to the contents of this sequence. The length of this sequence increases by {@link Character#charCount(int) Character.charCount(codePoint)}. \u003cp\u003e The overall effect is exactly as if the argument were converted to a  {@code char} array by the method{@link Character#toChars(int)} and the character in that arraywere then  {@link #append(char[]) appended} to this charactersequence.\n * @param codePoint   a Unicode code point\n * @return  a reference to this object.\n * @exception IllegalArgumentException if the specified{@code codePoint} isn\u0027t a valid Unicode code point\n */\n","tf":{"freq":{"increas":1,"valid":1,"count":2,"link":3,"convert":1,"object":1,"specifi":1,"charactersequ":1,"refer":1,"sequenc":3,"exact":1,"length":1,"argument":4,"append":5,"except":2,"charact":4,"illeg":1,"represent":1,"content":1,"point":7,"effect":1,"string":1,"unicod":2,"method":1,"arraywer":1,"array":1},"maxFreq":7,"totalTerms":49},"loc":16}