{"id":14471,"className":"java.lang.invoke.MethodHandles","methodName":"insertArguments","signature":"\u003cjava.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,int,java.lang.Object[])\u003e","javadoc":"/** \n * Provides a target method handle with one or more \u003cem\u003ebound arguments\u003c/em\u003e in advance of the method handle\u0027s invocation. The formal parameters to the target corresponding to the bound arguments are called \u003cem\u003ebound parameters\u003c/em\u003e. Returns a new method handle which saves away the bound arguments. When it is invoked, it receives arguments for any non-bound parameters, binds the saved arguments to their corresponding parameters, and calls the original target. \u003cp\u003e The type of the new method handle will drop the types for the bound parameters from the original target type, since the new method handle will no longer require those arguments to be supplied by its callers. \u003cp\u003e Each given argument object must match the corresponding bound parameter type. If a bound parameter type is a primitive, the argument object must be a wrapper, and will be unboxed to produce the primitive value. \u003cp\u003e The  {@code pos} argument selects which parameters are to be bound.It may range between zero and \u003ci\u003eN-L\u003c/i\u003e (inclusively), where \u003ci\u003eN\u003c/i\u003e is the arity of the target method handle and \u003ci\u003eL\u003c/i\u003e is the length of the values array.\n * @param target the method handle to invoke after the argument is inserted\n * @param pos where to insert the argument (zero for the first)\n * @param values the series of arguments to insert\n * @return a method handle which inserts an additional argument,before calling the original method handle\n * @throws NullPointerException if the target or the {@code values} array is null\n * @see MethodHandle#bindTo\n */\n","tf":{"freq":{"save":2,"drop":1,"type":5,"zero":2,"must":2,"pos":2,"requir":1,"given":1,"wrapper":1,"rang":1,"longer":1,"argument":14,"except":1,"invok":2,"select":1,"provid":1,"invoc":1,"non":1,"formal":1,"advanc":1,"will":3,"pointer":1,"match":1,"array":2,"caller":1,"call":3,"primit":2,"seri":1,"correspond":3,"one":1,"object":2,"inclus":1,"length":1,"valu":4,"addit":1,"ariti":1,"may":1,"origin":3,"paramet":8,"receiv":1,"suppli":1,"produc":1,"handl":10,"away":1,"target":7,"method":10,"insert":5,"bind":2,"unbox":1,"first":1,"bound":9},"maxFreq":14,"totalTerms":131},"loc":27}