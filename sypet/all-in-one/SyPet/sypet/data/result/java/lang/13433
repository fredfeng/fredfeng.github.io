{"id":13433,"className":"java.lang.String","methodName":"lastIndexOf","signature":"\u003cjava.lang.String: int lastIndexOf(int,int)\u003e","javadoc":"/** \n * Returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index. For values of \u003ccode\u003ech\u003c/code\u003e in the range from 0 to 0xFFFF (inclusive), the index returned is the largest value \u003ci\u003ek\u003c/i\u003e such that: \u003cblockquote\u003e\u003cpre\u003e (this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) \u0026\u0026 (\u003ci\u003ek\u003c/i\u003e \u0026lt;\u003d fromIndex) \u003c/pre\u003e\u003c/blockquote\u003e is true. For other values of \u003ccode\u003ech\u003c/code\u003e, it is the largest value \u003ci\u003ek\u003c/i\u003e such that: \u003cblockquote\u003e\u003cpre\u003e (this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) \u0026\u0026 (\u003ci\u003ek\u003c/i\u003e \u0026lt;\u003d fromIndex) \u003c/pre\u003e\u003c/blockquote\u003e is true. In either case, if no such character occurs in this string at or before position \u003ccode\u003efromIndex\u003c/code\u003e, then \u003ccode\u003e-1\u003c/code\u003e is returned. \u003cp\u003eAll indices are specified in \u003ccode\u003echar\u003c/code\u003e values (Unicode code units).\n * @param ch          a character (Unicode code point).\n * @param fromIndex   the index to start the search from. There is norestriction on the value of \u003ccode\u003efromIndex\u003c/code\u003e. If it is greater than or equal to the length of this string, it has the same effect as if it were equal to one less than the length of this string: this entire string may be searched. If it is negative, it has the same effect as if it were -1: -1 is returned.\n * @return  the index of the last occurrence of the character in thecharacter sequence represented by this object that is less than or equal to \u003ccode\u003efromIndex\u003c/code\u003e, or \u003ccode\u003e-1\u003c/code\u003e if the character does not occur before that point.\n */\n","tf":{"freq":{"greater":1,"last":3,"backward":1,"one":1,"object":1,"specifi":3,"occurr":2,"inclus":1,"indic":1,"search":3,"sequenc":1,"rang":1,"blockquot":4,"length":2,"valu":6,"less":2,"may":1,"index":12,"repres":1,"charact":5,"norestrict":1,"true":2,"equal":3,"largest":2,"point":3,"unit":1,"either":1,"effect":2,"start":2,"pre":4,"string":5,"unicod":2,"negat":1,"within":1,"entir":1,"posit":1,"thecharact":1,"occur":2},"maxFreq":12,"totalTerms":87},"loc":17}