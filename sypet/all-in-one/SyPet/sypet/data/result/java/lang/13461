{"id":13461,"className":"java.lang.String","methodName":"valueOf","signature":"\u003cjava.lang.String: java.lang.String valueOf(char[],int,int)\u003e","javadoc":"/** \n * Returns the string representation of a specific subarray of the \u003ccode\u003echar\u003c/code\u003e array argument. \u003cp\u003e The \u003ccode\u003eoffset\u003c/code\u003e argument is the index of the first character of the subarray. The \u003ccode\u003ecount\u003c/code\u003e argument specifies the length of the subarray. The contents of the subarray are copied; subsequent modification of the character array does not affect the newly created string.\n * @param data     the character array.\n * @param offset   the initial offset into the value of the\u003ccode\u003eString\u003c/code\u003e.\n * @param count    the length of the value of the \u003ccode\u003eString\u003c/code\u003e.\n * @return  a string representing the sequence of characters containedin the subarray of the character array argument.\n * @exception IndexOutOfBoundsException if \u003ccode\u003eoffset\u003c/code\u003e isnegative, or \u003ccode\u003ecount\u003c/code\u003e is negative, or \u003ccode\u003eoffset+count\u003c/code\u003e is larger than \u003ccode\u003edata.length\u003c/code\u003e.\n */\n","tf":{"freq":{"count":4,"data":2,"isneg":1,"affect":1,"copi":1,"specifi":1,"sequenc":1,"length":3,"valu":3,"initi":1,"offset":5,"subsequ":1,"argument":4,"except":2,"index":2,"containedin":1,"charact":5,"creat":1,"repres":1,"larger":1,"subarray":5,"represent":1,"content":1,"newli":1,"specif":1,"string":5,"negat":1,"first":1,"bound":1,"modif":1,"array":4},"maxFreq":5,"totalTerms":63},"loc":3}