{"id":13912,"className":"java.lang.Thread","methodName":"start","signature":"\u003cjava.lang.Thread: void start()\u003e","javadoc":"/** \n * Causes this thread to begin execution; the Java Virtual Machine calls the \u003ccode\u003erun\u003c/code\u003e method of this thread. \u003cp\u003e The result is that two threads are running concurrently: the current thread (which returns from the call to the \u003ccode\u003estart\u003c/code\u003e method) and the other thread (which executes its \u003ccode\u003erun\u003c/code\u003e method). \u003cp\u003e It is never legal to start a thread more than once. In particular, a thread may not be restarted once it has completed execution.\n * @exception IllegalThreadStateException  if the thread was alreadystarted.\n * @see #run()\n * @see #stop()\n */\n","tf":{"freq":{"virtual":1,"legal":1,"stop":1,"result":1,"call":2,"concurr":1,"state":1,"particular":1,"run":4,"alreadystart":1,"thread":9,"current":1,"complet":1,"may":1,"restart":1,"except":2,"illeg":1,"begin":1,"two":1,"machin":1,"never":1,"caus":1,"start":3,"method":3,"java":1,"execut":3},"maxFreq":9,"totalTerms":45},"loc":31}