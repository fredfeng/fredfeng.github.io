{"id":13352,"className":"java.lang.StringBuffer","methodName":"append","signature":"\u003cjava.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)\u003e","javadoc":"/** \n * Appends the specified \u003ctt\u003eStringBuffer\u003c/tt\u003e to this sequence. \u003cp\u003e The characters of the \u003ctt\u003eStringBuffer\u003c/tt\u003e argument are appended, in order, to the contents of this \u003ctt\u003eStringBuffer\u003c/tt\u003e, increasing the length of this \u003ctt\u003eStringBuffer\u003c/tt\u003e by the length of the argument. If \u003ctt\u003esb\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e, then the four characters \u003ctt\u003e\"null\"\u003c/tt\u003e are appended to this \u003ctt\u003eStringBuffer\u003c/tt\u003e. \u003cp\u003e Let \u003ci\u003en\u003c/i\u003e be the length of the old character sequence, the one contained in the \u003ctt\u003eStringBuffer\u003c/tt\u003e just prior to execution of the \u003ctt\u003eappend\u003c/tt\u003e method. Then the character at index \u003ci\u003ek\u003c/i\u003e in the new character sequence is equal to the character at index \u003ci\u003ek\u003c/i\u003e in the old character sequence, if \u003ci\u003ek\u003c/i\u003e is less than \u003ci\u003en\u003c/i\u003e; otherwise, it is equal to the character at index \u003ci\u003ek-n\u003c/i\u003e in the argument \u003ccode\u003esb\u003c/code\u003e. \u003cp\u003e This method synchronizes on \u003ccode\u003ethis\u003c/code\u003e (the destination) object but does not synchronize on the source (\u003ccode\u003esb\u003c/code\u003e).\n * @param sb   the \u003ctt\u003eStringBuffer\u003c/tt\u003e to append.\n * @return  a reference to this object.\n * @since 1.4\n */\n","tf":{"freq":{"increas":1,"otherwis":1,"old":2,"one":1,"object":2,"specifi":1,"prior":1,"buffer":7,"order":1,"refer":1,"sequenc":4,"length":3,"four":1,"less":1,"argument":3,"just":1,"append":6,"index":3,"charact":8,"equal":2,"content":1,"string":7,"contain":1,"sourc":1,"method":2,"execut":1,"destin":1},"maxFreq":8,"totalTerms":64},"loc":4}