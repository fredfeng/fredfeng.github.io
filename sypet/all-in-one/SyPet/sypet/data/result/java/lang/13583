{"id":13583,"className":"java.lang.Throwable","methodName":"initCause","signature":"\u003cjava.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)\u003e","javadoc":"/** \n * Initializes the \u003ci\u003ecause\u003c/i\u003e of this throwable to the specified value. (The cause is the throwable that caused this throwable to get thrown.) \u003cp\u003eThis method can be called at most once.  It is generally called from within the constructor, or immediately after creating the throwable.  If this throwable was created with  {@link #Throwable(Throwable)} or{@link #Throwable(String,Throwable)}, this method cannot be called even once. \u003cp\u003eAn example of using this method on a legacy throwable type without other support for setting the cause is: \u003cpre\u003e try { lowLevelOp(); } catch (LowLevelException le) { throw (HighLevelException) new HighLevelException().initCause(le); // Legacy constructor } \u003c/pre\u003e\n * @param cause the cause (which is saved for later retrieval by the{@link #getCause()} method).  (A {@code null} value ispermitted, and indicates that the cause is nonexistent or unknown.)\n * @return  a reference to this {@code Throwable} instance.\n * @throws IllegalArgumentException if {@code cause} is thisthrowable.  (A throwable cannot be its own cause.)\n * @throws IllegalStateException if this throwable wascreated with  {@link #Throwable(Throwable)} or{@link #Throwable(String,Throwable)}, or this method has already been called on this throwable.\n * @since  1.4\n */\n","tf":{"freq":{"call":4,"save":1,"link":5,"state":1,"legaci":2,"use":1,"type":1,"specifi":1,"level":4,"indic":1,"refer":1,"valu":2,"immedi":1,"initi":1,"constructor":2,"argument":1,"thisthrow":1,"except":5,"thrown":1,"support":1,"nonexist":1,"creat":2,"later":1,"init":2,"unknown":1,"wascreat":1,"illeg":2,"without":1,"general":1,"instanc":1,"ispermit":1,"caus":12,"retriev":1,"pre":2,"string":2,"exampl":1,"alreadi":1,"method":5,"even":1,"high":2,"within":1,"throwabl":18,"low":2},"maxFreq":18,"totalTerms":99},"loc":8}