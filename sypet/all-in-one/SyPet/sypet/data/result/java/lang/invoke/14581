{"id":14581,"className":"java.lang.invoke.MethodType","methodName":"wrap","signature":"\u003cjava.lang.invoke.MethodType: java.lang.invoke.MethodType wrap()\u003e","javadoc":"/** \n * Converts all primitive types to their corresponding wrapper types. Convenience method for  {@link #methodType(java.lang.Class,java.lang.Class[]) methodType}. All reference types (including wrapper types) will remain unchanged. A  {@code void} return type is changed to the type {@code java.lang.Void}. The expression  {@code type.wrap().erase()} produces the same valueas  {@code type.generic()}.\n * @return a version of the original type with all primitive types replaced\n */\n","tf":{"freq":{"generic":1,"primit":2,"correspond":1,"link":1,"convert":1,"type":12,"express":1,"lang":3,"version":1,"wrapper":2,"refer":1,"eras":1,"conveni":1,"wrap":2,"valuea":1,"includ":1,"unchang":1,"origin":1,"produc":1,"remain":1,"replac":1,"will":1,"java":3,"method":3,"chang":1},"maxFreq":12,"totalTerms":45},"loc":3}