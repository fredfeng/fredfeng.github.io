{"id":13194,"className":"java.lang.Character","methodName":"isWhitespace","signature":"\u003cjava.lang.Character: boolean isWhitespace(int)\u003e","javadoc":"/** \n * Determines if the specified character (Unicode code point) is white space according to Java.  A character is a Java whitespace character if and only if it satisfies one of the following criteria: \u003cul\u003e \u003cli\u003e It is a Unicode space character ( {@link #SPACE_SEPARATOR}, {@link #LINE_SEPARATOR}, or  {@link #PARAGRAPH_SEPARATOR}) but is not also a non-breaking space ( {@code \u0027\\u005Cu00A0\u0027}, {@code \u0027\\u005Cu2007\u0027},  {@code \u0027\\u005Cu202F\u0027}). \u003cli\u003e It is  {@code \u0027\\u005Ct\u0027}, U+0009 HORIZONTAL TABULATION. \u003cli\u003e It is  {@code \u0027\\u005Cn\u0027}, U+000A LINE FEED. \u003cli\u003e It is  {@code \u0027\\u005Cu000B\u0027}, U+000B VERTICAL TABULATION. \u003cli\u003e It is  {@code \u0027\\u005Cf\u0027}, U+000C FORM FEED. \u003cli\u003e It is  {@code \u0027\\u005Cr\u0027}, U+000D CARRIAGE RETURN. \u003cli\u003e It is  {@code \u0027\\u005Cu001C\u0027}, U+001C FILE SEPARATOR. \u003cli\u003e It is  {@code \u0027\\u005Cu001D\u0027}, U+001D GROUP SEPARATOR. \u003cli\u003e It is  {@code \u0027\\u005Cu001E\u0027}, U+001E RECORD SEPARATOR. \u003cli\u003e It is  {@code \u0027\\u005Cu001F\u0027}, U+001F UNIT SEPARATOR. \u003c/ul\u003e \u003cp\u003e\n * @param codePoint the character (Unicode code point) to be tested.\n * @return  {@code true} if the character is a Java whitespacecharacter;  {@code false} otherwise.\n * @see Character#isSpaceChar(int)\n * @since   1.5\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"criteria":1,"test":1,"charact":7,"link":3,"one":1,"white":1,"whitespacecharact":1,"true":1,"whitespac":2,"accord":1,"space":4,"non":1,"specifi":1,"point":3,"determin":1,"satisfi":1,"unicod":3,"java":3,"also":1,"follow":1},"maxFreq":7,"totalTerms":40},"loc":3}