{"id":13623,"className":"java.lang.StackTraceElement","methodName":"StackTraceElement","signature":"\u003cjava.lang.StackTraceElement: void StackTraceElement(java.lang.String,java.lang.String,java.lang.String,int)\u003e","javadoc":"/** \n * Creates a stack trace element representing the specified execution point.\n * @param declaringClass the fully qualified name of the class containingthe execution point represented by the stack trace element\n * @param methodName the name of the method containing the execution pointrepresented by the stack trace element\n * @param fileName the name of the file containing the execution pointrepresented by the stack trace element, or  {@code null} ifthis information is unavailable\n * @param lineNumber the line number of the source line containing theexecution point represented by this stack trace element, or a negative number if this information is unavailable. A value of -2 indicates that the method containing the execution point is a native method\n * @throws NullPointerException if {@code declaringClass} or{@code methodName} is null\n * @since 1.5\n */\n","tf":{"freq":{"containingth":1,"line":3,"specifi":1,"indic":1,"declar":2,"file":2,"name":6,"unavail":2,"valu":1,"theexecut":1,"element":6,"except":1,"repres":3,"creat":1,"trace":6,"fulli":1,"number":3,"pointrepres":2,"ifthi":1,"point":4,"inform":2,"contain":4,"pointer":1,"negat":1,"method":5,"sourc":1,"execut":5,"stack":6,"qualifi":1},"maxFreq":6,"totalTerms":74},"loc":6}