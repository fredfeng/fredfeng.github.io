{"id":14403,"className":"java.lang.instrument.Instrumentation","methodName":"removeTransformer","signature":"\u003cjava.lang.instrument.Instrumentation: boolean removeTransformer(java.lang.instrument.ClassFileTransformer)\u003e","javadoc":"/** \n * Unregisters the supplied transformer. Future class definitions will not be shown to the transformer. Removes the most-recently-added matching instance of the transformer. Due to the multi-threaded nature of class loading, it is possible for a transformer to receive calls after it has been removed. Transformers should be written defensively to expect this situation.\n * @param transformer          the transformer to unregister\n * @return  true if the transformer was found and removed, false if thetransformer was not found\n * @throws java.lang.NullPointerException if passed a \u003ccode\u003enull\u003c/code\u003e transformer\n */\n","tf":{"freq":{"fals":1,"call":1,"natur":1,"possibl":1,"lang":1,"recent":1,"situat":1,"defens":1,"thetransform":1,"expect":1,"transform":10,"thread":1,"written":1,"except":1,"futur":1,"remov":4,"true":1,"shown":1,"suppli":1,"receiv":1,"pass":1,"instanc":1,"definit":1,"will":1,"multi":1,"pointer":1,"ad":1,"due":1,"java":1,"load":1,"match":1,"unregist":2,"found":2},"maxFreq":10,"totalTerms":47},"loc":0}