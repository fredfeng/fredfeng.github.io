{"id":14032,"className":"java.lang.ThreadGroup","methodName":"setMaxPriority","signature":"\u003cjava.lang.ThreadGroup: void setMaxPriority(int)\u003e","javadoc":"/** \n * Sets the maximum priority of the group. Threads in the thread group that already have a higher priority are not affected. \u003cp\u003e First, the \u003ccode\u003echeckAccess\u003c/code\u003e method of this thread group is called with no arguments; this may result in a security exception. \u003cp\u003e If the \u003ccode\u003epri\u003c/code\u003e argument is less than {@link Thread#MIN_PRIORITY} or greater than{@link Thread#MAX_PRIORITY}, the maximum priority of the group remains unchanged. \u003cp\u003e Otherwise, the priority of this ThreadGroup object is set to the smaller of the specified \u003ccode\u003epri\u003c/code\u003e and the maximum permitted priority of the parent of this thread group. (If this thread group is the system thread group, which has no parent, then its maximum priority is simply set to \u003ccode\u003epri\u003c/code\u003e.) Then this method is called recursively, with \u003ccode\u003epri\u003c/code\u003e as its argument, for every thread group that belongs to this thread group.\n * @param pri   the new priority of the thread group.\n * @exception SecurityException  if the current thread cannot modifythis thread group.\n * @see #getMaxPriority\n * @see java.lang.SecurityException\n * @see java.lang.ThreadGroup#checkAccess()\n * @since      JDK1.0\n */\n","tf":{"freq":{"otherwis":1,"call":2,"result":1,"simpli":1,"greater":1,"belong":1,"permit":1,"link":2,"higher":1,"object":1,"lang":2,"affect":1,"smaller":1,"specifi":1,"thread":15,"current":1,"everi":1,"less":1,"argument":3,"may":1,"except":4,"max":2,"unchang":1,"check":2,"prioriti":9,"parent":2,"access":2,"modifythi":1,"system":1,"pri":5,"secur":3,"remain":1,"maximum":4,"java":2,"method":2,"alreadi":1,"group":13,"first":1,"recurs":1},"maxFreq":15,"totalTerms":96},"loc":20}