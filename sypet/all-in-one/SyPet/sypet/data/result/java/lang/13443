{"id":13443,"className":"java.lang.String","methodName":"matches","signature":"\u003cjava.lang.String: boolean matches(java.lang.String)\u003e","javadoc":"/** \n * Tells whether or not this string matches the given \u003ca href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e. \u003cp\u003e An invocation of this method of the form \u003ci\u003estr\u003c/i\u003e\u003ctt\u003e.matches(\u003c/tt\u003e\u003ci\u003eregex\u003c/i\u003e\u003ctt\u003e)\u003c/tt\u003e yields exactly the same result as the expression \u003cblockquote\u003e\u003ctt\u003e  {@link java.util.regex.Pattern}. {@link java.util.regex.Pattern#matches(String,CharSequence) matches}(\u003c/tt\u003e\u003ci\u003eregex\u003c/i\u003e\u003ctt\u003e,\u003c/tt\u003e \u003ci\u003estr\u003c/i\u003e\u003ctt\u003e)\u003c/tt\u003e\u003c/blockquote\u003e\n * @param regex the regular expression to which this string is to be matched\n * @return  \u003ctt\u003etrue\u003c/tt\u003e if, and only if, this string matches thegiven regular expression\n * @throws PatternSyntaxException if the regular expression\u0027s syntax is invalid\n * @see java.util.regex.Pattern\n * @since 1.4\n * @spec JSR-51\n */\n","tf":{"freq":{"spec":1,"result":1,"yield":1,"link":2,"sum":1,"express":5,"whether":1,"invalid":1,"given":1,"blockquot":2,"sequenc":1,"exact":1,"tell":1,"thegiven":1,"href":1,"except":1,"form":1,"regular":4,"regex":7,"true":1,"invoc":1,"syntax":2,"pattern":5,"str":2,"string":4,"html":1,"method":1,"java":3,"match":7,"util":4},"maxFreq":7,"totalTerms":65},"loc":3}