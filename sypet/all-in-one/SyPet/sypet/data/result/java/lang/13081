{"id":13081,"className":"java.lang.StrictMath","methodName":"nextUp","signature":"\u003cjava.lang.StrictMath: float nextUp(float)\u003e","javadoc":"/** \n * Returns the floating-point value adjacent to  {@code f} inthe direction of positive infinity.  This method is semantically equivalent to  {@code nextAfter(f,Float.POSITIVE_INFINITY)}; however, a  {@code nextUp}implementation may run faster than its equivalent {@code nextAfter} call.\u003cp\u003eSpecial Cases: \u003cul\u003e \u003cli\u003e If the argument is NaN, the result is NaN. \u003cli\u003e If the argument is positive infinity, the result is positive infinity. \u003cli\u003e If the argument is zero, the result is {@link Float#MIN_VALUE}\u003c/ul\u003e\n * @param f starting floating-point value\n * @return The adjacent floating-point value closer to positiveinfinity.\n * @since 1.6\n */\n","tf":{"freq":{"argument":3,"adjac":2,"direct":1,"result":3,"call":1,"may":1,"infin":3,"link":1,"next":4,"zero":1,"run":1,"closer":1,"positiveinfin":1,"point":3,"faster":1,"inth":1,"start":1,"equival":2,"semant":1,"special":1,"valu":3,"method":1,"howev":1,"posit":3},"maxFreq":4,"totalTerms":41},"loc":3}