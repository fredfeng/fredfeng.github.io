{"id":14408,"className":"java.lang.instrument.Instrumentation","methodName":"isModifiableClass","signature":"\u003cjava.lang.instrument.Instrumentation: boolean isModifiableClass(java.lang.Class)\u003e","javadoc":"/** \n * Determines whether a class is modifiable by {@linkplain #retransformClasses retransformation}or  {@linkplain #redefineClasses redefinition}. If a class is modifiable then this method returns \u003ccode\u003etrue\u003c/code\u003e. If a class is not modifiable then this method returns \u003ccode\u003efalse\u003c/code\u003e. \u003cP\u003e For a class to be retransformed,  {@link #isRetransformClassesSupported} must also be true.But the value of \u003ccode\u003eisRetransformClassesSupported()\u003c/code\u003e does not influence the value returned by this function. For a class to be redefined,  {@link #isRedefineClassesSupported} must also be true.But the value of \u003ccode\u003eisRedefineClassesSupported()\u003c/code\u003e does not influence the value returned by this function. \u003cP\u003e Primitive classes (for example, \u003ccode\u003ejava.lang.Integer.TYPE\u003c/code\u003e) and array classes are never modifiable.\n * @throws java.lang.NullPointerException if the specified class is \u003ccode\u003enull\u003c/code\u003e.\n * @see #retransformClasses\n * @see #isRetransformClassesSupported\n * @see #redefineClasses\n * @see #isRedefineClassesSupported\n * @since 1.6\n */\n","tf":{"freq":{"fals":1,"linkplain":2,"primit":1,"link":2,"lang":2,"whether":1,"must":2,"specifi":1,"function":2,"retransform":7,"valu":4,"except":1,"support":6,"true":3,"redefinit":1,"redefin":6,"never":1,"determin":1,"modifi":5,"exampl":1,"pointer":1,"influenc":2,"method":2,"java":2,"also":2,"integ":1,"array":1},"maxFreq":7,"totalTerms":61},"loc":0}