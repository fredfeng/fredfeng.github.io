{"id":14082,"className":"java.lang.management.MemoryMXBean","methodName":"getHeapMemoryUsage","signature":"\u003cjava.lang.management.MemoryMXBean: java.lang.management.MemoryUsage getHeapMemoryUsage()\u003e","javadoc":"/** \n * Returns the current memory usage of the heap that is used for object allocation.  The heap consists of one or more memory pools.  The \u003ctt\u003eused\u003c/tt\u003e and \u003ctt\u003ecommitted\u003c/tt\u003e size of the returned memory usage is the sum of those values of all heap memory pools whereas the \u003ctt\u003einit\u003c/tt\u003e and \u003ctt\u003emax\u003c/tt\u003e size of the returned memory usage represents the setting of the heap memory which may not be the sum of those of all heap memory pools. \u003cp\u003e The amount of used memory in the returned memory usage is the amount of memory occupied by both live objects and garbage objects that have not been collected, if any. \u003cp\u003e \u003cb\u003eMBeanServer access\u003c/b\u003e:\u003cbr\u003e The mapped type of \u003ctt\u003eMemoryUsage\u003c/tt\u003e is \u003ctt\u003eCompositeData\u003c/tt\u003e with attributes as specified in {@link MemoryUsage#from MemoryUsage}.\n * @return a {@link MemoryUsage} object representingthe heap memory usage.\n */\n","tf":{"freq":{"mbean":1,"memori":16,"link":2,"one":1,"data":1,"use":3,"sum":2,"occupi":1,"object":4,"garbag":1,"type":1,"specifi":1,"heap":7,"amount":2,"attribut":1,"commit":1,"pool":3,"map":1,"current":1,"valu":1,"live":1,"wherea":1,"may":1,"max":1,"composit":1,"consist":1,"repres":1,"init":1,"access":1,"size":2,"representingth":1,"server":1,"usag":10,"alloc":1,"collect":1},"maxFreq":16,"totalTerms":76},"loc":0}