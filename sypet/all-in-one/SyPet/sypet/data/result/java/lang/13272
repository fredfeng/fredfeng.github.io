{"id":13272,"className":"java.lang.SecurityManager","methodName":"checkConnect","signature":"\u003cjava.lang.SecurityManager: void checkConnect(java.lang.String,int,java.lang.Object)\u003e","javadoc":"/** \n * Throws a \u003ccode\u003eSecurityException\u003c/code\u003e if the specified security context is not allowed to open a socket connection to the specified host and port number. \u003cp\u003e A port number of \u003ccode\u003e-1\u003c/code\u003e indicates that the calling method is attempting to determine the IP address of the specified host name. \u003cp\u003e If \u003ccode\u003econtext\u003c/code\u003e is not an instance of \u003ccode\u003eAccessControlContext\u003c/code\u003e then a \u003ccode\u003eSecurityException\u003c/code\u003e is thrown. \u003cp\u003e Otherwise, the port number is checked. If it is not equal to -1, the \u003ccode\u003econtext\u003c/code\u003e\u0027s \u003ccode\u003echeckPermission\u003c/code\u003e method is called with a \u003ccode\u003eSocketPermission(host+\":\"+port,\"connect\")\u003c/code\u003e permission. If the port is equal to -1, then the \u003ccode\u003econtext\u003c/code\u003e\u0027s \u003ccode\u003echeckPermission\u003c/code\u003e method is called with a \u003ccode\u003eSocketPermission(host,\"resolve\")\u003c/code\u003e permission. \u003cp\u003e If you override this method, then you should make a call to \u003ccode\u003esuper.checkConnect\u003c/code\u003e at the point the overridden method would normally throw an exception.\n * @param host      the host name port to connect to.\n * @param port      the protocol port to connect to.\n * @param context   a system-dependent security context.\n * @exception SecurityException if the specified security contextis not an instance of \u003ccode\u003eAccessControlContext\u003c/code\u003e (e.g., is \u003ccode\u003enull\u003c/code\u003e), or does not have permission to open a socket connection to the specified \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eport\u003c/code\u003e.\n * @exception NullPointerException if the \u003ccode\u003ehost\u003c/code\u003e argument is\u003ccode\u003enull\u003c/code\u003e.\n * @see java.lang.SecurityManager#getSecurityContext()\n * @see java.security.AccessControlContext#checkPermission(java.security.Permission)\n */\n","tf":{"freq":{"port":9,"attempt":1,"otherwis":1,"call":4,"allow":1,"connect":7,"overridden":1,"normal":1,"lang":1,"specifi":5,"open":2,"indic":1,"name":2,"permiss":9,"socket":4,"argument":1,"control":3,"protocol":1,"except":7,"thrown":1,"host":8,"check":6,"manag":1,"depend":1,"contexti":1,"resolv":1,"equal":2,"number":3,"access":3,"instanc":2,"point":1,"system":1,"secur":10,"address":1,"determin":1,"context":10,"pointer":1,"java":3,"method":5,"make":1},"maxFreq":10,"totalTerms":124},"loc":16}