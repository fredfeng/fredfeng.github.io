{"id":14259,"className":"java.lang.reflect.Constructor","methodName":"toGenericString","signature":"\u003cjava.lang.reflect.Constructor: java.lang.String toGenericString()\u003e","javadoc":"/** \n * Returns a string describing this  {@code Constructor}, including type parameters.  The string is formatted as the constructor access modifiers, if any, followed by an angle-bracketed comma separated list of the constructor\u0027s type parameters, if any, followed by the fully-qualified name of the declaring class, followed by a parenthesized, comma-separated list of the constructor\u0027s generic formal parameter types. If this constructor was declared to take a variable number of arguments, instead of denoting the last parameter as \"\u003ctt\u003e\u003ci\u003eType\u003c/i\u003e[]\u003c/tt\u003e\", it is denoted as \"\u003ctt\u003e\u003ci\u003eType\u003c/i\u003e...\u003c/tt\u003e\". A space is used to separate access modifiers from one another and from the type parameters or return type.  If there are no type parameters, the type parameter list is elided; if the type parameter list is present, a space separates the list from the class name.  If the constructor is declared to throw exceptions, the parameter list is followed by a space, followed by the word \" {@code throws}\" followed by a comma-separated list of the thrown exception types. \u003cp\u003eThe only possible modifiers for constructors are the access modifiers  {@code public},  {@code protected} or{@code private}.  Only one of these may appear, or none if the constructor has default (package) access.\n * @return a string describing this {@code Constructor}, include type parameters\n * @since 1.5\n */\n","tf":{"freq":{"generic":2,"appear":1,"last":1,"one":2,"variabl":1,"denot":2,"possibl":1,"use":1,"elid":1,"anoth":1,"space":3,"type":12,"bracket":1,"parenthes":1,"declar":3,"name":2,"none":1,"follow":6,"constructor":9,"argument":1,"may":1,"thrown":1,"except":2,"comma":3,"includ":2,"paramet":10,"describ":2,"number":1,"list":7,"fulli":1,"format":1,"access":4,"present":1,"formal":1,"separ":5,"take":1,"string":4,"instead":1,"modifi":4,"word":1,"angl":1,"qualifi":1},"maxFreq":12,"totalTerms":107},"loc":51}