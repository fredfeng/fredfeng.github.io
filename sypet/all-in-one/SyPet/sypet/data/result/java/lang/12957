{"id":12957,"className":"java.lang.System","methodName":"clearProperty","signature":"\u003cjava.lang.System: java.lang.String clearProperty(java.lang.String)\u003e","javadoc":"/** \n * Removes the system property indicated by the specified key. \u003cp\u003e First, if a security manager exists, its \u003ccode\u003eSecurityManager.checkPermission\u003c/code\u003e method is called with a \u003ccode\u003ePropertyPermission(key, \"write\")\u003c/code\u003e permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is removed. \u003cp\u003e\n * @param key   the name of the system property to be removed.\n * @return     the previous string value of the system property,or \u003ccode\u003enull\u003c/code\u003e if there was no property with that key.\n * @exception SecurityException  if a security manager exists and its\u003ccode\u003echeckPropertyAccess\u003c/code\u003e method doesn\u0027t allow access to the specified system property.\n * @exception NullPointerException if \u003ccode\u003ekey\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e.\n * @exception IllegalArgumentException if \u003ccode\u003ekey\u003c/code\u003e is empty.\n * @see #getProperty\n * @see #setProperty\n * @see java.util.Properties\n * @see java.lang.SecurityException\n * @see java.lang.SecurityManager#checkPropertiesAccess()\n * @since 1.5\n */\n","tf":{"freq":{"call":1,"result":1,"allow":1,"lang":2,"specifi":3,"clear":1,"indic":1,"name":1,"permiss":3,"write":1,"valu":1,"exist":2,"key":6,"argument":1,"may":1,"except":9,"thrown":2,"check":3,"previous":1,"manag":4,"remov":3,"access":3,"illeg":1,"empti":1,"system":4,"secur":7,"string":1,"pointer":1,"java":3,"method":2,"properti":13,"first":1,"util":1},"maxFreq":13,"totalTerms":86},"loc":9}