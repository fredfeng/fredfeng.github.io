{"id":13635,"className":"java.lang.Integer","methodName":"toHexString","signature":"\u003cjava.lang.Integer: java.lang.String toHexString(int)\u003e","javadoc":"/** \n * Returns a string representation of the integer argument as an unsigned integer in base\u0026nbsp;16. \u003cp\u003eThe unsigned integer value is the argument plus 2\u003csup\u003e32\u003c/sup\u003e if the argument is negative; otherwise, it is equal to the argument.  This value is converted to a string of ASCII digits in hexadecimal (base\u0026nbsp;16) with no extra leading {@code 0}s. If the unsigned magnitude is zero, it is represented by a single zero character  {@code \u00270\u0027}(\u003ccode\u003e\u0027\u0026#92;u0030\u0027\u003c/code\u003e); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The following characters are used as hexadecimal digits: \u003cblockquote\u003e {@code 0123456789abcdef}\u003c/blockquote\u003e These are the characters \u003ccode\u003e\u0027\u0026#92;u0030\u0027\u003c/code\u003e through \u003ccode\u003e\u0027\u0026#92;u0039\u0027\u003c/code\u003e and \u003ccode\u003e\u0027\u0026#92;u0061\u0027\u003c/code\u003e through \u003ccode\u003e\u0027\u0026#92;u0066\u0027\u003c/code\u003e. If uppercase letters are desired, the  {@link java.lang.String#toUpperCase()} method maybe called on the result: \u003cblockquote\u003e {@code Integer.toHexString(n).toUpperCase()}\u003c/blockquote\u003e\n * @param i   an integer to be converted to a string.\n * @return  the string representation of the unsigned integer valuerepresented by the argument in hexadecimal (base\u0026nbsp;16).\n * @since   JDK1.0.2\n */\n","tf":{"freq":{"otherwis":2,"result":1,"call":1,"singl":1,"link":1,"use":1,"convert":2,"lead":1,"desir":1,"sup":2,"zero":3,"lang":1,"upper":2,"hex":2,"uppercas":1,"blockquot":4,"valu":2,"follow":1,"nbsp":3,"argument":5,"plus":1,"letter":1,"repres":1,"charact":5,"extra":1,"hexadecim":3,"magnitud":2,"equal":1,"mayb":1,"represent":3,"digit":2,"unsign":5,"string":7,"will":1,"base":3,"abcdef":1,"method":1,"java":1,"negat":1,"valuerepres":1,"first":1,"integ":6},"maxFreq":7,"totalTerms":86},"loc":3}