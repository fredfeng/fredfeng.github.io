{"id":14213,"className":"java.lang.management.ThreadInfo","methodName":"getWaitedTime","signature":"\u003cjava.lang.management.ThreadInfo: long getWaitedTime()\u003e","javadoc":"/** \n * Returns the approximate accumulated elapsed time (in milliseconds) that the thread associated with this \u003ctt\u003eThreadInfo\u003c/tt\u003e has waited for notification since thread contention monitoring is enabled. I.e. the total accumulated time the thread has been in the {@link java.lang.Thread.State#WAITING WAITING}or  {@link java.lang.Thread.State#TIMED_WAITING TIMED_WAITING} statesince thread contention monitoring is enabled. This method returns \u003ctt\u003e-1\u003c/tt\u003e if thread contention monitoring is disabled. \u003cp\u003eThe Java virtual machine may measure the time with a high resolution timer.  This statistic is reset when the thread contention monitoring is reenabled.\n * @return the approximate accumulated elapsed time in millisecondsthat a thread has been in the \u003ctt\u003eWAITING\u003c/tt\u003e or \u003ctt\u003eTIMED_WAITING\u003c/tt\u003e state; \u003ctt\u003e-1\u003c/tt\u003e if thread contention monitoring is disabled.\n * @throws java.lang.UnsupportedOperationException if the Javavirtual machine does not support this operation.\n * @see ThreadMXBean#isThreadContentionMonitoringSupported\n * @see ThreadMXBean#setThreadContentionMonitoringEnabled\n */\n","tf":{"freq":{"total":1,"virtual":1,"unsupport":1,"link":2,"state":3,"approxim":2,"wait":2,"lang":3,"info":1,"millisecondsthat":1,"resolut":1,"notif":1,"elaps":2,"time":5,"oper":2,"associ":1,"timer":1,"millisecond":1,"thread":15,"reset":1,"except":1,"may":1,"support":2,"monitor":7,"bean":2,"enabl":3,"statesinc":1,"javavirtu":1,"statist":1,"reenabl":1,"content":7,"accumul":3,"machin":2,"disabl":2,"measur":1,"java":4,"method":1,"high":1},"maxFreq":15,"totalTerms":88},"loc":3}