{"id":13589,"className":"java.lang.Throwable","methodName":"getStackTrace","signature":"\u003cjava.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()\u003e","javadoc":"/** \n * Provides programmatic access to the stack trace information printed by {@link #printStackTrace()}.  Returns an array of stack trace elements, each representing one stack frame.  The zeroth element of the array (assuming the array\u0027s length is non-zero) represents the top of the stack, which is the last method invocation in the sequence.  Typically, this is the point at which this throwable was created and thrown. The last element of the array (assuming the array\u0027s length is non-zero) represents the bottom of the stack, which is the first method invocation in the sequence. \u003cp\u003eSome virtual machines may, under some circumstances, omit one or more stack frames from the stack trace.  In the extreme case, a virtual machine that has no stack trace information concerning this throwable is permitted to return a zero-length array from this method.  Generally speaking, the array returned by this method will contain one element for every frame that would be printed by {@code printStackTrace}.  Writes to the returned array do not affect future calls to this method.\n * @return an array of stack trace elements representing the stack tracepertaining to this throwable.\n * @since  1.4\n */\n","tf":{"freq":{"virtual":2,"call":1,"programmat":1,"last":2,"permit":1,"concern":1,"one":3,"link":1,"typic":1,"zero":3,"affect":1,"sequenc":2,"write":1,"length":3,"tracepertain":1,"everi":1,"extrem":1,"top":1,"element":5,"may":1,"thrown":1,"futur":1,"assum":2,"creat":1,"repres":4,"trace":8,"speak":1,"circumst":1,"access":1,"provid":1,"general":1,"print":4,"invoc":2,"non":2,"point":1,"inform":2,"zeroth":1,"machin":2,"frame":3,"omit":1,"contain":1,"will":1,"bottom":1,"method":5,"throwabl":3,"stack":13,"first":1,"array":9},"maxFreq":13,"totalTerms":107},"loc":3}