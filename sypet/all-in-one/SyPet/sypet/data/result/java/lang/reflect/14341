{"id":14341,"className":"java.lang.reflect.ParameterizedType","methodName":"getOwnerType","signature":"\u003cjava.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()\u003e","javadoc":"/** \n * Returns a  {@code Type} object representing the type that this typeis a member of.  For example, if this type is  {@code O\u003cT\u003e.I\u003cS\u003e}, return a representation of  {@code O\u003cT\u003e}. \u003cp\u003eIf this type is a top-level type,  {@code null} is returned.\n * @return a {@code Type} object representing the type thatthis type is a member of. If this type is a top-level type, {@code null} is returned\n * @throws TypeNotPresentException if the owner typerefers to a non-existent type declaration\n * @throws MalformedParameterizedTypeException if the owner typerefers to a parameterized type that cannot be instantiated for any reason\n * @since 1.5\n */\n","tf":{"freq":{"member":2,"except":2,"reason":1,"repres":2,"instanti":1,"object":2,"typei":1,"type":15,"non":1,"represent":1,"typeref":2,"present":1,"malform":1,"parameter":2,"level":2,"declar":1,"owner":3,"exampl":1,"exist":1,"thatthi":1,"top":2},"maxFreq":15,"totalTerms":45},"loc":0}