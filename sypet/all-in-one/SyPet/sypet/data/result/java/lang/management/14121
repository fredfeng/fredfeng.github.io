{"id":14121,"className":"java.lang.management.MemoryPoolMXBean","methodName":"getUsage","signature":"\u003cjava.lang.management.MemoryPoolMXBean: java.lang.management.MemoryUsage getUsage()\u003e","javadoc":"/** \n * Returns an estimate of the memory usage of this memory pool. This method returns \u003ctt\u003enull\u003c/tt\u003e if this memory pool is not valid (i.e. no longer exists). \u003cp\u003e This method requests the Java virtual machine to make a best-effort estimate of the current memory usage of this memory pool. For some memory pools, this method may be an expensive operation that requires some computation to determine the estimate.  An implementation should document when this is the case. \u003cp\u003eThis method is designed for use in monitoring system memory usage and detecting low memory condition. \u003cp\u003e \u003cb\u003eMBeanServer access\u003c/b\u003e:\u003cbr\u003e The mapped type of \u003ctt\u003eMemoryUsage\u003c/tt\u003e is \u003ctt\u003eCompositeData\u003c/tt\u003e with attributes as specified in {@link MemoryUsage#from MemoryUsage}.\n * @return a {@link MemoryUsage} object; or \u003ctt\u003enull\u003c/tt\u003e ifthis pool not valid.\n */\n","tf":{"freq":{"virtual":1,"mbean":1,"valid":2,"memori":12,"link":2,"data":1,"use":1,"object":1,"type":1,"specifi":1,"estim":3,"document":1,"attribut":1,"requir":1,"pool":5,"oper":1,"request":1,"map":1,"current":1,"longer":1,"best":1,"exist":1,"condit":1,"detect":1,"may":1,"monitor":1,"composit":1,"effort":1,"access":1,"ifthi":1,"system":1,"machin":1,"determin":1,"expens":1,"comput":1,"server":1,"java":1,"method":4,"usag":8,"low":1,"make":1,"design":1},"maxFreq":12,"totalTerms":71},"loc":0}