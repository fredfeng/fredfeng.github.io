{"id":13477,"className":"java.lang.Long","methodName":"toString","signature":"\u003cjava.lang.Long: java.lang.String toString(long,int)\u003e","javadoc":"/** \n * Returns a string representation of the first argument in the radix specified by the second argument. \u003cp\u003eIf the radix is smaller than  {@code Character.MIN_RADIX}or larger than  {@code Character.MAX_RADIX}, then the radix {@code 10} is used instead.\u003cp\u003eIf the first argument is negative, the first element of the result is the ASCII minus sign  {@code \u0027-\u0027}(\u003ccode\u003e\u0027\u0026#92;u002d\u0027\u003c/code\u003e). If the first argument is not negative, no sign character appears in the result. \u003cp\u003eThe remaining characters of the result represent the magnitude of the first argument. If the magnitude is zero, it is represented by a single zero character  {@code \u00270\u0027}(\u003ccode\u003e\u0027\u0026#92;u0030\u0027\u003c/code\u003e); otherwise, the first character of the representation of the magnitude will not be the zero character.  The following ASCII characters are used as digits: \u003cblockquote\u003e {@code 0123456789abcdefghijklmnopqrstuvwxyz}\u003c/blockquote\u003e These are \u003ccode\u003e\u0027\u0026#92;u0030\u0027\u003c/code\u003e through \u003ccode\u003e\u0027\u0026#92;u0039\u0027\u003c/code\u003e and \u003ccode\u003e\u0027\u0026#92;u0061\u0027\u003c/code\u003e through \u003ccode\u003e\u0027\u0026#92;u007a\u0027\u003c/code\u003e. If  {@code radix} is\u003cvar\u003eN\u003c/var\u003e, then the first \u003cvar\u003eN\u003c/var\u003e of these characters are used as radix-\u003cvar\u003eN\u003c/var\u003e digits in the order shown. Thus, the digits for hexadecimal (radix 16) are {@code 0123456789abcdef}. If uppercase letters are desired, the  {@link java.lang.String#toUpperCase()} method maybe called on the result: \u003cblockquote\u003e {@code Long.toString(n, 16).toUpperCase()}\u003c/blockquote\u003e\n * @param i       a {@code long} to be converted to a string.\n * @param radix   the radix to use in the string representation.\n * @return  a string representation of the argument in the specified radix.\n * @see java.lang.Character#MAX_RADIX\n * @see java.lang.Character#MIN_RADIX\n */\n","tf":{"freq":{"otherwis":1,"call":1,"result":4,"appear":1,"second":1,"singl":1,"var":6,"link":1,"convert":1,"use":4,"desir":1,"abcdefghijklmnopqrstuvwxyz":1,"zero":3,"lang":3,"smaller":1,"specifi":2,"upper":2,"order":1,"uppercas":1,"blockquot":4,"follow":1,"argument":6,"element":1,"minus":1,"letter":1,"thus":1,"charact":11,"repres":2,"larger":1,"hexadecim":1,"shown":1,"magnitud":3,"mayb":1,"represent":4,"digit":3,"sign":2,"remain":1,"radix":9,"string":7,"will":1,"instead":1,"abcdef":1,"method":1,"java":3,"negat":2,"first":7},"maxFreq":11,"totalTerms":113},"loc":25}