{"id":13764,"className":"java.lang.AbstractStringBuilder","methodName":"append","signature":"\u003cjava.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(char[],int,int)\u003e","javadoc":"/** \n * Appends the string representation of a subarray of the {@code char} array argument to this sequence.\u003cp\u003e Characters of the  {@code char} array {@code str}, starting at index  {@code offset}, are appended, in order, to the contents of this sequence. The length of this sequence increases by the value of  {@code len}. \u003cp\u003e The overall effect is exactly as if the arguments were converted to a string by the method  {@link String#valueOf(char[],int,int)}, and the characters of that string were then {@link #append(String) appended} to this character sequence.\n * @param str      the characters to be appended.\n * @param offset   the index of the first {@code char} to append.\n * @param len      the number of {@code char}s to append.\n * @return  a reference to this object.\n * @throws IndexOutOfBoundsException if  {@code offset \u003c 0} or {@code len \u003c 0}or  {@code offset+len \u003e str.length}\n */\n","tf":{"freq":{"increas":1,"link":2,"convert":1,"object":1,"order":1,"refer":1,"sequenc":4,"exact":1,"length":2,"valu":2,"offset":4,"argument":2,"append":8,"except":1,"index":3,"charact":4,"number":1,"len":4,"subarray":1,"represent":1,"content":1,"str":3,"effect":1,"start":1,"string":5,"method":1,"first":1,"bound":1,"array":2},"maxFreq":8,"totalTerms":61},"loc":7}