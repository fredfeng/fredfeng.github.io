{"id":13438,"className":"java.lang.String","methodName":"substring","signature":"\u003cjava.lang.String: java.lang.String substring(int)\u003e","javadoc":"/** \n * Returns a new string that is a substring of this string. The substring begins with the character at the specified index and extends to the end of this string. \u003cp\u003e Examples: \u003cblockquote\u003e\u003cpre\u003e \"unhappy\".substring(2) returns \"happy\" \"Harbison\".substring(3) returns \"bison\" \"emptiness\".substring(9) returns \"\" (an empty string) \u003c/pre\u003e\u003c/blockquote\u003e\n * @param beginIndex   the beginning index, inclusive.\n * @return     the specified substring.\n * @exception IndexOutOfBoundsException  if\u003ccode\u003ebeginIndex\u003c/code\u003e is negative or larger than the length of this \u003ccode\u003eString\u003c/code\u003e object.\n */\n","tf":{"freq":{"except":2,"index":5,"bison":1,"charact":1,"happi":1,"larger":1,"object":1,"empti":2,"begin":4,"specifi":2,"inclus":1,"unhappi":1,"blockquot":2,"pre":2,"string":5,"length":1,"exampl":1,"harbison":1,"negat":1,"substr":7,"bound":1,"end":1},"maxFreq":7,"totalTerms":44},"loc":3}