{"id":13424,"className":"java.lang.String","methodName":"regionMatches","signature":"\u003cjava.lang.String: boolean regionMatches(int,java.lang.String,int,int)\u003e","javadoc":"/** \n * Tests if two string regions are equal. \u003cp\u003e A substring of this \u003ctt\u003eString\u003c/tt\u003e object is compared to a substring of the argument other. The result is true if these substrings represent identical character sequences. The substring of this \u003ctt\u003eString\u003c/tt\u003e object to be compared begins at index \u003ctt\u003etoffset\u003c/tt\u003e and has length \u003ctt\u003elen\u003c/tt\u003e. The substring of other to be compared begins at index \u003ctt\u003eooffset\u003c/tt\u003e and has length \u003ctt\u003elen\u003c/tt\u003e. The result is \u003ctt\u003efalse\u003c/tt\u003e if and only if at least one of the following is true: \u003cul\u003e\u003cli\u003e\u003ctt\u003etoffset\u003c/tt\u003e is negative. \u003cli\u003e\u003ctt\u003eooffset\u003c/tt\u003e is negative. \u003cli\u003e\u003ctt\u003etoffset+len\u003c/tt\u003e is greater than the length of this \u003ctt\u003eString\u003c/tt\u003e object. \u003cli\u003e\u003ctt\u003eooffset+len\u003c/tt\u003e is greater than the length of the other argument. \u003cli\u003eThere is some nonnegative integer \u003ci\u003ek\u003c/i\u003e less than \u003ctt\u003elen\u003c/tt\u003e such that: \u003ctt\u003ethis.charAt(toffset+\u003ci\u003ek\u003c/i\u003e)\u0026nbsp;!\u003d\u0026nbsp;other.charAt(ooffset+\u003ci\u003ek\u003c/i\u003e)\u003c/tt\u003e \u003c/ul\u003e\n * @param toffset   the starting offset of the subregion in this string.\n * @param other     the string argument.\n * @param ooffset   the starting offset of the subregion in the stringargument.\n * @param len       the number of characters to compare.\n * @return  \u003ccode\u003etrue\u003c/code\u003e if the specified subregion of this stringexactly matches the specified subregion of the string argument; \u003ccode\u003efalse\u003c/code\u003e otherwise.\n */\n","tf":{"freq":{"otherwis":1,"region":2,"fals":2,"result":2,"stringargu":1,"greater":2,"stringexact":1,"test":1,"least":1,"one":1,"object":3,"specifi":2,"subregion":4,"ident":1,"sequenc":1,"toffset":5,"length":4,"offset":2,"substr":5,"less":1,"nbsp":2,"follow":1,"argument":4,"index":2,"repres":1,"charact":2,"true":3,"number":1,"equal":1,"len":6,"begin":2,"two":1,"start":2,"nonneg":1,"string":7,"negat":2,"match":2,"ooffset":5,"integ":1,"compar":4},"maxFreq":7,"totalTerms":92},"loc":17}