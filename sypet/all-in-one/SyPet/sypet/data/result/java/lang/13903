{"id":13903,"className":"java.lang.Thread","methodName":"sleep","signature":"\u003cjava.lang.Thread: void sleep(long,int)\u003e","javadoc":"/** \n * Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds plus the specified number of nanoseconds, subject to the precision and accuracy of system timers and schedulers. The thread does not lose ownership of any monitors.\n * @param millis the length of time to sleep in milliseconds\n * @param nanos {@code 0-999999} additional nanoseconds to sleep\n * @throws IllegalArgumentException if the value of  {@code millis} is negative, or the value of{@code nanos} is not in the range {@code 0-999999}\n * @throws InterruptedException if any thread has interrupted the current thread. The \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is cleared when this exception is thrown.\n */\n","tf":{"freq":{"ceas":1,"subject":1,"schedul":1,"milli":2,"nanosecond":2,"specifi":2,"clear":1,"time":1,"rang":1,"millisecond":2,"timer":1,"thread":5,"current":3,"precis":1,"length":1,"valu":2,"argument":1,"addit":1,"plus":1,"thrown":1,"except":3,"monitor":1,"status":1,"temporarili":1,"number":2,"nano":2,"sleep":4,"accuraci":1,"illeg":1,"interrupt":3,"lose":1,"system":1,"caus":1,"ownership":1,"negat":1,"execut":2},"maxFreq":5,"totalTerms":57},"loc":16}