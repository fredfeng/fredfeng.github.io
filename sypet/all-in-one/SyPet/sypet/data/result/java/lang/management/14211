{"id":14211,"className":"java.lang.management.ThreadInfo","methodName":"getBlockedTime","signature":"\u003cjava.lang.management.ThreadInfo: long getBlockedTime()\u003e","javadoc":"/** \n * Returns the approximate accumulated elapsed time (in milliseconds) that the thread associated with this \u003ctt\u003eThreadInfo\u003c/tt\u003e has blocked to enter or reenter a monitor since thread contention monitoring is enabled. I.e. the total accumulated time the thread has been in the {@link java.lang.Thread.State#BLOCKED BLOCKED} state since threadcontention monitoring was last enabled. This method returns \u003ctt\u003e-1\u003c/tt\u003e if thread contention monitoring is disabled. \u003cp\u003eThe Java virtual machine may measure the time with a high resolution timer.  This statistic is reset when the thread contention monitoring is reenabled.\n * @return the approximate accumulated elapsed time in millisecondsthat a thread entered the \u003ctt\u003eBLOCKED\u003c/tt\u003e state; \u003ctt\u003e-1\u003c/tt\u003e if thread contention monitoring is disabled.\n * @throws java.lang.UnsupportedOperationException if the Javavirtual machine does not support this operation.\n * @see ThreadMXBean#isThreadContentionMonitoringSupported\n * @see ThreadMXBean#setThreadContentionMonitoringEnabled\n */\n","tf":{"freq":{"total":1,"virtual":1,"unsupport":1,"last":1,"link":1,"state":3,"block":2,"approxim":2,"lang":2,"info":1,"millisecondsthat":1,"resolut":1,"elaps":2,"threadcontent":1,"time":5,"oper":2,"associ":1,"timer":1,"reenter":1,"millisecond":1,"thread":13,"reset":1,"except":1,"may":1,"support":2,"monitor":8,"bean":2,"enabl":3,"javavirtu":1,"enter":2,"statist":1,"reenabl":1,"accumul":3,"content":6,"machin":2,"disabl":2,"measur":1,"java":3,"method":1,"high":1},"maxFreq":13,"totalTerms":86},"loc":3}