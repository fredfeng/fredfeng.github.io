{"id":13759,"className":"java.lang.AbstractStringBuilder","methodName":"append","signature":"\u003cjava.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)\u003e","javadoc":"/** \n * Appends the specified string to this character sequence. \u003cp\u003e The characters of the  {@code String} argument are appended, inorder, increasing the length of this sequence by the length of the argument. If  {@code str} is {@code null}, then the four characters  {@code \"null\"} are appended.\u003cp\u003e Let \u003ci\u003en\u003c/i\u003e be the length of this character sequence just prior to execution of the  {@code append} method. Then the character atindex \u003ci\u003ek\u003c/i\u003e in the new character sequence is equal to the character at index \u003ci\u003ek\u003c/i\u003e in the old character sequence, if \u003ci\u003ek\u003c/i\u003e is less than \u003ci\u003en\u003c/i\u003e; otherwise, it is equal to the character at index \u003ci\u003ek-n\u003c/i\u003e in the argument  {@code str}.\n * @param str   a string.\n * @return  a reference to this object.\n */\n","tf":{"freq":{"otherwis":1,"argument":3,"increas":1,"just":1,"append":5,"old":1,"index":2,"charact":9,"inord":1,"equal":2,"object":1,"prior":1,"specifi":1,"str":3,"refer":1,"sequenc":5,"string":3,"length":3,"method":1,"four":1,"execut":1,"less":1,"atindex":1},"maxFreq":9,"totalTerms":49},"loc":8}