{"id":13864,"className":"java.lang.Runtime","methodName":"exec","signature":"\u003cjava.lang.Runtime: java.lang.Process exec(java.lang.String)\u003e","javadoc":"/** \n * Executes the specified string command in a separate process. \u003cp\u003eThis is a convenience method.  An invocation of the form \u003ctt\u003eexec(command)\u003c/tt\u003e behaves in exactly the same way as the invocation \u003ctt\u003e {@link #exec(String,String[],File) exec}(command, null, null)\u003c/tt\u003e.\n * @param command   a specified system command.\n * @return  A new {@link Process} object for managing the subprocess\n * @throws SecurityException If a security manager exists and its {@link SecurityManager#checkExec checkExec}method doesn\u0027t allow creation of the subprocess\n * @throws IOException If an I/O error occurs\n * @throws NullPointerException If \u003ccode\u003ecommand\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException If \u003ccode\u003ecommand\u003c/code\u003e is empty\n * @see #exec(String[],String[],File)\n * @see ProcessBuilder\n */\n","tf":{"freq":{"subprocess":2,"creation":1,"allow":1,"behav":1,"link":3,"way":1,"object":1,"specifi":2,"file":2,"exact":1,"command":7,"exist":1,"conveni":1,"argument":1,"except":4,"error":1,"form":1,"check":2,"manag":3,"builder":1,"illeg":1,"invoc":2,"empti":1,"process":3,"system":1,"secur":3,"separ":1,"string":5,"pointer":1,"method":2,"exec":7,"execut":1,"occur":1},"maxFreq":7,"totalTerms":66},"loc":3}