{"id":14555,"className":"java.lang.invoke.SwitchPoint","methodName":"guardWithTest","signature":"\u003cjava.lang.invoke.SwitchPoint: java.lang.invoke.MethodHandle guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)\u003e","javadoc":"/** \n * Returns a method handle which always delegates either to the target or the fallback. The method handle will delegate to the target exactly as long as the switch point is valid. After that, it will permanently delegate to the fallback. \u003cp\u003e The target and fallback must be of exactly the same method type, and the resulting combined method handle will also be of this type.\n * @param target the method handle selected by the switch point as long as it is valid\n * @param fallback the method handle selected by the switch point after it is invalidated\n * @return a combined method handle which always calls either the target or fallback\n * @throws NullPointerException if either argument is null\n * @throws IllegalArgumentException if the two method types do not match\n * @see MethodHandles#guardWithTest\n */\n","tf":{"freq":{"valid":2,"result":1,"call":1,"test":2,"type":3,"must":1,"deleg":3,"invalid":1,"guard":2,"exact":2,"combin":2,"argument":2,"except":2,"alway":2,"select":2,"illeg":1,"handl":7,"two":1,"point":3,"fallback":5,"either":3,"will":3,"target":5,"pointer":1,"method":9,"match":1,"also":1,"perman":1},"maxFreq":9,"totalTerms":69},"loc":5}