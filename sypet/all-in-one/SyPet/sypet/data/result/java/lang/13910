{"id":13910,"className":"java.lang.Thread","methodName":"Thread","signature":"\u003cjava.lang.Thread: void Thread(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)\u003e","javadoc":"/** \n * Allocates a new  {@code Thread} object so that it has {@code target}as its run object, has the specified  {@code name} as its name,and belongs to the thread group referred to by  {@code group}. \u003cp\u003eIf there is a security manager, its {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}method is invoked with the ThreadGroup as its argument. \u003cp\u003eIn addition, its  {@code checkPermission} method is invoked withthe  {@code RuntimePermission(\"enableContextClassLoaderOverride\")}permission when invoked directly or indirectly by the constructor of a subclass which overrides the  {@code getContextClassLoader}or  {@code setContextClassLoader} methods.\u003cp\u003eThe priority of the newly created thread is set equal to the priority of the thread creating it, that is, the currently running thread. The method  {@linkplain #setPriority setPriority} may beused to change the priority to a new value. \u003cp\u003eThe newly created thread is initially marked as being a daemon thread if and only if the thread creating it is currently marked as a daemon thread. The method  {@linkplain #setDaemon setDaemon}may be used to change whether or not a thread is a daemon.\n * @param group the thread group. If  {@code null} and there is a securitymanager, the group is determined by  {@linkplain SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}. If there is not a security manager or  {@code SecurityManager.getThreadGroup()} returns {@code null}, the group is set to the current thread\u0027s thread group.\n * @param target the object whose  {@code run} method is invoked when this threadis started. If  {@code null}, this thread\u0027s run method is invoked.\n * @param name the name of the new thread\n * @throws SecurityException if the current thread cannot create a thread in the specified thread group or cannot override the context class loader methods.\n */\n","tf":{"freq":{"belong":1,"whether":1,"specifi":2,"refer":1,"thread":24,"permiss":3,"argument":1,"threadi":1,"except":1,"prioriti":5,"creat":5,"whose":1,"enabl":1,"invok":5,"loader":4,"runtim":1,"beus":1,"mark":2,"newli":2,"withth":1,"start":1,"determin":1,"subclass":1,"alloc":1,"linkplain":3,"link":1,"use":1,"object":3,"run":4,"indirect":1,"name":4,"current":4,"valu":1,"initi":1,"securitymanag":1,"constructor":1,"direct":1,"addit":1,"may":2,"check":3,"manag":6,"equal":1,"access":2,"secur":7,"context":4,"target":2,"method":8,"daemon":5,"chang":2,"group":13},"maxFreq":24,"totalTerms":149},"loc":3}