{"id":13255,"className":"java.lang.SecurityManager","methodName":"SecurityManager","signature":"\u003cjava.lang.SecurityManager: void SecurityManager()\u003e","javadoc":"/** \n * Constructs a new \u003ccode\u003eSecurityManager\u003c/code\u003e. \u003cp\u003e If there is a security manager already installed, this method first calls the security manager\u0027s \u003ccode\u003echeckPermission\u003c/code\u003e method with the \u003ccode\u003eRuntimePermission(\"createSecurityManager\")\u003c/code\u003e permission to ensure the calling thread has permission to create a new security manager. This may result in throwing a \u003ccode\u003eSecurityException\u003c/code\u003e.\n * @exception java.lang.SecurityException if a security manager alreadyexists and its \u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow creation of a new security manager.\n * @see java.lang.System#getSecurityManager()\n * @see #checkPermission(java.security.Permission) checkPermission\n * @see java.lang.RuntimePermission\n */\n","tf":{"freq":{"creation":1,"result":1,"call":2,"except":3,"may":1,"allow":1,"check":4,"creat":2,"manag":9,"instal":1,"runtim":2,"lang":3,"ensur":1,"system":1,"alreadyexist":1,"secur":12,"thread":1,"permiss":9,"java":4,"alreadi":1,"method":3,"construct":1,"first":1},"maxFreq":12,"totalTerms":65},"loc":12}