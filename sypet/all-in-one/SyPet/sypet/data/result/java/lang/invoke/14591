{"id":14591,"className":"java.lang.invoke.MethodType","methodName":"fromMethodDescriptorString","signature":"\u003cjava.lang.invoke.MethodType: java.lang.invoke.MethodType fromMethodDescriptorString(java.lang.String,java.lang.ClassLoader)\u003e","javadoc":"/** \n * Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for  {@link #methodType(java.lang.Class,java.lang.Class[]) methodType}. Any class or interface name embedded in the descriptor string will be resolved by calling  {@link ClassLoader#loadClass(java.lang.String)}on the given loader (or if it is null, on the system class loader). \u003cp\u003e Note that it is possible to encounter method types which cannot be constructed by this method, because their component types are not all reachable from a common class loader. \u003cp\u003e This method is included for the benfit of applications that must generate bytecodes that process method handles and  {@code invokedynamic}.\n * @param descriptor a bytecode-level type descriptor string \"(T...)T\"\n * @param loader the class loader in which to look up the types\n * @return a method type matching the bytecode-level type descriptor\n * @throws NullPointerException if the string is null\n * @throws IllegalArgumentException if the string is not well-formed\n * @throws TypeNotPresentException if a named type cannot be found\n */\n","tf":{"freq":{"call":1,"common":1,"descriptor":6,"link":2,"invokedynam":1,"possibl":1,"well":1,"type":11,"lang":3,"must":1,"applic":1,"level":2,"given":2,"name":2,"conveni":1,"spell":1,"find":1,"note":1,"argument":1,"look":1,"except":3,"includ":1,"form":1,"creat":1,"loader":6,"resolv":1,"benfit":1,"illeg":1,"embed":1,"handl":1,"instanc":1,"process":1,"present":1,"system":1,"compon":1,"encount":1,"generat":1,"string":6,"will":1,"pointer":1,"method":10,"java":3,"load":1,"match":1,"construct":1,"bytecod":4,"reachabl":1,"found":1},"maxFreq":11,"totalTerms":95},"loc":11}