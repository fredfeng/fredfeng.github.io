{"id":13295,"className":"java.lang.Byte","methodName":"parseByte","signature":"\u003cjava.lang.Byte: byte parseByte(java.lang.String,int)\u003e","javadoc":"/** \n * Parses the string argument as a signed  {@code byte} in theradix specified by the second argument. The characters in the string must all be digits, of the specified radix (as determined by whether  {@link java.lang.Character#digit(char,int)} returns a nonnegative value) except that the firstcharacter may be an ASCII minus sign  {@code \u0027-\u0027}(\u003ccode\u003e\u0027\u0026#92;u002D\u0027\u003c/code\u003e) to indicate a negative value or an ASCII plus sign  {@code \u0027+\u0027} (\u003ccode\u003e\u0027\u0026#92;u002B\u0027\u003c/code\u003e) toindicate a positive value.  The resulting  {@code byte} value isreturned. \u003cp\u003eAn exception of type  {@code NumberFormatException} isthrown if any of the following situations occurs: \u003cul\u003e \u003cli\u003e The first argument is  {@code null} or is a string oflength zero. \u003cli\u003e The radix is either smaller than  {@link java.lang.Character#MIN_RADIX} or larger than {@link java.lang.Character#MAX_RADIX}. \u003cli\u003e Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign  {@code \u0027-\u0027} (\u003ccode\u003e\u0027\u0026#92;u002D\u0027\u003c/code\u003e) or plus sign{@code \u0027+\u0027} (\u003ccode\u003e\u0027\u0026#92;u002B\u0027\u003c/code\u003e) provided that thestring is longer than length 1. \u003cli\u003e The value represented by the string is not a value of type {@code byte}. \u003c/ul\u003e\n * @param s         the {@code String} containing the{@code byte}representation to be parsed\n * @param radix     the radix to be used while parsing {@code s}\n * @return          the {@code byte} value represented by the stringargument in the specified radix\n * @throws NumberFormatException If the string doesnot contain a parsable  {@code byte}.\n */\n","tf":{"freq":{"second":1,"firstcharact":1,"type":2,"zero":1,"parsabl":1,"whether":1,"must":1,"situat":1,"specifi":4,"toindic":1,"longer":1,"follow":1,"argument":3,"thestr":1,"plus":2,"except":5,"minus":2,"charact":6,"number":2,"format":2,"provid":1,"sign":5,"digit":3,"isreturn":1,"determin":1,"contain":2,"negat":1,"posit":1,"result":1,"stringargu":1,"link":3,"use":1,"lang":3,"smaller":1,"isthrown":1,"theradix":1,"indic":1,"length":1,"doesnot":1,"valu":7,"may":2,"repres":2,"larger":1,"represent":1,"either":1,"nonneg":1,"radix":6,"string":7,"oflength":1,"java":3,"pars":4,"first":2,"occur":1},"maxFreq":7,"totalTerms":108},"loc":7}