{"id":13867,"className":"java.lang.Runtime","methodName":"exec","signature":"\u003cjava.lang.Runtime: java.lang.Process exec(java.lang.String[])\u003e","javadoc":"/** \n * Executes the specified command and arguments in a separate process. \u003cp\u003eThis is a convenience method.  An invocation of the form \u003ctt\u003eexec(cmdarray)\u003c/tt\u003e behaves in exactly the same way as the invocation \u003ctt\u003e {@link #exec(String[],String[],File) exec}(cmdarray, null, null)\u003c/tt\u003e.\n * @param cmdarray  array containing the command to call andits arguments.\n * @return  A new {@link Process} object for managing the subprocess\n * @throws SecurityException If a security manager exists and its {@link SecurityManager#checkExec checkExec}method doesn\u0027t allow creation of the subprocess\n * @throws IOException If an I/O error occurs\n * @throws NullPointerException If \u003ccode\u003ecmdarray\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, or one of the elements of \u003ccode\u003ecmdarray\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws IndexOutOfBoundsException If \u003ccode\u003ecmdarray\u003c/code\u003e is an empty array (has length \u003ccode\u003e0\u003c/code\u003e)\n * @see ProcessBuilder\n */\n","tf":{"freq":{"subprocess":2,"creation":1,"call":1,"allow":1,"cmdarray":6,"behav":1,"one":1,"link":3,"way":1,"object":1,"andit":1,"specifi":1,"file":1,"exact":1,"length":1,"command":2,"exist":1,"conveni":1,"argument":2,"element":1,"index":1,"except":4,"error":1,"check":2,"form":1,"manag":3,"builder":1,"invoc":2,"empti":1,"process":3,"secur":3,"separ":1,"string":2,"contain":1,"pointer":1,"method":2,"exec":6,"execut":1,"bound":1,"occur":1,"array":2},"maxFreq":6,"totalTerms":70},"loc":3}