{"id":13188,"className":"java.lang.Character","methodName":"getNumericValue","signature":"\u003cjava.lang.Character: int getNumericValue(char)\u003e","javadoc":"/** \n * Returns the  {@code int} value that the specified Unicodecharacter represents. For example, the character {@code \u0027\\u005Cu216C\u0027} (the roman numeral fifty) will returnan int with a value of 50. \u003cp\u003e The letters A-Z in their uppercase ( {@code \u0027\\u005Cu0041\u0027} through{@code \u0027\\u005Cu005A\u0027}), lowercase ( {@code \u0027\\u005Cu0061\u0027} through {@code \u0027\\u005Cu007A\u0027}), and full width variant ( {@code \u0027\\u005CuFF21\u0027} through{@code \u0027\\u005CuFF3A\u0027} and {@code \u0027\\u005CuFF41\u0027} through{@code \u0027\\u005CuFF5A\u0027}) forms have numeric values from 10 through 35. This is independent of the Unicode specification, which does not assign numeric values to these  {@code char}values. \u003cp\u003e If the character does not have a numeric value, then -1 is returned. If the character has a numeric value that cannot be represented as a nonnegative integer (for example, a fractional value), then -2 is returned. \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e This method cannot handle \u003ca href\u003d\"#supplementary\"\u003e supplementary characters\u003c/a\u003e. To support all Unicode characters, including supplementary characters, use the  {@link #getNumericValue(int)} method.\n * @param ch      the character to be converted.\n * @return  the numeric value of the character, as a nonnegative {@code int}value; -2 if the character has a numeric value that is not a nonnegative integer; -1 if the character has no numeric value.\n * @see Character#forDigit(int,int)\n * @see Character#isDigit(char)\n * @since   1.1\n */\n","tf":{"freq":{"supplementari":3,"assign":1,"link":1,"convert":1,"use":1,"variant":1,"specifi":1,"independ":1,"full":1,"uppercas":1,"valu":14,"href":1,"note":1,"fraction":1,"includ":1,"support":1,"lowercas":1,"form":1,"letter":1,"charact":12,"repres":2,"unicodecharact":1,"numer":10,"returnan":1,"width":1,"fifti":1,"handl":1,"digit":2,"specif":1,"nonneg":3,"will":1,"exampl":2,"unicod":2,"method":2,"roman":1,"integ":2},"maxFreq":14,"totalTerms":79},"loc":3}