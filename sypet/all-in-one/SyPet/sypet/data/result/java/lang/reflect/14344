{"id":14344,"className":"java.lang.reflect.AccessibleObject","methodName":"setAccessible","signature":"\u003cjava.lang.reflect.AccessibleObject: void setAccessible(boolean)\u003e","javadoc":"/** \n * Set the  {@code accessible} flag for this object tothe indicated boolean value.  A value of  {@code true} indicates thatthe reflected object should suppress Java language access checking when it is used.  A value of  {@code false} indicatesthat the reflected object should enforce Java language access checks. \u003cp\u003eFirst, if there is a security manager, its {@code checkPermission} method is called with a{@code ReflectPermission(\"suppressAccessChecks\")} permission.\u003cp\u003eA  {@code SecurityException} is raised if {@code flag} is{@code true} but accessibility of this object may not be changed(for example, if this element object is a  {@link Constructor} object forthe class  {@link java.lang.Class}). \u003cp\u003eA  {@code SecurityException} is raised if this object is a {@link java.lang.reflect.Constructor} object for the class{@code java.lang.Class}, and  {@code flag} is true.\n * @param flag the new value for the {@code accessible} flag\n * @throws SecurityException if the request is denied.\n * @see SecurityManager#checkPermission\n * @see java.lang.RuntimePermission\n */\n","tf":{"freq":{"forth":1,"fals":1,"call":1,"indicatesthat":1,"link":3,"use":1,"languag":2,"object":8,"toth":1,"lang":4,"rais":2,"indic":2,"request":1,"permiss":5,"valu":4,"deni":1,"constructor":2,"element":1,"may":1,"except":3,"check":5,"enforc":1,"manag":2,"runtim":1,"true":3,"access":7,"flag":5,"secur":5,"thatth":1,"exampl":1,"java":6,"method":1,"chang":1,"first":1,"suppress":2,"reflect":4},"maxFreq":8,"totalTerms":91},"loc":5}