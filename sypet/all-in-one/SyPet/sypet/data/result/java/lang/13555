{"id":13555,"className":"java.lang.Math","methodName":"hypot","signature":"\u003cjava.lang.Math: double hypot(double,double)\u003e","javadoc":"/** \n * Returns sqrt(\u003ci\u003ex\u003c/i\u003e\u003csup\u003e2\u003c/sup\u003e\u0026nbsp;+\u003ci\u003ey\u003c/i\u003e\u003csup\u003e2\u003c/sup\u003e) without intermediate overflow or underflow. \u003cp\u003eSpecial cases: \u003cul\u003e \u003cli\u003e If either argument is infinite, then the result is positive infinity. \u003cli\u003e If either argument is NaN and neither argument is infinite, then the result is NaN. \u003c/ul\u003e \u003cp\u003eThe computed result must be within 1 ulp of the exact result.  If one parameter is held constant, the results must be semi-monotonic in the other parameter.\n * @param x a value\n * @param y a value\n * @return sqrt(\u003ci\u003ex\u003c/i\u003e\u003csup\u003e2\u003c/sup\u003e\u0026nbsp;+\u003ci\u003ey\u003c/i\u003e\u003csup\u003e2\u003c/sup\u003e)without intermediate overflow or underflow\n * @since 1.5\n */\n","tf":{"freq":{"result":5,"infin":1,"one":1,"sup":8,"must":2,"intermedi":2,"infinit":2,"hypot":1,"exact":1,"valu":2,"nbsp":2,"argument":3,"held":1,"constant":1,"ulp":1,"sqrt":2,"paramet":2,"semi":1,"without":2,"underflow":2,"monoton":1,"neither":1,"either":2,"overflow":2,"comput":1,"special":1,"within":1,"posit":1},"maxFreq":8,"totalTerms":52},"loc":3}