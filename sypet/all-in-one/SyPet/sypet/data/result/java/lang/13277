{"id":13277,"className":"java.lang.SecurityManager","methodName":"checkPropertiesAccess","signature":"\u003cjava.lang.SecurityManager: void checkPropertiesAccess()\u003e","javadoc":"/** \n * Throws a \u003ccode\u003eSecurityException\u003c/code\u003e if the calling thread is not allowed to access or modify the system properties. \u003cp\u003e This method is used by the \u003ccode\u003egetProperties\u003c/code\u003e and \u003ccode\u003esetProperties\u003c/code\u003e methods of class \u003ccode\u003eSystem\u003c/code\u003e. \u003cp\u003e This method calls \u003ccode\u003echeckPermission\u003c/code\u003e with the \u003ccode\u003ePropertyPermission(\"*\", \"read,write\")\u003c/code\u003e permission. \u003cp\u003e If you override this method, then you should make a call to \u003ccode\u003esuper.checkPropertiesAccess\u003c/code\u003e at the point the overridden method would normally throw an exception. \u003cp\u003e\n * @exception SecurityException  if the calling thread does not havepermission to access or modify the system properties.\n * @see java.lang.System#getProperties()\n * @see java.lang.System#setProperties(java.util.Properties)\n * @see #checkPermission(java.security.Permission) checkPermission\n */\n","tf":{"freq":{"call":4,"except":4,"check":5,"allow":1,"overridden":1,"normal":1,"use":1,"access":4,"lang":2,"havepermiss":1,"point":1,"system":5,"secur":3,"thread":2,"write":1,"permiss":6,"modifi":2,"read":1,"java":4,"method":5,"properti":10,"make":1,"util":1},"maxFreq":10,"totalTerms":66},"loc":4}