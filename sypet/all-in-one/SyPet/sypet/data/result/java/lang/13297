{"id":13297,"className":"java.lang.Byte","methodName":"valueOf","signature":"\u003cjava.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)\u003e","javadoc":"/** \n * Returns a  {@code Byte} object holding the valueextracted from the specified  {@code String} when parsedwith the radix given by the second argument. The first argument is interpreted as representing a signed  {@code byte} inthe radix specified by the second argument, exactly as if the argument were given to the  {@link #parseByte(java.lang.String,int)} method. The result is a {@code Byte} object thatrepresents the  {@code byte} value specified by the string.\u003cp\u003e In other words, this method returns a  {@code Byte} objectequal to the value of: \u003cblockquote\u003e {@code new Byte(Byte.parseByte(s, radix))}\u003c/blockquote\u003e\n * @param s         the string to be parsed\n * @param radix     the radix to be used in interpreting {@code s}\n * @return          a {@code Byte} object holding the valuerepresented by the string argument in the specified radix.\n * @throws NumberFormatException If the {@code String} doesnot contain a parsable  {@code byte}.\n */\n","tf":{"freq":{"result":1,"parsedwith":1,"second":2,"link":1,"interpret":2,"use":1,"object":3,"parsabl":1,"lang":1,"specifi":4,"inth":1,"given":2,"blockquot":2,"exact":1,"objectequ":1,"valueextract":1,"doesnot":1,"valu":3,"argument":5,"except":1,"repres":1,"hold":2,"number":1,"format":1,"thatrepres":1,"sign":1,"radix":6,"contain":1,"string":6,"word":1,"java":1,"method":2,"valuerepres":1,"first":1,"pars":3},"maxFreq":6,"totalTerms":64},"loc":3}