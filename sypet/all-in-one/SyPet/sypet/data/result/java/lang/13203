{"id":13203,"className":"java.lang.Character","methodName":"isMirrored","signature":"\u003cjava.lang.Character: boolean isMirrored(int)\u003e","javadoc":"/** \n * Determines whether the specified character (Unicode code point) is mirrored according to the Unicode specification.  Mirrored characters should have their glyphs horizontally mirrored when displayed in text that is right-to-left.  For example, {@code \u0027\\u005Cu0028\u0027} LEFT PARENTHESIS is semanticallydefined to be an \u003ci\u003eopening parenthesis\u003c/i\u003e.  This will appear as a \"(\" in text that is left-to-right but as a \")\" in text that is right-to-left.\n * @param codePoint the character (Unicode code point) to be tested.\n * @return  {@code true} if the character is mirrored, {@code false}if the character is not mirrored or is not defined.\n * @since   1.5\n */\n","tf":{"freq":{"fals":1,"defin":1,"text":3,"appear":1,"test":1,"charact":5,"glyph":1,"true":1,"display":1,"accord":1,"whether":1,"specifi":1,"mirror":6,"open":1,"point":3,"specif":1,"parenthesi":1,"determin":1,"will":1,"exampl":1,"unicod":3,"left":3,"horizont":1,"semanticallydefin":1,"right":3},"maxFreq":6,"totalTerms":44},"loc":3}