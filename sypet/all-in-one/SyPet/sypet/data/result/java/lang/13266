{"id":13266,"className":"java.lang.SecurityManager","methodName":"checkRead","signature":"\u003cjava.lang.SecurityManager: void checkRead(java.lang.String)\u003e","javadoc":"/** \n * Throws a \u003ccode\u003eSecurityException\u003c/code\u003e if the calling thread is not allowed to read the file specified by the string argument. \u003cp\u003e This method calls \u003ccode\u003echeckPermission\u003c/code\u003e with the \u003ccode\u003eFilePermission(file,\"read\")\u003c/code\u003e permission. \u003cp\u003e If you override this method, then you should make a call to \u003ccode\u003esuper.checkRead\u003c/code\u003e at the point the overridden method would normally throw an exception.\n * @param file   the system-dependent file name.\n * @exception SecurityException if the calling thread does not havepermission to access the specified file.\n * @exception NullPointerException if the \u003ccode\u003efile\u003c/code\u003e argument is\u003ccode\u003enull\u003c/code\u003e.\n * @see #checkPermission(java.security.Permission) checkPermission\n */\n","tf":{"freq":{"argument":2,"call":4,"except":6,"check":5,"allow":1,"overridden":1,"depend":1,"normal":1,"access":1,"specifi":2,"havepermiss":1,"point":1,"system":1,"secur":3,"file":7,"name":1,"thread":2,"string":1,"permiss":6,"pointer":1,"read":4,"java":1,"method":3,"make":1},"maxFreq":7,"totalTerms":57},"loc":4}