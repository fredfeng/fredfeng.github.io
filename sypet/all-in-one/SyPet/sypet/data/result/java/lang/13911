{"id":13911,"className":"java.lang.Thread","methodName":"Thread","signature":"\u003cjava.lang.Thread: void Thread(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)\u003e","javadoc":"/** \n * Allocates a new  {@code Thread} object so that it has {@code target}as its run object, has the specified  {@code name} as its name,and belongs to the thread group referred to by  {@code group}, and has the specified \u003ci\u003estack size\u003c/i\u003e. \u003cp\u003eThis constructor is identical to  {@link #Thread(ThreadGroup,Runnable,String)} with the exception of the factthat it allows the thread stack size to be specified.  The stack size is the approximate number of bytes of address space that the virtual machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\u003cp\u003eOn some platforms, specifying a higher value for the {@code stackSize} parameter may allow a thread to achieve greaterrecursion depth before throwing a  {@link StackOverflowError}. Similarly, specifying a lower value may allow a greater number of threads to exist concurrently without throwing an  {@link OutOfMemoryError} (or other internal error).  The details ofthe relationship between the value of the \u003ctt\u003estackSize\u003c/tt\u003e parameter and the maximum recursion depth and concurrency level are platform-dependent.  \u003cb\u003eOn some platforms, the value of the {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\u003cp\u003eThe virtual machine is free to treat the  {@code stackSize}parameter as a suggestion.  If the specified value is unreasonably low for the platform, the virtual machine may instead use some platform-specific minimum value; if the specified value is unreasonably high, the virtual machine may instead use some platform-specific maximum.  Likewise, the virtual machine is free to round the specified value up or down as it sees fit (or to ignore it completely). \u003cp\u003eSpecifying a value of zero for the  {@code stackSize} parameter willcause this constructor to behave exactly like the {@code Thread(ThreadGroup, Runnable, String)} constructor.\u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this constructor, extreme care should be exercised in its use. The thread stack size necessary to perform a given computation will likely vary from one JRE implementation to another.  In light of this variation, careful tuning of the stack size parameter may be required, and the tuning may need to be repeated for each JRE implementation on which an application is to run.\u003c/i\u003e \u003cp\u003eImplementation note: Java platform implementers are encouraged to document their implementation\u0027s behavior with respect to the {@code stackSize} parameter.\n * @param group the thread group. If  {@code null} and there is a securitymanager, the group is determined by  {@linkplain SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}. If there is not a security manager or  {@code SecurityManager.getThreadGroup()} returns {@code null}, the group is set to the current thread\u0027s thread group.\n * @param target the object whose  {@code run} method is invoked when this threadis started. If  {@code null}, this thread\u0027s run method is invoked.\n * @param name the name of the new thread\n * @param stackSize the desired stack size for the new thread, or zero to indicate that this parameter is to be ignored.\n * @throws SecurityException if the current thread cannot create a thread in the specified thread group\n * @since 1.4\n */\n","tf":{"freq":{"need":1,"willcaus":1,"memori":1,"greater":1,"lower":1,"behav":1,"higher":1,"desir":1,"zero":2,"specifi":10,"free":2,"given":1,"refer":1,"encourag":1,"thread":24,"threadi":1,"platform":9,"ignor":2,"invok":2,"number":2,"suggest":1,"like":2,"without":1,"start":1,"will":1,"low":1,"virtual":5,"linkplain":1,"greaterrecurs":1,"minimum":1,"concurr":2,"behavior":2,"link":3,"use":3,"anoth":1,"run":4,"space":1,"applic":1,"document":1,"indic":1,"current":2,"exercis":1,"runnabl":2,"note":1,"similar":1,"complet":1,"may":7,"relationship":1,"factthat":1,"string":2,"intern":1,"method":2,"whatsoev":1,"respect":1,"detail":1,"belong":1,"natur":1,"round":1,"perform":1,"approxim":1,"necessari":1,"level":1,"requir":1,"variat":1,"exact":1,"care":2,"light":1,"extrem":1,"except":2,"creat":1,"whose":1,"tune":2,"depth":2,"size":14,"machin":5,"likewis":1,"maximum":2,"determin":1,"overflow":1,"due":1,"comput":1,"stack":16,"recurs":1,"alloc":2,"treat":1,"vari":1,"allow":3,"one":1,"object":3,"repeat":1,"fit":1,"ident":1,"name":4,"ofth":1,"valu":9,"securitymanag":1,"exist":1,"constructor":4,"error":3,"manag":4,"depend":3,"paramet":9,"unreason":2,"achiev":1,"specif":2,"secur":5,"effect":2,"address":1,"target":2,"instead":2,"java":1,"high":2,"group":13},"maxFreq":24,"totalTerms":275},"loc":3}