{"id":14453,"className":"java.lang.invoke.MethodHandles$Lookup","methodName":"findSetter","signature":"\u003cjava.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findSetter(java.lang.Class,java.lang.String,java.lang.Class)\u003e","javadoc":"/** \n * Produces a method handle giving write access to a non-static field. The type of the method handle will have a void return type. The method handle will take two arguments, the instance containing the field, and the value to be stored. The second argument will be of the field\u0027s value type. Access checking is performed immediately on behalf of the lookup class.\n * @param refc the class or interface from which the method is accessed\n * @param name the field\u0027s name\n * @param type the field\u0027s type\n * @return a method handle which can store values into the field\n * @throws NoSuchFieldException if the field does not exist\n * @throws IllegalAccessException if access checking fails, or if the field is {@code static}\n * @exception SecurityException if a security manager is present and it\u003ca href\u003d\"MethodHandles.Lookup.html#secmgr\"\u003erefuses access\u003c/a\u003e\n * @throws NullPointerException if any argument is null\n */\n","tf":{"freq":{"behalf":1,"refc":1,"store":2,"second":1,"give":1,"perform":1,"type":5,"lookup":2,"refus":1,"fail":1,"name":2,"write":1,"setter":1,"valu":3,"immedi":1,"href":1,"exist":1,"find":1,"argument":3,"except":5,"check":2,"secmgr":1,"manag":1,"produc":1,"access":6,"illeg":1,"non":1,"handl":5,"instanc":1,"field":9,"present":1,"two":1,"secur":2,"take":1,"contain":1,"will":3,"pointer":1,"html":1,"method":6},"maxFreq":9,"totalTerms":80},"loc":5}