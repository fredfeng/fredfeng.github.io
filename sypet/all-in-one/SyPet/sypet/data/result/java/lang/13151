{"id":13151,"className":"java.lang.Character","methodName":"offsetByCodePoints","signature":"\u003cjava.lang.Character: int offsetByCodePoints(char[],int,int,int,int)\u003e","javadoc":"/** \n * Returns the index within the given  {@code char} subarraythat is offset from the given  {@code index} by{@code codePointOffset} code points. The{@code start} and {@code count} arguments specify asubarray of the  {@code char} array. Unpaired surrogateswithin the text range given by  {@code index} and{@code codePointOffset} count as one code point each.\n * @param a the {@code char} array\n * @param start the index of the first {@code char} of thesubarray\n * @param count the length of the subarray in {@code char}s\n * @param index the index to be offset\n * @param codePointOffset the offset in code points\n * @return the index within the subarray\n * @exception NullPointerException if {@code a} is null.\n * @exception IndexOutOfBoundsException if  {@code start} or {@code count} is negative,or if  {@code start + count} is larger than the length ofthe given array, or if  {@code index} is less than {@code start} orlarger then  {@code start + count}, or if  {@code codePointOffset} is positive and the text rangestarting with  {@code index} and ending with {@code start + count - 1}has fewer than  {@code codePointOffset} codepoints, or if  {@code codePointOffset} is negative and the text rangestarting with  {@code start} and ending with {@code index - 1}has fewer than the absolute value of {@code codePointOffset} code points.\n * @since 1.5\n */\n","tf":{"freq":{"count":7,"one":1,"thesubarray":1,"unpair":1,"specifi":1,"subarraythat":1,"codepoint":1,"asubarray":1,"given":4,"rang":1,"ofth":1,"surrogateswithin":1,"orlarg":1,"length":2,"valu":1,"offset":11,"end":2,"less":1,"argument":1,"index":11,"text":3,"except":4,"rangestart":2,"larger":1,"absolut":1,"subarray":2,"point":12,"start":8,"fewer":2,"pointer":1,"negat":2,"within":2,"posit":1,"first":1,"bound":1,"array":3},"maxFreq":12,"totalTerms":97},"loc":7}