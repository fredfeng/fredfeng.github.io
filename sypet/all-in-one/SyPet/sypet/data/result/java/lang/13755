{"id":13755,"className":"java.lang.AbstractStringBuilder","methodName":"offsetByCodePoints","signature":"\u003cjava.lang.AbstractStringBuilder: int offsetByCodePoints(int,int)\u003e","javadoc":"/** \n * Returns the index within this sequence that is offset from the given \u003ccode\u003eindex\u003c/code\u003e by \u003ccode\u003ecodePointOffset\u003c/code\u003e code points. Unpaired surrogates within the text range given by \u003ccode\u003eindex\u003c/code\u003e and \u003ccode\u003ecodePointOffset\u003c/code\u003e count as one code point each.\n * @param index the index to be offset\n * @param codePointOffset the offset in code points\n * @return the index within this sequence\n * @exception IndexOutOfBoundsException if \u003ccode\u003eindex\u003c/code\u003eis negative or larger then the length of this sequence, or if \u003ccode\u003ecodePointOffset\u003c/code\u003e is positive and the subsequence starting with \u003ccode\u003eindex\u003c/code\u003e has fewer than \u003ccode\u003ecodePointOffset\u003c/code\u003e code points, or if \u003ccode\u003ecodePointOffset\u003c/code\u003e is negative and the subsequence before \u003ccode\u003eindex\u003c/code\u003e has fewer than the absolute value of \u003ccode\u003ecodePointOffset\u003c/code\u003e code points.\n */\n","tf":{"freq":{"except":2,"index":10,"text":1,"surrog":1,"count":1,"larger":1,"one":1,"absolut":1,"unpair":1,"point":13,"given":2,"start":1,"sequenc":3,"rang":1,"length":1,"fewer":2,"valu":1,"negat":2,"within":3,"subsequ":2,"offset":11,"posit":1,"bound":1},"maxFreq":13,"totalTerms":63},"loc":7}