{"id":13395,"className":"java.lang.String","methodName":"String","signature":"\u003cjava.lang.String: void String(byte[],int,int,int)\u003e","javadoc":"/** \n * Allocates a new  {@code String} constructed from a subarray of an arrayof 8-bit integer values. \u003cp\u003e The  {@code offset} argument is the index of the first byte of thesubarray, and the  {@code count} argument specifies the length of thesubarray. \u003cp\u003e Each  {@code byte} in the subarray is converted to a {@code char} asspecified in the method above.\n * @deprecated This method does not properly convert bytes into characters.As of JDK\u0026nbsp;1.1, the preferred way to do this is via the {@code String} constructors that take a {@link java.nio.charset.Charset}, charset name, or that use the platform\u0027s default charset.\n * @param ascii The bytes to be converted to characters\n * @param hibyte The top 8 bits of each 16-bit Unicode code unit\n * @param offset The initial offset\n * @param count The length\n * @throws IndexOutOfBoundsException If the  {@code offset} or {@code count} argument is invalid\n * @see #String(byte[],int)\n * @see #String(byte[],int,int,java.lang.String)\n * @see #String(byte[],int,int,java.nio.charset.Charset)\n * @see #String(byte[],int,int)\n * @see #String(byte[],java.lang.String)\n * @see #String(byte[],java.nio.charset.Charset)\n * @see #String(byte[])\n */\n","tf":{"freq":{"deprec":1,"via":1,"count":3,"link":1,"use":1,"way":1,"convert":3,"thesubarray":2,"lang":2,"specifi":1,"ascii":1,"arrayof":1,"invalid":1,"hibyt":1,"name":1,"length":2,"valu":1,"initi":1,"proper":1,"offset":4,"top":1,"constructor":1,"nbsp":1,"argument":3,"platform":1,"except":1,"index":2,"charact":2,"charset":8,"subarray":2,"unit":1,"bit":3,"take":1,"string":12,"unicod":1,"asspecifi":1,"nio":3,"java":5,"method":2,"construct":1,"prefer":1,"first":1,"integ":1,"bound":1,"alloc":1},"maxFreq":12,"totalTerms":87},"loc":18}