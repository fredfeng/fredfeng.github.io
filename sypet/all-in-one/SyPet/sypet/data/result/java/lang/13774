{"id":13774,"className":"java.lang.AbstractStringBuilder","methodName":"replace","signature":"\u003cjava.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder replace(int,int,java.lang.String)\u003e","javadoc":"/** \n * Replaces the characters in a substring of this sequence with characters in the specified \u003ccode\u003eString\u003c/code\u003e. The substring begins at the specified \u003ccode\u003estart\u003c/code\u003e and extends to the character at index \u003ccode\u003eend - 1\u003c/code\u003e or to the end of the sequence if no such character exists. First the characters in the substring are removed and then the specified \u003ccode\u003eString\u003c/code\u003e is inserted at \u003ccode\u003estart\u003c/code\u003e. (This sequence will be lengthened to accommodate the specified String if necessary.)\n * @param start    The beginning index, inclusive.\n * @param end      The ending index, exclusive.\n * @param str   String that will replace previous contents.\n * @return     This object.\n * @throws StringIndexOutOfBoundsException  if \u003ccode\u003estart\u003c/code\u003eis negative, greater than \u003ccode\u003elength()\u003c/code\u003e, or greater than \u003ccode\u003eend\u003c/code\u003e.\n */\n","tf":{"freq":{"greater":2,"object":1,"necessari":1,"specifi":4,"inclus":1,"accommod":1,"sequenc":3,"length":1,"exclus":1,"lengthen":1,"exist":1,"substr":3,"end":5,"except":1,"index":4,"previous":1,"charact":5,"remov":1,"begin":2,"content":1,"str":1,"start":4,"string":5,"replac":3,"will":2,"negat":1,"insert":1,"first":1,"bound":1},"maxFreq":5,"totalTerms":59},"loc":19}