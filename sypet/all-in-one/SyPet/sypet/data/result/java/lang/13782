{"id":13782,"className":"java.lang.AbstractStringBuilder","methodName":"insert","signature":"\u003cjava.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder insert(int,java.lang.CharSequence)\u003e","javadoc":"/** \n * Inserts the specified  {@code CharSequence} into this sequence.\u003cp\u003e The characters of the  {@code CharSequence} argument are inserted,in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument s. \u003cp\u003e The result of this method is exactly the same as if it were an invocation of this object\u0027s {@link #insert(int,CharSequence,int,int) insert}(dstOffset, s, 0, s.length()) method. \u003cp\u003eIf  {@code s} is {@code null}, then the four characters {@code \"null\"} are inserted into this sequence.\n * @param dstOffset   the offset.\n * @param s the sequence to be inserted\n * @return     a reference to this object.\n * @throws IndexOutOfBoundsException  if the offset is invalid.\n */\n","tf":{"freq":{"increas":1,"result":1,"link":1,"object":2,"dst":2,"specifi":1,"invalid":1,"indic":1,"order":1,"refer":1,"sequenc":8,"exact":1,"length":3,"four":1,"offset":5,"move":1,"argument":2,"except":1,"index":1,"charact":3,"origin":1,"invoc":1,"method":2,"insert":7,"posit":1,"bound":1},"maxFreq":8,"totalTerms":51},"loc":7}