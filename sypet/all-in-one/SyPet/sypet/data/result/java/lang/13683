{"id":13683,"className":"java.lang.Class","methodName":"getName","signature":"\u003cjava.lang.Class: java.lang.String getName()\u003e","javadoc":"/** \n * Returns the  name of the entity (class, interface, array class, primitive type, or void) represented by this  {@code Class} object,as a  {@code String}. \u003cp\u003e If this class object represents a reference type that is not an array type then the binary name of the class is returned, as specified by \u003ccite\u003eThe Java\u0026trade; Language Specification\u003c/cite\u003e. \u003cp\u003e If this class object represents a primitive type or void, then the name returned is a  {@code String} equal to the Java languagekeyword corresponding to the primitive type or void. \u003cp\u003e If this class object represents a class of arrays, then the internal form of the name consists of the name of the element type preceded by one or more \u0027 {@code [}\u0027 characters representing the depth of the array nesting.  The encoding of element type names is as follows: \u003cblockquote\u003e\u003ctable summary\u003d\"Element types and encodings\"\u003e \u003ctr\u003e\u003cth\u003e Element Type \u003cth\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cth\u003e Encoding \u003ctr\u003e\u003ctd\u003e boolean      \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e Z \u003ctr\u003e\u003ctd\u003e byte         \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e B \u003ctr\u003e\u003ctd\u003e char         \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e C \u003ctr\u003e\u003ctd\u003e class or interface \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e L\u003ci\u003eclassname\u003c/i\u003e; \u003ctr\u003e\u003ctd\u003e double       \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e D \u003ctr\u003e\u003ctd\u003e float        \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e F \u003ctr\u003e\u003ctd\u003e int          \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e I \u003ctr\u003e\u003ctd\u003e long         \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e J \u003ctr\u003e\u003ctd\u003e short        \u003ctd\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp; \u003ctd align\u003dcenter\u003e S \u003c/table\u003e\u003c/blockquote\u003e \u003cp\u003e The class or interface name \u003ci\u003eclassname\u003c/i\u003e is the binary name of the class specified above. \u003cp\u003e Examples: \u003cblockquote\u003e\u003cpre\u003e String.class.getName() returns \"java.lang.String\" byte.class.getName() returns \"byte\" (new Object[3]).getClass().getName() returns \"[Ljava.lang.Object;\" (new int[3][4][5][6][7][8][9]).getClass().getName() returns \"[[[[[[[I\" \u003c/pre\u003e\u003c/blockquote\u003e\n * @return  the name of the class or interfacerepresented by this object.\n */\n","tf":{"freq":{"primit":3,"binari":2,"trade":1,"correspond":1,"one":1,"languag":1,"object":7,"type":9,"lang":2,"specifi":2,"center":9,"interfacerepres":1,"ljava":1,"refer":1,"blockquot":4,"name":14,"nbsp":30,"follow":1,"element":4,"form":1,"charact":1,"repres":5,"consist":1,"align":9,"nest":1,"equal":1,"languagekeyword":1,"depth":1,"cite":2,"preced":1,"encod":3,"specif":1,"summari":1,"entiti":1,"pre":2,"tabl":2,"string":4,"exampl":1,"intern":1,"classnam":2,"java":3,"array":4},"maxFreq":30,"totalTerms":143},"loc":6}