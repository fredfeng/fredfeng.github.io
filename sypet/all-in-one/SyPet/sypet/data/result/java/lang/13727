{"id":13727,"className":"java.lang.Class","methodName":"asSubclass","signature":"\u003cjava.lang.Class: java.lang.Class\u003c? extends U\u003e asSubclass(java.lang.Class)\u003e","javadoc":"/** \n * Casts this  {@code Class} object to represent a subclass of the classrepresented by the specified class object.  Checks that that the cast is valid, and throws a  {@code ClassCastException} if it is not.  Ifthis method succeeds, it always returns a reference to this class object. \u003cp\u003eThis method is useful when a client needs to \"narrow\" the type of a  {@code Class} object to pass it to an API that restricts the{@code Class} objects that it is willing to accept.  A cast wouldgenerate a compile-time warning, as the correctness of the cast could not be checked at runtime (because generic types are implemented by erasure).\n * @return this {@code Class} object, cast to represent a subclass ofthe specified class object.\n * @throws ClassCastException if this {@code Class} object does notrepresent a subclass of the specified class (here \"subclass\" includes the class itself).\n * @since 1.5\n */\n","tf":{"freq":{"generic":1,"warn":1,"need":1,"valid":1,"client":1,"accept":1,"use":1,"object":8,"notrepres":1,"type":2,"specifi":3,"time":1,"wouldgener":1,"correct":1,"refer":1,"ofth":1,"except":2,"includ":1,"succeed":1,"check":2,"repres":2,"alway":1,"runtim":1,"restrict":1,"pass":1,"ifthi":1,"narrow":1,"erasur":1,"cast":7,"subclass":5,"will":1,"method":2,"classrepres":1,"compil":1},"maxFreq":8,"totalTerms":58},"loc":6}