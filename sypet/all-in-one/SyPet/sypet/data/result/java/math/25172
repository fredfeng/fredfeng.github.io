{"id":25172,"className":"java.math.BigInteger","methodName":"intValue","signature":"\u003cjava.math.BigInteger: int intValue()\u003e","javadoc":"/** \n * Converts this BigInteger to an  {@code int}.  This conversion is analogous to a \u003ci\u003enarrowing primitive conversion\u003c/i\u003e from  {@code long} to{@code int} as defined in section 5.1.3 of\u003ccite\u003eThe Java\u0026trade; Language Specification\u003c/cite\u003e: if this BigInteger is too big to fit in an {@code int}, only the low-order 32 bits are returned. Note that this conversion can lose information about the overall magnitude of the BigInteger value as well as return a result with the opposite sign.\n * @return this BigInteger converted to an {@code int}.\n */\n","tf":{"freq":{"result":1,"defin":1,"primit":1,"trade":1,"convers":3,"convert":2,"languag":1,"analog":1,"well":1,"opposit":1,"fit":1,"order":1,"valu":2,"note":1,"magnitud":1,"section":1,"sign":1,"cite":2,"bit":1,"lose":1,"inform":1,"narrow":1,"specif":1,"java":1,"big":5,"low":1,"integ":4},"maxFreq":5,"totalTerms":39},"loc":5}