{"id":25149,"className":"java.math.BigInteger","methodName":"shiftLeft","signature":"\u003cjava.math.BigInteger: java.math.BigInteger shiftLeft(int)\u003e","javadoc":"/** \n * Returns a BigInteger whose value is  {@code (this \u003c\u003c n)}. The shift distance,  {@code n}, may be negative, in which case this method performs a right shift. (Computes \u003ctt\u003efloor(this * 2\u003csup\u003en\u003c/sup\u003e)\u003c/tt\u003e.)\n * @param n shift distance, in bits.\n * @return {@code this \u003c\u003c n}\n * @throws ArithmeticException if the shift distance is {@code Integer.MIN_VALUE}.\n * @see #shiftRight\n */\n","tf":{"freq":{"except":1,"may":1,"whose":1,"arithmet":1,"perform":1,"sup":2,"bit":1,"floor":1,"distanc":3,"comput":1,"left":1,"valu":1,"negat":1,"method":1,"big":1,"integ":2,"right":2,"shift":6},"maxFreq":6,"totalTerms":28},"loc":40}