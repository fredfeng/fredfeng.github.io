{"id":25103,"className":"java.math.BigDecimal","methodName":"movePointRight","signature":"\u003cjava.math.BigDecimal: java.math.BigDecimal movePointRight(int)\u003e","javadoc":"/** \n * Returns a  {@code BigDecimal} which is equivalent to this onewith the decimal point moved  {@code n} places to the right.If  {@code n} is non-negative, the call merely subtracts{@code n} from the scale.  If {@code n} is negative, the callis equivalent to  {@code movePointLeft(-n)}.  The {@code BigDecimal} returned by this call has value \u003ctt\u003e(this\u0026times; 10\u003csup\u003en\u003c/sup\u003e)\u003c/tt\u003e and scale  {@code max(this.scale()-n,0)}.\n * @param n number of places to move the decimal point to the right.\n * @return a {@code BigDecimal} which is equivalent to this onewith the decimal point moved  {@code n} places to the right.\n * @throws ArithmeticException if scale overflows.\n */\n","tf":{"freq":{"scale":4,"call":2,"except":1,"max":1,"arithmet":1,"number":1,"sup":2,"decim":6,"non":1,"subtract":1,"point":5,"time":1,"calli":1,"equival":3,"overflow":1,"onewith":2,"valu":1,"left":1,"negat":2,"mere":1,"big":3,"place":3,"right":4,"move":5},"maxFreq":6,"totalTerms":53},"loc":6}