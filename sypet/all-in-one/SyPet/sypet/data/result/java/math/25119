{"id":25119,"className":"java.math.BigDecimal","methodName":"intValue","signature":"\u003cjava.math.BigDecimal: int intValue()\u003e","javadoc":"/** \n * Converts this  {@code BigDecimal} to an {@code int}. This conversion is analogous to the \u003ci\u003enarrowing primitive conversion\u003c/i\u003e from  {@code double} to{@code short} as defined in section 5.1.3 of\u003ccite\u003eThe Java\u0026trade; Language Specification\u003c/cite\u003e: any fractional part of this {@code BigDecimal} will be discarded, and if the resulting\" {@code BigInteger}\" is too big to fit in an {@code int}, only the low-order 32 bits are returned. Note that this conversion can lose information about the overall magnitude and precision of this  {@code BigDecimal}value as well as return a result with the opposite sign.\n * @return this {@code BigDecimal} converted to an {@code int}.\n */\n","tf":{"freq":{"defin":1,"primit":1,"result":2,"trade":1,"convers":3,"convert":2,"languag":1,"well":1,"analog":1,"opposit":1,"decim":4,"discard":1,"fit":1,"order":1,"precis":1,"valu":2,"note":1,"fraction":1,"magnitud":1,"section":1,"sign":1,"cite":2,"inform":1,"lose":1,"bit":1,"narrow":1,"specif":1,"will":1,"java":1,"big":6,"part":1,"low":1,"integ":1},"maxFreq":6,"totalTerms":47},"loc":5}