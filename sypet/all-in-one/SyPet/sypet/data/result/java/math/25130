{"id":25130,"className":"java.math.BigInteger","methodName":"BigInteger","signature":"\u003cjava.math.BigInteger: void BigInteger(int,java.util.Random)\u003e","javadoc":"/** \n * Constructs a randomly generated BigInteger, uniformly distributed over the range 0 to (2\u003csup\u003e {@code numBits}\u003c/sup\u003e - 1), inclusive. The uniformity of the distribution assumes that a fair source of random bits is provided in  {@code rnd}.  Note that this constructor always constructs a non-negative BigInteger.\n * @param numBits maximum bitLength of the new BigInteger.\n * @param rnd source of randomness to be used in computing the newBigInteger.\n * @throws IllegalArgumentException {@code numBits} is negative.\n * @see #bitLength()\n */\n","tf":{"freq":{"distribut":2,"use":1,"sup":2,"inclus":1,"rang":1,"length":2,"rnd":2,"note":1,"constructor":1,"argument":1,"except":1,"assum":1,"uniform":2,"alway":1,"random":3,"illeg":1,"fair":1,"provid":1,"non":1,"bit":6,"num":3,"maximum":1,"generat":1,"comput":1,"sourc":2,"negat":2,"construct":2,"big":5,"integ":5},"maxFreq":6,"totalTerms":54},"loc":3}