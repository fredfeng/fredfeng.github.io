{"id":25076,"className":"java.math.BigDecimal","methodName":"divide","signature":"\u003cjava.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int)\u003e","javadoc":"/** \n * Returns a  {@code BigDecimal} whose value is {@code (this /divisor)}, and whose scale is  {@code this.scale()}.  If rounding must be performed to generate a result with the given scale, the specified rounding mode is applied. \u003cp\u003eThe new  {@link #divide(BigDecimal,RoundingMode)} methodshould be used in preference to this legacy method.\n * @param divisor value by which this {@code BigDecimal} is to be divided.\n * @param roundingMode rounding mode to apply.\n * @return {@code this / divisor}\n * @throws ArithmeticException if {@code divisor\u003d\u003d0}, or {@code roundingMode\u003d\u003dROUND_UNNECESSARY} and{@code this.scale()} is insufficient to represent the resultof the division exactly.\n * @throws IllegalArgumentException if {@code roundingMode} does notrepresent a valid rounding mode.\n * @see #ROUND_UP\n * @see #ROUND_DOWN\n * @see #ROUND_CEILING\n * @see #ROUND_FLOOR\n * @see #ROUND_HALF_UP\n * @see #ROUND_HALF_DOWN\n * @see #ROUND_HALF_EVEN\n * @see #ROUND_UNNECESSARY\n */\n","tf":{"freq":{"valid":1,"result":1,"scale":4,"link":1,"legaci":1,"arithmet":1,"use":1,"perform":1,"round":8,"notrepres":1,"decim":3,"must":1,"specifi":1,"mode":7,"resultof":1,"given":1,"exact":1,"valu":2,"methodshould":1,"argument":1,"except":2,"repres":1,"whose":2,"divid":3,"divisor":4,"illeg":1,"insuffici":1,"appli":2,"generat":1,"method":1,"big":3,"prefer":1,"divis":1},"maxFreq":8,"totalTerms":62},"loc":3}