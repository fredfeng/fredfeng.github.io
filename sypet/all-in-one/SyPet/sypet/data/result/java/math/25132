{"id":25132,"className":"java.math.BigInteger","methodName":"probablePrime","signature":"\u003cjava.math.BigInteger: java.math.BigInteger probablePrime(int,java.util.Random)\u003e","javadoc":"/** \n * Returns a positive BigInteger that is probably prime, with the specified bitLength. The probability that a BigInteger returned by this method is composite does not exceed 2\u003csup\u003e-100\u003c/sup\u003e.\n * @param bitLength bitLength of the returned BigInteger.\n * @param rnd source of random bits used to select candidates to betested for primality.\n * @return a BigInteger of {@code bitLength} bits that is probably prime\n * @throws ArithmeticException {@code bitLength \u003c 2}.\n * @see #bitLength()\n * @since 1.4\n */\n","tf":{"freq":{"betest":1,"except":1,"composit":1,"select":1,"arithmet":1,"random":1,"exceed":1,"use":1,"candid":1,"sup":2,"specifi":1,"prime":3,"bit":8,"probabl":4,"primal":1,"length":6,"sourc":1,"method":1,"rnd":1,"big":4,"posit":1,"integ":4},"maxFreq":8,"totalTerms":46},"loc":9}