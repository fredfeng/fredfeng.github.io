{"id":25112,"className":"java.math.BigDecimal","methodName":"toEngineeringString","signature":"\u003cjava.math.BigDecimal: java.lang.String toEngineeringString()\u003e","javadoc":"/** \n * Returns a string representation of this  {@code BigDecimal}, using engineering notation if an exponent is needed. \u003cp\u003eReturns a string that represents the  {@code BigDecimal} asdescribed in the  {@link #toString()} method, except that ifexponential notation is used, the power of ten is adjusted to be a multiple of three (engineering notation) such that the integer part of nonzero values will be in the range 1 through 999.  If exponential notation is used for zero values, a decimal point and one or two fractional zero digits are used so that the scale of the zero value is preserved.  Note that unlike the output of  {@link #toString()}, the output of this method is \u003cem\u003enot\u003c/em\u003e guaranteed to recover the same [integer, scale] pair of this  {@code BigDecimal} if the output string isconverting back to a  {@code BigDecimal} using the {@linkplain #BigDecimal(String) string constructor}.  The result of this method meets the weaker constraint of always producing a numerically equal result from applying the string constructor to the method\u0027s output.\n * @return string representation of this {@code BigDecimal}, using engineering notation if an exponent is needed.\n * @since  1.5\n */\n","tf":{"freq":{"need":2,"ten":1,"asdescrib":1,"zero":3,"recov":1,"rang":1,"exponenti":1,"three":1,"power":1,"nonzero":1,"expon":2,"except":1,"multipl":1,"numer":1,"alway":1,"preserv":1,"meet":1,"isconvert":1,"digit":1,"appli":1,"will":1,"big":6,"output":4,"scale":2,"linkplain":1,"result":2,"pair":1,"link":2,"one":1,"engin":4,"constraint":1,"use":6,"decim":7,"weaker":1,"adjust":1,"unlik":1,"valu":3,"note":1,"constructor":2,"fraction":1,"repres":1,"guarante":1,"back":1,"equal":1,"produc":1,"represent":2,"point":1,"two":1,"notat":5,"ifexponenti":1,"string":10,"method":4,"part":1,"integ":2},"maxFreq":10,"totalTerms":104},"loc":3}