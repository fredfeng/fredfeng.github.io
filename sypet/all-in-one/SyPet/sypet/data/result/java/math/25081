{"id":25081,"className":"java.math.BigDecimal","methodName":"divideToIntegralValue","signature":"\u003cjava.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)\u003e","javadoc":"/** \n * Returns a  {@code BigDecimal} whose value is the integer partof  {@code (this / divisor)}.  Since the integer part of the exact quotient does not depend on the rounding mode, the rounding mode does not affect the values returned by this method.  The preferred scale of the result is {@code (this.scale() - divisor.scale())}.  An {@code ArithmeticException} is thrown if the integer part ofthe exact quotient needs more than  {@code mc.precision}digits.\n * @param divisor value by which this {@code BigDecimal} is to be divided.\n * @param mc the context to use.\n * @return The integer part of {@code this / divisor}.\n * @throws ArithmeticException if {@code divisor\u003d\u003d0}\n * @throws ArithmeticException if {@code mc.precision} {@literal \u003e} 0 and the resultrequires a precision of more than  {@code mc.precision} digits.\n * @since  1.5\n * @author Joseph D. Darcy\n */\n","tf":{"freq":{"need":1,"quotient":2,"scale":3,"result":1,"integr":1,"partof":1,"darci":1,"arithmet":3,"use":1,"round":2,"decim":2,"affect":1,"mode":2,"author":1,"exact":2,"ofth":1,"precis":4,"valu":4,"liter":1,"except":3,"thrown":1,"whose":1,"depend":1,"divid":2,"divisor":5,"digit":2,"resultrequir":1,"joseph":1,"context":1,"method":1,"part":3,"big":2,"prefer":1,"integ":4},"maxFreq":5,"totalTerms":63},"loc":50}