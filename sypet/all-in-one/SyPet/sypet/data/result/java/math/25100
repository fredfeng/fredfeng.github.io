{"id":25100,"className":"java.math.BigDecimal","methodName":"setScale","signature":"\u003cjava.math.BigDecimal: java.math.BigDecimal setScale(int,int)\u003e","javadoc":"/** \n * Returns a  {@code BigDecimal} whose scale is the specifiedvalue, and whose unscaled value is determined by multiplying or dividing this  {@code BigDecimal}\u0027s unscaled value by the appropriate power of ten to maintain its overall value.  If the scale is reduced by the operation, the unscaled value must be divided (rather than multiplied), and the value may be changed; in this case, the specified rounding mode is applied to the division. \u003cp\u003eNote that since BigDecimal objects are immutable, calls of this method do \u003ci\u003enot\u003c/i\u003e result in the original object being modified, contrary to the usual convention of having methods named \u003ctt\u003eset\u003ci\u003eX\u003c/i\u003e\u003c/tt\u003e mutate field \u003ci\u003e {@code X}\u003c/i\u003e. Instead,  {@code setScale} returns an object with the properscale; the returned object may or may not be newly allocated. \u003cp\u003eThe new  {@link #setScale(int,RoundingMode)} method shouldbe used in preference to this legacy method.\n * @param newScale scale of the {@code BigDecimal} value to be returned.\n * @param roundingMode The rounding mode to apply.\n * @return a {@code BigDecimal} whose scale is the specified value,and whose unscaled value is determined by multiplying or dividing this  {@code BigDecimal}\u0027s unscaled value by the appropriate power of ten to maintain its overall value.\n * @throws ArithmeticException if {@code roundingMode\u003d\u003dROUND_UNNECESSARY}and the specified scaling operation would require rounding.\n * @throws IllegalArgumentException if {@code roundingMode} does notrepresent a valid rounding mode.\n * @see #ROUND_UP\n * @see #ROUND_DOWN\n * @see #ROUND_CEILING\n * @see #ROUND_FLOOR\n * @see #ROUND_HALF_UP\n * @see #ROUND_HALF_DOWN\n * @see #ROUND_HALF_EVEN\n * @see #ROUND_UNNECESSARY\n */\n","tf":{"freq":{"ten":2,"maintain":2,"arithmet":1,"round":8,"notrepres":1,"properscal":1,"must":1,"specifi":3,"requir":1,"oper":2,"power":2,"argument":1,"except":2,"whose":4,"immut":1,"unscal":5,"newli":1,"shouldb":1,"appli":2,"determin":2,"big":6,"prefer":1,"alloc":1,"valid":1,"scale":9,"call":1,"result":1,"convent":1,"link":1,"legaci":1,"use":1,"object":4,"decim":6,"mode":7,"contrari":1,"name":1,"rather":1,"multipli":3,"valu":10,"note":1,"usual":1,"may":3,"origin":1,"divid":3,"mutat":1,"illeg":1,"field":1,"appropri":2,"modifi":1,"instead":1,"method":4,"chang":1,"reduc":1,"specifiedvalu":1,"divis":1},"maxFreq":10,"totalTerms":124},"loc":33}