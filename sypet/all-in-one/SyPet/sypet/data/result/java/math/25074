{"id":25074,"className":"java.math.BigDecimal","methodName":"divide","signature":"\u003cjava.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,int)\u003e","javadoc":"/** \n * Returns a  {@code BigDecimal} whose value is {@code (this /divisor)}, and whose scale is as specified.  If rounding must be performed to generate a result with the specified scale, the specified rounding mode is applied. \u003cp\u003eThe new  {@link #divide(BigDecimal,int,RoundingMode)} methodshould be used in preference to this legacy method.\n * @param divisor value by which this {@code BigDecimal} is to be divided.\n * @param scale scale of the {@code BigDecimal} quotient to be returned.\n * @param roundingMode rounding mode to apply.\n * @return {@code this / divisor}\n * @throws ArithmeticException if {@code divisor} is zero,{@code roundingMode\u003d\u003dROUND_UNNECESSARY} andthe specified scale is insufficient to represent the result of the division exactly.\n * @throws IllegalArgumentException if {@code roundingMode} does notrepresent a valid rounding mode.\n * @see #ROUND_UP\n * @see #ROUND_DOWN\n * @see #ROUND_CEILING\n * @see #ROUND_FLOOR\n * @see #ROUND_HALF_UP\n * @see #ROUND_HALF_DOWN\n * @see #ROUND_HALF_EVEN\n * @see #ROUND_UNNECESSARY\n */\n","tf":{"freq":{"valid":1,"scale":5,"result":2,"quotient":1,"link":1,"legaci":1,"arithmet":1,"use":1,"perform":1,"round":8,"notrepres":1,"zero":1,"decim":4,"must":1,"specifi":4,"mode":7,"exact":1,"valu":2,"methodshould":1,"argument":1,"except":2,"repres":1,"whose":2,"divid":3,"divisor":4,"illeg":1,"insuffici":1,"appli":2,"generat":1,"method":1,"big":4,"prefer":1,"andth":1,"divis":1},"maxFreq":8,"totalTerms":70},"loc":23}