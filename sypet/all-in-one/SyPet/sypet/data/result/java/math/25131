{"id":25131,"className":"java.math.BigInteger","methodName":"BigInteger","signature":"\u003cjava.math.BigInteger: void BigInteger(int,int,java.util.Random)\u003e","javadoc":"/** \n * Constructs a randomly generated positive BigInteger that is probably prime, with the specified bitLength. \u003cp\u003eIt is recommended that the  {@link #probablePrime probablePrime}method be used in preference to this constructor unless there is a compelling need to specify a certainty.\n * @param bitLength bitLength of the returned BigInteger.\n * @param certainty a measure of the uncertainty that the caller iswilling to tolerate.  The probability that the new BigInteger represents a prime number will exceed (1 - 1/2\u003csup\u003e {@code certainty}\u003c/sup\u003e).  The execution time of this constructor is proportional to the value of this parameter.\n * @param rnd source of random bits used to select candidates to betested for primality.\n * @throws ArithmeticException {@code bitLength \u003c 2}.\n * @see #bitLength()\n */\n","tf":{"freq":{"need":1,"caller":1,"betest":1,"proport":1,"link":1,"arithmet":1,"use":2,"sup":2,"compel":1,"recommend":1,"specifi":2,"time":1,"probabl":4,"unless":1,"certainti":3,"length":5,"valu":1,"rnd":1,"toler":1,"constructor":2,"except":1,"repres":1,"select":1,"paramet":1,"exceed":1,"random":2,"candid":1,"number":1,"uncertainti":1,"prime":4,"bit":6,"primal":1,"generat":1,"will":1,"iswil":1,"sourc":1,"method":1,"measur":1,"construct":1,"execut":1,"big":4,"prefer":1,"posit":1,"integ":4},"maxFreq":6,"totalTerms":72},"loc":11}