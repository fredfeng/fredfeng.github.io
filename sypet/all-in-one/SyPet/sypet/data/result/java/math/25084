{"id":25084,"className":"java.math.BigDecimal","methodName":"divideAndRemainder","signature":"\u003cjava.math.BigDecimal: java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal)\u003e","javadoc":"/** \n * Returns a two-element  {@code BigDecimal} array containing theresult of  {@code divideToIntegralValue} followed by the result of{@code remainder} on the two operands.\u003cp\u003eNote that if both the integer quotient and remainder are needed, this method is faster than using the {@code divideToIntegralValue} and {@code remainder} methodsseparately because the division need only be carried out once.\n * @param divisor value by which this {@code BigDecimal} is to be divided,and the remainder computed.\n * @return a two element {@code BigDecimal} array: the quotient(the result of  {@code divideToIntegralValue}) is the initial element and the remainder is the final element.\n * @throws ArithmeticException if {@code divisor\u003d\u003d0}\n * @see #divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)\n * @see #remainder(java.math.BigDecimal,java.math.MathContext)\n * @since  1.5\n */\n","tf":{"freq":{"need":2,"result":2,"quotient":2,"integr":4,"arithmet":1,"use":1,"decim":5,"carri":1,"faster":1,"valu":5,"initi":1,"note":1,"follow":1,"element":4,"except":1,"divid":6,"theresult":1,"divisor":2,"operand":1,"math":6,"two":3,"remaind":7,"contain":1,"context":2,"comput":1,"java":4,"method":1,"big":5,"integ":1,"methodssepar":1,"array":2,"divis":1},"maxFreq":7,"totalTerms":77},"loc":8}