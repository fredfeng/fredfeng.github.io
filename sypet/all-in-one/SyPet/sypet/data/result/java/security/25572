{"id":25572,"className":"java.security.Permission","methodName":"implies","signature":"\u003cjava.security.Permission: boolean implies(java.security.Permission)\u003e","javadoc":"/** \n * Checks if the specified permission\u0027s actions are \"implied by\" this object\u0027s actions. \u003cP\u003e This must be implemented by subclasses of Permission, as they are the only ones that can impose semantics on a Permission object. \u003cp\u003eThe \u003ccode\u003eimplies\u003c/code\u003e method is used by the AccessController to determine whether or not a requested permission is implied by another permission that is known to be valid in the current execution context.\n * @param permission the permission to check against.\n * @return true if the specified permission is implied by this object,false if not.\n */\n","tf":{"freq":{"fals":1,"valid":1,"one":1,"use":1,"object":3,"anoth":1,"must":1,"whether":1,"specifi":2,"semant":1,"request":1,"action":2,"permiss":8,"impli":5,"current":1,"control":1,"check":2,"true":1,"access":1,"impos":1,"determin":1,"subclass":1,"context":1,"method":1,"known":1,"execut":1},"maxFreq":8,"totalTerms":42},"loc":0}