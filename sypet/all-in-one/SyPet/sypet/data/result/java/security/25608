{"id":25608,"className":"java.security.AlgorithmParameterGenerator","methodName":"getInstance","signature":"\u003cjava.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.security.Provider)\u003e","javadoc":"/** \n * Returns an AlgorithmParameterGenerator object for generating a set of parameters to be used with the specified algorithm. \u003cp\u003e A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the specified Provider object is returned.  Note that the specified Provider object does not have to be registered in the provider list.\n * @param algorithm the string name of the algorithm thisparameter generator is associated with. See the AlgorithmParameterGenerator section in the \u003ca href\u003d \" {@docRoot}/../technotes/guides/security/StandardNames.html#AlgorithmParameterGenerator\"\u003e Java Cryptography Architecture Standard Algorithm Name Documentation\u003c/a\u003e for information about standard algorithm names.\n * @param provider the Provider object.\n * @return the new AlgorithmParameterGenerator object.\n * @exception NoSuchAlgorithmException if an AlgorithmParameterGeneratorSpiimplementation for the specified algorithm is not available from the specified Provider object.\n * @exception IllegalArgumentException if the specified provider is null.\n * @see Provider\n * @since 1.4\n */\n","tf":{"freq":{"root":1,"use":1,"object":7,"specifi":6,"algorithm":14,"technot":1,"document":1,"associ":1,"spi":1,"name":4,"regist":1,"spiimplement":1,"href":1,"note":1,"cryptographi":1,"argument":1,"thisparamet":1,"except":4,"standard":3,"paramet":8,"avail":1,"list":1,"illeg":1,"provid":8,"section":1,"instanc":1,"guid":1,"inform":1,"secur":1,"architectur":1,"generat":9,"string":1,"encapsul":1,"java":1,"html":1},"maxFreq":14,"totalTerms":89},"loc":10}