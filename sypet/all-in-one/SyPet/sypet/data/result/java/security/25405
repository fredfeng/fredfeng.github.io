{"id":25405,"className":"java.security.Provider$Service","methodName":"supportsParameter","signature":"\u003cjava.security.Provider$Service: boolean supportsParameter(java.lang.Object)\u003e","javadoc":"/** \n * Test whether this Service can use the specified parameter. Returns false if this service cannot use the parameter. Returns true if this service can use the parameter, if a fast test is infeasible, or if the status is unknown. \u003cp\u003eThe security provider framework uses this method with some types of services to quickly exclude non-matching implementations for consideration. Applications will typically not need to call it. \u003cp\u003eFor details and the values of parameter that are valid for the various types of services see the top of this class and the \u003ca href\u003d\"../../../technotes/guides/security/crypto/CryptoSpec.html\"\u003e Java Cryptography Architecture API Specification \u0026amp; Reference\u003c/a\u003e. Security providers can override it to implement their own test.\n * @param parameter the parameter to test\n * @return false if this this service cannot use the specifiedparameter; true if it can possibly use the parameter\n * @throws InvalidParameterException if the value of parameter isinvalid for this type of service or if this method cannot be used with this type of service\n */\n","tf":{"freq":{"spec":1,"need":1,"fals":2,"valid":1,"call":1,"detail":1,"test":4,"servic":8,"typic":1,"quick":1,"possibl":1,"use":7,"exclud":1,"crypto":2,"type":4,"whether":1,"applic":1,"technot":1,"specifi":1,"invalid":1,"refer":1,"infeas":1,"consider":1,"various":1,"valu":2,"href":1,"cryptographi":1,"top":1,"except":1,"support":1,"status":1,"paramet":10,"true":2,"unknown":1,"provid":2,"framework":1,"specifiedparamet":1,"non":1,"guid":1,"specif":1,"secur":3,"architectur":1,"isinvalid":1,"will":1,"java":1,"html":1,"method":2,"match":1,"fast":1,"amp":1},"maxFreq":10,"totalTerms":86},"loc":30}