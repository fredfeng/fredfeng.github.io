{"id":25229,"className":"java.security.KeyStore","methodName":"getInstance","signature":"\u003cjava.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)\u003e","javadoc":"/** \n * Returns a keystore object of the specified type. \u003cp\u003e This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyStore object encapsulating the KeyStoreSpi implementation from the first Provider that supports the specified type is returned. \u003cp\u003e Note that the list of registered providers may be retrieved via the  {@link Security#getProviders() Security.getProviders()} method.\n * @param type the type of keystore.See the KeyStore section in the \u003ca href\u003d \" {@docRoot}/../technotes/guides/security/StandardNames.html#KeyStore\"\u003e Java Cryptography Architecture Standard Algorithm Name Documentation\u003c/a\u003e for information about standard keystore types.\n * @return a keystore object of the specified type.\n * @exception KeyStoreException if no Provider supports aKeyStoreSpi implementation for the specified type.\n * @see Provider\n */\n","tf":{"freq":{"via":1,"store":6,"root":1,"link":1,"object":3,"type":7,"algorithm":1,"technot":1,"specifi":4,"document":1,"name":2,"spi":2,"regist":2,"href":1,"key":6,"note":1,"cryptographi":1,"travers":1,"except":2,"may":1,"support":2,"standard":3,"list":2,"provid":8,"section":1,"instanc":1,"guid":1,"inform":1,"secur":4,"architectur":1,"start":1,"retriev":1,"encapsul":1,"keystor":4,"java":1,"html":1,"method":2,"prefer":1,"first":1},"maxFreq":8,"totalTerms":82},"loc":10}