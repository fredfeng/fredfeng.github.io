{"id":26009,"className":"java.security.cert.X509Certificate","methodName":"getSubjectAlternativeNames","signature":"\u003cjava.security.cert.X509Certificate: java.util.Collection\u003cjava.util.List\u003c?\u003e\u003e getSubjectAlternativeNames()\u003e","javadoc":"/** \n * Gets an immutable collection of subject alternative names from the \u003ccode\u003eSubjectAltName\u003c/code\u003e extension, (OID \u003d 2.5.29.17). \u003cp\u003e The ASN.1 definition of the \u003ccode\u003eSubjectAltName\u003c/code\u003e extension is: \u003cpre\u003e SubjectAltName ::\u003d GeneralNames GeneralNames :: \u003d SEQUENCE SIZE (1..MAX) OF GeneralName GeneralName ::\u003d CHOICE { otherName                       [0]     OtherName, rfc822Name                      [1]     IA5String, dNSName                         [2]     IA5String, x400Address                     [3]     ORAddress, directoryName                   [4]     Name, ediPartyName                    [5]     EDIPartyName, uniformResourceIdentifier       [6]     IA5String, iPAddress                       [7]     OCTET STRING, registeredID                    [8]     OBJECT IDENTIFIER} \u003c/pre\u003e \u003cp\u003e If this certificate does not contain a \u003ccode\u003eSubjectAltName\u003c/code\u003e extension, \u003ccode\u003enull\u003c/code\u003e is returned. Otherwise, a \u003ccode\u003eCollection\u003c/code\u003e is returned with an entry representing each \u003ccode\u003eGeneralName\u003c/code\u003e included in the extension. Each entry is a \u003ccode\u003eList\u003c/code\u003e whose first entry is an \u003ccode\u003eInteger\u003c/code\u003e (the name type, 0-8) and whose second entry is a \u003ccode\u003eString\u003c/code\u003e or a byte array (the name, in string or ASN.1 DER encoded form, respectively). \u003cp\u003e \u003ca href\u003d\"http://www.ietf.org/rfc/rfc822.txt\"\u003eRFC 822\u003c/a\u003e, DNS, and URI names are returned as \u003ccode\u003eString\u003c/code\u003es, using the well-established string formats for those types (subject to the restrictions included in RFC 3280). IPv4 address names are returned using dotted quad notation. IPv6 address names are returned in the form \"a1:a2:...:a8\", where a1-a8 are hexadecimal values representing the eight 16-bit pieces of the address. OID names are returned as \u003ccode\u003eString\u003c/code\u003es represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are returned in \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2253.txt\"\u003e RFC 2253\u003c/a\u003e string format. No standard string format is defined for otherNames, X.400 names, EDI party names, or any other type of names. They are returned as byte arrays containing the ASN.1 DER encoded form of the name. \u003cp\u003e Note that the \u003ccode\u003eCollection\u003c/code\u003e returned may contain more than one name of the same type. Also, note that the returned \u003ccode\u003eCollection\u003c/code\u003e is immutable and any entries containing byte arrays are cloned to protect against subsequent modifications. \u003cp\u003e This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not \u003ccode\u003eabstract\u003c/code\u003e and it provides a default implementation. Subclasses should override this method with a correct implementation.\n * @return an immutable \u003ccode\u003eCollection\u003c/code\u003e of subject alternativenames (or \u003ccode\u003enull\u003c/code\u003e)\n * @throws CertificateParsingException if the extension cannot be decoded\n * @since 1.4\n */\n","tf":{"freq":{"second":1,"ipv":2,"paddress":1,"servic":1,"maintain":1,"type":4,"eight":1,"dot":1,"correct":1,"altern":2,"href":2,"decod":1,"platform":1,"clone":1,"except":1,"form":3,"whose":2,"immut":3,"piec":1,"format":3,"period":1,"provid":2,"restrict":1,"bit":1,"encod":2,"separ":1,"http":2,"contain":4,"definit":1,"subclass":1,"distinguish":1,"compat":1,"parti":2,"collect":5,"array":3,"otherwis":1,"defin":1,"seri":1,"backward":1,"directori":2,"edi":1,"subject":8,"one":1,"www":2,"use":2,"identifi":1,"well":1,"org":2,"rfc":5,"txt":2,"version":1,"resourc":1,"order":1,"alt":4,"extens":5,"name":33,"regist":1,"valu":1,"subsequ":1,"exist":1,"note":2,"may":1,"certif":2,"includ":2,"standard":2,"uniform":1,"repres":3,"entri":5,"edit":1,"iparti":1,"establish":1,"hexadecim":1,"list":1,"general":5,"ietf":2,"notat":1,"quad":1,"address":5,"alternativenam":1,"nonneg":1,"pre":2,"string":10,"ad":1,"java":1,"method":3,"pars":1,"also":1,"first":1,"integ":2,"modif":1,"respect":1},"maxFreq":33,"totalTerms":204},"loc":3}