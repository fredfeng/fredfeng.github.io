{"id":25561,"className":"java.security.AccessController","methodName":"doPrivilegedWithCombiner","signature":"\u003cjava.security.AccessController: T doPrivilegedWithCombiner(java.security.PrivilegedAction)\u003e","javadoc":"/** \n * Performs the specified \u003ccode\u003ePrivilegedAction\u003c/code\u003e with privileges enabled. The action is performed with \u003ci\u003eall\u003c/i\u003e of the permissions possessed by the caller\u0027s protection domain. \u003cp\u003e If the action\u0027s \u003ccode\u003erun\u003c/code\u003e method throws an (unchecked) exception, it will propagate through this method. \u003cp\u003e This method preserves the current AccessControlContext\u0027s DomainCombiner (which may be null) while the action is performed.\n * @param action the action to be performed.\n * @return the value returned by the action\u0027s \u003ccode\u003erun\u003c/code\u003e method.\n * @exception NullPointerException if the action is \u003ccode\u003enull\u003c/code\u003e\n * @see #doPrivileged(PrivilegedAction)\n * @see java.security.DomainCombiner\n * @since 1.6\n */\n","tf":{"freq":{"caller":1,"uncheck":1,"perform":4,"run":2,"specifi":1,"domain":3,"possess":1,"permiss":1,"action":9,"combin":3,"propag":1,"current":1,"valu":1,"privileg":5,"control":1,"except":3,"may":1,"enabl":1,"preserv":1,"access":1,"secur":1,"will":1,"context":1,"pointer":1,"java":1,"method":4},"maxFreq":9,"totalTerms":51},"loc":9}