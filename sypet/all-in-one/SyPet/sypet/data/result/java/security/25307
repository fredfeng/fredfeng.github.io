{"id":25307,"className":"java.security.KeyPairGenerator","methodName":"initialize","signature":"\u003cjava.security.KeyPairGenerator: void initialize(int)\u003e","javadoc":"/** \n * Initializes the key pair generator for a certain keysize using a default parameter set and the \u003ccode\u003eSecureRandom\u003c/code\u003e implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of \u003ccode\u003eSecureRandom\u003c/code\u003e, a system-provided source of randomness is used.)\n * @param keysize the keysize. This is analgorithm-specific metric, such as modulus length, specified in number of bits.\n * @exception InvalidParameterException if the \u003ccode\u003ekeysize\u003c/code\u003e is notsupported by this KeyPairGenerator object.\n */\n","tf":{"freq":{"pair":2,"highest":1,"keysiz":4,"use":2,"object":1,"specifi":1,"invalid":1,"length":1,"none":1,"initi":2,"key":2,"except":2,"analgorithm":1,"prioriti":1,"instal":2,"random":4,"paramet":2,"number":1,"suppli":1,"provid":3,"notsupport":1,"bit":1,"system":1,"specif":1,"secur":2,"metric":1,"generat":2,"sourc":2,"certain":1,"modulus":1},"maxFreq":4,"totalTerms":48},"loc":3}