{"id":25267,"className":"java.security.KeyStore$Builder","methodName":"newInstance","signature":"\u003cjava.security.KeyStore$Builder: java.security.KeyStore$Builder newInstance(java.lang.String,java.security.Provider,java.security.KeyStore$ProtectionParameter)\u003e","javadoc":"/** \n * Returns a new Builder object. \u003cp\u003eEach call to the  {@link #getKeyStore} method on the returnedbuilder will return a new KeyStore object of type \u003ccode\u003etype\u003c/code\u003e. Its  {@link KeyStore#load(KeyStore.LoadStoreParameter) load()}method is invoked using a \u003ccode\u003eLoadStoreParameter\u003c/code\u003e that encapsulates \u003ccode\u003eprotection\u003c/code\u003e. \u003cp\u003eThe KeyStore is instantiated from \u003ccode\u003eprovider\u003c/code\u003e if non-null. Otherwise, all installed providers are searched. \u003cp\u003eCalls to  {@link #getProtectionParameter getProtectionParameter()}will return \u003ccode\u003eprotection\u003c/code\u003e. \u003cp\u003e\u003cem\u003eNote\u003c/em\u003e that the  {@link #getKeyStore} method is executedwithin the  {@link AccessControlContext} of the code invoking thismethod.\n * @return a new Builder object\n * @param type the type of KeyStore to be constructed\n * @param provider the provider from which the KeyStore is tobe instantiated (or null)\n * @param protection the ProtectionParameter securing the Keystore\n * @throws NullPointerException if type or protection is null\n */\n","tf":{"freq":{"otherwis":1,"call":2,"store":10,"instanti":2,"link":5,"use":1,"object":3,"type":5,"thismethod":1,"search":1,"tobe":1,"executedwithin":1,"key":8,"note":1,"control":1,"except":1,"invok":2,"instal":1,"builder":2,"paramet":5,"access":1,"provid":4,"instanc":1,"non":1,"returnedbuild":1,"secur":1,"context":1,"will":2,"encapsul":1,"pointer":1,"keystor":1,"load":4,"method":3,"construct":1},"maxFreq":10,"totalTerms":77},"loc":77}