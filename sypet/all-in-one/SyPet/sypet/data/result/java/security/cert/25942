{"id":25942,"className":"java.security.cert.CertStore","methodName":"getInstance","signature":"\u003cjava.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eCertStore\u003c/code\u003e object that implements the specified \u003ccode\u003eCertStore\u003c/code\u003e type. \u003cp\u003e A new CertStore object encapsulating the CertStoreSpi implementation from the specified Provider object is returned.  Note that the specified Provider object does not have to be registered in the provider list. \u003cp\u003eThe \u003ccode\u003eCertStore\u003c/code\u003e that is returned is initialized with the specified \u003ccode\u003eCertStoreParameters\u003c/code\u003e. The type of parameters needed may vary between different types of \u003ccode\u003eCertStore\u003c/code\u003es. Note that the specified \u003ccode\u003eCertStoreParameters\u003c/code\u003e object is cloned.\n * @param type the requested \u003ccode\u003eCertStore\u003c/code\u003e type.See the CertStore section in the \u003ca href\u003d \" {@docRoot}/../technotes/guides/security/StandardNames.html#CertStore\"\u003e Java Cryptography Architecture Standard Algorithm Name Documentation\u003c/a\u003e for information about standard types.\n * @param params the initialization parameters (may be \u003ccode\u003enull\u003c/code\u003e).\n * @param provider the provider.\n * @return a \u003ccode\u003eCertStore\u003c/code\u003e object that implements thespecified type.\n * @exception NoSuchAlgorithmException if a CertStoreSpiimplementation for the specified type is not available from the specified Provider object.\n * @throws InvalidAlgorithmParameterException if the specifiedinitialization parameters are inappropriate for this \u003ccode\u003eCertStore\u003c/code\u003e\n * @exception IllegalArgumentException if the \u003ccode\u003eprovider\u003c/code\u003e isnull.\n * @see java.security.Provider\n */\n","tf":{"freq":{"need":1,"store":14,"inappropri":1,"root":1,"object":7,"type":8,"algorithm":3,"specifi":7,"technot":1,"document":1,"cert":14,"invalid":1,"isnul":1,"name":2,"spi":1,"request":1,"thespecifi":1,"regist":1,"initi":2,"spiimplement":1,"href":1,"note":2,"cryptographi":1,"argument":1,"clone":1,"except":5,"may":2,"standard":3,"paramet":6,"avail":1,"list":1,"illeg":1,"provid":8,"section":1,"instanc":1,"guid":1,"inform":1,"differ":1,"specifiediniti":1,"secur":2,"architectur":1,"encapsul":1,"java":2,"html":1,"vari":1},"maxFreq":14,"totalTerms":116},"loc":10}