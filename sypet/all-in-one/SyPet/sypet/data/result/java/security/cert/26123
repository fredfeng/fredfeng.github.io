{"id":26123,"className":"java.security.cert.X509CertSelector","methodName":"getExtendedKeyUsage","signature":"\u003cjava.security.cert.X509CertSelector: java.util.Set\u003cjava.lang.String\u003e getExtendedKeyUsage()\u003e","javadoc":"/** \n * Returns the extendedKeyUsage criterion. The \u003ccode\u003eX509Certificate\u003c/code\u003e must allow the specified key purposes in its extended key usage extension. If the \u003ccode\u003ekeyPurposeSet\u003c/code\u003e returned is empty or \u003ccode\u003enull\u003c/code\u003e, no extendedKeyUsage check will be done. Note that an \u003ccode\u003eX509Certificate\u003c/code\u003e that has no extendedKeyUsage extension implicitly allows all key purposes.\n * @return an immutable \u003ccode\u003eSet\u003c/code\u003e of key purpose OIDs in stringformat (or \u003ccode\u003enull\u003c/code\u003e)\n * @see #setExtendedKeyUsage\n */\n","tf":{"freq":{"stringformat":1,"certif":2,"allow":2,"check":1,"done":1,"immut":1,"implicit":1,"must":1,"specifi":1,"empti":1,"criterion":1,"extens":2,"will":1,"purpos":4,"usag":6,"note":1,"key":10},"maxFreq":10,"totalTerms":37},"loc":3}