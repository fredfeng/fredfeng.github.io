{"id":25868,"className":"java.security.cert.X509Extension","methodName":"getCriticalExtensionOIDs","signature":"\u003cjava.security.cert.X509Extension: java.util.Set\u003cjava.lang.String\u003e getCriticalExtensionOIDs()\u003e","javadoc":"/** \n * Gets a Set of the OID strings for the extension(s) marked CRITICAL in the certificate/CRL managed by the object implementing this interface. Here is sample code to get a Set of critical extensions from an X509Certificate and print the OIDs: \u003cpre\u003e\u003ccode\u003e InputStream inStrm \u003d null; X509Certificate cert \u003d null; try { inStrm \u003d new FileInputStream(\"DER-encoded-Cert\"); CertificateFactory cf \u003d CertificateFactory.getInstance(\"X.509\"); cert \u003d (X509Certificate)cf.generateCertificate(inStrm); } finally { if (inStrm !\u003d null) { inStrm.close(); } }\u003cp\u003e Set\u003cString\u003e critSet \u003d cert.getCriticalExtensionOIDs(); if (critSet !\u003d null \u0026\u0026 !critSet.isEmpty()) { System.out.println(\"Set of critical extensions:\"); for (String oid : critSet) { System.out.println(oid); } } \u003c/code\u003e\u003c/pre\u003e\n * @return a Set (or an empty Set if none are marked critical) ofthe extension OID strings for extensions that are marked critical. If there are no extensions present at all, then this method returns null.\n */\n","tf":{"freq":{"stream":2,"object":1,"close":1,"cert":4,"println":2,"oid":2,"extens":8,"file":1,"factori":2,"ofth":1,"none":1,"strm":5,"certif":7,"manag":1,"mark":3,"print":1,"instanc":1,"empti":2,"present":1,"input":2,"encod":1,"system":2,"pre":2,"crit":4,"string":4,"generat":1,"method":1,"sampl":1,"critic":6},"maxFreq":8,"totalTerms":70},"loc":0}