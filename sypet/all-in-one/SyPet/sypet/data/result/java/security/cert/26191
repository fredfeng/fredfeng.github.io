{"id":26191,"className":"java.security.cert.CertStoreException","methodName":"CertStoreException","signature":"\u003cjava.security.cert.CertStoreException: void CertStoreException(java.lang.Throwable)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eCertStoreException\u003c/code\u003e that wraps the specified throwable. This allows any exception to be converted into a \u003ccode\u003eCertStoreException\u003c/code\u003e, while retaining information about the cause, which may be useful for debugging. The detail message is set to (\u003ccode\u003ecause\u003d\u003dnull ? null : cause.toString()\u003c/code\u003e) (which typically contains the class and detail message of cause).\n * @param cause the cause (which is saved for later retrieval by the{@link #getCause getCause()} method). (A \u003ccode\u003enull\u003c/code\u003e value ispermitted, and indicates that the cause is nonexistent or unknown.)\n */\n","tf":{"freq":{"detail":2,"allow":1,"store":3,"save":1,"link":1,"typic":1,"convert":1,"use":1,"debug":1,"specifi":1,"cert":3,"indic":1,"valu":1,"wrap":1,"except":4,"may":1,"nonexist":1,"creat":1,"messag":2,"later":1,"unknown":1,"ispermit":1,"inform":1,"caus":9,"retriev":1,"string":1,"contain":1,"retain":1,"method":1,"throwabl":1},"maxFreq":9,"totalTerms":47},"loc":3}