{"id":25465,"className":"java.security.Permissions","methodName":"implies","signature":"\u003cjava.security.Permissions: boolean implies(java.security.Permission)\u003e","javadoc":"/** \n * Checks to see if this object\u0027s PermissionCollection for permissions of the specified permission\u0027s class implies the permissions expressed in the \u003ci\u003epermission\u003c/i\u003e object. Returns true if the combination of permissions in the appropriate PermissionCollection (e.g., a FilePermissionCollection for a FilePermission) together imply the specified permission. \u003cp\u003eFor example, suppose there is a FilePermissionCollection in this Permissions object, and it contains one FilePermission that specifies \"read\" access for  all files in all subdirectories of the \"/tmp\" directory, and another FilePermission that specifies \"write\" access for all files in the \"/tmp/scratch/foo\" directory. Then if the \u003ccode\u003eimplies\u003c/code\u003e method is called with a permission specifying both \"read\" and \"write\" access to files in the \"/tmp/scratch/foo\" directory, \u003ccode\u003etrue\u003c/code\u003e is returned. \u003cp\u003eAdditionally, if this PermissionCollection contains the AllPermission, this method will always return true. \u003cp\u003e\n * @param permission the Permission object to check.\n * @return true if \"permission\" is implied by the permissions in thePermissionCollection it belongs to, false if not.\n */\n","tf":{"freq":{"fals":1,"call":1,"belong":1,"directori":3,"one":1,"foo":2,"object":4,"anoth":1,"express":1,"subdirectori":1,"specifi":5,"file":8,"combin":1,"permiss":22,"impli":5,"write":2,"read":2,"tmp":3,"scratch":2,"addit":1,"check":2,"alway":1,"true":4,"suppos":1,"togeth":1,"access":3,"appropri":1,"contain":2,"will":1,"exampl":1,"method":2,"collect":6},"maxFreq":22,"totalTerms":92},"loc":17}