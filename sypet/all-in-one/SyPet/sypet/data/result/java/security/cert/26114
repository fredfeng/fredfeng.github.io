{"id":26114,"className":"java.security.cert.X509CertSelector","methodName":"getSubjectAsString","signature":"\u003cjava.security.cert.X509CertSelector: java.lang.String getSubjectAsString()\u003e","javadoc":"/** \n * \u003cstrong\u003eDenigrated\u003c/strong\u003e, use  {@linkplain #getSubject()} or{@linkplain #getSubjectAsBytes()} instead. This method should not berelied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names. \u003cp\u003e Returns the subject criterion as a \u003ccode\u003eString\u003c/code\u003e. This distinguished name must match the subject distinguished name in the \u003ccode\u003eX509Certificate\u003c/code\u003e. If \u003ccode\u003enull\u003c/code\u003e, the subject criterion is disabled and any subject distinguished name will do. \u003cp\u003e If the value returned is not \u003ccode\u003enull\u003c/code\u003e, it is a distinguished name, in RFC 2253 format.\n * @return the required subject distinguished name in RFC 2253 format(or \u003ccode\u003enull\u003c/code\u003e)\n */\n","tf":{"freq":{"linkplain":2,"certif":2,"form":1,"loss":1,"subject":8,"use":1,"format":2,"must":1,"bere":1,"inform":1,"criterion":2,"encod":1,"denigr":1,"requir":1,"disabl":1,"fail":1,"strong":2,"name":6,"string":3,"will":1,"instead":1,"distinguish":6,"valu":1,"method":1,"match":2},"maxFreq":8,"totalTerms":50},"loc":3}