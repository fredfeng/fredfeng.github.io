{"id":25520,"className":"java.security.Security","methodName":"getProviders","signature":"\u003cjava.security.Security: java.security.Provider[] getProviders(java.lang.String)\u003e","javadoc":"/** \n * Returns an array containing all installed providers that satisfy the specified selection criterion, or null if no such providers have been installed. The returned providers are ordered according to their \u003ca href\u003d \"#insertProviderAt(java.security.Provider, int)\"\u003epreference order\u003c/a\u003e. \u003cp\u003e A cryptographic service is always associated with a particular algorithm or type. For example, a digital signature service is always associated with a particular algorithm (e.g., DSA), and a CertificateFactory service is always associated with a particular certificate type (e.g., X.509). \u003cp\u003eThe selection criterion must be specified in one of the following two formats: \u003cul\u003e \u003cli\u003e \u003ci\u003e\u0026lt;crypto_service\u003e.\u0026lt;algorithm_or_type\u003e\u003c/i\u003e \u003cp\u003e The cryptographic service name must not contain any dots. \u003cp\u003e A provider satisfies the specified selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service. \u003cp\u003e For example, \"CertificateFactory.X.509\" would be satisfied by any provider that supplied a CertificateFactory implementation for X.509 certificates. \u003cli\u003e \u003ci\u003e\u0026lt;crypto_service\u003e.\u0026lt;algorithm_or_type\u003e \u0026lt;attribute_name\u003e:\u0026lt attribute_value\u003e\u003c/i\u003e \u003cp\u003e The cryptographic service name must not contain any dots. There must be one or more space charaters between the \u003ci\u003e\u0026lt;algorithm_or_type\u003e\u003c/i\u003e and the \u003ci\u003e\u0026lt;attribute_name\u003e\u003c/i\u003e. \u003cp\u003e A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service and its implementation meets the constraint expressed by the specified attribute name/value pair. \u003cp\u003e For example, \"Signature.SHA1withDSA KeySize:1024\" would be satisfied by any provider that implemented the SHA1withDSA signature algorithm with a keysize of 1024 (or larger). \u003c/ul\u003e \u003cp\u003e See the \u003ca href\u003d \" {@docRoot}/../technotes/guides/security/StandardNames.html\"\u003e Java Cryptography Architecture Standard Algorithm Name Documentation\u003c/a\u003e for information about standard cryptographic service names, standard algorithm names and standard attribute names.\n * @param filter the criterion for selectingproviders. The filter is case-insensitive.\n * @return all the installed providers that satisfy the selectioncriterion, or null if no such providers have been installed.\n * @throws InvalidParameterException if the filter is not in the required format\n * @throws NullPointerException if filter is null\n * @see #getProviders(java.util.Map)\n * @since 1.3\n */\n","tf":{"freq":{"root":1,"servic":10,"keysiz":1,"particular":3,"selectioncriterion":1,"type":7,"crypto":2,"must":4,"dot":2,"specifi":8,"requir":1,"invalid":1,"cryptograph":6,"href":2,"key":1,"cryptographi":1,"follow":1,"except":2,"alway":3,"select":4,"format":2,"meet":1,"provid":15,"size":1,"digit":1,"inform":1,"criterion":5,"iff":2,"contain":3,"pointer":1,"prefer":1,"util":1,"filter":4,"array":1,"charat":1,"pair":1,"one":2,"constraint":1,"space":1,"express":1,"signatur":3,"technot":1,"algorithm":10,"document":1,"attribut":5,"order":2,"associ":3,"factori":3,"name":10,"map":1,"valu":2,"certif":5,"standard":5,"larger":1,"instal":4,"paramet":1,"suppli":1,"accord":1,"selectingprovid":1,"guid":1,"two":1,"insensit":1,"secur":2,"architectur":1,"satisfi":6,"exampl":3,"html":1,"java":3,"insert":1},"maxFreq":15,"totalTerms":187},"loc":18}