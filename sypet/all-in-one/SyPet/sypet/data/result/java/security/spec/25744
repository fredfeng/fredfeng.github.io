{"id":25744,"className":"java.security.spec.ECFieldF2m","methodName":"ECFieldF2m","signature":"\u003cjava.security.spec.ECFieldF2m: void ECFieldF2m(int,java.math.BigInteger)\u003e","javadoc":"/** \n * Creates an elliptic curve characteristic 2 finite field which has 2^\u003ccode\u003em\u003c/code\u003e elements with polynomial basis. The reduction polynomial for this field is based on \u003ccode\u003erp\u003c/code\u003e whose i-th bit correspondes to the i-th coefficient of the reduction polynomial.\u003cp\u003e Note: A valid reduction polynomial is either a trinomial (X^\u003ccode\u003em\u003c/code\u003e + X^\u003ccode\u003ek\u003c/code\u003e + 1 with \u003ccode\u003em\u003c/code\u003e \u003e \u003ccode\u003ek\u003c/code\u003e \u003e\u003d 1) or a pentanomial (X^\u003ccode\u003em\u003c/code\u003e + X^\u003ccode\u003ek3\u003c/code\u003e + X^\u003ccode\u003ek2\u003c/code\u003e + X^\u003ccode\u003ek1\u003c/code\u003e + 1 with \u003ccode\u003em\u003c/code\u003e \u003e \u003ccode\u003ek3\u003c/code\u003e \u003e \u003ccode\u003ek2\u003c/code\u003e \u003e \u003ccode\u003ek1\u003c/code\u003e \u003e\u003d 1).\n * @param m with 2^\u003ccode\u003em\u003c/code\u003e being the number of elements.\n * @param rp the BigInteger whose i-th bit corresponds tothe i-th coefficient of the reduction polynomial.\n * @exception NullPointerException if \u003ccode\u003erp\u003c/code\u003e is null.\n * @exception IllegalArgumentException if \u003ccode\u003em\u003c/code\u003eis not positive, or \u003ccode\u003erp\u003c/code\u003e does not represent a valid reduction polynomial.\n */\n","tf":{"freq":{"characterist":1,"valid":2,"cfield":1,"correspond":2,"pentanomi":1,"trinomi":1,"toth":1,"ellipt":1,"finit":1,"curv":1,"note":1,"argument":1,"element":2,"except":4,"repres":1,"creat":1,"whose":2,"number":1,"illeg":1,"field":2,"bit":2,"either":1,"base":1,"pointer":1,"coeffici":2,"reduct":5,"basi":1,"polynomi":6,"big":1,"posit":1,"integ":1},"maxFreq":6,"totalTerms":50},"loc":22}