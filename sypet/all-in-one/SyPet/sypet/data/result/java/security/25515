{"id":25515,"className":"java.security.Security","methodName":"insertProviderAt","signature":"\u003cjava.security.Security: int insertProviderAt(java.security.Provider,int)\u003e","javadoc":"/** \n * Adds a new provider, at a specified position. The position is the preference order in which providers are searched for requested algorithms.  The position is 1-based, that is, 1 is most preferred, followed by 2, and so on. \u003cp\u003eIf the given provider is installed at the requested position, the provider that used to be at that position, and all providers with a position greater than \u003ccode\u003eposition\u003c/code\u003e, are shifted up one position (towards the end of the list of installed providers). \u003cp\u003eA provider cannot be added if it is already installed. \u003cp\u003eFirst, if there is a security manager, its \u003ccode\u003echeckSecurityAccess\u003c/code\u003e method is called with the string \u003ccode\u003e\"insertProvider.\"+provider.getName()\u003c/code\u003e to see if it\u0027s ok to add a new provider. If the default implementation of \u003ccode\u003echeckSecurityAccess\u003c/code\u003e is used (i.e., that method is not overriden), then this will result in a call to the security manager\u0027s \u003ccode\u003echeckPermission\u003c/code\u003e method with a \u003ccode\u003eSecurityPermission(\"insertProvider.\"+provider.getName())\u003c/code\u003e permission.\n * @param provider the provider to be added.\n * @param position the preference position that the caller wouldlike for this provider.\n * @return the actual preference position in which the provider wasadded, or -1 if the provider was not added because it is already installed.\n * @throws NullPointerException if provider is null\n * @throws SecurityException if a security manager exists and its \u003ccode\u003e {@link java.lang.SecurityManager#checkSecurityAccess}\u003c/code\u003e method denies access to add a new provider\n * @see #getProvider\n * @see #removeProvider\n * @see java.security.SecurityPermission\n */\n","tf":{"freq":{"caller":1,"result":1,"call":2,"greater":1,"link":1,"one":1,"use":2,"add":3,"lang":1,"algorithm":1,"specifi":1,"order":1,"given":1,"toward":1,"search":1,"name":2,"request":2,"permiss":4,"wouldlik":1,"exist":1,"deni":1,"end":1,"follow":1,"overriden":1,"except":2,"check":4,"manag":4,"instal":4,"remov":1,"list":1,"access":4,"wasad":1,"provid":22,"secur":11,"string":1,"will":1,"base":1,"pointer":1,"actual":1,"ad":3,"java":2,"method":4,"alreadi":2,"prefer":4,"insert":3,"posit":11,"first":1,"shift":1},"maxFreq":22,"totalTerms":123},"loc":11}