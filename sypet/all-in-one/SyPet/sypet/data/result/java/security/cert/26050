{"id":26050,"className":"java.security.cert.CertPathValidatorException","methodName":"CertPathValidatorException","signature":"\u003cjava.security.cert.CertPathValidatorException: void CertPathValidatorException(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int,java.security.cert.CertPathValidatorException$Reason)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eCertPathValidatorException\u003c/code\u003e with the specified detail message, cause, certification path, index, and reason.\n * @param msg the detail message (or \u003ccode\u003enull\u003c/code\u003e if none)\n * @param cause the cause (or \u003ccode\u003enull\u003c/code\u003e if none)\n * @param certPath the certification path that was in the process ofbeing validated when the error was encountered\n * @param index the index of the certificate in the certification paththat caused the error (or -1 if not applicable). Note that the list of certificates in a \u003ccode\u003eCertPath\u003c/code\u003e is zero based.\n * @param reason the reason the validation failed\n * @throws IndexOutOfBoundsException if the index is out of range\u003ccode\u003e(index \u003c -1 || (certPath !\u003d null \u0026\u0026 index \u003e\u003d certPath.getCertificates().size())\u003c/code\u003e\n * @throws IllegalArgumentException if \u003ccode\u003ecertPath\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e and \u003ccode\u003eindex\u003c/code\u003e is not -1\n * @throws NullPointerException if \u003ccode\u003ereason\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @since 1.7\n */\n","tf":{"freq":{"valid":4,"detail":2,"reason":4,"zero":1,"applic":1,"specifi":1,"cert":7,"fail":1,"rang":1,"path":9,"none":2,"note":1,"argument":1,"index":8,"certif":6,"except":5,"error":2,"creat":1,"messag":2,"list":1,"illeg":1,"msg":1,"size":1,"process":1,"caus":4,"encount":1,"base":1,"pointer":1,"paththat":1,"ofb":1,"bound":1},"maxFreq":9,"totalTerms":74},"loc":16}