{"id":25995,"className":"java.security.cert.X509Certificate","methodName":"getSubjectDN","signature":"\u003cjava.security.cert.X509Certificate: java.security.Principal getSubjectDN()\u003e","javadoc":"/** \n * \u003cstrong\u003eDenigrated\u003c/strong\u003e, replaced by  {@linkplain #getSubjectX500Principal()}. This method returns the \u003ccode\u003esubject\u003c/code\u003e as an implementation specific Principal object, which should not be relied upon by portable code. \u003cp\u003e Gets the \u003ccode\u003esubject\u003c/code\u003e (subject distinguished name) value from the certificate.  If the \u003ccode\u003esubject\u003c/code\u003e value is empty, then the \u003ccode\u003egetName()\u003c/code\u003e method of the returned \u003ccode\u003ePrincipal\u003c/code\u003e object returns an empty string (\"\"). \u003cp\u003e The ASN.1 definition for this is: \u003cpre\u003e subject    Name \u003c/pre\u003e \u003cp\u003eSee  {@link #getIssuerDN() getIssuerDN} for \u003ccode\u003eName\u003c/code\u003eand other relevant definitions.\n * @return a Principal whose name is the subject name.\n */\n","tf":{"freq":{"linkplain":1,"certif":1,"whose":1,"relev":1,"portabl":1,"subject":8,"link":1,"object":2,"empti":2,"reli":1,"denigr":1,"specif":1,"issuer":2,"strong":2,"pre":2,"definit":2,"string":1,"name":6,"replac":1,"distinguish":1,"valu":2,"method":2,"princip":4,"upon":1},"maxFreq":8,"totalTerms":47},"loc":0}