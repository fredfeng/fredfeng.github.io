{"id":26010,"className":"java.security.cert.X509Certificate","methodName":"getIssuerAlternativeNames","signature":"\u003cjava.security.cert.X509Certificate: java.util.Collection\u003cjava.util.List\u003c?\u003e\u003e getIssuerAlternativeNames()\u003e","javadoc":"/** \n * Gets an immutable collection of issuer alternative names from the \u003ccode\u003eIssuerAltName\u003c/code\u003e extension, (OID \u003d 2.5.29.18). \u003cp\u003e The ASN.1 definition of the \u003ccode\u003eIssuerAltName\u003c/code\u003e extension is: \u003cpre\u003e IssuerAltName ::\u003d GeneralNames \u003c/pre\u003e The ASN.1 definition of \u003ccode\u003eGeneralNames\u003c/code\u003e is defined in  {@link #getSubjectAlternativeNames getSubjectAlternativeNames}. \u003cp\u003e If this certificate does not contain an \u003ccode\u003eIssuerAltName\u003c/code\u003e extension, \u003ccode\u003enull\u003c/code\u003e is returned. Otherwise, a \u003ccode\u003eCollection\u003c/code\u003e is returned with an entry representing each \u003ccode\u003eGeneralName\u003c/code\u003e included in the extension. Each entry is a \u003ccode\u003eList\u003c/code\u003e whose first entry is an \u003ccode\u003eInteger\u003c/code\u003e (the name type, 0-8) and whose second entry is a \u003ccode\u003eString\u003c/code\u003e or a byte array (the name, in string or ASN.1 DER encoded form, respectively). For more details about the formats used for each name type, see the \u003ccode\u003egetSubjectAlternativeNames\u003c/code\u003e method. \u003cp\u003e Note that the \u003ccode\u003eCollection\u003c/code\u003e returned may contain more than one name of the same type. Also, note that the returned \u003ccode\u003eCollection\u003c/code\u003e is immutable and any entries containing byte arrays are cloned to protect against subsequent modifications. \u003cp\u003e This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not \u003ccode\u003eabstract\u003c/code\u003e and it provides a default implementation. Subclasses should override this method with a correct implementation.\n * @return an immutable \u003ccode\u003eCollection\u003c/code\u003e of issuer alternativenames (or \u003ccode\u003enull\u003c/code\u003e)\n * @throws CertificateParsingException if the extension cannot be decoded\n * @since 1.4\n */\n","tf":{"freq":{"detail":1,"second":1,"servic":1,"maintain":1,"type":3,"correct":1,"altern":5,"decod":1,"clone":1,"platform":1,"except":1,"form":1,"whose":2,"immut":3,"format":1,"provid":2,"encod":1,"issuer":7,"contain":3,"definit":2,"subclass":1,"compat":1,"collect":5,"array":2,"otherwis":1,"defin":1,"backward":1,"subject":3,"link":1,"one":1,"use":1,"version":1,"order":1,"alt":4,"extens":5,"name":16,"subsequ":1,"exist":1,"note":2,"certif":2,"may":1,"includ":1,"standard":1,"repres":1,"entri":5,"edit":1,"list":1,"general":3,"alternativenam":1,"pre":2,"string":2,"ad":1,"method":4,"java":1,"pars":1,"integ":1,"first":1,"also":1,"respect":1,"modif":1},"maxFreq":16,"totalTerms":121},"loc":3}