{"id":25620,"className":"java.security.Signature","methodName":"initVerify","signature":"\u003cjava.security.Signature: void initVerify(java.security.cert.Certificate)\u003e","javadoc":"/** \n * Initializes this object for verification, using the public key from the given certificate. \u003cp\u003eIf the certificate is of type X.509 and has a \u003ci\u003ekey usage\u003c/i\u003e extension field marked as critical, and the value of the \u003ci\u003ekey usage\u003c/i\u003e extension field implies that the public key in the certificate and its corresponding private key are not supposed to be used for digital signatures, an \u003ccode\u003eInvalidKeyException\u003c/code\u003e is thrown.\n * @param certificate the certificate of the identity whose signature isgoing to be verified.\n * @exception InvalidKeyException  if the public key in the certificateis not encoded properly or does not include required  parameter information or cannot be used for digital signature purposes.\n * @since 1.3\n */\n","tf":{"freq":{"verif":1,"correspond":1,"use":3,"object":1,"type":1,"signatur":3,"certificatei":1,"requir":1,"ident":1,"given":1,"invalid":2,"extens":2,"verifi":2,"impli":1,"purpos":1,"valu":1,"proper":1,"initi":1,"key":8,"certif":5,"except":3,"thrown":1,"includ":1,"whose":1,"isgo":1,"paramet":1,"init":1,"suppos":1,"mark":1,"field":2,"digit":2,"inform":1,"encod":1,"usag":2,"critic":1},"maxFreq":8,"totalTerms":58},"loc":24}