{"id":25404,"className":"java.security.Provider$Service","methodName":"newInstance","signature":"\u003cjava.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)\u003e","javadoc":"/** \n * Return a new instance of the implementation described by this service. The security provider framework uses this method to construct implementations. Applications will typically not need to call it. \u003cp\u003eThe default implementation uses reflection to invoke the standard constructor for this type of service. Security providers can override this method to implement instantiation in a different way. For details and the values of constructorParameter that are valid for the various types of services see the \u003ca href\u003d\"../../../technotes/guides/security/crypto/CryptoSpec.html\"\u003e Java Cryptography Architecture API Specification \u0026amp; Reference\u003c/a\u003e.\n * @param constructorParameter the value to pass to the constructor,or null if this type of service does not use a constructorParameter.\n * @return a new implementation of this service\n * @throws InvalidParameterException if the value ofconstructorParameter is invalid for this type of service.\n * @throws NoSuchAlgorithmException if instantation failed forany other reason.\n */\n","tf":{"freq":{"spec":1,"need":1,"valid":1,"call":1,"detail":1,"reason":1,"instanti":1,"servic":6,"typic":1,"use":3,"way":1,"ofconstructor":1,"crypto":2,"type":4,"applic":1,"algorithm":1,"technot":1,"fail":1,"invalid":2,"refer":1,"various":1,"valu":3,"instant":1,"href":1,"cryptographi":1,"constructor":5,"except":2,"forani":1,"standard":1,"invok":1,"paramet":5,"describ":1,"framework":1,"provid":2,"pass":1,"instanc":2,"guid":1,"differ":1,"specif":1,"secur":3,"architectur":1,"will":1,"java":1,"html":1,"method":2,"construct":1,"amp":1,"reflect":1},"maxFreq":6,"totalTerms":76},"loc":54}