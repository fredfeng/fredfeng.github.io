{"id":25236,"className":"java.security.KeyStore","methodName":"getKey","signature":"\u003cjava.security.KeyStore: java.security.Key getKey(java.lang.String,char[])\u003e","javadoc":"/** \n * Returns the key associated with the given alias, using the given password to recover it.  The key must have been associated with the alias by a call to \u003ccode\u003esetKeyEntry\u003c/code\u003e, or by a call to \u003ccode\u003esetEntry\u003c/code\u003e with a \u003ccode\u003ePrivateKeyEntry\u003c/code\u003e or \u003ccode\u003eSecretKeyEntry\u003c/code\u003e.\n * @param alias the alias name\n * @param password the password for recovering the key\n * @return the requested key, or null if the given alias does not existor does not identify a key-related entry.\n * @exception KeyStoreException if the keystore has not been initialized(loaded).\n * @exception NoSuchAlgorithmException if the algorithm for recovering thekey cannot be found\n * @exception UnrecoverableKeyException if the key cannot be recovered(e.g., the given password is wrong).\n */\n","tf":{"freq":{"call":2,"store":1,"use":1,"identifi":1,"password":4,"must":1,"thekey":1,"algorithm":2,"recov":4,"given":4,"associ":2,"name":1,"request":1,"relat":1,"existor":1,"initi":1,"key":12,"except":6,"entri":5,"alia":5,"unrecover":1,"secret":1,"keystor":1,"wrong":1,"load":1,"found":1},"maxFreq":12,"totalTerms":62},"loc":6}