{"id":25496,"className":"java.security.KeyStoreSpi","methodName":"engineSetKeyEntry","signature":"\u003cjava.security.KeyStoreSpi: void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])\u003e","javadoc":"/** \n * Assigns the given key to the given alias, protecting it with the given password. \u003cp\u003eIf the given key is of type \u003ccode\u003ejava.security.PrivateKey\u003c/code\u003e, it must be accompanied by a certificate chain certifying the corresponding public key. \u003cp\u003eIf the given alias already exists, the keystore information associated with it is overridden by the given key (and possibly certificate chain).\n * @param alias the alias name\n * @param key the key to be associated with the alias\n * @param password the password to protect the key\n * @param chain the certificate chain for the corresponding publickey (only required if the given key is of type \u003ccode\u003ejava.security.PrivateKey\u003c/code\u003e).\n * @exception KeyStoreException if the given key cannot be protected, orthis operation fails for some other reason\n */\n","tf":{"freq":{"assign":1,"store":1,"reason":1,"overridden":1,"correspond":2,"engin":1,"possibl":1,"type":2,"publickey":1,"password":3,"must":1,"requir":1,"fail":1,"given":8,"oper":1,"associ":2,"name":1,"exist":1,"key":13,"except":2,"certif":3,"entri":1,"orthi":1,"accompani":1,"alia":5,"certifi":1,"inform":1,"secur":2,"chain":4,"keystor":1,"java":2,"alreadi":1},"maxFreq":13,"totalTerms":68},"loc":0}