{"id":26036,"className":"java.security.cert.TrustAnchor","methodName":"TrustAnchor","signature":"\u003cjava.security.cert.TrustAnchor: void TrustAnchor(java.security.cert.X509Certificate,byte[])\u003e","javadoc":"/** \n * Creates an instance of \u003ccode\u003eTrustAnchor\u003c/code\u003e with the specified \u003ccode\u003eX509Certificate\u003c/code\u003e and optional name constraints, which are intended to be used as additional constraints when validating an X.509 certification path. \u003cp\u003e The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in \u003ca href\u003d\"http://www.ietf.org/rfc/rfc3280\"\u003eRFC 3280\u003c/a\u003e and X.509. The ASN.1 definition of this structure appears below. \u003cpre\u003e\u003ccode\u003e NameConstraints ::\u003d SEQUENCE { permittedSubtrees       [0]     GeneralSubtrees OPTIONAL, excludedSubtrees        [1]     GeneralSubtrees OPTIONAL } GeneralSubtrees ::\u003d SEQUENCE SIZE (1..MAX) OF GeneralSubtree GeneralSubtree ::\u003d SEQUENCE { base                    GeneralName, minimum         [0]     BaseDistance DEFAULT 0, maximum         [1]     BaseDistance OPTIONAL } BaseDistance ::\u003d INTEGER (0..MAX) GeneralName ::\u003d CHOICE { otherName                       [0]     OtherName, rfc822Name                      [1]     IA5String, dNSName                         [2]     IA5String, x400Address                     [3]     ORAddress, directoryName                   [4]     Name, ediPartyName                    [5]     EDIPartyName, uniformResourceIdentifier       [6]     IA5String, iPAddress                       [7]     OCTET STRING, registeredID                    [8]     OBJECT IDENTIFIER} \u003c/code\u003e\u003c/pre\u003e \u003cp\u003e Note that the name constraints byte array supplied is cloned to protect against subsequent modifications.\n * @param trustedCert a trusted \u003ccode\u003eX509Certificate\u003c/code\u003e\n * @param nameConstraints a byte array containing the ASN.1 DER encoding ofa NameConstraints extension to be used for checking name constraints. Only the value of the extension is included, not the OID or criticality flag. Specify \u003ccode\u003enull\u003c/code\u003e to omit the parameter.\n * @throws IllegalArgumentException if the name constraints cannot bedecoded\n * @throws NullPointerException if the specified\u003ccode\u003eX509Certificate\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"appear":2,"paddress":1,"permit":1,"bedecod":1,"anchor":2,"specifi":4,"href":1,"option":1,"argument":1,"clone":1,"except":2,"form":1,"creat":1,"instanc":1,"encod":2,"flag":1,"http":1,"maximum":1,"contain":2,"definit":1,"distanc":3,"pointer":1,"critic":1,"array":4,"parti":1,"defin":1,"valid":1,"structur":2,"minimum":1,"directori":1,"edi":1,"www":1,"constraint":11,"use":2,"identifi":1,"exclud":1,"org":1,"rfc":3,"resourc":1,"cert":1,"extens":2,"name":20,"path":1,"regist":1,"valu":1,"subtre":7,"subsequ":1,"note":1,"addit":1,"certif":4,"includ":1,"check":1,"uniform":1,"trust":4,"paramet":1,"iparti":1,"suppli":1,"illeg":1,"general":7,"ietf":1,"address":2,"omit":1,"pre":2,"string":3,"base":4,"intend":1,"ofa":1,"modif":1},"maxFreq":20,"totalTerms":140},"loc":10}