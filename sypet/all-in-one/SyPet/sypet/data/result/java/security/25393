{"id":25393,"className":"java.security.Provider","methodName":"getService","signature":"\u003cjava.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Get the service describing this Provider\u0027s implementation of the specified type of this algorithm or alias. If no such implementation exists, this method returns null. If there are two matching services, one added to this provider using {@link #putService putService()} and one added via {@link #put put()}, the service added via  {@link #putService putService()} is returned.\n * @param type the type of {@link Service service} requested(for example, \u003ccode\u003eMessageDigest\u003c/code\u003e)\n * @param algorithm the case insensitive algorithm name (or alternatealias) of the service requested (for example, \u003ccode\u003eSHA-1\u003c/code\u003e)\n * @return the service describing this Provider\u0027s matching serviceor null if no such service exists\n * @throws NullPointerException if type or algorithm is null\n * @since 1.5\n */\n","tf":{"freq":{"put":6,"via":2,"one":2,"servic":13,"link":4,"use":1,"digest":1,"type":4,"algorithm":4,"specifi":1,"alternatealia":1,"request":2,"name":1,"serviceor":1,"exist":2,"except":1,"messag":1,"describ":2,"provid":3,"alia":1,"two":1,"insensit":1,"exampl":2,"pointer":1,"ad":3,"method":1,"match":2},"maxFreq":13,"totalTerms":64},"loc":17}