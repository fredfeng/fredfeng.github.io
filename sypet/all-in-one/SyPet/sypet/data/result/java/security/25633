{"id":25633,"className":"java.security.Signature","methodName":"setParameter","signature":"\u003cjava.security.Signature: void setParameter(java.lang.String,java.lang.Object)\u003e","javadoc":"/** \n * Sets the specified algorithm parameter to the specified value. This method supplies a general-purpose mechanism through which it is possible to set the various parameters of this object. A parameter may be any settable parameter for the algorithm, such as a parameter size, or a source of random bits for signature generation (if appropriate), or an indication of whether or not to perform a specific but optional computation. A uniform algorithm-specific naming scheme for each parameter is desirable but left unspecified at this time.\n * @param param the string identifier of the parameter.\n * @param value the parameter value.\n * @exception InvalidParameterException if \u003ccode\u003eparam\u003c/code\u003e is aninvalid parameter for this signature algorithm engine, the parameter is already set and cannot be set again, a security exception occurs, and so on.\n * @see #getParameter\n * @deprecated Use{@link #setParameter(java.security.spec.AlgorithmParameterSpec) setParameter}.\n */\n","tf":{"freq":{"spec":2,"unspecifi":1,"deprec":1,"link":1,"engin":1,"use":1,"possibl":1,"identifi":1,"perform":1,"object":1,"desir":1,"signatur":2,"whether":1,"algorithm":5,"specifi":2,"settabl":1,"time":1,"aninvalid":1,"invalid":1,"scheme":1,"indic":1,"name":1,"purpos":1,"left":1,"various":1,"valu":3,"option":1,"except":3,"may":1,"uniform":1,"paramet":16,"random":1,"suppli":1,"general":1,"size":1,"bit":1,"specif":2,"secur":2,"mechan":1,"appropri":1,"string":1,"generat":1,"comput":1,"java":1,"alreadi":1,"method":1,"sourc":1,"occur":1},"maxFreq":16,"totalTerms":76},"loc":3}