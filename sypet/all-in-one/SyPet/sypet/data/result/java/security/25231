{"id":25231,"className":"java.security.KeyStore","methodName":"getInstance","signature":"\u003cjava.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)\u003e","javadoc":"/** \n * Returns a keystore object of the specified type. \u003cp\u003e A new KeyStore object encapsulating the KeyStoreSpi implementation from the specified Provider object is returned.  Note that the specified Provider object does not have to be registered in the provider list.\n * @param type the type of keystore.See the KeyStore section in the \u003ca href\u003d \" {@docRoot}/../technotes/guides/security/StandardNames.html#KeyStore\"\u003e Java Cryptography Architecture Standard Algorithm Name Documentation\u003c/a\u003e for information about standard keystore types.\n * @param provider the provider.\n * @return a keystore object of the specified type.\n * @exception KeyStoreException if KeyStoreSpiimplementation for the specified type is not available from the specified Provider object.\n * @exception IllegalArgumentException if the specified provider is null.\n * @see Provider\n * @since 1.4\n */\n","tf":{"freq":{"store":6,"root":1,"object":6,"type":6,"algorithm":1,"specifi":7,"technot":1,"document":1,"spi":1,"name":2,"regist":1,"spiimplement":1,"href":1,"note":1,"key":6,"cryptographi":1,"argument":1,"except":4,"standard":3,"avail":1,"list":1,"illeg":1,"provid":8,"section":1,"instanc":1,"guid":1,"inform":1,"secur":1,"architectur":1,"encapsul":1,"keystor":4,"html":1,"java":1},"maxFreq":8,"totalTerms":75},"loc":10}