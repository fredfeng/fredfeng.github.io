{"id":25507,"className":"java.security.KeyStoreSpi","methodName":"engineStore","signature":"\u003cjava.security.KeyStoreSpi: void engineStore(java.security.KeyStore$LoadStoreParameter)\u003e","javadoc":"/** \n * Stores this keystore using the given \u003ccode\u003eKeyStore.LoadStoreParmeter\u003c/code\u003e.\n * @param param the \u003ccode\u003eKeyStore.LoadStoreParmeter\u003c/code\u003ethat specifies how to store the keystore, which may be \u003ccode\u003enull\u003c/code\u003e\n * @exception IllegalArgumentException if the given\u003ccode\u003eKeyStore.LoadStoreParmeter\u003c/code\u003e input is not recognized\n * @exception IOException if there was an I/O problem with data\n * @exception NoSuchAlgorithmException if the appropriate data integrityalgorithm could not be found\n * @exception CertificateException if any of the certificates included inthe keystore data could not be stored\n * @since 1.5\n */\n","tf":{"freq":{"argument":1,"certif":2,"integrityalgorithm":1,"may":1,"except":8,"includ":1,"store":10,"data":3,"engin":1,"use":1,"problem":1,"illeg":1,"algorithm":1,"specifi":1,"inth":1,"input":1,"parmet":3,"given":2,"appropri":1,"keystor":3,"load":3,"recogn":1,"key":3,"found":1},"maxFreq":10,"totalTerms":52},"loc":3}