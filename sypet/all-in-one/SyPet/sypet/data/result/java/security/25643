{"id":25643,"className":"java.security.DigestOutputStream","methodName":"write","signature":"\u003cjava.security.DigestOutputStream: void write(byte[],int,int)\u003e","javadoc":"/** \n * Updates the message digest (if the digest function is on) using the specified subarray, and in any case writes the subarray to the output stream. That is, if the digest function is on (see {@link #on(boolean) on}), this method calls \u003ccode\u003eupdate\u003c/code\u003e on the message digest associated with this stream, passing it the subarray specifications. This method then writes the subarray bytes to the output stream, blocking until the bytes are actually written.\n * @param b the array containing the subarray to be used for updatingand writing to the output stream.\n * @param off the offset into \u003ccode\u003eb\u003c/code\u003e of the first byte tobe updated and written.\n * @param len the number of bytes of data to be updated and writtenfrom \u003ccode\u003eb\u003c/code\u003e, starting at offset \u003ccode\u003eoff\u003c/code\u003e.\n * @exception IOException if an I/O error occurs.\n * @see MessageDigest#update(byte[],int,int)\n */\n","tf":{"freq":{"call":1,"stream":4,"link":1,"data":1,"use":2,"block":1,"digest":5,"updatingand":1,"specifi":1,"function":2,"associ":1,"written":2,"writtenfrom":1,"write":4,"tobe":1,"offset":2,"except":2,"error":1,"messag":3,"number":1,"len":1,"subarray":5,"pass":1,"specif":1,"updat":5,"start":1,"contain":1,"actual":1,"method":2,"output":3,"first":1,"occur":1,"array":1},"maxFreq":5,"totalTerms":61},"loc":6}