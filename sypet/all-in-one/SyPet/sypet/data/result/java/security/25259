{"id":25259,"className":"java.security.KeyStore$Builder","methodName":"newInstance","signature":"\u003cjava.security.KeyStore$Builder: java.security.KeyStore$Builder newInstance(java.security.KeyStore,java.security.KeyStore$ProtectionParameter)\u003e","javadoc":"/** \n * Returns a new Builder that encapsulates the given KeyStore. The  {@linkplain #getKeyStore} method of the returned objectwill return \u003ccode\u003ekeyStore\u003c/code\u003e, the  {@linkplain #getProtectionParameter getProtectionParameter()} method willreturn \u003ccode\u003eprotectionParameters\u003c/code\u003e. \u003cp\u003e This is useful if an existing KeyStore object needs to be used with Builder-based APIs.\n * @return a new Builder object\n * @param keyStore the KeyStore to be encapsulated\n * @param protectionParameter the ProtectionParameter used toprotect the KeyStore entries\n * @throws NullPointerException if keyStore orprotectionParameters is null\n * @throws IllegalArgumentException if the keyStore has not beeninitialized\n */\n","tf":{"freq":{"argument":1,"need":1,"linkplain":2,"beeniniti":1,"except":2,"orprotect":1,"store":9,"entri":1,"builder":3,"paramet":6,"use":3,"object":2,"illeg":1,"instanc":1,"toprotect":1,"given":1,"base":1,"encapsul":2,"pointer":1,"method":2,"exist":1,"key":9,"objectwil":1,"willreturn":1},"maxFreq":9,"totalTerms":54},"loc":28}