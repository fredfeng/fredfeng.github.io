{"id":25928,"className":"java.security.cert.PKIXParameters","methodName":"setCertPathCheckers","signature":"\u003cjava.security.cert.PKIXParameters: void setCertPathCheckers(java.util.List)\u003e","javadoc":"/** \n * Sets a \u003ccode\u003eList\u003c/code\u003e of additional certification path checkers. If the specified \u003ccode\u003eList\u003c/code\u003e contains an object that is not a \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e, it is ignored. \u003cp\u003e Each \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e specified implements additional checks on a certificate. Typically, these are checks to process and verify private extensions contained in certificates. Each \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e should be instantiated with any initialization parameters needed to execute the check. \u003cp\u003e This method allows sophisticated applications to extend a PKIX \u003ccode\u003eCertPathValidator\u003c/code\u003e or \u003ccode\u003eCertPathBuilder\u003c/code\u003e. Each of the specified \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003es will be called, in turn, by a PKIX \u003ccode\u003eCertPathValidator\u003c/code\u003e or \u003ccode\u003eCertPathBuilder\u003c/code\u003e for each certificate processed or validated. \u003cp\u003e Regardless of whether these additional \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003es are set, a PKIX \u003ccode\u003eCertPathValidator\u003c/code\u003e or \u003ccode\u003eCertPathBuilder\u003c/code\u003e must perform all of the required PKIX checks on each certificate. The one exception to this rule is if the RevocationEnabled flag is set to false (see the  {@link #setRevocationEnabled setRevocationEnabled} method).\u003cp\u003e Note that the \u003ccode\u003eList\u003c/code\u003e supplied here is copied and each \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e in the list is cloned to protect against subsequent modifications.\n * @param checkers a \u003ccode\u003eList\u003c/code\u003e of \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003es.May be \u003ccode\u003enull\u003c/code\u003e, in which case no additional checkers will be used.\n * @throws ClassCastException if any of the elements in the listare not of type \u003ccode\u003ejava.security.cert.PKIXCertPathChecker\u003c/code\u003e\n * @see #getCertPathCheckers\n */\n","tf":{"freq":{"need":1,"fals":1,"instanti":1,"perform":1,"type":1,"whether":1,"must":1,"copi":1,"specifi":3,"requir":1,"verifi":1,"element":1,"turn":1,"clone":1,"ignor":1,"except":2,"enabl":3,"builder":3,"flag":1,"cast":1,"contain":2,"will":2,"execut":1,"valid":4,"call":1,"allow":1,"revoc":3,"one":1,"link":1,"typic":1,"use":1,"object":1,"applic":1,"sophist":1,"cert":17,"extens":1,"rule":1,"path":17,"initi":1,"listar":1,"subsequ":1,"note":1,"regardless":1,"addit":4,"may":1,"certif":5,"check":4,"paramet":1,"list":5,"suppli":1,"checker":13,"process":2,"secur":1,"java":1,"method":2,"modif":1},"maxFreq":17,"totalTerms":130},"loc":12}