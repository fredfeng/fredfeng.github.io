{"id":26107,"className":"java.security.cert.X509CertSelector","methodName":"addPathToName","signature":"\u003cjava.security.cert.X509CertSelector: void addPathToName(int,byte[])\u003e","javadoc":"/** \n * Adds a name to the pathToNames criterion. The \u003ccode\u003eX509Certificate\u003c/code\u003e must not include name constraints that would prohibit building a path to the specified name. \u003cp\u003e This method allows the caller to add a name to the set of names which the \u003ccode\u003eX509Certificates\u003c/code\u003e\u0027s name constraints must permit. The specified name is added to any previous value for the pathToNames criterion. If the name is a duplicate, it may be ignored. \u003cp\u003e The name is provided as a byte array. This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 3280 and X.509. The ASN.1 definition of this structure appears in the documentation for {@link #addSubjectAlternativeName(int type,byte[] name) addSubjectAlternativeName(int type, byte [] name)}. \u003cp\u003e Note that the byte array supplied here is cloned to protect against subsequent modifications.\n * @param type the name type (0-8, as specified inRFC 3280, section 4.2.1.7)\n * @param name a byte array containing the name in ASN.1 DER encoded form\n * @throws IOException if a parsing error occurs\n */\n","tf":{"freq":{"caller":1,"defin":1,"appear":2,"allow":1,"structur":2,"subject":2,"link":1,"permit":1,"constraint":2,"type":4,"build":1,"add":5,"prohibit":1,"must":2,"specifi":3,"document":1,"altern":2,"name":21,"path":4,"valu":1,"subsequ":1,"note":1,"clone":1,"except":1,"certif":2,"may":1,"ignor":1,"includ":1,"error":1,"form":1,"previous":1,"suppli":1,"provid":1,"section":1,"general":1,"encod":2,"criterion":2,"definit":1,"contain":2,"duplic":1,"ad":1,"method":1,"pars":1,"modif":1,"occur":1,"array":4},"maxFreq":21,"totalTerms":91},"loc":4}