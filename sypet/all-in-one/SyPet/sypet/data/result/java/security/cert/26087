{"id":26087,"className":"java.security.cert.X509CertSelector","methodName":"setSubject","signature":"\u003cjava.security.cert.X509CertSelector: void setSubject(java.lang.String)\u003e","javadoc":"/** \n * \u003cstrong\u003eDenigrated\u003c/strong\u003e, use  {@linkplain #setSubject(X500Principal)}or  {@linkplain #setSubject(byte[])} instead. This method should not berelied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names. \u003cp\u003e Sets the subject criterion. The specified distinguished name must match the subject distinguished name in the \u003ccode\u003eX509Certificate\u003c/code\u003e. If \u003ccode\u003enull\u003c/code\u003e, any subject distinguished name will do. \u003cp\u003e If \u003ccode\u003esubjectDN\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e, it should contain a distinguished name, in RFC 2253 format.\n * @param subjectDN a distinguished name in RFC 2253 format(or \u003ccode\u003enull\u003c/code\u003e)\n * @throws IOException if a parsing error occurs (incorrect form for DN)\n */\n","tf":{"freq":{"linkplain":2,"loss":1,"subject":8,"use":1,"bere":1,"must":1,"specifi":1,"denigr":1,"fail":1,"name":6,"incorrect":1,"except":1,"certif":2,"error":1,"form":2,"format":2,"inform":1,"encod":1,"criterion":1,"strong":2,"string":1,"contain":1,"instead":1,"will":1,"distinguish":6,"method":1,"match":2,"pars":1,"occur":1,"princip":1},"maxFreq":8,"totalTerms":53},"loc":7}