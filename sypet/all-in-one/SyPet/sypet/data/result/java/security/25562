{"id":25562,"className":"java.security.AccessController","methodName":"doPrivileged","signature":"\u003cjava.security.AccessController: T doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)\u003e","javadoc":"/** \n * Performs the specified \u003ccode\u003ePrivilegedAction\u003c/code\u003e with privileges enabled and restricted by the specified \u003ccode\u003eAccessControlContext\u003c/code\u003e. The action is performed with the intersection of the permissions possessed by the caller\u0027s protection domain, and those possessed by the domains represented by the specified \u003ccode\u003eAccessControlContext\u003c/code\u003e. \u003cp\u003e If the action\u0027s \u003ccode\u003erun\u003c/code\u003e method throws an (unchecked) exception, it will propagate through this method.\n * @param action the action to be performed.\n * @param context an \u003ci\u003eaccess control context\u003c/i\u003erepresenting the restriction to be applied to the caller\u0027s domain\u0027s privileges before performing the specified action.  If the context is \u003ccode\u003enull\u003c/code\u003e, then no additional restriction is applied.\n * @return the value returned by the action\u0027s \u003ccode\u003erun\u003c/code\u003e method.\n * @exception NullPointerException if the action is \u003ccode\u003enull\u003c/code\u003e\n * @see #doPrivileged(PrivilegedAction)\n * @see #doPrivileged(PrivilegedExceptionAction,AccessControlContext)\n */\n","tf":{"freq":{"caller":2,"addit":1,"control":4,"except":4,"repres":2,"enabl":1,"uncheck":1,"perform":4,"run":2,"access":4,"restrict":3,"specifi":4,"appli":2,"intersect":1,"propag":1,"will":1,"domain":3,"action":10,"context":6,"permiss":1,"possess":2,"pointer":1,"valu":1,"method":3,"privileg":8},"maxFreq":10,"totalTerms":72},"loc":0}