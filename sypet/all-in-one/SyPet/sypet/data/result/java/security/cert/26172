{"id":26172,"className":"java.security.cert.CertificateFactory","methodName":"getInstance","signature":"\u003cjava.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)\u003e","javadoc":"/** \n * Returns a certificate factory object that implements the specified certificate type. \u003cp\u003e This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the first Provider that supports the specified type is returned. \u003cp\u003e Note that the list of registered providers may be retrieved via the  {@link Security#getProviders() Security.getProviders()} method.\n * @param type the name of the requested certificate type.See the CertificateFactory section in the \u003ca href\u003d \" {@docRoot}/../technotes/guides/security/StandardNames.html#CertificateFactory\"\u003e Java Cryptography Architecture Standard Algorithm Name Documentation\u003c/a\u003e for information about standard certificate types.\n * @return a certificate factory object for the specified type.\n * @exception CertificateException if no Provider supports aCertificateFactorySpi implementation for the specified type.\n * @see java.security.Provider\n */\n","tf":{"freq":{"via":1,"root":1,"link":1,"object":3,"type":7,"algorithm":1,"technot":1,"specifi":4,"document":1,"factori":7,"request":1,"spi":2,"name":3,"regist":2,"href":1,"note":1,"cryptographi":1,"travers":1,"except":2,"certif":11,"may":1,"support":2,"standard":3,"list":2,"provid":8,"section":1,"instanc":1,"guid":1,"inform":1,"secur":5,"architectur":1,"start":1,"retriev":1,"encapsul":1,"java":2,"html":1,"method":2,"prefer":1,"first":1},"maxFreq":11,"totalTerms":88},"loc":10}