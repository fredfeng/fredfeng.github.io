{"id":26099,"className":"java.security.cert.X509CertSelector","methodName":"setSubjectAlternativeNames","signature":"\u003cjava.security.cert.X509CertSelector: void setSubjectAlternativeNames(java.util.Collection)\u003e","javadoc":"/** \n * Sets the subjectAlternativeNames criterion. The \u003ccode\u003eX509Certificate\u003c/code\u003e must contain all or at least one of the specified subjectAlternativeNames, depending on the value of the matchAllNames flag (see  {@link #setMatchAllSubjectAltNames setMatchAllSubjectAltNames}). \u003cp\u003e This method allows the caller to specify, with a single method call, the complete set of subject alternative names for the subjectAlternativeNames criterion. The specified value replaces the previous value for the subjectAlternativeNames criterion. \u003cp\u003e The \u003ccode\u003enames\u003c/code\u003e parameter (if not \u003ccode\u003enull\u003c/code\u003e) is a \u003ccode\u003eCollection\u003c/code\u003e with one entry for each name to be included in the subject alternative name criterion. Each entry is a \u003ccode\u003eList\u003c/code\u003e whose first entry is an \u003ccode\u003eInteger\u003c/code\u003e (the name type, 0-8) and whose second entry is a \u003ccode\u003eString\u003c/code\u003e or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If \u003ccode\u003enull\u003c/code\u003e is supplied as the value for this argument, no subjectAlternativeNames check will be performed. \u003cp\u003e Each subject alternative name in the \u003ccode\u003eCollection\u003c/code\u003e may be specified either as a \u003ccode\u003eString\u003c/code\u003e or as an ASN.1 encoded byte array. For more details about the formats used, see {@link #addSubjectAlternativeName(int type,String name) addSubjectAlternativeName(int type, String name)} and{@link #addSubjectAlternativeName(int type,byte[] name) addSubjectAlternativeName(int type, byte [] name)}. \u003cp\u003e \u003cstrong\u003eNote:\u003c/strong\u003e for distinguished names, specify the byte array form instead of the String form. See the note in {@link #addSubjectAlternativeName(int,String)} for more information.\u003cp\u003e Note that the \u003ccode\u003enames\u003c/code\u003e parameter can contain duplicate names (same name and name type), but they may be removed from the \u003ccode\u003eCollection\u003c/code\u003e of names returned by the {@link #getSubjectAlternativeNames getSubjectAlternativeNames} method.\u003cp\u003e Note that a deep copy is performed on the \u003ccode\u003eCollection\u003c/code\u003e to protect against subsequent modifications.\n * @param names a \u003ccode\u003eCollection\u003c/code\u003e of names (or \u003ccode\u003enull\u003c/code\u003e)\n * @throws IOException if a parsing error occurs\n * @see #getSubjectAlternativeNames\n */\n","tf":{"freq":{"detail":1,"second":1,"singl":1,"least":1,"perform":2,"type":7,"copi":1,"must":1,"specifi":5,"altern":17,"deep":1,"argument":1,"except":1,"form":3,"multipl":1,"whose":2,"remov":1,"format":1,"inform":1,"criterion":4,"encod":2,"flag":1,"strong":2,"contain":2,"duplic":1,"will":1,"distinguish":1,"match":3,"collect":5,"array":3,"caller":1,"call":1,"allow":1,"subject":19,"link":5,"one":2,"use":1,"add":5,"alt":2,"name":37,"valu":4,"subsequ":1,"note":4,"complet":1,"certif":1,"may":2,"includ":1,"error":1,"previous":1,"check":1,"depend":1,"entri":4,"paramet":2,"list":1,"suppli":1,"either":1,"replac":1,"string":7,"instead":1,"method":3,"pars":1,"first":1,"integ":1,"modif":1,"respect":1,"occur":1},"maxFreq":37,"totalTerms":193},"loc":16}