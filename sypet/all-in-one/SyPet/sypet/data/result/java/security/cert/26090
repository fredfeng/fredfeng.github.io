{"id":26090,"className":"java.security.cert.X509CertSelector","methodName":"setAuthorityKeyIdentifier","signature":"\u003cjava.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])\u003e","javadoc":"/** \n * Sets the authorityKeyIdentifier criterion. The \u003ccode\u003eX509Certificate\u003c/code\u003e must contain an AuthorityKeyIdentifier extension for which the contents of the extension value matches the specified criterion value. If the criterion value is \u003ccode\u003enull\u003c/code\u003e, no authorityKeyIdentifier check will be done. \u003cp\u003e If \u003ccode\u003eauthorityKeyID\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for an AuthorityKeyIdentifier extension. The ASN.1 notation for this structure follows. \u003cp\u003e \u003cpre\u003e\u003ccode\u003e AuthorityKeyIdentifier ::\u003d SEQUENCE { keyIdentifier             [0] KeyIdentifier           OPTIONAL, authorityCertIssuer       [1] GeneralNames            OPTIONAL, authorityCertSerialNumber [2] CertificateSerialNumber OPTIONAL  } KeyIdentifier ::\u003d OCTET STRING \u003c/code\u003e\u003c/pre\u003e \u003cp\u003e Authority key identifiers are not parsed by the \u003ccode\u003eX509CertSelector\u003c/code\u003e.  Instead, the values are compared using a byte-by-byte comparison. \u003cp\u003e When the \u003ccode\u003ekeyIdentifier\u003c/code\u003e field of \u003ccode\u003eAuthorityKeyIdentifier\u003c/code\u003e is populated, the value is usually taken from the \u003ccode\u003eSubjectKeyIdentifier\u003c/code\u003e extension in the issuer\u0027s certificate.  Note, however, that the result of \u003ccode\u003eX509Certificate.getExtensionValue(\u0026lt;SubjectKeyIdentifier Object Identifier\u0026gt;)\u003c/code\u003e on the issuer\u0027s certificate may NOT be used directly as the input to \u003ccode\u003esetAuthorityKeyIdentifier\u003c/code\u003e. This is because the SubjectKeyIdentifier contains only a KeyIdentifier OCTET STRING, and not a SEQUENCE of KeyIdentifier, GeneralNames, and CertificateSerialNumber. In order to use the extension value of the issuer certificate\u0027s \u003ccode\u003eSubjectKeyIdentifier\u003c/code\u003e extension, it will be necessary to extract the value of the embedded \u003ccode\u003eKeyIdentifier\u003c/code\u003e OCTET STRING, then DER encode this OCTET STRING inside a SEQUENCE. For more details on SubjectKeyIdentifier, see {@link #setSubjectKeyIdentifier(byte[] subjectKeyID)}. \u003cp\u003e Note also that the byte array supplied here is cloned to protect against subsequent modifications.\n * @param authorityKeyID the authority key identifier(or \u003ccode\u003enull\u003c/code\u003e)\n * @see #getAuthorityKeyIdentifier\n */\n","tf":{"freq":{"selector":1,"detail":1,"singl":1,"necessari":1,"must":1,"specifi":1,"taken":1,"howev":1,"key":27,"follow":1,"clone":1,"done":1,"number":3,"embed":1,"extract":1,"comparison":1,"content":2,"input":1,"encod":2,"criterion":3,"issuer":4,"contain":3,"will":2,"match":1,"compar":1,"array":1,"critic":1,"result":1,"structur":1,"correspond":1,"subject":7,"link":1,"use":3,"identifi":26,"object":2,"author":15,"popul":1,"cert":3,"order":1,"extens":8,"name":2,"valu":10,"subsequ":1,"note":2,"usual":1,"direct":1,"certif":7,"may":1,"includ":1,"check":1,"suppli":1,"general":2,"field":1,"notat":1,"pre":2,"encapsul":1,"instead":1,"insid":1,"also":1,"serial":3,"pars":1,"modif":1},"maxFreq":27,"totalTerms":178},"loc":7}