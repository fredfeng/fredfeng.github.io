{"id":14777,"className":"java.nio.channels.SelectableChannel","methodName":"register","signature":"\u003cjava.nio.channels.SelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)\u003e","javadoc":"/** \n * Registers this channel with the given selector, returning a selection key. \u003cp\u003e If this channel is currently registered with the given selector then the selection key representing that registration is returned.  The key\u0027s interest set will have been changed to \u003ctt\u003eops\u003c/tt\u003e, as if by invoking the  {@link SelectionKey#interestOps(int) interestOps(int)} method.  Ifthe \u003ctt\u003eatt\u003c/tt\u003e argument is not \u003ctt\u003enull\u003c/tt\u003e then the key\u0027s attachment will have been set to that value.  A  {@link CancelledKeyException} willbe thrown if the key has already been cancelled. \u003cp\u003e Otherwise this channel has not yet been registered with the given selector, so it is registered and the resulting new key is returned. The key\u0027s initial interest set will be \u003ctt\u003eops\u003c/tt\u003e and its attachment will be \u003ctt\u003eatt\u003c/tt\u003e. \u003cp\u003e This method may be invoked at any time.  If this method is invoked while another invocation of this method or of the  {@link #configureBlocking(boolean) configureBlocking} method is in progressthen it will first block until the other operation is complete.  This method will then synchronize on the selector\u0027s key set and therefore may block if invoked concurrently with another registration or selection operation involving the same selector. \u003c/p\u003e \u003cp\u003e If this channel is closed while this operation is in progress then the key returned by this method will have been cancelled and will therefore be invalid. \u003c/p\u003e\n * @param sel The selector with which this channel is to be registered\n * @param ops The interest set for the resulting key\n * @param att The attachment for the resulting key; may be \u003ctt\u003enull\u003c/tt\u003e\n * @throws ClosedChannelException If this channel is closed\n * @throws ClosedSelectorException If the selector is closed\n * @throws IllegalBlockingModeException If this channel is in blocking mode\n * @throws IllegalSelectorException If this channel was not created by the same provider as the given selector\n * @throws CancelledKeyException If this channel is currently registered with the given selector but the corresponding key has already been cancelled\n * @throws IllegalArgumentException If a bit in the \u003ctt\u003eops\u003c/tt\u003e set does not correspond to an operation that is supported by this channel, that is, if \u003ctt\u003eset \u0026 ~validOps() !\u003d 0\u003c/tt\u003e\n * @return  A key representing the registration of this channel withthe given selector\n */\n","tf":{"freq":{"selector":12,"progress":1,"willb":1,"cancel":5,"close":5,"time":1,"given":6,"invalid":1,"oper":4,"interest":5,"key":16,"argument":2,"except":7,"thrown":1,"support":1,"op":7,"creat":1,"invok":4,"select":4,"involv":1,"provid":1,"invoc":1,"bit":1,"configur":2,"withth":1,"will":8,"otherwis":1,"valid":1,"result":3,"correspond":2,"concurr":1,"link":3,"block":6,"anoth":2,"therefor":2,"mode":2,"current":2,"regist":7,"valu":1,"initi":1,"complet":1,"may":3,"ifth":1,"repres":2,"att":3,"registr":3,"illeg":3,"attach":3,"method":7,"alreadi":2,"progressthen":1,"chang":1,"channel":12,"first":1,"sel":1,"yet":1},"maxFreq":16,"totalTerms":178},"loc":0}