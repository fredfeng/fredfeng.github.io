{"id":14853,"className":"java.nio.channels.GatheringByteChannel","methodName":"write","signature":"\u003cjava.nio.channels.GatheringByteChannel: long write(java.nio.ByteBuffer[],int,int)\u003e","javadoc":"/** \n * Writes a sequence of bytes to this channel from a subsequence of the given buffers. \u003cp\u003e An attempt is made to write up to \u003ci\u003er\u003c/i\u003e bytes to this channel, where \u003ci\u003er\u003c/i\u003e is the total number of bytes remaining in the specified subsequence of the given buffer array, that is, \u003cblockquote\u003e\u003cpre\u003e srcs[offset].remaining() + srcs[offset+1].remaining() + ... + srcs[offset+length-1].remaining()\u003c/pre\u003e\u003c/blockquote\u003e at the moment that this method is invoked. \u003cp\u003e Suppose that a byte sequence of length \u003ci\u003en\u003c/i\u003e is written, where \u003ctt\u003e0\u003c/tt\u003e\u0026nbsp;\u003ctt\u003e\u0026lt;\u003d\u003c/tt\u003e\u0026nbsp;\u003ci\u003en\u003c/i\u003e\u0026nbsp;\u003ctt\u003e\u0026lt;\u003d\u003c/tt\u003e\u0026nbsp;\u003ci\u003er\u003c/i\u003e. Up to the first \u003ctt\u003esrcs[offset].remaining()\u003c/tt\u003e bytes of this sequence are written from buffer \u003ctt\u003esrcs[offset]\u003c/tt\u003e, up to the next \u003ctt\u003esrcs[offset+1].remaining()\u003c/tt\u003e bytes are written from buffer \u003ctt\u003esrcs[offset+1]\u003c/tt\u003e, and so forth, until the entire byte sequence is written.  As many bytes as possible are written from each buffer, hence the final position of each updated buffer, except the last updated buffer, is guaranteed to be equal to that buffer\u0027s limit. \u003cp\u003e Unless otherwise specified, a write operation will return only after writing all of the \u003ci\u003er\u003c/i\u003e requested bytes.  Some types of channels, depending upon their state, may write only some of the bytes or possibly none at all.  A socket channel in non-blocking mode, for example, cannot write any more bytes than are free in the socket\u0027s output buffer. \u003cp\u003e This method may be invoked at any time.  If another thread has already initiated a write operation upon this channel, however, then an invocation of this method will block until the first operation is complete. \u003c/p\u003e\n * @param srcs The buffers from which bytes are to be retrieved\n * @param offset The offset within the buffer array of the first buffer from which bytes are to be retrieved; must be non-negative and no larger than \u003ctt\u003esrcs.length\u003c/tt\u003e\n * @param length The maximum number of buffers to be accessed; must be non-negative and no larger than \u003ctt\u003esrcs.length\u003c/tt\u003e\u0026nbsp;-\u0026nbsp;\u003ctt\u003eoffset\u003c/tt\u003e\n * @return  The number of bytes written, possibly zero\n * @throws IndexOutOfBoundsException If the preconditions on the \u003ctt\u003eoffset\u003c/tt\u003e and \u003ctt\u003elength\u003c/tt\u003e parameters do not hold\n * @throws NonWritableChannelException If this channel was not opened for writing\n * @throws ClosedChannelException If this channel is closed\n * @throws AsynchronousCloseException If another thread closes this channel while the write operation is in progress\n * @throws ClosedByInterruptException If another thread interrupts the current thread while the write operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status\n * @throws IOException If some other I/O error occurs\n */\n","tf":{"freq":{"progress":2,"total":1,"forth":1,"last":1,"precondit":1,"therebi":1,"possibl":3,"zero":1,"type":1,"must":2,"close":6,"specifi":2,"buffer":13,"open":1,"time":1,"free":1,"given":2,"oper":5,"blockquot":2,"sequenc":4,"thread":5,"request":1,"socket":2,"none":1,"howev":1,"nbsp":6,"limit":1,"mani":1,"index":1,"henc":1,"except":7,"status":1,"invok":2,"hold":1,"writabl":1,"number":3,"invoc":1,"non":4,"updat":2,"maximum":1,"will":2,"negat":2,"output":1,"entir":1,"posit":1,"array":2,"upon":2,"attempt":1,"otherwis":1,"asynchron":1,"moment":1,"next":1,"made":1,"state":1,"block":2,"anoth":3,"mode":1,"unless":1,"written":6,"current":2,"length":6,"write":11,"initi":1,"offset":11,"subsequ":2,"complet":1,"may":2,"error":1,"guarante":1,"depend":1,"larger":2,"paramet":1,"suppos":1,"equal":1,"access":1,"interrupt":3,"srcs":10,"remain":6,"retriev":2,"pre":2,"exampl":1,"alreadi":1,"method":3,"within":1,"channel":11,"first":3,"bound":1,"occur":1},"maxFreq":13,"totalTerms":215},"loc":0}