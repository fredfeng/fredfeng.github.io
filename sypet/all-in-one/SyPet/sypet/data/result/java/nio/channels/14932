{"id":14932,"className":"java.nio.channels.Selector","methodName":"close","signature":"\u003cjava.nio.channels.Selector: void close()\u003e","javadoc":"/** \n * Closes this selector. \u003cp\u003e If a thread is currently blocked in one of this selector\u0027s selection methods then it is interrupted as if by invoking the selector\u0027s  {@link #wakeup wakeup} method.\u003cp\u003e Any uncancelled keys still associated with this selector are invalidated, their channels are deregistered, and any other resources associated with this selector are released. \u003cp\u003e If this selector is already closed then invoking this method has no effect. \u003cp\u003e After a selector is closed, any further attempt to use it, except by invoking this method or the  {@link #wakeup wakeup} method, will cause a{@link ClosedSelectorException} to be thrown. \u003c/p\u003e\n * @throws IOException If an I/O error occurs\n */\n","tf":{"freq":{"selector":8,"attempt":1,"link":3,"one":1,"use":1,"block":1,"close":5,"resourc":1,"invalid":1,"releas":1,"associ":2,"deregist":1,"wakeup":4,"thread":1,"current":1,"uncancel":1,"key":1,"thrown":1,"except":3,"error":1,"invok":3,"select":1,"still":1,"interrupt":1,"caus":1,"effect":1,"will":1,"method":5,"alreadi":1,"channel":1,"occur":1},"maxFreq":8,"totalTerms":56},"loc":0}