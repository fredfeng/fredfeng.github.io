{"id":15172,"className":"java.nio.file.Files","methodName":"newBufferedWriter","signature":"\u003cjava.nio.file.Files: java.io.BufferedWriter newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])\u003e","javadoc":"/** \n * Opens or creates a file for writing, returning a  {@code BufferedWriter}that may be used to write text to the file in an efficient manner. The  {@code options} parameter specifies how the the file is created oropened. If no options are present then this method works as if the  {@link StandardOpenOption#CREATE CREATE},  {@link StandardOpenOption#TRUNCATE_EXISTING TRUNCATE_EXISTING}, and  {@link StandardOpenOption#WRITE WRITE} options are present. In other words, itopens the file for writing, creating the file if it doesn\u0027t exist, or initially truncating an existing  {@link #isRegularFile regular-file} toa size of  {@code 0} if it exists.\u003cp\u003e The  {@code Writer} methods to write text throw {@code IOException}if the text cannot be encoded using the specified charset.\n * @param path the path to the file\n * @param cs the charset to use for encoding\n * @param options options specifying how the file is opened\n * @return  a new buffered writer, with default buffer size, to write textto the file\n * @throws IOException if an I/O error occurs opening or creating the file\n * @throws UnsupportedOperationException if an unsupported option is specified\n * @throws SecurityException In the case of the default provider, and a security manager is installed, the  {@link SecurityManager#checkWrite(String) checkWrite}method is invoked to check write access to the file.\n * @see #write(Path,Iterable,Charset,OpenOption[])\n */\n","tf":{"freq":{"unsupport":2,"link":5,"truncat":1,"use":3,"toa":1,"specifi":4,"buffer":4,"open":7,"itopen":1,"oper":1,"file":12,"path":3,"write":9,"effici":1,"initi":1,"writer":4,"exist":3,"option":10,"work":1,"except":4,"text":3,"may":1,"check":3,"error":1,"standard":3,"regular":2,"creat":4,"invok":1,"manag":2,"instal":1,"oropen":1,"paramet":1,"charset":3,"textto":1,"access":1,"provid":1,"size":2,"present":2,"encod":2,"secur":3,"string":1,"manner":1,"method":3,"word":1,"iter":1,"occur":1},"maxFreq":12,"totalTerms":123},"loc":5}