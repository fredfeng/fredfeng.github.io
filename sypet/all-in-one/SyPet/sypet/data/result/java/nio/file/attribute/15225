{"id":15225,"className":"java.nio.file.attribute.UserDefinedFileAttributeView","methodName":"write","signature":"\u003cjava.nio.file.attribute.UserDefinedFileAttributeView: int write(java.lang.String,java.nio.ByteBuffer)\u003e","javadoc":"/** \n * Writes the value of a user-defined attribute from a buffer. \u003cp\u003e This method writes the value of the attribute from a given buffer as a sequence of bytes. The size of the value to transfer is  {@code r}, where  {@code r} is the number of bytes remaining in the buffer, that is{@code src.remaining()}. The sequence of bytes is transferred from the buffer starting at index  {@code p}, where  {@code p} is the buffer\u0027sposition. Upon return, the buffer\u0027s position will be equal to  {@code p + n}, where  {@code n} is the number of bytes transferred; its limitwill not have changed. \u003cp\u003e If an attribute of the given name already exists then its value is replaced. If the attribute does not exist then it is created. If it implementation specific if a test to check for the existence of the attribute and the creation of attribute are atomic with repect to other file system activities. \u003cp\u003e Where there is insufficient space to store the attribute, or the attribute name or value exceed an implementation specific maximum size then an  {@code IOException} is thrown.\u003cp\u003e \u003cb\u003eUsage Example:\u003c/b\u003e Suppose we want to write a file\u0027s MIME type as a user-defined attribute: \u003cpre\u003e UserDefinedFileAttributeView view \u003d FIles.getFileAttributeView(path, UserDefinedFileAttributeView.class); view.write(\"user.mimetype\", Charset.defaultCharset().encode(\"text/html\")); \u003c/pre\u003e\n * @param name The attribute name\n * @param src The buffer containing the attribute value\n * @return  The number of bytes written, possibly zero\n * @throws IOException If an I/O error occurs\n * @throws SecurityException In the case of the default provider, a security manager is installed, and it denies  {@link RuntimePermission}\u003ctt\u003e(\"accessUserDefinedAttributes\")\u003c/tt\u003e or its  {@link SecurityManager#checkWrite(String) checkWrite}method denies write access to the file.\n */\n","tf":{"freq":{"atom":1,"store":1,"test":1,"possibl":1,"zero":1,"type":1,"repect":1,"buffer":7,"given":2,"sequenc":2,"file":7,"permiss":1,"deni":2,"text":1,"index":1,"transfer":3,"except":3,"thrown":1,"creat":1,"runtim":1,"charset":2,"number":3,"provid":1,"size":2,"insuffici":1,"encod":1,"system":1,"mimetyp":1,"start":1,"maximum":1,"contain":1,"will":1,"view":5,"posit":1,"limitwil":1,"upon":1,"defin":5,"creation":1,"link":2,"activ":1,"space":1,"attribut":15,"written":1,"name":4,"path":1,"write":8,"valu":6,"src":2,"exist":3,"want":1,"error":1,"check":3,"manag":2,"instal":1,"exceed":1,"suppos":1,"equal":1,"access":2,"sposit":1,"specif":2,"secur":3,"remain":2,"pre":2,"string":1,"replac":1,"exampl":1,"html":1,"method":2,"alreadi":1,"chang":1,"usag":1,"user":6,"occur":1},"maxFreq":15,"totalTerms":152},"loc":0}