{"id":15031,"className":"java.nio.file.FileSystem","methodName":"close","signature":"\u003cjava.nio.file.FileSystem: void close()\u003e","javadoc":"/** \n * Closes this file system. \u003cp\u003e After a file system is closed then all subsequent access to the file system, either by methods defined by this class or on objects associated with this file system, throw  {@link ClosedFileSystemException}. If the file system is already closed then invoking this method has no effect. \u003cp\u003e Closing a file system will close all open  {@link java.nio.channels.Channel channels},  {@link DirectoryStream directory-streams}, {@link WatchService watch-service}, and other closeable objects associated with this file system. The  {@link FileSystems#getDefault default} filesystem cannot be closed.\n * @throws IOException If an I/O error occurs\n * @throws UnsupportedOperationException Thrown in the case of the default file system\n */\n","tf":{"freq":{"defin":1,"unsupport":1,"stream":2,"closeabl":1,"directori":2,"link":5,"servic":2,"object":2,"close":8,"open":1,"oper":1,"associ":2,"file":10,"subsequ":1,"thrown":1,"except":3,"error":1,"invok":1,"watch":2,"access":1,"either":1,"system":10,"effect":1,"will":1,"method":2,"alreadi":1,"java":1,"nio":1,"channel":3,"filesystem":1,"occur":1},"maxFreq":10,"totalTerms":71},"loc":0}