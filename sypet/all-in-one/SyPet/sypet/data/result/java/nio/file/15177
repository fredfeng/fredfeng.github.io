{"id":15177,"className":"java.nio.file.Files","methodName":"write","signature":"\u003cjava.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])\u003e","javadoc":"/** \n * Writes bytes to a file. The  {@code options} parameter specifies how thethe file is created or opened. If no options are present then this method works as if the  {@link StandardOpenOption#CREATE CREATE},  {@link StandardOpenOption#TRUNCATE_EXISTING TRUNCATE_EXISTING}, and  {@link StandardOpenOption#WRITE WRITE} options are present. In other words, itopens the file for writing, creating the file if it doesn\u0027t exist, or initially truncating an existing  {@link #isRegularFile regular-file} toa size of  {@code 0}. All bytes in the byte array are written to the file. The method ensures that the file is closed when all bytes have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has created or truncated, or after some bytes have been written to the file. \u003cp\u003e \u003cb\u003eUsage example\u003c/b\u003e: By default the method creates a new file or overwrites an existing file. Suppose you instead want to append bytes to an existing file: \u003cpre\u003e Path path \u003d ... byte[] bytes \u003d ... Files.write(path, bytes, StandardOpenOption.APPEND); \u003c/pre\u003e\n * @param path the path to the file\n * @param bytes the byte array with the bytes to write\n * @param options options specifying how the file is opened\n * @return  the path\n * @throws IOException if an I/O error occurs writing to or creating the file\n * @throws UnsupportedOperationException if an unsupported option is specified\n * @throws SecurityException In the case of the default provider, and a security manager is installed, the  {@link SecurityManager#checkWrite(String) checkWrite}method is invoked to check write access to the file.\n */\n","tf":{"freq":{"unsupport":2,"specifi":3,"close":1,"open":6,"itopen":1,"oper":1,"file":18,"option":10,"work":1,"append":1,"except":4,"thrown":1,"creat":5,"invok":1,"runtim":1,"provid":1,"size":1,"present":2,"word":1,"theth":1,"array":2,"overwrit":1,"link":5,"truncat":2,"toa":1,"ensur":1,"written":3,"write":9,"path":6,"initi":1,"exist":4,"want":1,"may":1,"standard":4,"error":3,"check":3,"regular":2,"manag":2,"instal":1,"paramet":1,"suppos":1,"access":1,"secur":3,"pre":2,"string":1,"exampl":1,"instead":1,"method":4,"usag":1,"occur":2},"maxFreq":18,"totalTerms":132},"loc":15}