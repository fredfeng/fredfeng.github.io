{"id":14986,"className":"java.nio.channels.spi.AbstractSelectableChannel","methodName":"register","signature":"\u003cjava.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)\u003e","javadoc":"/** \n * Registers this channel with the given selector, returning a selection key. \u003cp\u003e  This method first verifies that this channel is open and that the given initial interest set is valid. \u003cp\u003e If this channel is already registered with the given selector then the selection key representing that registration is returned after setting its interest set to the given value. \u003cp\u003e Otherwise this channel has not yet been registered with the given selector, so the  {@link AbstractSelector#register register} method ofthe selector is invoked while holding the appropriate locks.  The resulting key is added to this channel\u0027s key set before being returned. \u003c/p\u003e\n * @throws ClosedSelectorException {@inheritDoc}\n * @throws IllegalBlockingModeException {@inheritDoc}\n * @throws IllegalSelectorException {@inheritDoc}\n * @throws CancelledKeyException {@inheritDoc}\n * @throws IllegalArgumentException {@inheritDoc}\n */\n","tf":{"freq":{"selector":7,"otherwis":1,"result":1,"valid":1,"link":1,"block":1,"cancel":1,"mode":1,"close":1,"open":1,"given":5,"interest":2,"verifi":1,"ofth":1,"regist":6,"valu":1,"initi":1,"key":5,"argument":1,"except":5,"repres":1,"select":2,"invok":1,"hold":1,"lock":1,"registr":1,"illeg":3,"appropri":1,"ad":1,"method":2,"alreadi":1,"first":1,"channel":5,"yet":1},"maxFreq":7,"totalTerms":66},"loc":21}