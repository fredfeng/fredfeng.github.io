{"id":15195,"className":"java.nio.file.spi.FileSystemProvider","methodName":"newAsynchronousFileChannel","signature":"\u003cjava.nio.file.spi.FileSystemProvider: java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute\u003c?\u003e[])\u003e","javadoc":"/** \n * Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file. This method works in exactly the manner specified by the  {@link AsynchronousFileChannel#open(Path,Set,ExecutorService,FileAttribute[]) AsynchronousFileChannel.open} method.A provider that does not support all the features required to construct an asynchronous file channel throws  {@code UnsupportedOperationException}. The default provider is required to support the creation of asynchronous file channels. When not overridden, the default implementation of this method throws  {@code UnsupportedOperationException}.\n * @param path the path of the file to open or create\n * @param options options specifying how the file is opened\n * @param executor the thread pool or  {@code null} to associate the channel withthe default thread pool\n * @param attrs an optional list of file attributes to set atomically when creating the file\n * @return  a new asynchronous file channel\n * @throws IllegalArgumentException If the set contains an invalid combination of options\n * @throws UnsupportedOperationException If this provider that does not support creating asynchronous file channels, or an unsupported open option or file attribute is specified\n * @throws IOException If an I/O error occurs\n * @throws SecurityException In the case of the default file system, the  {@link SecurityManager#checkRead(String)} method is invoked to checkread access if the file is opened for reading. The  {@link SecurityManager#checkWrite(String)} method is invoked to checkwrite access if the file is opened for writing\n */\n","tf":{"freq":{"atom":1,"unsupport":4,"overridden":1,"servic":1,"specifi":3,"open":8,"requir":2,"invalid":1,"oper":3,"file":19,"exact":1,"thread":2,"combin":1,"option":5,"work":1,"argument":1,"except":6,"support":3,"creat":4,"invok":2,"attr":1,"provid":3,"system":1,"withth":1,"contain":1,"asynchron":8,"creation":1,"link":3,"checkwrit":1,"attribut":3,"pool":2,"associ":1,"path":3,"write":3,"read":3,"error":1,"check":2,"manag":2,"executor":2,"checkread":1,"list":1,"access":3,"illeg":1,"secur":3,"string":2,"featur":1,"method":5,"manner":1,"construct":1,"channel":9,"occur":1},"maxFreq":19,"totalTerms":140},"loc":3}