{"id":15197,"className":"java.nio.file.spi.FileSystemProvider","methodName":"newDirectoryStream","signature":"\u003cjava.nio.file.spi.FileSystemProvider: java.nio.file.DirectoryStream\u003cjava.nio.file.Path\u003e newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)\u003e","javadoc":"/** \n * Opens a directory, returning a  {@code DirectoryStream} to iterate overthe entries in the directory. This method works in exactly the manner specified by the  {@link Files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)}method.\n * @param dir the path to the directory\n * @param filter the directory stream filter\n * @return  a new and open {@code DirectoryStream} object\n * @throws NotDirectoryException if the file could not otherwise be opened because it is not a directory \u003ci\u003e(optional specific exception)\u003c/i\u003e\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, the  {@link SecurityManager#checkRead(String) checkRead}method is invoked to check read access to the directory.\n */\n","tf":{"freq":{"otherwis":1,"stream":6,"directori":12,"link":2,"object":1,"specifi":1,"open":3,"dir":1,"file":4,"exact":1,"path":2,"read":3,"option":1,"work":1,"overth":1,"except":4,"check":3,"error":1,"invok":1,"manag":2,"entri":1,"instal":1,"access":1,"provid":1,"specif":1,"secur":3,"string":1,"manner":1,"method":3,"java":2,"nio":2,"iter":1,"filter":3,"occur":1},"maxFreq":12,"totalTerms":73},"loc":0}