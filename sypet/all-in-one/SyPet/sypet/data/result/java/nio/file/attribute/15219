{"id":15219,"className":"java.nio.file.attribute.AclFileAttributeView","methodName":"getAcl","signature":"\u003cjava.nio.file.attribute.AclFileAttributeView: java.util.List\u003cjava.nio.file.attribute.AclEntry\u003e getAcl()\u003e","javadoc":"/** \n * Reads the access control list. \u003cp\u003e When the file system uses an ACL model that differs from the NFSv4 defined ACL model, then this method returns an ACL that is the translation of the ACL to the NFSv4 ACL model. \u003cp\u003e The returned list is modifiable so as to facilitate changes to the existing ACL. The  {@link #setAcl setAcl} method is used to updatethe file\u0027s ACL attribute.\n * @return  an ordered list of {@link AclEntry entries} representing theACL\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, a security manager is installed, and it denies  {@link RuntimePermission}\u003ctt\u003e(\"accessUserInformation\")\u003c/tt\u003e or its  {@link SecurityManager#checkRead(String) checkRead} methoddenies read access to the file.\n */\n","tf":{"freq":{"defin":1,"model":3,"link":4,"use":2,"facilit":1,"methoddeni":1,"attribut":1,"order":1,"file":3,"permiss":1,"read":4,"exist":1,"deni":1,"control":1,"except":2,"check":2,"error":1,"acl":4,"repres":1,"manag":2,"entri":2,"runtim":1,"instal":1,"list":3,"access":3,"translat":1,"provid":1,"inform":1,"differ":1,"system":1,"secur":3,"updateth":1,"string":1,"modifi":1,"method":2,"chang":1,"user":1,"occur":1},"maxFreq":4,"totalTerms":63},"loc":0}