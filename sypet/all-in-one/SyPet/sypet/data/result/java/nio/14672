{"id":14672,"className":"java.nio.Buffer","methodName":"arrayOffset","signature":"\u003cjava.nio.Buffer: int arrayOffset()\u003e","javadoc":"/** \n * Returns the offset within this buffer\u0027s backing array of the first element of the buffer\u0026nbsp;\u0026nbsp;\u003ci\u003e(optional operation)\u003c/i\u003e. \u003cp\u003e If this buffer is backed by an array then buffer position \u003ci\u003ep\u003c/i\u003e corresponds to array index \u003ci\u003ep\u003c/i\u003e\u0026nbsp;+\u0026nbsp;\u003ctt\u003earrayOffset()\u003c/tt\u003e. \u003cp\u003e Invoke the  {@link #hasArray hasArray} method before invoking thismethod in order to ensure that this buffer has an accessible backing array.  \u003c/p\u003e\n * @return  The offset within this buffer\u0027s arrayof the first element of the buffer\n * @throws ReadOnlyBufferException If this buffer is backed by an array but is read-only\n * @throws UnsupportedOperationException If this buffer is not backed by an accessible array\n * @since 1.6\n */\n","tf":{"freq":{"element":2,"unsupport":1,"except":2,"index":1,"invok":2,"correspond":1,"link":1,"back":5,"access":2,"ensur":1,"buffer":10,"arrayof":1,"order":1,"thismethod":1,"oper":2,"read":2,"method":1,"within":2,"offset":4,"first":2,"posit":1,"option":1,"array":10,"nbsp":4},"maxFreq":10,"totalTerms":60},"loc":0}