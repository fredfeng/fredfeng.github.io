{"id":15188,"className":"java.nio.file.spi.FileSystemProvider","methodName":"newFileSystem","signature":"\u003cjava.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)\u003e","javadoc":"/** \n * Constructs a new  {@code FileSystem} object identified by a URI. Thismethod is invoked by the  {@link FileSystems#newFileSystem(URI,Map)}method to open a new file system identified by a URI. \u003cp\u003e The  {@code uri} parameter is an absolute, hierarchical URI, with ascheme equal (without regard to case) to the scheme supported by this provider. The exact form of the URI is highly provider dependent. The {@code env} parameter is a map of provider specific properties to configurethe file system. \u003cp\u003e This method throws  {@link FileSystemAlreadyExistsException} if thefile system already exists because it was previously created by an invocation of this method. Once a file system is  {@link java.nio.file.FileSystem#close closed} it is provider-dependent if theprovider allows a new file system to be created with the same URI as a file system it previously created.\n * @param uri URI reference\n * @param env A map of provider specific properties to configure the file system; may be empty\n * @return  A new file system\n * @throws IllegalArgumentException If the pre-conditions for the  {@code uri} parameter aren\u0027t met,or the  {@code env} parameter does not contain properties requiredby the provider, or a property value is invalid\n * @throws IOException An I/O error occurs creating the file system\n * @throws SecurityException If a security manager is installed and it denies an unspecified permission required by the file system provider implementation\n * @throws FileSystemAlreadyExistsException If the file system has already been created\n */\n","tf":{"freq":{"close":2,"open":1,"configureth":1,"requir":1,"invalid":1,"scheme":1,"refer":1,"file":18,"exact":1,"permiss":1,"deni":1,"aschem":1,"argument":1,"except":5,"support":1,"form":1,"creat":5,"invok":1,"regard":1,"absolut":1,"provid":7,"without":1,"uri":3,"invoc":1,"system":18,"configur":1,"contain":1,"properti":4,"unspecifi":1,"theprovid":1,"allow":1,"link":3,"thefil":1,"identifi":2,"object":1,"met":1,"thismethod":1,"map":3,"valu":1,"requiredbi":1,"exist":3,"condit":1,"hierarch":1,"may":1,"error":1,"previous":2,"manag":1,"depend":2,"instal":1,"paramet":4,"equal":1,"env":3,"illeg":1,"empti":1,"specif":2,"secur":2,"pre":1,"method":3,"alreadi":4,"java":1,"nio":1,"construct":1,"high":1,"occur":1},"maxFreq":18,"totalTerms":139},"loc":0}