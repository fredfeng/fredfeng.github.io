{"id":15020,"className":"java.nio.file.WatchService","methodName":"close","signature":"\u003cjava.nio.file.WatchService: void close()\u003e","javadoc":"/** \n * Closes this watch service. \u003cp\u003e If a thread is currently blocked in the  {@link #take take} or {@link #poll(long,TimeUnit) poll} methods waiting for a key to be queued thenit immediately receives a  {@link ClosedWatchServiceException}. Any valid keys associated with this watch service are  {@link WatchKey#isValid invalidated}. \u003cp\u003e After a watch service is closed, any further attempt to invoke operations upon it will throw  {@link ClosedWatchServiceException}. If this watch service is already closed then invoking this method has no effect.\n * @throws IOException if an I/O error occurs\n */\n","tf":{"freq":{"attempt":1,"valid":2,"link":5,"servic":6,"block":1,"wait":1,"close":6,"time":1,"poll":2,"invalid":1,"oper":1,"associ":1,"thread":1,"current":1,"immedi":1,"key":3,"except":3,"thenit":1,"error":1,"watch":7,"invok":2,"queu":1,"receiv":1,"unit":1,"effect":1,"take":2,"will":1,"alreadi":1,"method":2,"occur":1,"upon":1},"maxFreq":7,"totalTerms":60},"loc":0}