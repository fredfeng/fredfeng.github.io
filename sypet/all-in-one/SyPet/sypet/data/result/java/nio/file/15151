{"id":15151,"className":"java.nio.file.Files","methodName":"setAttribute","signature":"\u003cjava.nio.file.Files: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])\u003e","javadoc":"/** \n * Sets the value of a file attribute. \u003cp\u003e The  {@code attribute} parameter identifies the attribute to be setand takes the form: \u003cblockquote\u003e [\u003ci\u003eview-name\u003c/i\u003e\u003cb\u003e:\u003c/b\u003e]\u003ci\u003eattribute-name\u003c/i\u003e \u003c/blockquote\u003e where square brackets [...] delineate an optional component and the character  {@code \u0027:\u0027} stands for itself.\u003cp\u003e \u003ci\u003eview-name\u003c/i\u003e is the  {@link FileAttributeView#name name} of a {@link FileAttributeView} that identifies a set of file attributes. If notspecified then it defaults to  {@code \"basic\"}, the name of the file attribute view that identifies the basic set of file attributes common to many file systems. \u003ci\u003eattribute-name\u003c/i\u003e is the name of the attribute within the set. \u003cp\u003e The  {@code options} array may be used to indicate how symbolic linksare handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is set. If the option  {@link LinkOption#NOFOLLOW_LINKS NOFOLLOW_LINKS} is present then symbolic links are not followed.\u003cp\u003e \u003cb\u003eUsage Example:\u003c/b\u003e Suppose we want to set the DOS \"hidden\" attribute: \u003cpre\u003e Path path \u003d ... Files.setAttribute(path, \"dos:hidden\", true); \u003c/pre\u003e\n * @param path the path to the file\n * @param attribute the attribute to set\n * @param value the attribute value\n * @param options options indicating how symbolic links are handled\n * @return  the {@code path} parameter\n * @throws UnsupportedOperationException if the attribute view is not available\n * @throws IllegalArgumentException if the attribute name is not specified, or is not recognized, or the attribute value is of the correct type but has an inappropriate value\n * @throws ClassCastException if the attribute value is not of the expected type or is a collection containing elements that are not of the expected type\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, its  {@link SecurityManager#checkWrite(String) checkWrite}method denies write access to the file. If this method is invoked to set security sensitive attributes then the security manager may be invoked to check for additional permissions.\n */\n","tf":{"freq":{"squar":1,"unsupport":1,"linksar":1,"type":3,"bracket":1,"specifi":1,"dos":1,"expect":2,"correct":1,"basic":2,"oper":1,"file":12,"blockquot":2,"permiss":1,"recogn":1,"deni":1,"option":6,"setand":1,"follow":2,"argument":1,"element":1,"mani":1,"sensit":1,"except":5,"form":1,"symbol":5,"charact":1,"invok":2,"avail":1,"provid":1,"present":1,"system":1,"cast":1,"contain":1,"view":6,"collect":1,"array":1,"inappropri":1,"common":1,"link":10,"notspecifi":1,"use":1,"identifi":3,"attribut":23,"indic":2,"name":9,"write":3,"path":6,"valu":6,"want":1,"addit":1,"may":2,"check":3,"error":1,"manag":3,"instal":1,"paramet":2,"suppos":1,"true":1,"access":1,"illeg":1,"handl":2,"delin":1,"secur":5,"compon":1,"stand":1,"take":1,"hidden":2,"pre":2,"string":1,"target":1,"exampl":1,"method":2,"within":1,"usag":1,"occur":1},"maxFreq":23,"totalTerms":180},"loc":4}