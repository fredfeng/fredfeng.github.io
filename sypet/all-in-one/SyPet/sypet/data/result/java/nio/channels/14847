{"id":14847,"className":"java.nio.channels.AsynchronousFileChannel","methodName":"tryLock","signature":"\u003cjava.nio.channels.AsynchronousFileChannel: java.nio.channels.FileLock tryLock(long,long,boolean)\u003e","javadoc":"/** \n * Attempts to acquire a lock on the given region of this channel\u0027s file. \u003cp\u003e This method does not block. An invocation always returns immediately, either having acquired a lock on the requested region or having failed to do so.  If it fails to acquire a lock because an overlapping lock is held by another program then it returns  {@code null}.  If it fails to acquire a lock for any other reason then an appropriate exception is thrown.\n * @param position The position at which the locked region is to start; must be non-negative\n * @param size The size of the locked region; must be non-negative, and the sum {@code position}\u0026nbsp;+\u0026nbsp; {@code size} must be non-negative\n * @param shared {@code true} to request a shared lock,{@code false} to request an exclusive lock\n * @return  A lock object representing the newly-acquired lock,or  {@code null} if the lock could not be acquiredbecause another program holds an overlapping lock\n * @throws IllegalArgumentException If the preconditions on the parameters do not hold\n * @throws ClosedChannelException If this channel is closed\n * @throws OverlappingFileLockException If a lock that overlaps the requested region is already held by this Java virtual machine, or if another thread is already blocked in this method and is attempting to lock an overlapping region of the same file\n * @throws NonReadableChannelException If  {@code shared} is true but this channel was not opened for reading\n * @throws NonWritableChannelException If  {@code shared} is false but this channel was not opened for writing\n * @throws IOException If some other I/O error occurs\n * @see #lock(Object,CompletionHandler)\n * @see #lock(long,long,boolean,Object,CompletionHandler)\n * @see #tryLock()\n */\n","tf":{"freq":{"acquir":5,"fals":2,"reason":1,"precondit":1,"must":3,"close":2,"open":2,"fail":3,"given":1,"file":3,"thread":1,"request":4,"nbsp":2,"argument":1,"thrown":1,"except":7,"acquiredbecaus":1,"overlap":5,"alway":1,"hold":2,"writabl":1,"invoc":1,"non":5,"size":3,"newli":1,"machin":1,"start":1,"program":2,"negat":3,"posit":3,"attempt":2,"region":6,"virtual":1,"readabl":1,"block":2,"sum":1,"anoth":3,"object":3,"share":4,"write":1,"read":1,"immedi":1,"exclus":1,"complet":2,"held":2,"error":1,"repres":1,"lock":20,"paramet":1,"true":2,"illeg":1,"either":1,"appropri":1,"method":2,"alreadi":2,"java":1,"channel":7,"handler":2,"occur":1},"maxFreq":20,"totalTerms":143},"loc":0}