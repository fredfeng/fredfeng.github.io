{"id":15155,"className":"java.nio.file.Files","methodName":"setPosixFilePermissions","signature":"\u003cjava.nio.file.Files: java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set)\u003e","javadoc":"/** \n * Sets a file\u0027s POSIX permissions. \u003cp\u003e The  {@code path} parameter is associated with a {@code FileSystem}that supports the  {@link PosixFileAttributeView}. This attribute view provides access to file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards.\n * @param path A file reference that locates the file\n * @param perms The new set of permissions\n * @throws UnsupportedOperationException if the associated file system does not support the  {@code PosixFileAttributeView}\n * @throws ClassCastException if the sets contains elements that are not of type  {@code PosixFilePermission}\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, it denies  {@link RuntimePermission}\u003ctt\u003e(\"accessUserInformation\")\u003c/tt\u003e or its  {@link SecurityManager#checkWrite(String) checkWrite}method denies write access to the file.\n */\n","tf":{"freq":{"unsupport":1,"common":1,"portabl":1,"link":3,"use":1,"type":1,"perm":1,"posix":4,"attribut":4,"associ":3,"oper":3,"refer":1,"file":13,"write":3,"path":2,"permiss":5,"deni":2,"element":1,"locat":1,"except":4,"support":2,"check":2,"error":1,"standard":1,"famili":1,"manag":2,"runtim":1,"instal":1,"paramet":1,"access":3,"provid":2,"inform":1,"system":5,"secur":3,"cast":1,"string":1,"contain":1,"method":1,"view":3,"user":1,"occur":1},"maxFreq":13,"totalTerms":90},"loc":8}