{"id":14952,"className":"java.nio.channels.Channels","methodName":"newWriter","signature":"\u003cjava.nio.channels.Channels: java.io.Writer newWriter(java.nio.channels.WritableByteChannel,java.nio.charset.CharsetEncoder,int)\u003e","javadoc":"/** \n * Constructs a writer that encodes characters using the given encoder and writes the resulting bytes to the given channel. \u003cp\u003e The resulting stream will contain an internal output buffer of at least \u003ctt\u003eminBufferCap\u003c/tt\u003e bytes.  The stream\u0027s \u003ctt\u003ewrite\u003c/tt\u003e methods will, as needed, flush the buffer by writing bytes to the underlying channel; if the channel is in non-blocking mode when bytes are to be written then an  {@link IllegalBlockingModeException} will be thrown.The resulting stream will not otherwise be buffered.  Closing the stream will in turn cause the channel to be closed.  \u003c/p\u003e\n * @param ch The channel to which bytes will be written\n * @param enc The charset encoder to be used\n * @param minBufferCap The minimum capacity of the internal byte buffer, or \u003ctt\u003e-1\u003c/tt\u003e if an implementation-dependent default capacity is to be used\n * @return  A new writer\n */\n","tf":{"freq":{"otherwis":1,"need":1,"result":3,"stream":4,"minimum":1,"least":1,"cap":2,"link":1,"use":3,"block":2,"close":2,"mode":2,"buffer":6,"given":2,"written":2,"write":3,"writer":3,"enc":1,"min":2,"turn":1,"thrown":1,"except":1,"charact":1,"depend":1,"charset":1,"illeg":1,"non":1,"encod":3,"caus":1,"flush":1,"contain":1,"will":6,"intern":2,"method":1,"capac":2,"construct":1,"output":1,"channel":5},"maxFreq":6,"totalTerms":74},"loc":4}