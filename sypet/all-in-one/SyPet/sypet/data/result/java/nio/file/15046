{"id":15046,"className":"java.nio.file.WatchKey","methodName":"watchable","signature":"\u003cjava.nio.file.WatchKey: java.nio.file.Watchable watchable()\u003e","javadoc":"/** \n * Returns the object for which this watch key was created. This method will continue to return the object even after the key is cancelled. \u003cp\u003e As the  {@code WatchService} is intended to map directly on to thenative file event notification facility (where available) then many of details on how registered objects are watched is highly implementation specific. When watching a directory for changes for example, and the directory is moved or renamed in the file system, there is no guarantee that the watch key will be cancelled and so the object returned by this method may no longer be a valid path to the directory.\n * @return the object for which this watch key was created\n */\n","tf":{"freq":{"valid":1,"detail":1,"watchabl":1,"directori":3,"servic":1,"renam":1,"cancel":2,"object":5,"notif":1,"thenat":1,"file":2,"event":1,"path":1,"map":1,"longer":1,"regist":1,"move":1,"key":4,"direct":1,"facil":1,"mani":1,"may":1,"creat":2,"guarante":1,"watch":6,"avail":1,"continu":1,"system":1,"specif":1,"exampl":1,"will":2,"even":1,"method":2,"chang":1,"high":1,"intend":1},"maxFreq":6,"totalTerms":55},"loc":0}