{"id":15192,"className":"java.nio.file.spi.FileSystemProvider","methodName":"newInputStream","signature":"\u003cjava.nio.file.spi.FileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])\u003e","javadoc":"/** \n * Opens a file, returning an input stream to read from the file. This method works in exactly the manner specified by the  {@link Files#newInputStream} method.\u003cp\u003e The default implementation of this method opens a channel to the file as if by invoking the  {@link #newByteChannel} method and constructs astream that reads bytes from the channel. This method should be overridden where appropriate.\n * @param path the path to the file to open\n * @param options options specifying how the file is opened\n * @return  a new input stream\n * @throws IllegalArgumentException if an invalid combination of options is specified\n * @throws UnsupportedOperationException if an unsupported option is specified\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, the  {@link SecurityManager#checkRead(String) checkRead}method is invoked to check read access to the file.\n */\n","tf":{"freq":{"unsupport":2,"stream":4,"overridden":1,"link":3,"specifi":4,"open":4,"invalid":1,"oper":1,"file":7,"exact":1,"path":2,"combin":1,"read":5,"option":4,"work":1,"argument":1,"except":4,"check":3,"error":1,"manag":2,"invok":2,"instal":1,"access":1,"provid":1,"illeg":1,"input":4,"secur":3,"appropri":1,"string":1,"astream":1,"manner":1,"method":6,"construct":1,"channel":3,"occur":1},"maxFreq":7,"totalTerms":80},"loc":9}