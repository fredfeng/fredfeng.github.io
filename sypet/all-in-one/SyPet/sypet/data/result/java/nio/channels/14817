{"id":14817,"className":"java.nio.channels.AsynchronousServerSocketChannel","methodName":"accept","signature":"\u003cjava.nio.channels.AsynchronousServerSocketChannel: void accept(A,java.nio.channels.CompletionHandler)\u003e","javadoc":"/** \n * Accepts a connection. \u003cp\u003e This method initiates an asynchronous operation to accept a connection made to this channel\u0027s socket. The  {@code handler} parameter isa completion handler that is invoked when a connection is accepted (or the operation fails). The result passed to the completion handler is the  {@link AsynchronousSocketChannel} to the new connection.\u003cp\u003e When a new connection is accepted then the resulting  {@code AsynchronousSocketChannel} will be bound to the same {@link AsynchronousChannelGroup} as this channel. If the group is {@link AsynchronousChannelGroup#isShutdown shutdown} and a connection is accepted,then the connection is closed, and the operation completes with an  {@code IOException} and cause {@link ShutdownChannelGroupException}. \u003cp\u003e To allow for concurrent handling of new connections, the completion handler is not invoked directly by the initiating thread when a new connection is accepted immediately (see \u003ca href\u003d\"AsynchronousChannelGroup.html#threading\"\u003eThreading\u003ca\u003e). \u003cp\u003e If a security manager has been installed then it verifies that the address and port number of the connection\u0027s remote endpoint are permitted by the security manager\u0027s  {@link SecurityManager#checkAccept checkAccept}method. The permission check is performed with privileges that are restricted by the calling context of this method. If the permission check fails then the connection is closed and the operation completes with a  {@link SecurityException}.\n * @param attachment The object to attach to the I/O operation; can be  {@code null}\n * @param handler The handler for consuming the result\n * @throws AcceptPendingException If an accept operation is already in progress on this channel\n * @throws NotYetBoundException If this channel\u0027s socket has not yet been bound\n * @throws ShutdownChannelGroupException If the channel group has terminated\n */\n","tf":{"freq":{"progress":1,"accept":11,"permit":1,"perform":1,"close":2,"fail":2,"oper":6,"thread":3,"verifi":1,"permiss":2,"socket":4,"href":1,"except":6,"invok":2,"number":1,"endpoint":1,"restrict":1,"remot":1,"will":1,"port":1,"call":1,"result":3,"asynchron":6,"connect":11,"allow":1,"concurr":1,"link":6,"made":1,"object":1,"consum":1,"isa":1,"immedi":1,"initi":2,"privileg":1,"pend":1,"shutdown":4,"complet":5,"direct":1,"check":4,"manag":3,"instal":1,"paramet":1,"pass":1,"handl":1,"termin":1,"caus":1,"secur":4,"address":1,"attach":2,"context":1,"alreadi":1,"method":3,"html":1,"group":7,"channel":12,"bound":3,"yet":2,"handler":6},"maxFreq":12,"totalTerms":153},"loc":0}