{"id":14980,"className":"java.nio.channels.spi.SelectorProvider","methodName":"inheritedChannel","signature":"\u003cjava.nio.channels.spi.SelectorProvider: java.nio.channels.Channel inheritedChannel()\u003e","javadoc":"/** \n * Returns the channel inherited from the entity that created this Java virtual machine. \u003cp\u003e On many operating systems a process, such as a Java virtual machine, can be started in a manner that allows the process to inherit a channel from the entity that created the process. The manner in which this is done is system dependent, as are the possible entities to which the channel may be connected. For example, on UNIX systems, the Internet services daemon (\u003ci\u003einetd\u003c/i\u003e) is used to start programs to service requests when a request arrives on an associated network port. In this example, the process that is started, inherits a channel representing a network socket. \u003cp\u003e In cases where the inherited channel represents a network socket then the  {@link java.nio.channels.Channel Channel} type returnedby this method is determined as follows: \u003cul\u003e \u003cli\u003e\u003cp\u003e If the inherited channel represents a stream-oriented connected socket then a  {@link java.nio.channels.SocketChannel SocketChannel} isreturned. The socket channel is, at least initially, in blocking mode, bound to a socket address, and connected to a peer. \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e If the inherited channel represents a stream-oriented listening socket then a  {@link java.nio.channels.ServerSocketChannel ServerSocketChannel} is returned. The server-socket channel is, atleast initially, in blocking mode, and bound to a socket address. \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e If the inherited channel is a datagram-oriented socket then a  {@link java.nio.channels.DatagramChannel DatagramChannel} isreturned. The datagram channel is, at least initially, in blocking mode, and bound to a socket address. \u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e In addition to the network-oriented channels described, this method may return other kinds of channels in the future. \u003cp\u003e The first invocation of this method creates the channel that is returned. Subsequent invocations of this method return the same channel. \u003c/p\u003e\n * @return  The inherited channel, if any, otherwise \u003ctt\u003enull\u003c/tt\u003e.\n * @throws IOException If an I/O error occurs\n * @throws SecurityException If a security manager has been installed and it denies {@link RuntimePermission}\u003ctt\u003e(\"inheritedChannel\")\u003c/tt\u003e\n * @since 1.5\n */\n","tf":{"freq":{"atleast":1,"least":2,"servic":2,"possibl":1,"type":1,"oper":1,"request":2,"permiss":1,"socket":14,"deni":1,"returnedbi":1,"follow":1,"mani":1,"except":2,"creat":3,"runtim":1,"done":1,"describ":1,"invoc":2,"isreturn":2,"machin":2,"system":3,"entiti":3,"start":3,"program":1,"determin":1,"arriv":1,"internet":1,"otherwis":1,"virtual":2,"port":1,"stream":2,"connect":3,"allow":1,"inetd":1,"link":5,"use":1,"block":3,"kind":1,"network":4,"mode":3,"associ":1,"initi":3,"subsequ":1,"listen":1,"peer":1,"addit":1,"may":2,"futur":1,"error":1,"repres":4,"manag":1,"depend":1,"instal":1,"process":4,"datagram":4,"secur":2,"orient":4,"address":3,"exampl":2,"server":3,"daemon":1,"java":6,"manner":2,"nio":4,"method":4,"first":1,"channel":30,"bound":3,"occur":1},"maxFreq":30,"totalTerms":177},"loc":3}