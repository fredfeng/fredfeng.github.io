{"id":15014,"className":"java.nio.file.SecureDirectoryStream","methodName":"getFileAttributeView","signature":"\u003cjava.nio.file.SecureDirectoryStream: V getFileAttributeView(java.lang.Class)\u003e","javadoc":"/** \n * Returns a new file attribute view to access the file attributes of this directory. \u003cp\u003e The resulting file attribute view can be used to read or update the attributes of this (open) directory. The  {@code type} parameter specifiesthe type of the attribute view and the method returns an instance of that type if supported. Invoking this method to obtain a  {@link BasicFileAttributeView} always returns an instance of that class that isbound to this open directory. \u003cp\u003e The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream is  {@link #close closed}, then all methods to read or update attributes will throw  {@link ClosedDirectoryStreamException ClosedDirectoryStreamException}.\n * @param type the  {@code Class} object corresponding to the file attribute view\n * @return  a new file attribute view of the specified type bound tothis directory stream, or  {@code null} if the attribute viewtype is not available\n */\n","tf":{"freq":{"result":2,"stream":5,"connect":1,"directori":8,"correspond":1,"link":3,"state":1,"use":1,"object":1,"type":5,"specifi":1,"close":4,"open":2,"attribut":12,"basic":1,"file":8,"read":2,"except":2,"support":1,"intim":1,"viewtyp":1,"tothi":1,"invok":1,"alway":1,"isbound":1,"paramet":1,"avail":1,"access":1,"instanc":2,"obtain":1,"updat":2,"will":1,"specifiesth":1,"method":3,"view":8,"bound":1},"maxFreq":12,"totalTerms":89},"loc":0}