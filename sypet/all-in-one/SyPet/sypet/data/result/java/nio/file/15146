{"id":15146,"className":"java.nio.file.Files","methodName":"isHidden","signature":"\u003cjava.nio.file.Files: boolean isHidden(java.nio.file.Path)\u003e","javadoc":"/** \n * Tells whether or not a file is considered \u003cem\u003ehidden\u003c/em\u003e. The exact definition of hidden is platform or provider dependent. On UNIX for example a file is considered to be hidden if its name begins with a period character (\u0027.\u0027). On Windows a file is considered hidden if it isn\u0027t a directory and the DOS  {@link DosFileAttributes#isHidden hidden}attribute is set. \u003cp\u003e Depending on the implementation this method may require to access the file system to determine if the file is considered hidden.\n * @param path the path to the file to test\n * @return  {@code true} if the file is considered hidden\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, the  {@link SecurityManager#checkRead(String) checkRead}method is invoked to check read access to the file.\n */\n","tf":{"freq":{"test":1,"directori":1,"link":2,"consid":5,"whether":1,"dos":1,"attribut":2,"requir":1,"file":9,"name":1,"exact":1,"path":2,"read":3,"tell":1,"platform":1,"except":2,"may":1,"check":3,"error":1,"charact":1,"invok":1,"manag":2,"depend":2,"instal":1,"true":1,"period":1,"access":2,"provid":2,"begin":1,"system":1,"secur":3,"window":1,"hidden":9,"string":1,"determin":1,"definit":1,"exampl":1,"method":2,"occur":1},"maxFreq":9,"totalTerms":74},"loc":3}