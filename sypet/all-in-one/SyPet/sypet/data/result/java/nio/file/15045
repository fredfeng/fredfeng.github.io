{"id":15045,"className":"java.nio.file.WatchKey","methodName":"cancel","signature":"\u003cjava.nio.file.WatchKey: void cancel()\u003e","javadoc":"/** \n * Cancels the registration with the watch service. Upon return the watch key will be invalid. If the watch key is enqueued, waiting to be retrieved from the watch service, then it will remain in the queue until it is removed. Pending events, if any, remain pending and may be retrieved by invoking the  {@link #pollEvents pollEvents} method after the key iscancelled. \u003cp\u003e If this watch key has already been cancelled then invoking this method has no effect.  Once cancelled, a watch key remains forever invalid.\n */\n","tf":{"freq":{"queue":1,"servic":2,"link":1,"enqueu":1,"cancel":4,"wait":1,"poll":2,"invalid":2,"event":3,"key":5,"pend":2,"iscancel":1,"may":1,"watch":6,"invok":2,"remov":1,"registr":1,"forev":1,"remain":3,"effect":1,"retriev":2,"will":2,"method":2,"alreadi":1,"upon":1},"maxFreq":6,"totalTerms":49},"loc":0}