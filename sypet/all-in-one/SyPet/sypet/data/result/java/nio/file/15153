{"id":15153,"className":"java.nio.file.Files","methodName":"readAttributes","signature":"\u003cjava.nio.file.Files: java.util.Map\u003cjava.lang.String,java.lang.Object\u003e readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])\u003e","javadoc":"/** \n * Reads a set of file attributes as a bulk operation. \u003cp\u003e The  {@code attributes} parameter identifies the attributes to be readand takes the form: \u003cblockquote\u003e [\u003ci\u003eview-name\u003c/i\u003e\u003cb\u003e:\u003c/b\u003e]\u003ci\u003eattribute-list\u003c/i\u003e \u003c/blockquote\u003e where square brackets [...] delineate an optional component and the character  {@code \u0027:\u0027} stands for itself.\u003cp\u003e \u003ci\u003eview-name\u003c/i\u003e is the  {@link FileAttributeView#name name} of a {@link FileAttributeView} that identifies a set of file attributes. If notspecified then it defaults to  {@code \"basic\"}, the name of the file attribute view that identifies the basic set of file attributes common to many file systems. \u003cp\u003e The \u003ci\u003eattribute-list\u003c/i\u003e component is a comma separated list of zero or more names of attributes to read. If the list contains the value {@code \"*\"} then all attributes are read. Attributes that are not supportedare ignored and will not be present in the returned map. It is implementation specific if all attributes are read as an atomic operation with respect to other file system operations. \u003cp\u003e The following examples demonstrate possible values for the  {@code attributes} parameter:\u003cblockquote\u003e \u003ctable border\u003d\"0\"\u003e \u003ctr\u003e \u003ctd\u003e  {@code \"*\"} \u003c/td\u003e\u003ctd\u003e Read all  {@link BasicFileAttributes basic-file-attributes}. \u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e  {@code \"size,lastModifiedTime,lastAccessTime\"} \u003c/td\u003e\u003ctd\u003e Reads the file size, last modified time, and last access time attributes. \u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e  {@code \"posix:*\"} \u003c/td\u003e\u003ctd\u003e Read all  {@link PosixFileAttributes POSIX-file-attributes}. \u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e  {@code \"posix:permissions,owner,size\"} \u003c/td\u003e\u003ctd\u003e Reads the POSX file permissions, owner, and file size. \u003c/td\u003e \u003c/tr\u003e \u003c/table\u003e \u003c/blockquote\u003e \u003cp\u003e The  {@code options} array may be used to indicate how symbolic linksare handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is read. If the option  {@link LinkOption#NOFOLLOW_LINKS NOFOLLOW_LINKS} is present then symbolic links are not followed.\n * @param path the path to the file\n * @param attributes the attributes to read\n * @param options options indicating how symbolic links are handled\n * @return  a map of the attributes returned; The map\u0027s keys are theattribute names, its values are the attribute values\n * @throws UnsupportedOperationException if the attribute view is not available\n * @throws IllegalArgumentException if no attributes are specified or an unrecognized attributes is specified\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, its  {@link SecurityManager#checkRead(String) checkRead}method denies read access to the file. If this method is invoked to read security sensitive attributes then the security manager may be invoke to check for additional permissions.\n */\n","tf":{"freq":{"squar":1,"atom":1,"unsupport":1,"last":4,"possibl":1,"linksar":1,"zero":1,"bracket":1,"specifi":2,"time":4,"readand":1,"basic":4,"oper":4,"file":19,"blockquot":4,"permiss":3,"border":1,"deni":1,"key":1,"option":6,"follow":3,"argument":1,"mani":1,"sensit":1,"except":4,"comma":1,"ignor":1,"symbol":5,"form":1,"charact":1,"supportedar":1,"invok":2,"avail":1,"provid":1,"size":4,"present":2,"system":2,"separ":1,"contain":1,"owner":2,"will":1,"view":6,"demonstr":1,"array":1,"common":1,"link":12,"use":1,"notspecifi":1,"identifi":3,"posix":3,"attribut":30,"indic":2,"name":7,"path":2,"map":3,"read":15,"valu":4,"addit":1,"may":2,"check":3,"error":1,"manag":3,"instal":1,"paramet":2,"list":4,"unrecogn":1,"access":3,"illeg":1,"bulk":1,"handl":2,"delin":1,"specif":1,"secur":5,"compon":2,"stand":1,"take":1,"tabl":2,"string":1,"target":1,"modifi":2,"exampl":1,"method":2,"theattribut":1,"respect":1,"occur":1},"maxFreq":30,"totalTerms":238},"loc":3}