{"id":15149,"className":"java.nio.file.Files","methodName":"getFileAttributeView","signature":"\u003cjava.nio.file.Files: V getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])\u003e","javadoc":"/** \n * Returns a file attribute view of a given type. \u003cp\u003e A file attribute view provides a read-only or updatable view of a set of file attributes. This method is intended to be used where the file attribute view defines type-safe methods to read or update the file attributes. The  {@code type} parameter is the type of the attribute viewrequired and the method returns an instance of that type if supported. The  {@link BasicFileAttributeView} type supports access to the basicattributes of a file. Invoking this method to select a file attribute view of that type will always return an instance of that class. \u003cp\u003e The  {@code options} array may be used to indicate how symbolic linksare handled by the resulting file attribute view for the case that the file is a symbolic link. By default, symbolic links are followed. If the option  {@link LinkOption#NOFOLLOW_LINKS NOFOLLOW_LINKS} is present thensymbolic links are not followed. This option is ignored by implementations that do not support symbolic links. \u003cp\u003e \u003cb\u003eUsage Example:\u003c/b\u003e Suppose we want read or set a file\u0027s ACL, if supported: \u003cpre\u003e Path path \u003d ... AclFileAttributeView view \u003d Files.getFileAttributeView(path, AclFileAttributeView.class); if (view !\u003d null) { List\u0026lt;AclEntry\u0026gt acl \u003d view.getAcl(); : } \u003c/pre\u003e\n * @param path the path to the file\n * @param type the  {@code Class} object corresponding to the file attribute view\n * @param options options indicating how symbolic links are handled\n * @return  a file attribute view of the specified type, or {@code null} ifthe attribute view type is not available\n */\n","tf":{"freq":{"linksar":1,"type":10,"specifi":1,"given":1,"basic":1,"file":19,"viewrequir":1,"option":6,"follow":2,"ignor":1,"support":4,"symbol":5,"thensymbol":1,"select":1,"invok":1,"alway":1,"avail":1,"provid":1,"instanc":2,"basicattribut":1,"present":1,"updat":2,"will":1,"view":17,"array":1,"defin":1,"result":1,"correspond":1,"link":8,"use":2,"object":1,"attribut":16,"indic":2,"path":5,"read":3,"want":1,"safe":1,"may":1,"ifth":1,"acl":5,"entri":1,"paramet":1,"suppos":1,"list":1,"access":1,"handl":2,"pre":2,"exampl":1,"method":4,"usag":1,"intend":1},"maxFreq":19,"totalTerms":148},"loc":3}