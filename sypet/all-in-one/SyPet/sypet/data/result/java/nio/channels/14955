{"id":14955,"className":"java.nio.channels.MulticastChannel","methodName":"join","signature":"\u003cjava.nio.channels.MulticastChannel: java.nio.channels.MembershipKey join(java.net.InetAddress,java.net.NetworkInterface)\u003e","javadoc":"/** \n * Joins a multicast group to begin receiving all datagrams sent to the group, returning a membership key. \u003cp\u003e If this channel is currently a member of the group on the given interface to receive all datagrams then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is not  {@link MembershipKey#sourceAddress source-specific}. \u003cp\u003e A multicast channel may join several multicast groups, including the same group on more than one interface. An implementation may impose a limit on the number of groups that may be joined at the same time.\n * @param group The multicast address to join\n * @param interf The network interface on which to join the group\n * @return  The membership key\n * @throws IllegalArgumentException If the group parameter is not a  {@link InetAddress#isMulticastAddress multicast} address, or the group parameter is an address typethat is not supported by this channel\n * @throws IllegalStateException If the channel already has source-specific membership of the group on the interface\n * @throws UnsupportedOperationException If the channel\u0027s socket is not an Internet Protocol socket\n * @throws ClosedChannelException If this channel is closed\n * @throws IOException If an I/O error occurs\n * @throws SecurityException If a security manager is set, and its {@link SecurityManager#checkMulticast(InetAddress) checkMulticast}method denies access to the multiast group\n */\n","tf":{"freq":{"unsupport":1,"multicast":8,"close":2,"sent":1,"time":1,"given":1,"oper":1,"socket":2,"deni":1,"key":6,"limit":1,"argument":1,"except":6,"support":1,"number":1,"inet":2,"sourc":3,"internet":1,"otherwis":1,"result":2,"membership":8,"one":1,"link":3,"state":1,"network":1,"typethat":1,"current":1,"member":1,"interf":1,"may":3,"protocol":1,"includ":1,"check":2,"error":1,"repres":1,"manag":2,"paramet":2,"receiv":2,"join":7,"access":1,"illeg":2,"sever":1,"begin":1,"impos":1,"datagram":2,"multiast":1,"specif":2,"secur":3,"address":7,"method":1,"alreadi":1,"group":13,"channel":8,"occur":1},"maxFreq":13,"totalTerms":128},"loc":0}