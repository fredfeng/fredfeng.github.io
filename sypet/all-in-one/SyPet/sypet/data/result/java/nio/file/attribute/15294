{"id":15294,"className":"java.nio.file.attribute.UserPrincipalLookupService","methodName":"lookupPrincipalByGroupName","signature":"\u003cjava.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.GroupPrincipal lookupPrincipalByGroupName(java.lang.String)\u003e","javadoc":"/** \n * Lookup a group principal by group name. \u003cp\u003e Where an implementation does not support any notion of group then this method always throws  {@link UserPrincipalNotFoundException}. Where the namespace for user accounts and groups is the same, then this method is identical to invoking  {@link #lookupPrincipalByName lookupPrincipalByName}.\n * @param group the string representation of the group to lookup\n * @return  a group principal\n * @throws UserPrincipalNotFoundException the principal does not exist or is not a group\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, it checks  {@link RuntimePermission}\u003ctt\u003e(\"lookupUserInformation\")\u003c/tt\u003e\n */\n","tf":{"freq":{"link":3,"lookup":6,"namespac":1,"ident":1,"name":4,"permiss":1,"exist":1,"except":4,"support":1,"check":1,"notion":1,"error":1,"alway":1,"invok":1,"manag":1,"runtim":1,"instal":1,"provid":1,"represent":1,"inform":1,"secur":2,"string":1,"account":1,"method":2,"group":9,"user":4,"found":2,"princip":8,"occur":1},"maxFreq":9,"totalTerms":63},"loc":0}