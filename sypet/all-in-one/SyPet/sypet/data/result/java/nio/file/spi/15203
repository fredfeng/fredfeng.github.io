{"id":15203,"className":"java.nio.file.spi.FileSystemProvider","methodName":"readSymbolicLink","signature":"\u003cjava.nio.file.spi.FileSystemProvider: java.nio.file.Path readSymbolicLink(java.nio.file.Path)\u003e","javadoc":"/** \n * Reads the target of a symbolic link. This method works in exactly the manner specified by the  {@link Files#readSymbolicLink} method.\u003cp\u003e The default implementation of this method throws  {@code UnsupportedOperationException}.\n * @param link the path to the symbolic link\n * @throws UnsupportedOperationException if the implementation does not support symbolic links\n * @throws NotLinkException if the target could otherwise not be read because the file is not a symbolic link \u003ci\u003e(optional specific exception)\u003c/i\u003e\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, it checks that  {@code FilePermission} has beengranted with the \" {@code readlink}\" action to read the link.\n */\n","tf":{"freq":{"otherwis":1,"unsupport":2,"link":10,"specifi":1,"oper":2,"file":3,"exact":1,"action":1,"permiss":1,"path":1,"read":5,"option":1,"work":1,"except":6,"support":1,"check":1,"symbol":6,"error":1,"manag":1,"instal":1,"beengrant":1,"provid":1,"specif":1,"secur":2,"target":2,"manner":1,"method":3,"readlink":1,"occur":1},"maxFreq":10,"totalTerms":60},"loc":3}