{"id":14958,"className":"java.nio.channels.ScatteringByteChannel","methodName":"read","signature":"\u003cjava.nio.channels.ScatteringByteChannel: long read(java.nio.ByteBuffer[])\u003e","javadoc":"/** \n * Reads a sequence of bytes from this channel into the given buffers. \u003cp\u003e An invocation of this method of the form \u003ctt\u003ec.read(dsts)\u003c/tt\u003e behaves in exactly the same manner as the invocation \u003cblockquote\u003e\u003cpre\u003e c.read(dsts, 0, dsts.length);\u003c/pre\u003e\u003c/blockquote\u003e\n * @param dsts The buffers into which bytes are to be transferred\n * @return The number of bytes read, possibly zero,or \u003ctt\u003e-1\u003c/tt\u003e if the channel has reached end-of-stream\n * @throws NonReadableChannelException If this channel was not opened for reading\n * @throws ClosedChannelException If this channel is closed\n * @throws AsynchronousCloseException If another thread closes this channel while the read operation is in progress\n * @throws ClosedByInterruptException If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status\n * @throws IOException If some other I/O error occurs\n */\n","tf":{"freq":{"progress":2,"asynchron":1,"stream":1,"behav":1,"dsts":4,"readabl":1,"therebi":1,"possibl":1,"anoth":2,"zero":1,"close":6,"buffer":2,"open":1,"reach":1,"given":1,"oper":2,"sequenc":1,"blockquot":2,"thread":4,"exact":1,"current":2,"length":1,"read":8,"end":1,"except":5,"transfer":1,"error":1,"form":1,"status":1,"number":1,"interrupt":3,"invoc":2,"non":1,"pre":2,"manner":1,"method":1,"channel":8,"occur":1},"maxFreq":8,"totalTerms":77},"loc":0}