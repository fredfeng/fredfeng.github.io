{"id":15040,"className":"java.nio.file.FileSystem","methodName":"getUserPrincipalLookupService","signature":"\u003cjava.nio.file.FileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()\u003e","javadoc":"/** \n * Returns the  {@code UserPrincipalLookupService} for this file system\u003ci\u003e(optional operation)\u003c/i\u003e. The resulting lookup service may be used to lookup user or group names. \u003cp\u003e \u003cb\u003eUsage Example:\u003c/b\u003e Suppose we want to make \"joe\" the owner of a file: \u003cpre\u003e UserPrincipalLookupService lookupService \u003d FileSystems.getDefault().getUserPrincipalLookupService(); Files.setOwner(path, lookupService.lookupPrincipalByName(\"joe\")); \u003c/pre\u003e\n * @throws UnsupportedOperationException If this  {@code FileSystem} does not does have a lookup service\n * @return  The {@code UserPrincipalLookupService} for this file system\n */\n","tf":{"freq":{"result":1,"except":1,"unsupport":1,"may":1,"servic":9,"suppos":1,"use":1,"lookup":11,"system":4,"joe":2,"oper":2,"pre":2,"file":6,"name":2,"path":1,"owner":2,"exampl":1,"usag":1,"group":1,"make":1,"user":6,"want":1,"option":1,"princip":6},"maxFreq":11,"totalTerms":65},"loc":0}