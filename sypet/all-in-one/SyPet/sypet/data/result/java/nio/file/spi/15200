{"id":15200,"className":"java.nio.file.spi.FileSystemProvider","methodName":"createLink","signature":"\u003cjava.nio.file.spi.FileSystemProvider: void createLink(java.nio.file.Path,java.nio.file.Path)\u003e","javadoc":"/** \n * Creates a new link (directory entry) for an existing file. This method works in exactly the manner specified by the  {@link Files#createLink}method. \u003cp\u003e The default implementation of this method throws  {@code UnsupportedOperationException}.\n * @param link the link (directory entry) to create\n * @param existing a path to an existing file\n * @throws UnsupportedOperationException if the implementation does not support adding an existing file to a directory\n * @throws FileAlreadyExistsException if the entry could not otherwise be created because a file of that name already exists \u003ci\u003e(optional specific exception)\u003c/i\u003e\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, it denies  {@link LinkPermission}\u003ctt\u003e(\"hard\")\u003c/tt\u003e or its  {@link SecurityManager#checkWrite(String) checkWrite}method denies write access to either the  link or the existing file.\n */\n","tf":{"freq":{"otherwis":1,"unsupport":2,"directori":3,"link":10,"specifi":1,"oper":2,"file":7,"exact":1,"name":1,"write":3,"permiss":1,"path":1,"hard":1,"exist":7,"deni":2,"option":1,"work":1,"except":6,"support":1,"check":2,"error":1,"creat":5,"manag":2,"entri":3,"instal":1,"access":1,"provid":1,"either":1,"specif":1,"secur":3,"string":1,"ad":1,"manner":1,"method":4,"alreadi":2,"occur":1},"maxFreq":10,"totalTerms":83},"loc":3}