{"id":14908,"className":"java.nio.channels.FileChannel","methodName":"position","signature":"\u003cjava.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)\u003e","javadoc":"/** \n * Sets this channel\u0027s file position. \u003cp\u003e Setting the position to a value that is greater than the file\u0027s current size is legal but does not change the size of the file.  A later attempt to read bytes at such a position will immediately return an end-of-file indication.  A later attempt to write bytes at such a position will cause the file to be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.  \u003c/p\u003e\n * @param newPosition The new position, a non-negative integer counting the number of bytes from the beginning of the file\n * @return  This file channel\n * @throws ClosedChannelException If this channel is closed\n * @throws IllegalArgumentException If the new position is negative\n * @throws IOException If some other I/O error occurs\n */\n","tf":{"freq":{"attempt":2,"legal":1,"unspecifi":1,"greater":1,"count":1,"close":2,"accommod":1,"indic":1,"file":8,"written":1,"current":1,"write":1,"read":1,"valu":2,"immedi":1,"end":2,"argument":1,"except":3,"error":1,"previous":1,"later":2,"number":1,"illeg":1,"begin":1,"non":1,"size":2,"newli":1,"caus":1,"grown":1,"will":2,"negat":2,"chang":1,"integ":1,"channel":4,"posit":8,"occur":1},"maxFreq":8,"totalTerms":63},"loc":0}