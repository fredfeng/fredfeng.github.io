{"id":14929,"className":"java.nio.channels.Selector","methodName":"select","signature":"\u003cjava.nio.channels.Selector: int select(long)\u003e","javadoc":"/** \n * Selects a set of keys whose corresponding channels are ready for I/O operations. \u003cp\u003e This method performs a blocking \u003ca href\u003d\"#selop\"\u003eselection operation\u003c/a\u003e.  It returns only after at least one channel is selected, this selector\u0027s  {@link #wakeup wakeup} method is invoked, the currentthread is interrupted, or the given timeout period expires, whichever comes first. \u003cp\u003e This method does not offer real-time guarantees: It schedules the timeout as if by invoking the  {@link Object#wait(long)} method. \u003c/p\u003e\n * @param timeout  If positive, block for up to \u003ctt\u003etimeout\u003c/tt\u003emilliseconds, more or less, while waiting for a channel to become ready; if zero, block indefinitely; must not be negative\n * @return  The number of keys, possibly zero,whose ready-operation sets were updated\n * @throws IOException If an I/O error occurs\n * @throws ClosedSelectorException If this selector is closed\n * @throws IllegalArgumentException If the value of the timeout argument is negative\n */\n","tf":{"freq":{"selector":3,"least":1,"possibl":1,"perform":1,"wait":2,"zero":2,"must":1,"close":2,"expir":1,"whichev":1,"time":1,"becom":1,"given":1,"oper":3,"wakeup":2,"href":1,"key":2,"argument":2,"except":3,"whose":2,"invok":2,"select":4,"number":1,"period":1,"updat":1,"negat":2,"posit":1,"readi":3,"correspond":1,"link":2,"one":1,"block":3,"schedul":1,"object":1,"selop":1,"currentthread":1,"real":1,"millisecond":1,"valu":1,"less":1,"error":1,"guarante":1,"come":1,"offer":1,"illeg":1,"interrupt":1,"method":4,"indefinit":1,"channel":3,"first":1,"timeout":5,"occur":1},"maxFreq":5,"totalTerms":84},"loc":0}