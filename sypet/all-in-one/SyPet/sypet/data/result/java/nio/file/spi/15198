{"id":15198,"className":"java.nio.file.spi.FileSystemProvider","methodName":"createDirectory","signature":"\u003cjava.nio.file.spi.FileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute\u003c?\u003e[])\u003e","javadoc":"/** \n * Creates a new directory. This method works in exactly the manner specified by the  {@link Files#createDirectory} method.\n * @param dir the directory to create\n * @param attrs an optional list of file attributes to set atomically when creating the directory\n * @throws UnsupportedOperationException if the array contains an attribute that cannot be set atomically when creating the directory\n * @throws FileAlreadyExistsException if a directory could not otherwise be created because a file of that name already exists \u003ci\u003e(optional specific exception)\u003c/i\u003e\n * @throws IOException if an I/O error occurs or the parent directory does not exist\n * @throws SecurityException In the case of the default provider, and a security manager is installed, the  {@link SecurityManager#checkWrite(String) checkWrite}method is invoked to check write access to the new directory.\n */\n","tf":{"freq":{"otherwis":1,"atom":2,"unsupport":1,"directori":9,"link":2,"specifi":1,"attribut":2,"dir":1,"oper":1,"file":4,"exact":1,"name":1,"write":3,"exist":3,"option":2,"work":1,"except":5,"check":3,"error":1,"creat":7,"invok":1,"manag":2,"instal":1,"parent":1,"attr":1,"list":1,"access":1,"provid":1,"specif":1,"secur":3,"string":1,"contain":1,"manner":1,"method":3,"alreadi":2,"occur":1,"array":1},"maxFreq":9,"totalTerms":74},"loc":0}