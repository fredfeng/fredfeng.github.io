{"id":15145,"className":"java.nio.file.Files","methodName":"isSameFile","signature":"\u003cjava.nio.file.Files: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)\u003e","javadoc":"/** \n * Tests if two paths locate the same file. \u003cp\u003e If both  {@code Path} objects are {@link Path#equals(Object) equal}then this method returns  {@code true} without checking if the file exists.If the two  {@code Path} objects are associated with different providersthen this method returns  {@code false}. Otherwise, this method checks if both  {@code Path} objects locate the same file, and depending on theimplementation, may require to open or access both files. \u003cp\u003e If the file system and files remain static, then this method implements an equivalence relation for non-null  {@code Paths}. \u003cul\u003e \u003cli\u003eIt is \u003ci\u003ereflexive\u003c/i\u003e: for  {@code Path} {@code f}, {@code isSameFile(f,f)} should return {@code true}. \u003cli\u003eIt is \u003ci\u003esymmetric\u003c/i\u003e: for two  {@code Paths} {@code f} and {@code g}, {@code isSameFile(f,g)} will equal {@code isSameFile(g,f)}. \u003cli\u003eIt is \u003ci\u003etransitive\u003c/i\u003e: for three  {@code Paths}{@code f},  {@code g}, and  {@code h}, if  {@code isSameFile(f,g)} returns{@code true} and {@code isSameFile(g,h)} returns {@code true}, then {@code isSameFile(g,h)} will return return {@code true}. \u003c/ul\u003e\n * @param path one path to the file\n * @param path2 the other path\n * @return  {@code true} if, and only if, the two paths locate the same file\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, the  {@link SecurityManager#checkRead(String) checkRead}method is invoked to check read access to both files.\n * @see java.nio.file.attribute.BasicFileAttributes#fileKey\n */\n","tf":{"freq":{"fals":1,"test":1,"transit":1,"open":1,"requir":1,"basic":1,"equival":1,"file":19,"relat":1,"three":1,"key":1,"except":2,"invok":1,"without":1,"provid":1,"non":1,"system":1,"will":2,"otherwis":1,"link":2,"one":1,"symmetr":1,"object":4,"attribut":2,"associ":1,"path":14,"read":3,"exist":1,"may":1,"locat":3,"check":5,"error":1,"theimplement":1,"depend":1,"manag":2,"instal":1,"true":6,"equal":3,"access":2,"providersthen":1,"differ":1,"two":4,"secur":3,"remain":1,"string":1,"method":5,"java":1,"nio":1,"reflex":1,"occur":1},"maxFreq":19,"totalTerms":114},"loc":3}