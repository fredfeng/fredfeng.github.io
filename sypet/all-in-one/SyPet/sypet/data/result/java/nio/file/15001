{"id":15001,"className":"java.nio.file.FileSystems","methodName":"newFileSystem","signature":"\u003cjava.nio.file.FileSystems: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map,java.lang.ClassLoader)\u003e","javadoc":"/** \n * Constructs a new file system that is identified by a  {@link URI}\u003cp\u003e This method first attempts to locate an installed provider in exactly the same manner as the  {@link #newFileSystem(URI,Map) newFileSystem(URI,Map)}method. If none of the installed providers support the URI scheme then an attempt is made to locate the provider using the given class loader. If a provider supporting the URI scheme is located then its  {@link FileSystemProvider#newFileSystem(URI,Map) newFileSystem(URI,Map)} isinvoked to construct the new file system.\n * @param uri the URI identifying the file system\n * @param env a map of provider specific properties to configure the file system; may be empty\n * @param loader the class loader to locate the provider or  {@code null} to onlyattempt to locate an installed provider\n * @return  a new file system\n * @throws IllegalArgumentException if the pre-conditions for the  {@code uri} parameter are not met,or the  {@code env} parameter does not contain properties requiredby the provider, or a property value is invalid\n * @throws FileSystemAlreadyExistsException if the URI scheme identifies an installed provider and the file system has already been created\n * @throws ProviderNotFoundException if a provider supporting the URI scheme is not found\n * @throws ServiceConfigurationError when an error occurs while loading a service provider\n * @throws IOException an I/O error occurs creating the file system\n * @throws SecurityException if a security manager is installed and it denies an unspecified permission required by the file system provider implementation\n */\n","tf":{"freq":{"onlyattempt":1,"servic":2,"requir":1,"given":1,"scheme":4,"invalid":1,"file":15,"exact":1,"permiss":1,"none":1,"deni":1,"argument":1,"except":5,"support":3,"creat":2,"loader":3,"uri":2,"provid":14,"system":15,"configur":2,"contain":1,"load":1,"properti":3,"attempt":2,"unspecifi":1,"link":3,"made":1,"use":1,"identifi":3,"met":1,"map":5,"valu":1,"requiredbi":1,"exist":1,"condit":1,"locat":5,"may":1,"error":3,"manag":1,"isinvok":1,"instal":5,"paramet":2,"env":2,"illeg":1,"empti":1,"specif":1,"secur":2,"pre":1,"manner":1,"method":2,"alreadi":2,"construct":2,"first":1,"found":2,"occur":2},"maxFreq":15,"totalTerms":140},"loc":23}