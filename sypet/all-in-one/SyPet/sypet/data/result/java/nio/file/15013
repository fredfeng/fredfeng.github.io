{"id":15013,"className":"java.nio.file.SecureDirectoryStream","methodName":"move","signature":"\u003cjava.nio.file.SecureDirectoryStream: void move(T,java.nio.file.SecureDirectoryStream,T)\u003e","javadoc":"/** \n * Move a file from this directory to another directory. \u003cp\u003e This method works in a similar manner to  {@link Files#move move}method when the  {@link StandardCopyOption#ATOMIC_MOVE ATOMIC_MOVE} optionis specified. That is, this method moves a file as an atomic file system operation. If the  {@code srcpath} parameter is an {@link Path#isAbsolute absolute} path then it locates the source file. If the parameter is arelative path then it is located relative to this open directory. If the  {@code targetpath} parameter is absolute then it locates the targetfile (the  {@code targetdir} parameter is ignored). If the parameter isa relative path it is located relative to the open directory identified by the  {@code targetdir} parameter. In all cases, if the target fileexists then it is implementation specific if it is replaced or this method fails.\n * @param srcpath the name of the file to move\n * @param targetdir the destination directory\n * @param targetpath the name to give the file in the destination directory\n * @throws ClosedDirectoryStreamException if this or the target directory stream is closed\n * @throws FileAlreadyExistsException if the file already exists in the target directory and cannot be replaced \u003ci\u003e(optional specific exception)\u003c/i\u003e\n * @throws AtomicMoveNotSupportedException if the file cannot be moved as an atomic file system operation\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, the  {@link SecurityManager#checkWrite(String) checkWrite}method is invoked to check write access to both the source and target file.\n */\n","tf":{"freq":{"atom":3,"copi":1,"specifi":1,"close":2,"open":2,"fail":1,"oper":2,"file":12,"targetpath":2,"relat":3,"move":8,"option":2,"work":1,"ignor":1,"except":6,"support":1,"invok":1,"targetdir":3,"absolut":3,"srcpath":2,"provid":1,"fileexist":1,"system":2,"sourc":2,"stream":2,"directori":9,"targetfil":1,"give":1,"arel":1,"link":4,"identifi":1,"anoth":1,"optioni":1,"name":2,"write":3,"path":4,"isa":1,"exist":2,"similar":1,"locat":4,"check":3,"standard":1,"error":1,"manag":2,"instal":1,"paramet":6,"access":1,"specif":2,"secur":3,"string":1,"replac":2,"target":4,"method":5,"manner":1,"alreadi":2,"destin":2,"occur":1},"maxFreq":12,"totalTerms":139},"loc":0}