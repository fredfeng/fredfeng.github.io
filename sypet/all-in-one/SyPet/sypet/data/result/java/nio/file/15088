{"id":15088,"className":"java.nio.file.Path","methodName":"resolve","signature":"\u003cjava.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)\u003e","javadoc":"/** \n * Resolve the given path against this path. \u003cp\u003e If the  {@code other} parameter is an {@link #isAbsolute() absolute}path then this method trivially returns  {@code other}. If  {@code other}is an \u003ci\u003eempty path\u003c/i\u003e then this method trivially returns this path. Otherwise this method considers this path to be a directory and resolves the given path against this path. In the simplest case, the given path does not have a  {@link #getRoot root} component, in which case this method\u003cem\u003ejoins\u003c/em\u003e the given path to this path and returns a resulting path that  {@link #endsWith ends} with the given path. Where the given path hasa root component then resolution is highly implementation dependent and therefore unspecified.\n * @param other the path to resolve against this path\n * @return  the resulting path\n * @see #relativize\n */\n","tf":{"freq":{"otherwis":1,"unspecifi":1,"result":2,"root":3,"directori":1,"depend":1,"link":3,"trivial":2,"simplest":1,"paramet":1,"resolv":4,"therefor":1,"join":1,"absolut":2,"hasa":1,"consid":1,"empti":1,"resolut":1,"compon":2,"given":6,"relativ":1,"path":17,"method":4,"high":1,"end":2},"maxFreq":17,"totalTerms":61},"loc":0}