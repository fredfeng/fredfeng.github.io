{"id":15161,"className":"java.nio.file.Files","methodName":"getLastModifiedTime","signature":"\u003cjava.nio.file.Files: java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption[])\u003e","javadoc":"/** \n * Returns a file\u0027s last modified time. \u003cp\u003e The  {@code options} array may be used to indicate how symbolic linksare handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is read. If the option  {@link LinkOption#NOFOLLOW_LINKS NOFOLLOW_LINKS} is present then symbolic links are not followed.\n * @param path the path to the file\n * @param options options indicating how symbolic links are handled\n * @return  a {@code FileTime} representing the time the file was lastmodified, or an implementation specific default when a time stamp to indicate the time of last modification is not supported by the file system\n * @throws IOException if an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, its  {@link SecurityManager#checkRead(String) checkRead}method denies read access to the file.\n * @see BasicFileAttributes#lastModifiedTime\n */\n","tf":{"freq":{"last":4,"link":8,"use":1,"linksar":1,"time":7,"attribut":2,"indic":3,"basic":1,"file":9,"path":2,"read":4,"deni":1,"option":5,"follow":2,"stamp":1,"except":2,"may":1,"support":1,"check":2,"error":1,"symbol":5,"repres":1,"manag":2,"instal":1,"access":1,"provid":1,"handl":2,"present":1,"lastmodifi":1,"system":1,"specif":1,"secur":3,"string":1,"modifi":3,"target":1,"method":1,"modif":1,"occur":1,"array":1},"maxFreq":9,"totalTerms":87},"loc":3}