{"id":15213,"className":"java.nio.file.spi.FileSystemProvider","methodName":"setAttribute","signature":"\u003cjava.nio.file.spi.FileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])\u003e","javadoc":"/** \n * Sets the value of a file attribute. This method works in exactly the manner specified by the  {@link Files#setAttribute} method.\n * @param path the path to the file\n * @param attribute the attribute to set\n * @param value the attribute value\n * @param options options indicating how symbolic links are handled\n * @throws UnsupportedOperationException if the attribute view is not available\n * @throws IllegalArgumentException if the attribute name is not specified, or is not recognized, or the attribute value is of the correct type but has an inappropriate value\n * @throws ClassCastException If the attribute value is not of the expected type or is a collection containing elements that are not of the expected type\n * @throws IOException If an I/O error occurs\n * @throws SecurityException In the case of the default provider, and a security manager is installed, its  {@link SecurityManager#checkWrite(String) checkWrite}method denies write access to the file. If this method is invoked to set security sensitive attributes then the security manager may be invoked to check for additional permissions.\n */\n","tf":{"freq":{"unsupport":1,"inappropri":1,"link":3,"type":3,"specifi":2,"expect":2,"attribut":11,"indic":1,"correct":1,"oper":1,"file":4,"exact":1,"name":1,"permiss":1,"write":3,"path":2,"valu":6,"recogn":1,"deni":1,"option":2,"work":1,"argument":1,"addit":1,"element":1,"may":1,"sensit":1,"except":5,"check":3,"error":1,"symbol":1,"invok":2,"manag":3,"instal":1,"avail":1,"access":1,"provid":1,"illeg":1,"handl":1,"secur":5,"cast":1,"string":1,"contain":1,"manner":1,"method":4,"view":1,"occur":1,"collect":1},"maxFreq":11,"totalTerms":91},"loc":0}