{"id":14839,"className":"java.nio.channels.AsynchronousFileChannel","methodName":"open","signature":"\u003cjava.nio.channels.AsynchronousFileChannel: java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])\u003e","javadoc":"/** \n * Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file. \u003cp\u003e An invocation of this method behaves in exactly the same way as the invocation \u003cpre\u003e ch. {@link #open(Path,Set,ExecutorService,FileAttribute[]) open}(file, opts, null, new FileAttribute\u0026lt;?\u0026gt;[0]); \u003c/pre\u003e where  {@code opts} is a {@code Set} containing the options specified tothis method. \u003cp\u003e The resulting channel is associated with default thread pool to which tasks are submitted to handle I/O events and dispatch to completion handlers that consume the result of asynchronous operations performed on the resulting channel.\n * @param file The path of the file to open or create\n * @param options Options specifying how the file is opened\n * @return  A new asynchronous file channel\n * @throws IllegalArgumentException If the set contains an invalid combination of options\n * @throws UnsupportedOperationException If the  {@code file} is associated with a provider that does notsupport creating file channels, or an unsupported open option is specified\n * @throws IOException If an I/O error occurs\n * @throws SecurityException If a security manager is installed and it denies an unspecified permission required by the implementation. In the case of the default provider, the  {@link SecurityManager#checkRead(String)} method is invoked to checkread access if the file is opened for reading. The  {@link SecurityManager#checkWrite(String)} method is invoked to checkwrite access if the file is opened for writing\n */\n","tf":{"freq":{"unsupport":2,"behav":1,"servic":1,"perform":1,"specifi":3,"open":9,"requir":1,"invalid":1,"oper":2,"file":14,"event":1,"exact":1,"thread":1,"permiss":1,"combin":1,"deni":1,"option":5,"opt":2,"argument":1,"except":4,"submit":1,"tothi":1,"creat":3,"invok":2,"provid":2,"invoc":2,"contain":2,"unspecifi":1,"asynchron":3,"result":3,"link":3,"way":1,"consum":1,"checkwrit":1,"attribut":2,"associ":2,"pool":1,"path":2,"write":3,"read":3,"dispatch":1,"complet":1,"check":2,"error":1,"manag":3,"task":1,"instal":1,"executor":1,"checkread":1,"access":3,"illeg":1,"handl":1,"notsupport":1,"secur":4,"pre":2,"string":2,"method":4,"channel":5,"handler":1,"occur":1},"maxFreq":14,"totalTerms":129},"loc":5}