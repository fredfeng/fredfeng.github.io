{"id":14812,"className":"java.nio.channels.AsynchronousServerSocketChannel","methodName":"open","signature":"\u003cjava.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.AsynchronousServerSocketChannel open(java.nio.channels.AsynchronousChannelGroup)\u003e","javadoc":"/** \n * Opens an asynchronous server-socket channel. \u003cp\u003e The new channel is created by invoking the  {@link java.nio.channels.spi.AsynchronousChannelProvider#openAsynchronousServerSocketChannel openAsynchronousServerSocketChannel} method on the {@link java.nio.channels.spi.AsynchronousChannelProvider} object that createdthe given group. If the group parameter is \u003ctt\u003enull\u003c/tt\u003e then the resulting channel is created by the system-wide default provider, and bound to the \u003cem\u003edefault group\u003c/em\u003e.\n * @param group The group to which the newly constructed channel should be bound, or \u003ctt\u003enull\u003c/tt\u003e for the default group\n * @return  A new asynchronous server socket channel\n * @throws ShutdownChannelGroupException If the channel group is shutdown\n * @throws IOException If an I/O error occurs\n */\n","tf":{"freq":{"asynchron":6,"result":1,"link":2,"object":1,"open":4,"given":1,"spi":2,"socket":4,"shutdown":2,"except":2,"error":1,"creat":2,"invok":1,"paramet":1,"createdth":1,"wide":1,"provid":3,"newli":1,"system":1,"nio":2,"java":2,"server":4,"method":1,"construct":1,"group":8,"channel":13,"bound":2,"occur":1},"maxFreq":13,"totalTerms":71},"loc":5}