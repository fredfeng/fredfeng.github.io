{"id":15022,"className":"java.nio.file.WatchService","methodName":"poll","signature":"\u003cjava.nio.file.WatchService: java.nio.file.WatchKey poll(long,java.util.concurrent.TimeUnit)\u003e","javadoc":"/** \n * Retrieves and removes the next watch key, waiting if necessary up to the specified wait time if none are yet present.\n * @param timeout how to wait before giving up, in units of unit\n * @param unit a  {@code TimeUnit} determining how to interpret the timeoutparameter\n * @return  the next watch key, or {@code null}\n * @throws ClosedWatchServiceException if this watch service is closed, or it is closed while waiting for the next key\n * @throws InterruptedException if interrupted while waiting\n */\n","tf":{"freq":{"except":2,"give":1,"watch":4,"servic":2,"timeoutparamet":1,"next":3,"interpret":1,"remov":1,"wait":5,"necessari":1,"interrupt":2,"close":3,"specifi":1,"unit":4,"present":1,"time":2,"poll":1,"retriev":1,"determin":1,"none":1,"timeout":1,"key":3,"yet":1},"maxFreq":5,"totalTerms":43},"loc":0}