{"id":15086,"className":"java.nio.file.Path","methodName":"endsWith","signature":"\u003cjava.nio.file.Path: boolean endsWith(java.lang.String)\u003e","javadoc":"/** \n * Tests if this path ends with a  {@code Path}, constructed by converting the given path string, in exactly the manner specified by the  {@link #endsWith(Path) endsWith(Path)} method. On UNIX for example, the path\" {@code foo/bar}\" ends with \" {@code foo/bar}\" and \" {@code bar}\". It does not end with \" {@code r}\" or \" {@code /bar}\". Note that trailing separators are not taken into account, and so invoking this method on the  {@code Path}\" {@code foo/bar}\" with the  {@code String} \"{@code bar/}\" returns {@code true}.\n * @param other the given path string\n * @return  {@code true} if this path starts with the given path; otherwise{@code false}\n * @throws InvalidPathException If the path string cannot be converted to a Path.\n */\n","tf":{"freq":{"fals":1,"otherwis":1,"test":1,"link":1,"convert":2,"foo":3,"specifi":1,"invalid":1,"given":3,"exact":1,"trail":1,"path":13,"taken":1,"end":6,"note":1,"except":1,"invok":1,"true":2,"separ":1,"start":1,"string":4,"exampl":1,"account":1,"method":2,"manner":1,"construct":1,"bar":6},"maxFreq":13,"totalTerms":59},"loc":0}