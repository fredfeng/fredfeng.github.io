{"id":14845,"className":"java.nio.channels.AsynchronousFileChannel","methodName":"lock","signature":"\u003cjava.nio.channels.AsynchronousFileChannel: java.util.concurrent.Future\u003cjava.nio.channels.FileLock\u003e lock(long,long,boolean)\u003e","javadoc":"/** \n * Acquires a lock on the given region of this channel\u0027s file. \u003cp\u003e This method initiates an operation to acquire a lock on the given region of this channel\u0027s file.  The method behaves in exactly the same manner as the  {@link #lock(long,long,boolean,Object,CompletionHandler)}method except that instead of specifying a completion handler, this method returns a  {@code Future} representing the pending result. The{@code Future}\u0027s  {@link Future#get() get} method returns the {@link FileLock} on successful completion.\n * @param position The position at which the locked region is to start; must be non-negative\n * @param size The size of the locked region; must be non-negative, and the sum {@code position}\u0026nbsp;+\u0026nbsp; {@code size} must be non-negative\n * @param shared {@code true} to request a shared lock, in which case thischannel must be open for reading (and possibly writing); {@code false} to request an exclusive lock, in which case thischannel must be open for writing (and possibly reading)\n * @return  a {@code Future} object representing the pending result\n * @throws OverlappingFileLockException If a lock is already held by this Java virtual machine, or there is already a pending attempt to lock a region\n * @throws IllegalArgumentException If the preconditions on the parameters do not hold\n * @throws NonReadableChannelException If  {@code shared} is true but this channel was not opened for reading\n * @throws NonWritableChannelException If  {@code shared} is false but this channel was not opened for writing\n */\n","tf":{"freq":{"acquir":2,"fals":2,"behav":1,"precondit":1,"possibl":2,"must":5,"specifi":1,"open":4,"given":2,"oper":1,"file":4,"exact":1,"request":2,"nbsp":2,"argument":1,"except":5,"overlap":1,"hold":1,"writabl":1,"non":5,"size":3,"machin":1,"start":1,"negat":3,"posit":3,"attempt":1,"region":5,"virtual":1,"result":2,"readabl":1,"link":3,"sum":1,"object":2,"share":4,"write":3,"read":3,"initi":1,"exclus":1,"pend":3,"complet":3,"held":1,"futur":4,"repres":2,"paramet":1,"lock":12,"true":2,"illeg":1,"instead":1,"method":5,"manner":1,"alreadi":2,"java":1,"thischannel":2,"success":1,"channel":6,"handler":2},"maxFreq":12,"totalTerms":133},"loc":0}