{"id":14779,"className":"java.nio.channels.SelectableChannel","methodName":"configureBlocking","signature":"\u003cjava.nio.channels.SelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)\u003e","javadoc":"/** \n * Adjusts this channel\u0027s blocking mode. \u003cp\u003e If this channel is registered with one or more selectors then an attempt to place it into blocking mode will cause an  {@link IllegalBlockingModeException} to be thrown.\u003cp\u003e This method may be invoked at any time.  The new blocking mode will only affect I/O operations that are initiated after this method returns. For some implementations this may require blocking until all pending I/O operations are complete. \u003cp\u003e If this method is invoked while another invocation of this method or of the  {@link #register(Selector,int) register} method is in progressthen it will first block until the other operation is complete. \u003c/p\u003e\n * @param block  If \u003ctt\u003etrue\u003c/tt\u003e then this channel will be placed inblocking mode; if \u003ctt\u003efalse\u003c/tt\u003e then it will be placed non-blocking mode\n * @return  This selectable channel\n * @throws ClosedChannelException If this channel is closed\n * @throws IllegalBlockingModeException If \u003ctt\u003eblock\u003c/tt\u003e is \u003ctt\u003etrue\u003c/tt\u003e and this channel is registered with one or more selectors\n * @throws IOException If an I/O error occurs\n */\n","tf":{"freq":{"fals":1,"attempt":1,"selector":3,"one":2,"link":2,"block":11,"anoth":1,"affect":1,"close":2,"mode":7,"time":1,"requir":1,"inblock":1,"oper":3,"adjust":1,"regist":4,"initi":1,"place":3,"complet":2,"pend":1,"except":4,"thrown":1,"may":2,"error":1,"select":1,"invok":2,"true":2,"illeg":2,"invoc":1,"non":1,"configur":1,"caus":1,"will":5,"progressthen":1,"method":5,"first":1,"channel":7,"occur":1},"maxFreq":11,"totalTerms":88},"loc":0}