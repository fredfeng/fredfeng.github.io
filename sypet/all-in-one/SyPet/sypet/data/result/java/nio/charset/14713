{"id":14713,"className":"java.nio.charset.Charset","methodName":"availableCharsets","signature":"\u003cjava.nio.charset.Charset: java.util.SortedMap\u003cjava.lang.String,java.nio.charset.Charset\u003e availableCharsets()\u003e","javadoc":"/** \n * Constructs a sorted map from canonical charset names to charset objects. \u003cp\u003e The map returned by this method will have one entry for each charset for which support is available in the current Java virtual machine.  If two or more supported charsets have the same canonical name then the resulting map will contain just one of them; which one it will contain is not specified. \u003c/p\u003e \u003cp\u003e The invocation of this method, and the subsequent use of the resulting map, may cause time-consuming disk or network I/O operations to occur.  This method is provided for applications that need to enumerate all of the available charsets, for example to allow user charset selection.  This method is not used by the  {@link #forName forName} method, which instead employs an efficient incremental lookupalgorithm. \u003cp\u003e This method may return different results at different times if new charset providers are dynamically made available to the current Java virtual machine.  In the absence of such changes, the charsets returned by this method are exactly those that can be retrieved via the  {@link #forName forName} method.  \u003c/p\u003e\n * @return An immutable, case-insensitive map from canonical charset namesto charset objects\n */\n","tf":{"freq":{"need":1,"via":1,"disk":1,"specifi":1,"time":2,"oper":1,"exact":1,"absenc":1,"effici":1,"dynam":1,"increment":1,"support":2,"select":1,"immut":1,"charset":11,"avail":4,"provid":2,"invoc":1,"machin":2,"lookupalgorithm":1,"contain":2,"will":3,"virtual":2,"canon":3,"result":3,"sort":1,"allow":1,"one":3,"link":2,"made":1,"use":2,"object":2,"network":1,"applic":1,"consum":1,"name":6,"current":2,"map":5,"namesto":1,"subsequ":1,"just":1,"may":2,"entri":1,"employ":1,"two":1,"differ":2,"insensit":1,"caus":1,"retriev":1,"exampl":1,"instead":1,"java":2,"method":8,"chang":1,"construct":1,"user":1,"occur":1},"maxFreq":11,"totalTerms":107},"loc":16}