{"id":14767,"className":"java.nio.channels.MembershipKey","methodName":"block","signature":"\u003cjava.nio.channels.MembershipKey: java.nio.channels.MembershipKey block(java.net.InetAddress)\u003e","javadoc":"/** \n * Block multicast datagrams from the given source address. \u003cp\u003e If this membership key is not source-specific, and the underlying operating system supports source filtering, then this method blocks multicast datagrams from the given source address. If the given source address is already blocked then this method has no effect. After a source address is blocked it may still be possible to receive datagams from that source. This can arise when datagrams are waiting to be received in the socket\u0027s receive buffer.\n * @param source The source address to block\n * @return  This membership key\n * @throws IllegalArgumentException If the  {@code source} parameter is not a unicast address oris not the same address type as the multicast group\n * @throws IllegalStateException If this membership key is source-specific or is no longer valid\n * @throws UnsupportedOperationException If the underlying operating system does not support source filtering\n * @throws IOException If an I/O error occurs\n */\n","tf":{"freq":{"valid":1,"unsupport":1,"membership":3,"state":1,"block":6,"possibl":1,"multicast":3,"wait":1,"type":1,"ori":1,"buffer":1,"given":3,"oper":3,"longer":1,"socket":1,"unicast":1,"key":3,"aris":1,"argument":1,"except":4,"may":1,"support":2,"error":1,"paramet":1,"still":1,"receiv":3,"datagam":1,"illeg":2,"datagram":3,"system":2,"specif":2,"effect":1,"address":7,"sourc":12,"method":2,"alreadi":1,"group":1,"filter":2,"occur":1},"maxFreq":12,"totalTerms":84},"loc":0}