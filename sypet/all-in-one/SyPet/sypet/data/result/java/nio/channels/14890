{"id":14890,"className":"java.nio.channels.AsynchronousSocketChannel","methodName":"read","signature":"\u003cjava.nio.channels.AsynchronousSocketChannel: void read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)\u003e","javadoc":"/** \n * Reads a sequence of bytes from this channel into the given buffer. \u003cp\u003e This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The  {@code handler} parameter is a completion handler that is invoked when the readoperation completes (or fails). The result passed to the completion handler is the number of bytes read or  {@code -1} if no bytes could beread because the channel has reached end-of-stream. \u003cp\u003e If a timeout is specified and the timeout elapses before the operation completes then the operation completes with the exception  {@link InterruptedByTimeoutException}. Where a timeout occurs, and the implementation cannot guarantee that bytes have not been read, or will not be read from the channel into the given buffer, then further attempts to read from the channel will cause an unspecific runtime exception to be thrown. \u003cp\u003e Otherwise this method works in the same manner as the  {@link AsynchronousByteChannel#read(ByteBuffer,Object,CompletionHandler)}method.\n * @param dst The buffer into which bytes are to be transferred\n * @param timeout The maximum time for the I/O operation to complete\n * @param unit The time unit of the  {@code timeout} argument\n * @param attachment The object to attach to the I/O operation; can be  {@code null}\n * @param handler The handler for consuming the result\n * @throws IllegalArgumentException If the buffer is read-only\n * @throws ReadPendingException If a read operation is already in progress on this channel\n * @throws NotYetConnectedException If this channel is not yet connected\n * @throws ShutdownChannelGroupException If the channel group has terminated\n */\n","tf":{"freq":{"progress":1,"readoper":1,"dst":1,"specifi":1,"buffer":6,"elaps":1,"time":2,"fail":1,"given":3,"oper":6,"sequenc":2,"work":1,"argument":2,"except":7,"thrown":1,"transfer":1,"invok":1,"runtim":1,"number":1,"maximum":1,"will":2,"attempt":1,"otherwis":1,"result":2,"asynchron":2,"stream":1,"connect":2,"link":2,"object":2,"consum":1,"reach":1,"unspecif":1,"read":12,"initi":1,"end":1,"shutdown":1,"pend":1,"complet":7,"guarante":1,"paramet":1,"beread":1,"illeg":1,"interrupt":1,"pass":1,"unit":2,"termin":1,"caus":1,"attach":2,"alreadi":1,"method":3,"manner":1,"group":2,"channel":10,"timeout":6,"yet":2,"handler":6,"occur":1},"maxFreq":12,"totalTerms":126},"loc":0}