{"id":10288,"className":"java.sql.SQLClientInfoException","methodName":"SQLClientInfoException","signature":"\u003cjava.sql.SQLClientInfoException: void SQLClientInfoException(java.lang.String,java.lang.String,java.util.Map)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eSQLClientInfoException\u003c/code\u003e object initialized with a given  \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003eSQLState\u003c/code\u003e  and \u003ccode\u003efailedProperties\u003c/code\u003e. The \u003ccode\u003ecause\u003c/code\u003e is not initialized, and may subsequently be initialized by a call to the {@link Throwable#initCause(java.lang.Throwable)} method. The vendor codeis initialized to 0. \u003cp\u003e\n * @param reason                            a description of the exception\n * @param SQLState                          an XOPEN or SQL:2003 code identifying the exception\n * @param failedProperties          A Map containing the property values that could notbe set.  The keys in the Map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in \u003ccode\u003eClientInfoStatus\u003c/code\u003e \u003cp\u003e\n * @since 1.6\n */\n","tf":{"freq":{"codei":1,"defin":1,"call":1,"notb":1,"client":3,"reason":3,"one":1,"link":1,"identifi":1,"object":1,"lang":1,"info":4,"fail":2,"given":1,"name":1,"map":2,"valu":2,"initi":4,"subsequ":1,"key":1,"except":4,"may":1,"status":1,"vendor":1,"descript":1,"init":1,"lclient":1,"caus":2,"contain":3,"lstate":2,"java":1,"method":1,"properti":4,"construct":1,"throwabl":2},"maxFreq":4,"totalTerms":59},"loc":5}