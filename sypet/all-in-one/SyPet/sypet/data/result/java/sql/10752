{"id":10752,"className":"java.sql.Connection","methodName":"setNetworkTimeout","signature":"\u003cjava.sql.Connection: void setNetworkTimeout(java.util.concurrent.Executor,int)\u003e","javadoc":"/** \n * Sets the maximum period a \u003ccode\u003eConnection\u003c/code\u003e or objects created from the \u003ccode\u003eConnection\u003c/code\u003e will wait for the database to reply to any one request. If any request remains unanswered, the waiting method will return with a \u003ccode\u003eSQLException\u003c/code\u003e, and the \u003ccode\u003eConnection\u003c/code\u003e or objects created from the \u003ccode\u003eConnection\u003c/code\u003e  will be marked as closed. Any subsequent use of the objects, with the exception of the \u003ccode\u003eclose\u003c/code\u003e, \u003ccode\u003eisClosed\u003c/code\u003e or \u003ccode\u003eConnection.isValid\u003c/code\u003e methods, will result in  a \u003ccode\u003eSQLException\u003c/code\u003e. \u003cp\u003e \u003cb\u003eNote\u003c/b\u003e: This method is intended to address a rare but serious condition where network partitions can cause threads issuing JDBC calls to hang uninterruptedly in socket reads, until the OS TCP-TIMEOUT (typically 10 minutes). This method is related to the {@link #abort abort() } method which provides an administratorthread a means to free any such threads in cases where the JDBC connection is accessible to the administrator thread. The \u003ccode\u003esetNetworkTimeout\u003c/code\u003e method will cover cases where there is no administrator thread, or it has no access to the connection. This method is severe in it\u0027s effects, and should be given a high enough value so it is never triggered before any more normal timeouts, such as transaction timeouts. \u003cp\u003e JDBC driver implementations  may also choose to support the {@code setNetworkTimeout} method to impose a limit on databaseresponse time, in environments where no network is present. \u003cp\u003e Drivers may internally implement some or all of their API calls with multiple internal driver-database transmissions, and it is left to the driver implementation to determine whether the limit will be applied always to the response to the API call, or to any single  request made during the API call. \u003cp\u003e This method can be invoked more than once, such as to set a limit for an area of JDBC code, and to reset to the default on exit from this area. Invocation of this method has no impact on already outstanding requests. \u003cp\u003e The  {@code Statement.setQueryTimeout()} timeout value is independent of thetimeout value specified in  {@code setNetworkTimeout}. If the query timeout expires  before the network timeout then the statement execution will be canceled. If the network is still active the result will be that both the statement and connection are still usable. However if the network timeout expires before the query timeout or if the statement timeout fails due to network problems, the connection will be marked as closed, any resources held by the connection will be released and both the connection and statement will be unusable. \u003cp\u003e When the driver determines that the  {@code setNetworkTimeout} timeoutvalue has expired, the JDBC driver marks the connection closed and releases any resources held by the connection. \u003cp\u003e This method checks to see that there is an \u003ccode\u003eSQLPermission\u003c/code\u003e object before allowing the method to proceed.  If a \u003ccode\u003eSecurityManager\u003c/code\u003e exists and its \u003ccode\u003echeckPermission\u003c/code\u003e method denies calling \u003ccode\u003esetNetworkTimeout\u003c/code\u003e, this method throws a \u003ccode\u003ejava.lang.SecurityException\u003c/code\u003e.\n * @param executor  The \u003ccode\u003eExecutor\u003c/code\u003e  implementation which willbe used by \u003ccode\u003esetNetworkTimeout\u003c/code\u003e.\n * @param milliseconds The time in milliseconds to wait for the databaseoperation to complete.  If the JDBC driver does not support milliseconds, the JDBC driver will round the value up to the nearest second.  If the timeout period expires before the operation completes, a SQLException will be thrown. A value of 0 indicates that there is not timeout for database operations.\n * @throws java.sql.SQLException if a database access error occurs, thismethod is called on a closed connection, the  {@code executor} is {@code null}, or the value specified for \u003ccode\u003eseconds\u003c/code\u003e is less than 0.\n * @throws java.lang.SecurityException if a security manager exists and its\u003ccode\u003echeckPermission\u003c/code\u003e method denies calling \u003ccode\u003esetNetworkTimeout\u003c/code\u003e.\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @see SecurityManager#checkPermission\n * @see Statement#setQueryTimeout\n * @see #getNetworkTimeout\n * @see #abort\n * @see Executor\n * @since 1.7\n */\n","tf":{"freq":{"singl":1,"willb":1,"lexcept":4,"wait":3,"whether":1,"specifi":2,"expir":4,"free":1,"cover":1,"time":2,"fail":1,"given":1,"oper":2,"thread":4,"relat":1,"reset":1,"uninterrupt":1,"serious":1,"deni":2,"limit":3,"support":3,"multipl":1,"respons":1,"alway":1,"invok":1,"provid":1,"databas":4,"exit":1,"invoc":1,"present":1,"queri":4,"transact":1,"will":13,"link":1,"typic":1,"made":1,"use":2,"issu":1,"transmiss":1,"indic":1,"left":1,"administr":2,"usabl":1,"note":1,"complet":2,"held":2,"trigger":1,"may":2,"repli":1,"access":3,"lfeatur":1,"sql":1,"remain":1,"intern":2,"method":16,"alreadi":1,"abort":3,"unansw":1,"administratorthread":1,"second":2,"normal":1,"round":1,"cancel":1,"enough":1,"impact":1,"close":6,"independ":1,"rare":1,"thetimeout":1,"request":4,"permiss":3,"proceed":1,"socket":1,"howev":1,"thrown":1,"minut":1,"except":5,"creat":2,"environ":1,"mark":3,"period":2,"statement":6,"databaserespons":1,"appli":1,"unus":1,"timeoutvalu":1,"maximum":1,"determin":2,"due":1,"execut":1,"call":7,"valid":1,"result":2,"allow":1,"connect":14,"partit":1,"one":1,"object":4,"activ":1,"hang":1,"lang":2,"network":15,"resourc":2,"area":2,"thismethod":1,"releas":2,"millisecond":3,"mean":1,"read":1,"choos":1,"valu":6,"driver":9,"subsequ":1,"exist":2,"less":1,"databaseoper":1,"lpermiss":1,"condit":1,"outstand":1,"error":1,"check":4,"manag":3,"executor":4,"supportthi":1,"problem":1,"still":2,"nearest":1,"sever":1,"impos":1,"never":1,"secur":5,"caus":1,"effect":1,"address":1,"java":3,"high":1,"intend":1,"also":1,"timeout":21,"occur":1},"maxFreq":21,"totalTerms":319},"loc":0}