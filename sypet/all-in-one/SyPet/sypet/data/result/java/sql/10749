{"id":10749,"className":"java.sql.Connection","methodName":"setSchema","signature":"\u003cjava.sql.Connection: void setSchema(java.lang.String)\u003e","javadoc":"/** \n * Sets the given schema name to access. \u003cP\u003e If the driver does not support schemas, it will silently ignore this request. \u003cp\u003e Calling  {@code setSchema} has no effect on previously created or prepared{@code Statement} objects. It is implementation defined whether a DBMSprepare operation takes place immediately when the  {@code Connection}method  {@code prepareStatement} or {@code prepareCall} is invoked.For maximum portability,  {@code setSchema} should be called before a{@code Statement} is created or prepared.\n * @param schema the name of a schema  in which to work\n * @exception SQLException if a database access error occursor this method is called on a closed connection\n * @see #getSchema\n * @since 1.7\n */\n","tf":{"freq":{"silent":1,"call":4,"defin":1,"msprepar":1,"connect":2,"portabl":1,"lexcept":1,"object":1,"occursor":1,"whether":1,"close":1,"schema":8,"given":1,"oper":1,"request":1,"name":2,"driver":1,"immedi":1,"place":1,"work":1,"except":1,"ignor":1,"support":1,"error":1,"previous":1,"creat":2,"invok":1,"access":2,"databas":1,"prepar":4,"statement":3,"effect":1,"maximum":1,"take":1,"will":1,"method":2},"maxFreq":8,"totalTerms":56},"loc":0}