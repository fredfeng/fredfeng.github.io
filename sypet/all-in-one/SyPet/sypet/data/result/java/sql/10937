{"id":10937,"className":"java.sql.DatabaseMetaData","methodName":"getUDTs","signature":"\u003cjava.sql.DatabaseMetaData: java.sql.ResultSet getUDTs(java.lang.String,java.lang.String,java.lang.String,int[])\u003e","javadoc":"/** \n * Retrieves a description of the user-defined types (UDTs) defined in a particular schema.  Schema-specific UDTs may have type \u003ccode\u003eJAVA_OBJECT\u003c/code\u003e, \u003ccode\u003eSTRUCT\u003c/code\u003e, or \u003ccode\u003eDISTINCT\u003c/code\u003e. \u003cP\u003eOnly types matching the catalog, schema, type name and type criteria are returned.  They are ordered by \u003ccode\u003eDATA_TYPE\u003c/code\u003e, \u003ccode\u003eTYPE_CAT\u003c/code\u003e, \u003ccode\u003eTYPE_SCHEM\u003c/code\u003e  and \u003ccode\u003eTYPE_NAME\u003c/code\u003e.  The type name parameter may be a fully-qualified name.  In this case, the catalog and schemaPattern parameters are ignored. \u003cP\u003eEach type description has the following columns: \u003cOL\u003e \u003cLI\u003e\u003cB\u003eTYPE_CAT\u003c/B\u003e String \u003d\u003e the type\u0027s catalog (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eTYPE_SCHEM\u003c/B\u003e String \u003d\u003e type\u0027s schema (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eTYPE_NAME\u003c/B\u003e String \u003d\u003e type name \u003cLI\u003e\u003cB\u003eCLASS_NAME\u003c/B\u003e String \u003d\u003e Java class name \u003cLI\u003e\u003cB\u003eDATA_TYPE\u003c/B\u003e int \u003d\u003e type value defined in java.sql.Types. One of JAVA_OBJECT, STRUCT, or DISTINCT \u003cLI\u003e\u003cB\u003eREMARKS\u003c/B\u003e String \u003d\u003e explanatory comment on the type \u003cLI\u003e\u003cB\u003eBASE_TYPE\u003c/B\u003e short \u003d\u003e type code of the source type of a DISTINCT type or the type that implements the user-generated reference type of the SELF_REFERENCING_COLUMN of a structured type as defined in java.sql.Types (\u003ccode\u003enull\u003c/code\u003e if DATA_TYPE is not DISTINCT or not STRUCT with REFERENCE_GENERATION \u003d USER_DEFINED) \u003c/OL\u003e \u003cP\u003e\u003cB\u003eNote:\u003c/B\u003e If the driver does not support UDTs, an empty result set is returned.\n * @param catalog a catalog name; must match the catalog name as itis stored in the database; \"\" retrieves those without a catalog; \u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search\n * @param schemaPattern a schema pattern name; must match the schema nameas it is stored in the database; \"\" retrieves those without a schema; \u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search\n * @param typeNamePattern a type name pattern; must match the type nameas it is stored in the database; may be a fully qualified name\n * @param types a list of user-defined types (JAVA_OBJECT,STRUCT, or DISTINCT) to include; \u003ccode\u003enull\u003c/code\u003e returns all types\n * @return \u003ccode\u003eResultSet\u003c/code\u003e object in which each row describes a UDT\n * @exception SQLException if a database access error occurs\n * @see #getSearchStringEscape\n * @since 1.2\n */\n","tf":{"freq":{"store":3,"lexcept":1,"particular":1,"type":26,"must":3,"schema":10,"refer":1,"search":3,"follow":1,"except":1,"ignor":1,"support":1,"catalog":8,"descript":2,"describ":1,"without":2,"row":1,"databas":4,"explanatori":1,"column":1,"sourc":1,"match":4,"comment":1,"iti":1,"defin":5,"result":2,"structur":1,"one":1,"use":2,"object":1,"escap":1,"namea":2,"order":1,"name":13,"mean":2,"valu":1,"driver":1,"note":1,"may":5,"includ":1,"error":1,"criteria":1,"paramet":2,"fulli":2,"list":1,"access":1,"empti":1,"specif":1,"narrow":2,"sql":2,"pattern":5,"retriev":3,"string":6,"generat":1,"java":3,"user":3,"qualifi":2,"occur":1},"maxFreq":26,"totalTerms":157},"loc":0}