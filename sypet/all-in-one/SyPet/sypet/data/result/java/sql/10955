{"id":10955,"className":"java.sql.DatabaseMetaData","methodName":"getRowIdLifetime","signature":"\u003cjava.sql.DatabaseMetaData: java.sql.RowIdLifetime getRowIdLifetime()\u003e","javadoc":"/** \n * Indicates whether or not this data source supports the SQL \u003ccode\u003eROWID\u003c/code\u003e type, and if so  the lifetime for which a \u003ccode\u003eRowId\u003c/code\u003e object remains valid. \u003cp\u003e The returned int values have the following relationship: \u003cpre\u003e ROWID_UNSUPPORTED \u003c ROWID_VALID_OTHER \u003c ROWID_VALID_TRANSACTION \u003c ROWID_VALID_SESSION \u003c ROWID_VALID_FOREVER \u003c/pre\u003e so conditional logic such as \u003cpre\u003e if (metadata.getRowIdLifetime() \u003e DatabaseMetaData.ROWID_VALID_TRANSACTION) \u003c/pre\u003e can be used. Valid Forever means valid across all Sessions, and valid for a Session means valid across all its contained Transactions.\n * @return the status indicating the lifetime of a \u003ccode\u003eRowId\u003c/code\u003e\n * @throws SQLException if a database access error occurs\n * @since 1.6\n */\n","tf":{"freq":{"lifetim":4,"valid":5,"lexcept":1,"data":2,"use":1,"object":1,"type":1,"across":2,"whether":1,"meta":1,"indic":2,"mean":2,"valu":1,"follow":1,"metadata":1,"condit":1,"support":1,"error":1,"status":1,"access":1,"row":4,"logic":1,"databas":2,"relationship":1,"transact":1,"remain":1,"forev":1,"session":2,"pre":4,"contain":1,"sourc":1,"occur":1},"maxFreq":5,"totalTerms":51},"loc":0}