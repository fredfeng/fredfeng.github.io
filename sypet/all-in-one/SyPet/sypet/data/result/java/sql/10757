{"id":10757,"className":"java.sql.Time","methodName":"Time","signature":"\u003cjava.sql.Time: void Time(int,int,int)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eTime\u003c/code\u003e object initialized with the given values for the hour, minute, and second. The driver sets the date components to January 1, 1970. Any method that attempts to access the date components of a \u003ccode\u003eTime\u003c/code\u003e object will throw a \u003ccode\u003ejava.lang.IllegalArgumentException\u003c/code\u003e. \u003cP\u003e The result is undefined if a given argument is out of bounds.\n * @param hour 0 to 23\n * @param minute 0 to 59\n * @param second 0 to 59\n * @deprecated Use the constructor that takes a milliseconds valuein place of this constructor\n */\n","tf":{"freq":{"attempt":1,"result":1,"deprec":1,"second":2,"use":1,"object":2,"date":2,"lang":1,"time":3,"given":2,"millisecond":1,"driver":1,"valu":1,"initi":1,"place":1,"undefin":1,"constructor":2,"argument":2,"minut":2,"except":1,"januari":1,"hour":2,"access":1,"illeg":1,"compon":2,"take":1,"valuein":1,"will":1,"method":1,"java":1,"construct":1,"bound":1},"maxFreq":3,"totalTerms":43},"loc":3}