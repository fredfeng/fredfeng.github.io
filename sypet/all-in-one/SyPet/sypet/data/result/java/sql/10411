{"id":10411,"className":"java.sql.Statement","methodName":"executeQuery","signature":"\u003cjava.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)\u003e","javadoc":"/** \n * Executes the given SQL statement, which returns a single \u003ccode\u003eResultSet\u003c/code\u003e object. \u003cp\u003e \u003cstrong\u003eNote:\u003c/strong\u003eThis method cannot be called on a \u003ccode\u003ePreparedStatement\u003c/code\u003e or \u003ccode\u003eCallableStatement\u003c/code\u003e.\n * @param sql an SQL statement to be sent to the database, typically astatic SQL \u003ccode\u003eSELECT\u003c/code\u003e statement\n * @return a \u003ccode\u003eResultSet\u003c/code\u003e object that contains the data producedby the given query; never \u003ccode\u003enull\u003c/code\u003e\n * @exception SQLException if a database access error occurs,this method is called on a closed \u003ccode\u003eStatement\u003c/code\u003e, the given SQL statement produces anything other than a single \u003ccode\u003eResultSet\u003c/code\u003e object, the method is called on a \u003ccode\u003ePreparedStatement\u003c/code\u003e or \u003ccode\u003eCallableStatement\u003c/code\u003e\n * @throws SQLTimeoutException when the driver has determined that thetimeout value that was specified by the  {@code setQueryTimeout}method has been exceeded and has at least attempted to cancel the currently running  {@code Statement}\n */\n","tf":{"freq":{"attempt":1,"anyth":1,"call":3,"result":3,"singl":2,"least":1,"typic":1,"data":1,"producedbi":1,"lexcept":1,"cancel":1,"object":3,"run":1,"specifi":1,"close":1,"sent":1,"given":3,"thetimeout":1,"callabl":2,"current":1,"valu":1,"driver":1,"note":1,"except":2,"error":1,"astat":1,"exceed":1,"produc":1,"access":1,"prepar":2,"databas":2,"statement":10,"queri":3,"ltimeout":1,"never":1,"sql":1,"strong":2,"determin":1,"contain":1,"method":4,"execut":2,"timeout":1,"occur":1},"maxFreq":10,"totalTerms":72},"loc":0}