{"id":10381,"className":"java.sql.PreparedStatement","methodName":"setNull","signature":"\u003cjava.sql.PreparedStatement: void setNull(int,int,java.lang.String)\u003e","javadoc":"/** \n * Sets the designated parameter to SQL \u003ccode\u003eNULL\u003c/code\u003e. This version of the method \u003ccode\u003esetNull\u003c/code\u003e should be used for user-defined types and REF type parameters.  Examples of user-defined types include: STRUCT, DISTINCT, JAVA_OBJECT, and named array types. \u003cP\u003e\u003cB\u003eNote:\u003c/B\u003e To be portable, applications must give the SQL type code and the fully-qualified SQL type name when specifying a NULL user-defined or REF parameter.  In the case of a user-defined type the name is the type name of the parameter itself.  For a REF parameter, the name is the type name of the referenced type.  If a JDBC driver does not need the type code or type name information, it may ignore it. Although it is intended for user-defined and Ref parameters, this method may be used to set a null parameter of any JDBC type. If the parameter does not have a user-defined or REF type, the given typeName is ignored.\n * @param parameterIndex the first parameter is 1, the second is 2, ...\n * @param sqlType a value from \u003ccode\u003ejava.sql.Types\u003c/code\u003e\n * @param typeName the fully-qualified name of an SQL user-defined type;ignored if the parameter is not a user-defined type or REF\n * @exception SQLException if parameterIndex does not correspond to a parametermarker in the SQL statement; if a database access error occurs or this method is called on a closed \u003ccode\u003ePreparedStatement\u003c/code\u003e\n * @exception SQLFeatureNotSupportedException if \u003ccode\u003esqlType\u003c/code\u003e isa \u003ccode\u003eARRAY\u003c/code\u003e, \u003ccode\u003eBLOB\u003c/code\u003e, \u003ccode\u003eCLOB\u003c/code\u003e, \u003ccode\u003eDATALINK\u003c/code\u003e, \u003ccode\u003eJAVA_OBJECT\u003c/code\u003e, \u003ccode\u003eNCHAR\u003c/code\u003e, \u003ccode\u003eNCLOB\u003c/code\u003e, \u003ccode\u003eNVARCHAR\u003c/code\u003e, \u003ccode\u003eLONGNVARCHAR\u003c/code\u003e, \u003ccode\u003eREF\u003c/code\u003e, \u003ccode\u003eROWID\u003c/code\u003e, \u003ccode\u003eSQLXML\u003c/code\u003e or  \u003ccode\u003eSTRUCT\u003c/code\u003e data type and the JDBC driver does not support this data type or if the JDBC driver does not support this method\n * @since 1.2\n */\n","tf":{"freq":{"need":1,"second":1,"lexcept":1,"type":23,"must":1,"specifi":1,"close":1,"referenc":1,"although":1,"given":1,"ignor":3,"index":2,"except":3,"support":3,"parametermark":1,"databas":1,"prepar":1,"statement":2,"inform":1,"array":1,"defin":8,"call":1,"give":1,"portabl":1,"correspond":1,"data":2,"use":2,"applic":1,"version":1,"name":10,"isa":1,"driver":3,"valu":1,"note":1,"may":2,"includ":1,"error":1,"paramet":12,"fulli":2,"access":1,"lfeatur":1,"ref":1,"sql":3,"exampl":1,"method":4,"java":1,"intend":1,"user":8,"first":1,"qualifi":2,"design":1,"occur":1},"maxFreq":23,"totalTerms":128},"loc":0}