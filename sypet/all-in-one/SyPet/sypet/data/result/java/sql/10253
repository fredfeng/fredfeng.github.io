{"id":10253,"className":"java.sql.SQLInput","methodName":"readObject","signature":"\u003cjava.sql.SQLInput: java.lang.Object readObject()\u003e","javadoc":"/** \n * Reads the datum at the head of the stream and returns it as an \u003ccode\u003eObject\u003c/code\u003e in the Java programming language.  The actual type of the object returned is determined by the default type mapping, and any customizations present in this stream\u0027s type map. \u003cP\u003eA type map is registered with the stream by the JDBC driver before the stream is passed to the application. \u003cP\u003eWhen the datum at the head of the stream is an SQL \u003ccode\u003eNULL\u003c/code\u003e, the method returns \u003ccode\u003enull\u003c/code\u003e.  If the datum is an SQL structured or distinct type, it determines the SQL type of the datum at the head of the stream. If the stream\u0027s type map has an entry for that SQL type, the driver constructs an object of the appropriate class and calls the method \u003ccode\u003eSQLData.readSQL\u003c/code\u003e on that object, which reads additional data from the stream, using the protocol described for that method.\n * @return the datum at the head of the stream as an \u003ccode\u003eObject\u003c/code\u003e in theJava programming language;\u003ccode\u003enull\u003c/code\u003e if the datum is SQL \u003ccode\u003eNULL\u003c/code\u003e\n * @exception SQLException if a database access error occurs\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @since 1.2\n */\n","tf":{"freq":{"call":1,"stream":9,"structur":1,"lexcept":1,"data":1,"use":1,"languag":2,"object":6,"type":8,"datum":6,"ldata":1,"applic":1,"distinct":1,"map":4,"read":4,"regist":1,"driver":3,"head":4,"custom":1,"addit":1,"except":3,"protocol":1,"support":1,"error":1,"entri":1,"describ":1,"supportthi":1,"access":1,"databas":1,"pass":1,"lfeatur":1,"present":1,"program":2,"appropri":1,"determin":2,"actual":1,"java":2,"method":4,"construct":1,"occur":1},"maxFreq":9,"totalTerms":85},"loc":0}