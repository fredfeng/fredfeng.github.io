{"id":10916,"className":"java.sql.DatabaseMetaData","methodName":"getTablePrivileges","signature":"\u003cjava.sql.DatabaseMetaData: java.sql.ResultSet getTablePrivileges(java.lang.String,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Retrieves a description of the access rights for each table available in a catalog. Note that a table privilege applies to one or more columns in the table. It would be wrong to assume that this privilege applies to all columns (this may be true for some systems but is not true for all.) \u003cP\u003eOnly privileges matching the schema and table name criteria are returned.  They are ordered by \u003ccode\u003eTABLE_CAT\u003c/code\u003e, \u003ccode\u003eTABLE_SCHEM\u003c/code\u003e, \u003ccode\u003eTABLE_NAME\u003c/code\u003e, and \u003ccode\u003ePRIVILEGE\u003c/code\u003e. \u003cP\u003eEach privilige description has the following columns: \u003cOL\u003e \u003cLI\u003e\u003cB\u003eTABLE_CAT\u003c/B\u003e String \u003d\u003e table catalog (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eTABLE_SCHEM\u003c/B\u003e String \u003d\u003e table schema (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eTABLE_NAME\u003c/B\u003e String \u003d\u003e table name \u003cLI\u003e\u003cB\u003eGRANTOR\u003c/B\u003e String \u003d\u003e grantor of access (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eGRANTEE\u003c/B\u003e String \u003d\u003e grantee of access \u003cLI\u003e\u003cB\u003ePRIVILEGE\u003c/B\u003e String \u003d\u003e name of access (SELECT, INSERT, UPDATE, REFRENCES, ...) \u003cLI\u003e\u003cB\u003eIS_GRANTABLE\u003c/B\u003e String \u003d\u003e \"YES\" if grantee is permitted to grant to others; \"NO\" if not; \u003ccode\u003enull\u003c/code\u003e if unknown \u003c/OL\u003e\n * @param catalog a catalog name; must match the catalog name as itis stored in the database; \"\" retrieves those without a catalog; \u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search\n * @param schemaPattern a schema name pattern; must match the schema nameas it is stored in the database; \"\" retrieves those without a schema; \u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search\n * @param tableNamePattern a table name pattern; must match thetable name as it is stored in the database\n * @return \u003ccode\u003eResultSet\u003c/code\u003e - each row is a table privilege description\n * @exception SQLException if a database access error occurs\n * @see #getSearchStringEscape\n */\n","tf":{"freq":{"grant":1,"store":3,"permit":1,"lexcept":1,"must":3,"schema":7,"search":3,"grantor":1,"right":1,"follow":1,"except":1,"catalog":7,"descript":3,"avail":1,"without":2,"databas":4,"row":1,"system":1,"appli":2,"column":3,"match":4,"iti":1,"result":1,"one":1,"use":2,"escap":1,"namea":1,"privilig":1,"order":1,"name":11,"mean":2,"thetabl":1,"privileg":5,"note":1,"may":4,"assum":1,"criteria":1,"grante":2,"error":1,"true":2,"unknown":1,"access":5,"narrow":2,"pattern":4,"tabl":11,"retriev":3,"string":8,"wrong":1,"occur":1},"maxFreq":11,"totalTerms":127},"loc":0}