{"id":10735,"className":"java.sql.Connection","methodName":"prepareStatement","signature":"\u003cjava.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String,int)\u003e","javadoc":"/** \n * Creates a default \u003ccode\u003ePreparedStatement\u003c/code\u003e object that has the capability to retrieve auto-generated keys. The given constant tells the driver whether it should make auto-generated keys available for retrieval.  This parameter is ignored if the SQL statement is not an \u003ccode\u003eINSERT\u003c/code\u003e statement, or an SQL statement able to return auto-generated keys (the list of such statements is vendor-specific). \u003cP\u003e \u003cB\u003eNote:\u003c/B\u003e This method is optimized for handling parametric SQL statements that benefit from precompilation. If the driver supports precompilation, the method \u003ccode\u003eprepareStatement\u003c/code\u003e will send the statement to the database for precompilation. Some drivers may not support precompilation. In this case, the statement may not be sent to the database until the \u003ccode\u003ePreparedStatement\u003c/code\u003e object is executed.  This has no direct effect on users; however, it does affect which methods throw certain SQLExceptions. \u003cP\u003e Result sets created using the returned \u003ccode\u003ePreparedStatement\u003c/code\u003e object will by default be type \u003ccode\u003eTYPE_FORWARD_ONLY\u003c/code\u003e and have a concurrency level of \u003ccode\u003eCONCUR_READ_ONLY\u003c/code\u003e. The holdability of the created result sets can be determined by calling  {@link #getHoldability}.\n * @param sql an SQL statement that may contain one or more \u0027?\u0027 INparameter placeholders\n * @param autoGeneratedKeys a flag indicating whether auto-generated keysshould be returned; one of \u003ccode\u003eStatement.RETURN_GENERATED_KEYS\u003c/code\u003e or \u003ccode\u003eStatement.NO_GENERATED_KEYS\u003c/code\u003e\n * @return a new \u003ccode\u003ePreparedStatement\u003c/code\u003e object, containing thepre-compiled SQL statement, that will have the capability of returning auto-generated keys\n * @exception SQLException if a database access error occurs, thismethod is called on a closed connection or the given parameter is not a \u003ccode\u003eStatement\u003c/code\u003e constant indicating whether auto-generated keys should be returned\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method with a constant of Statement.RETURN_GENERATED_KEYS\n * @since 1.4\n */\n","tf":{"freq":{"send":1,"benefit":1,"lexcept":2,"keysshould":1,"abl":1,"type":1,"whether":3,"close":1,"sent":1,"level":1,"given":2,"inparamet":1,"howev":1,"key":6,"except":3,"ignor":1,"support":3,"thepr":1,"creat":3,"avail":1,"parametr":1,"prepar":6,"databas":3,"statement":19,"flag":1,"contain":2,"determin":1,"will":3,"auto":7,"execut":1,"make":1,"compil":1,"call":2,"result":2,"connect":1,"concurr":1,"one":2,"link":1,"use":1,"object":4,"affect":1,"holdabl":2,"thismethod":1,"indic":2,"driver":4,"tell":1,"note":1,"direct":1,"may":3,"constant":3,"error":1,"optim":1,"vendor":1,"paramet":2,"supportthi":1,"list":1,"capabl":2,"access":1,"handl":1,"lfeatur":1,"specif":1,"placehold":1,"sql":1,"effect":1,"retriev":2,"precompil":4,"generat":7,"method":4,"certain":1,"user":1,"occur":1},"maxFreq":19,"totalTerms":150},"loc":0}