{"id":10296,"className":"java.sql.BatchUpdateException","methodName":"BatchUpdateException","signature":"\u003cjava.sql.BatchUpdateException: void BatchUpdateException(int[])\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eBatchUpdateException\u003c/code\u003e object initialized with a given \u003ccode\u003eupdateCounts\u003c/code\u003e. initialized by a call to the {@link Throwable#initCause(java.lang.Throwable)} method. The  \u003ccode\u003ereason\u003c/code\u003eand \u003ccode\u003eSQLState\u003c/code\u003e are initialized to null and the vendor code is initialized to 0. \u003cp\u003e\n * @param updateCounts an array of \u003ccode\u003eint\u003c/code\u003e, with each elementindicating the update count, \u003ccode\u003eStatement.SUCCESS_NO_INFO\u003c/code\u003e or \u003ccode\u003eStatement.EXECUTE_FAILED\u003c/code\u003e for each SQL command in the batch for JDBC drivers that continue processing after a command failure; an update count or \u003ccode\u003eStatement.SUCCESS_NO_INFO\u003c/code\u003e for each SQL command in the batch prior to the failure for JDBC drivers that stop processing after a command failure\n * @since 1.2\n */\n","tf":{"freq":{"stop":1,"call":1,"elementind":1,"count":4,"reason":1,"link":1,"object":1,"lang":1,"prior":1,"given":1,"command":4,"driver":2,"initi":4,"except":2,"failur":3,"vendor":1,"init":1,"continu":1,"process":2,"statement":3,"caus":1,"updat":6,"batch":4,"java":1,"method":1,"lstate":1,"throwabl":2,"construct":1,"array":1},"maxFreq":6,"totalTerms":54},"loc":3}