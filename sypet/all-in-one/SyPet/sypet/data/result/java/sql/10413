{"id":10413,"className":"java.sql.Statement","methodName":"close","signature":"\u003cjava.sql.Statement: void close()\u003e","javadoc":"/** \n * Releases this \u003ccode\u003eStatement\u003c/code\u003e object\u0027s database and JDBC resources immediately instead of waiting for this to happen when it is automatically closed. It is generally good practice to release resources as soon as you are finished with them to avoid tying up database resources. \u003cP\u003e Calling the method \u003ccode\u003eclose\u003c/code\u003e on a \u003ccode\u003eStatement\u003c/code\u003e object that is already closed has no effect. \u003cP\u003e \u003cB\u003eNote:\u003c/B\u003eWhen a \u003ccode\u003eStatement\u003c/code\u003e object is closed, its current \u003ccode\u003eResultSet\u003c/code\u003e object, if one exists, is also closed.\n * @exception SQLException if a database access error occurs\n */\n","tf":{"freq":{"result":1,"call":1,"tie":1,"one":1,"lexcept":1,"good":1,"wait":1,"object":4,"automat":1,"close":6,"avoid":1,"resourc":3,"releas":2,"practic":1,"current":1,"immedi":1,"happen":1,"exist":1,"note":1,"except":1,"error":1,"access":1,"soon":1,"general":1,"databas":3,"statement":3,"finish":1,"effect":1,"instead":1,"method":1,"alreadi":1,"also":1,"occur":1},"maxFreq":6,"totalTerms":48},"loc":0}