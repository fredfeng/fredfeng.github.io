{"id":10123,"className":"java.sql.CallableStatement","methodName":"getBigDecimal","signature":"\u003cjava.sql.CallableStatement: java.math.BigDecimal getBigDecimal(int,int)\u003e","javadoc":"/** \n * Retrieves the value of the designated JDBC \u003ccode\u003eNUMERIC\u003c/code\u003e parameter as a \u003ccode\u003ejava.math.BigDecimal\u003c/code\u003e object with \u003ci\u003escale\u003c/i\u003e digits to the right of the decimal point.\n * @param parameterIndex the first parameter is 1, the second is 2,and so on\n * @param scale the number of digits to the right of the decimal point\n * @return the parameter value.  If the value is SQL \u003ccode\u003eNULL\u003c/code\u003e, the resultis \u003ccode\u003enull\u003c/code\u003e.\n * @exception SQLException if the parameterIndex is not valid;if a database access error occurs or this method is called on a closed \u003ccode\u003eCallableStatement\u003c/code\u003e\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @deprecated use \u003ccode\u003egetBigDecimal(int parameterIndex)\u003c/code\u003eor \u003ccode\u003egetBigDecimal(String parameterName)\u003c/code\u003e\n * @see #setBigDecimal\n */\n","tf":{"freq":{"call":1,"scale":2,"valid":1,"deprec":1,"second":1,"lexcept":1,"use":1,"object":1,"decim":7,"close":1,"resulti":1,"callabl":1,"name":1,"driver":1,"valu":3,"right":2,"index":3,"except":3,"support":1,"error":1,"paramet":7,"supportthi":1,"number":1,"access":1,"databas":1,"lfeatur":1,"statement":1,"digit":2,"math":1,"point":2,"retriev":1,"string":1,"method":2,"java":1,"big":5,"first":1,"design":1,"occur":1},"maxFreq":7,"totalTerms":65},"loc":0}