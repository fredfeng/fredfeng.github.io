{"id":10600,"className":"java.sql.ResultSet","methodName":"moveToInsertRow","signature":"\u003cjava.sql.ResultSet: void moveToInsertRow()\u003e","javadoc":"/** \n * Moves the cursor to the insert row.  The current cursor position is remembered while the cursor is positioned on the insert row. The insert row is a special row associated with an updatable result set.  It is essentially a buffer where a new row may be constructed by calling the updater methods prior to inserting the row into the result set. Only the updater, getter, and \u003ccode\u003einsertRow\u003c/code\u003e methods may be called when the cursor is on the insert row.  All of the columns in a result set must be given a value each time this method is called before calling \u003ccode\u003einsertRow\u003c/code\u003e. An updater method must be called before a getter method can be called on a column value.\n * @exception SQLException if a database access error occurs; thismethod is called on a closed result set or the result set concurrency is \u003ccode\u003eCONCUR_READ_ONLY\u003c/code\u003e\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @since 1.2\n */\n","tf":{"freq":{"result":5,"call":7,"cursor":4,"getter":2,"concurr":1,"lexcept":1,"must":2,"close":1,"prior":1,"buffer":1,"time":1,"thismethod":1,"given":1,"associ":1,"essenti":1,"current":1,"driver":1,"valu":2,"move":2,"except":3,"may":2,"support":1,"error":1,"rememb":1,"supportthi":1,"access":1,"databas":1,"row":10,"lfeatur":1,"updat":4,"column":2,"special":1,"method":6,"construct":1,"insert":8,"posit":2,"occur":1},"maxFreq":10,"totalTerms":83},"loc":0}