{"id":10089,"className":"java.sql.Driver","methodName":"connect","signature":"\u003cjava.sql.Driver: java.sql.Connection connect(java.lang.String,java.util.Properties)\u003e","javadoc":"/** \n * Attempts to make a database connection to the given URL. The driver should return \"null\" if it realizes it is the wrong kind of driver to connect to the given URL.  This will be common, as when the JDBC driver manager is asked to connect to a given URL it passes the URL to each loaded driver in turn. \u003cP\u003eThe driver should throw an \u003ccode\u003eSQLException\u003c/code\u003e if it is the right driver to connect to the given URL but has trouble connecting to the database. \u003cP\u003eThe \u003ccode\u003ejava.util.Properties\u003c/code\u003e argument can be used to pass arbitrary string tag/value pairs as connection arguments. Normally at least \"user\" and \"password\" properties should be included in the \u003ccode\u003eProperties\u003c/code\u003e object.\n * @param url the URL of the database to which to connect\n * @param info a list of arbitrary string tag/value pairs asconnection arguments. Normally at least a \"user\" and \"password\" property should be included.\n * @return a \u003ccode\u003eConnection\u003c/code\u003e object that represents aconnection to the URL\n * @exception SQLException if a database access error occurs\n */\n","tf":{"freq":{"attempt":1,"connect":9,"pair":2,"common":1,"least":2,"tag":2,"normal":2,"lexcept":2,"use":1,"asconnect":1,"object":2,"password":2,"kind":1,"info":1,"arbitrari":2,"given":4,"valu":2,"realiz":1,"driver":6,"aconnect":1,"right":1,"argument":3,"turn":1,"except":1,"includ":2,"troubl":1,"error":1,"repres":1,"manag":1,"list":1,"access":1,"url":1,"databas":4,"pass":2,"string":2,"will":1,"wrong":1,"load":1,"java":1,"properti":4,"ask":1,"user":2,"make":1,"util":1,"occur":1},"maxFreq":9,"totalTerms":82},"loc":0}