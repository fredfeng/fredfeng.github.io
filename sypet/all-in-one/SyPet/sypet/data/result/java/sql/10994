{"id":10994,"className":"java.sql.Array","methodName":"getArray","signature":"\u003cjava.sql.Array: java.lang.Object getArray(long,int)\u003e","javadoc":"/** \n * Retrieves a slice of the SQL \u003ccode\u003eARRAY\u003c/code\u003e value designated by this \u003ccode\u003eArray\u003c/code\u003e object, beginning with the specified \u003ccode\u003eindex\u003c/code\u003e and containing up to \u003ccode\u003ecount\u003c/code\u003e successive elements of the SQL array.  This method uses the type map associated with the connection for customizations of the type mappings. \u003cp\u003e \u003cstrong\u003eNote:\u003c/strong\u003e When \u003ccode\u003egetArray\u003c/code\u003e is used to materialize a base type that maps to a primitive data type, then it is implementation-defined whether the array returned is an array of that primitive data type or an array of \u003ccode\u003eObject\u003c/code\u003e.\n * @param index the array index of the first element to retrieve;the first element is at index 1\n * @param count the number of successive SQL array elements to retrieve\n * @return an array containing up to \u003ccode\u003ecount\u003c/code\u003e consecutive elementsof the SQL array, beginning with element \u003ccode\u003eindex\u003c/code\u003e\n * @exception SQLException if an error occurs while attempting toaccess the array\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @since 1.2\n */\n","tf":{"freq":{"attempt":1,"defin":1,"primit":2,"count":3,"connect":1,"lexcept":1,"data":2,"use":2,"object":2,"type":5,"whether":1,"specifi":1,"associ":1,"map":3,"driver":1,"valu":1,"note":1,"elementsof":1,"custom":1,"toaccess":1,"element":5,"except":3,"index":5,"support":1,"error":1,"supportthi":1,"number":1,"consecut":1,"begin":2,"lfeatur":1,"strong":2,"retriev":3,"materi":1,"contain":2,"base":1,"slice":1,"method":2,"first":2,"success":2,"design":1,"occur":1,"array":12},"maxFreq":12,"totalTerms":83},"loc":0}