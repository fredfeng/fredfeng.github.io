{"id":10958,"className":"java.sql.DatabaseMetaData","methodName":"autoCommitFailureClosesAllResultSets","signature":"\u003cjava.sql.DatabaseMetaData: boolean autoCommitFailureClosesAllResultSets()\u003e","javadoc":"/** \n * Retrieves whether a \u003ccode\u003eSQLException\u003c/code\u003e while autoCommit is \u003ccode\u003etrue\u003c/code\u003e inidcates that all open ResultSets are closed, even ones that are holdable.  When a \u003ccode\u003eSQLException\u003c/code\u003e occurs while autocommit is \u003ccode\u003etrue\u003c/code\u003e, it is vendor specific whether the JDBC driver responds with a commit operation, a rollback operation, or by doing neither a commit nor a rollback.  A potential result of this difference is in whether or not holdable ResultSets are closed.\n * @return \u003ccode\u003etrue\u003c/code\u003e if so; \u003ccode\u003efalse\u003c/code\u003e otherwise\n * @exception SQLException if a database access error occurs\n * @since 1.6\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"result":4,"one":1,"lexcept":3,"rollback":2,"inidc":1,"whether":3,"close":3,"open":1,"holdabl":2,"commit":4,"oper":2,"respond":1,"driver":1,"except":1,"error":1,"failur":1,"vendor":1,"true":3,"access":1,"databas":1,"potenti":1,"neither":1,"differ":1,"specif":1,"retriev":1,"auto":2,"even":1,"autocommit":1,"occur":2},"maxFreq":4,"totalTerms":50},"loc":0}