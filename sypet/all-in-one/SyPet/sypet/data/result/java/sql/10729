{"id":10729,"className":"java.sql.Connection","methodName":"setSavepoint","signature":"\u003cjava.sql.Connection: java.sql.Savepoint setSavepoint(java.lang.String)\u003e","javadoc":"/** \n * Creates a savepoint with the given name in the current transaction and returns the new \u003ccode\u003eSavepoint\u003c/code\u003e object that represents it. \u003cp\u003e if setSavepoint is invoked outside of an active transaction, a transaction will be started at this newly created savepoint.\n * @param name a \u003ccode\u003eString\u003c/code\u003e containing the name of the savepoint\n * @return the new \u003ccode\u003eSavepoint\u003c/code\u003e object\n * @exception SQLException if a database access error occurs,this method is called while participating in a distributed transaction, this method is called on a closed connection or this \u003ccode\u003eConnection\u003c/code\u003e object is currently in auto-commit mode\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @see Savepoint\n * @since 1.4\n */\n","tf":{"freq":{"call":2,"connect":2,"distribut":1,"lexcept":1,"object":3,"activ":1,"mode":1,"close":1,"given":1,"commit":1,"name":3,"current":2,"driver":1,"except":3,"support":1,"error":1,"repres":1,"creat":2,"savepoint":8,"invok":1,"particip":1,"supportthi":1,"access":1,"databas":1,"lfeatur":1,"newli":1,"transact":4,"outsid":1,"start":1,"string":1,"contain":1,"will":1,"auto":1,"method":3,"occur":1},"maxFreq":8,"totalTerms":57},"loc":0}