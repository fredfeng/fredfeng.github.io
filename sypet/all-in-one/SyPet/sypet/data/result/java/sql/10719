{"id":10719,"className":"java.sql.Connection","methodName":"getWarnings","signature":"\u003cjava.sql.Connection: java.sql.SQLWarning getWarnings()\u003e","javadoc":"/** \n * Retrieves the first warning reported by calls on this \u003ccode\u003eConnection\u003c/code\u003e object.  If there is more than one warning, subsequent warnings will be chained to the first one and can be retrieved by calling the method \u003ccode\u003eSQLWarning.getNextWarning\u003c/code\u003e on the warning that was retrieved previously. \u003cP\u003e This method may not be called on a closed connection; doing so will cause an \u003ccode\u003eSQLException\u003c/code\u003e to be thrown. \u003cP\u003e\u003cB\u003eNote:\u003c/B\u003e Subsequent warnings will be chained to this SQLWarning.\n * @return the first \u003ccode\u003eSQLWarning\u003c/code\u003e object or \u003ccode\u003enull\u003c/code\u003eif there are none\n * @exception SQLException if a database access error occurs orthis method is called on a closed connection\n * @see SQLWarning\n */\n","tf":{"freq":{"warn":7,"call":4,"connect":3,"one":2,"next":1,"lexcept":2,"object":2,"close":2,"report":1,"none":1,"lwarn":4,"subsequ":2,"note":1,"may":1,"thrown":1,"except":1,"error":1,"previous":1,"orthi":1,"access":1,"databas":1,"caus":1,"chain":2,"retriev":3,"will":3,"method":3,"first":3,"occur":1},"maxFreq":7,"totalTerms":56},"loc":0}