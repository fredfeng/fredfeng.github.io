{"id":10751,"className":"java.sql.Connection","methodName":"abort","signature":"\u003cjava.sql.Connection: void abort(java.util.concurrent.Executor)\u003e","javadoc":"/** \n * Terminates an open connection.  Calling \u003ccode\u003eabort\u003c/code\u003e results in: \u003cul\u003e \u003cli\u003eThe connection marked as closed \u003cli\u003eCloses any physical connection to the database \u003cli\u003eReleases resources used by the connection \u003cli\u003eInsures that any thread that is currently accessing the connection will either progress to completion or throw an \u003ccode\u003eSQLException\u003c/code\u003e. \u003c/ul\u003e \u003cp\u003e Calling \u003ccode\u003eabort\u003c/code\u003e marks the connection closed and releases any resources. Calling \u003ccode\u003eabort\u003c/code\u003e on a closed connection is a no-op. \u003cp\u003e It is possible that the aborting and releasing of the resources that are held by the connection can take an extended period of time.  When the \u003ccode\u003eabort\u003c/code\u003e method returns, the connection will have been marked as closed and the \u003ccode\u003eExecutor\u003c/code\u003e that was passed as a parameter to abort may still be executing tasks to release resources. \u003cp\u003e This method checks to see that there is an \u003ccode\u003eSQLPermission\u003c/code\u003e object before allowing the method to proceed.  If a \u003ccode\u003eSecurityManager\u003c/code\u003e exists and its \u003ccode\u003echeckPermission\u003c/code\u003e method denies calling \u003ccode\u003eabort\u003c/code\u003e, this method throws a \u003ccode\u003ejava.lang.SecurityException\u003c/code\u003e.\n * @param executor  The \u003ccode\u003eExecutor\u003c/code\u003e  implementation which willbe used by \u003ccode\u003eabort\u003c/code\u003e.\n * @throws java.sql.SQLException if a database access error occurs orthe  {@code executor} is {@code null},\n * @throws java.lang.SecurityException if a security manager exists and its\u003ccode\u003echeckPermission\u003c/code\u003e method denies calling \u003ccode\u003eabort\u003c/code\u003e\n * @see SecurityManager#checkPermission\n * @see Executor\n * @since 1.7\n */\n","tf":{"freq":{"progress":1,"willb":1,"lexcept":2,"possibl":1,"close":5,"open":1,"time":1,"thread":1,"proceed":1,"permiss":3,"deni":2,"except":2,"mark":3,"period":1,"databas":2,"will":2,"execut":1,"call":5,"result":1,"orth":1,"connect":9,"allow":1,"use":2,"object":1,"lang":2,"resourc":4,"releas":4,"insur":1,"current":1,"exist":2,"complet":1,"lpermiss":1,"held":1,"may":1,"error":1,"check":4,"physic":1,"task":1,"manag":3,"executor":5,"paramet":1,"still":1,"access":2,"pass":1,"either":1,"termin":1,"sql":1,"secur":5,"take":1,"method":6,"java":3,"occur":1,"abort":10},"maxFreq":10,"totalTerms":117},"loc":0}