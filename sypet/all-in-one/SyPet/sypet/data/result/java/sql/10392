{"id":10392,"className":"java.sql.PreparedStatement","methodName":"setObject","signature":"\u003cjava.sql.PreparedStatement: void setObject(int,java.lang.Object,int,int)\u003e","javadoc":"/** \n * \u003cp\u003eSets the value of the designated parameter with the given object. The second argument must be an object type; for integral values, the \u003ccode\u003ejava.lang\u003c/code\u003e equivalent objects should be used. If the second argument is an \u003ccode\u003eInputStream\u003c/code\u003e then the stream must contain the number of bytes specified by scaleOrLength.  If the second argument is a \u003ccode\u003eReader\u003c/code\u003e then the reader must contain the number of characters specified by scaleOrLength. If these conditions are not true the driver will generate a \u003ccode\u003eSQLException\u003c/code\u003e when the prepared statement is executed. \u003cp\u003eThe given Java object will be converted to the given targetSqlType before being sent to the database. If the object has a custom mapping (is of a class implementing the interface \u003ccode\u003eSQLData\u003c/code\u003e), the JDBC driver should call the method \u003ccode\u003eSQLData.writeSQL\u003c/code\u003e to write it to the SQL data stream. If, on the other hand, the object is of a class implementing \u003ccode\u003eRef\u003c/code\u003e, \u003ccode\u003eBlob\u003c/code\u003e, \u003ccode\u003eClob\u003c/code\u003e,  \u003ccode\u003eNClob\u003c/code\u003e, \u003ccode\u003eStruct\u003c/code\u003e, \u003ccode\u003ejava.net.URL\u003c/code\u003e, or \u003ccode\u003eArray\u003c/code\u003e, the driver should pass it to the database as a value of the corresponding SQL type. \u003cp\u003eNote that this method may be used to pass database-specific abstract data types.\n * @param parameterIndex the first parameter is 1, the second is 2, ...\n * @param x the object containing the input parameter value\n * @param targetSqlType the SQL type (as defined in java.sql.Types) to besent to the database. The scale argument may further qualify this type.\n * @param scaleOrLength for \u003ccode\u003ejava.sql.Types.DECIMAL\u003c/code\u003eor \u003ccode\u003ejava.sql.Types.NUMERIC types\u003c/code\u003e, this is the number of digits after the decimal point. For Java Object types \u003ccode\u003eInputStream\u003c/code\u003e and \u003ccode\u003eReader\u003c/code\u003e, this is the length of the data in the stream or reader.  For all other types, this value will be ignored.\n * @exception SQLException if parameterIndex does not correspond to a parametermarker in the SQL statement; if a database access error occurs; this method is called on a closed \u003ccode\u003ePreparedStatement\u003c/code\u003e or if the Java Object specified by x is an InputStream or Reader object and the value of the scale parameter is less than zero\n * @exception SQLFeatureNotSupportedException if \u003ccode\u003etargetSqlType\u003c/code\u003e isa \u003ccode\u003eARRAY\u003c/code\u003e, \u003ccode\u003eBLOB\u003c/code\u003e, \u003ccode\u003eCLOB\u003c/code\u003e, \u003ccode\u003eDATALINK\u003c/code\u003e, \u003ccode\u003eJAVA_OBJECT\u003c/code\u003e, \u003ccode\u003eNCHAR\u003c/code\u003e, \u003ccode\u003eNCLOB\u003c/code\u003e, \u003ccode\u003eNVARCHAR\u003c/code\u003e, \u003ccode\u003eLONGNVARCHAR\u003c/code\u003e, \u003ccode\u003eREF\u003c/code\u003e, \u003ccode\u003eROWID\u003c/code\u003e, \u003ccode\u003eSQLXML\u003c/code\u003e or  \u003ccode\u003eSTRUCT\u003c/code\u003e data type and the JDBC driver does not support this data type\n * @see Types\n * @since 1.6\n */\n","tf":{"freq":{"integr":1,"second":4,"lexcept":2,"zero":1,"type":17,"must":3,"ldata":2,"close":1,"specifi":3,"sent":1,"nclob":1,"given":3,"equival":1,"custom":1,"argument":4,"except":3,"ignor":1,"index":2,"support":2,"charact":1,"number":3,"parametermark":1,"prepar":2,"databas":5,"digit":1,"statement":3,"besent":1,"input":4,"reader":5,"contain":3,"will":3,"execut":1,"array":1,"defin":1,"scale":5,"call":2,"stream":6,"correspond":2,"clob":1,"data":5,"use":2,"convert":1,"object":11,"decim":1,"net":1,"lang":1,"hand":1,"struct":1,"isa":1,"length":4,"map":1,"write":2,"valu":6,"driver":4,"less":1,"note":1,"condit":1,"may":2,"error":1,"paramet":6,"true":1,"access":1,"pass":2,"lfeatur":1,"blob":1,"point":1,"ref":1,"specif":1,"sql":6,"generat":1,"target":3,"java":8,"method":3,"first":1,"qualifi":1,"design":1,"occur":1},"maxFreq":17,"totalTerms":192},"loc":0}