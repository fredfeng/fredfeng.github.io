{"id":10490,"className":"java.sql.ResultSet","methodName":"next","signature":"\u003cjava.sql.ResultSet: boolean next()\u003e","javadoc":"/** \n * Moves the cursor froward one row from its current position. A \u003ccode\u003eResultSet\u003c/code\u003e cursor is initially positioned before the first row; the first call to the method \u003ccode\u003enext\u003c/code\u003e makes the first row the current row; the second call makes the second row the current row, and so on. \u003cp\u003e When a call to the \u003ccode\u003enext\u003c/code\u003e method returns \u003ccode\u003efalse\u003c/code\u003e, the cursor is positioned after the last row. Any invocation of a \u003ccode\u003eResultSet\u003c/code\u003e method which requires a current row will result in a \u003ccode\u003eSQLException\u003c/code\u003e being thrown. If the result set type is \u003ccode\u003eTYPE_FORWARD_ONLY\u003c/code\u003e, it is vendor specified whether their JDBC driver implementation will return \u003ccode\u003efalse\u003c/code\u003e or throw an \u003ccode\u003eSQLException\u003c/code\u003e on a subsequent call to \u003ccode\u003enext\u003c/code\u003e. \u003cP\u003eIf an input stream is open for the current row, a call to the method \u003ccode\u003enext\u003c/code\u003e will implicitly close it. A \u003ccode\u003eResultSet\u003c/code\u003e object\u0027s warning chain is cleared when a new row is read.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the new current row is valid;\u003ccode\u003efalse\u003c/code\u003e if there are no more rows\n * @exception SQLException if a database access error occurs or this method iscalled on a closed result set\n */\n","tf":{"freq":{"warn":1,"fals":3,"valid":1,"call":5,"result":6,"stream":1,"cursor":3,"second":2,"last":1,"one":1,"next":5,"implicit":1,"lexcept":3,"object":1,"type":1,"whether":1,"close":2,"specifi":1,"clear":1,"open":1,"requir":1,"iscal":1,"current":6,"read":1,"driver":1,"initi":1,"subsequ":1,"move":1,"except":1,"thrown":1,"error":1,"froward":1,"vendor":1,"true":1,"access":1,"databas":1,"row":12,"invoc":1,"input":1,"chain":1,"will":3,"method":5,"first":3,"posit":3,"make":2,"occur":1},"maxFreq":12,"totalTerms":94},"loc":0}