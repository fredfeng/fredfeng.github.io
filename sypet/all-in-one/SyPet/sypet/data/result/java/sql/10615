{"id":10615,"className":"java.sql.ResultSet","methodName":"getTime","signature":"\u003cjava.sql.ResultSet: java.sql.Time getTime(int,java.util.Calendar)\u003e","javadoc":"/** \n * Retrieves the value of the designated column in the current row of this \u003ccode\u003eResultSet\u003c/code\u003e object as a \u003ccode\u003ejava.sql.Time\u003c/code\u003e object in the Java programming language. This method uses the given calendar to construct an appropriate millisecond value for the time if the underlying database does not store timezone information.\n * @param columnIndex the first column is 1, the second is 2, ...\n * @param cal the \u003ccode\u003ejava.util.Calendar\u003c/code\u003e objectto use in constructing the time\n * @return the column value as a \u003ccode\u003ejava.sql.Time\u003c/code\u003e object;if the value is SQL \u003ccode\u003eNULL\u003c/code\u003e, the value returned is \u003ccode\u003enull\u003c/code\u003e in the Java programming language\n * @exception SQLException if the columnIndex is not valid;if a database access error occurs or this method is called on a closed result set\n * @since 1.2\n */\n","tf":{"freq":{"call":1,"valid":1,"result":2,"second":1,"store":1,"lexcept":1,"objectto":1,"use":2,"timezon":1,"languag":2,"object":3,"close":1,"time":5,"given":1,"millisecond":1,"current":1,"valu":5,"cal":1,"calendar":2,"except":1,"index":2,"error":1,"access":1,"row":1,"databas":2,"inform":1,"sql":2,"program":2,"retriev":1,"appropri":1,"column":5,"java":5,"method":2,"construct":2,"first":1,"util":1,"design":1,"occur":1},"maxFreq":5,"totalTerms":66},"loc":0}