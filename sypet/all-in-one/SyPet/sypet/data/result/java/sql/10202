{"id":10202,"className":"java.sql.CallableStatement","methodName":"setSQLXML","signature":"\u003cjava.sql.CallableStatement: void setSQLXML(java.lang.String,java.sql.SQLXML)\u003e","javadoc":"/** \n * Sets the designated parameter to the given \u003ccode\u003ejava.sql.SQLXML\u003c/code\u003e object. The driver converts this to an \u003ccode\u003eSQL XML\u003c/code\u003e value when it sends it to the database.\n * @param parameterName the name of the parameter\n * @param xmlObject a \u003ccode\u003eSQLXML\u003c/code\u003e object that maps an \u003ccode\u003eSQL XML\u003c/code\u003e value\n * @throws SQLException if parameterName does not correspond to a namedparameter; if a database access error occurs; this method is called on a closed \u003ccode\u003eCallableStatement\u003c/code\u003e or the \u003ccode\u003ejava.xml.transform.Result\u003c/code\u003e, \u003ccode\u003eWriter\u003c/code\u003e or \u003ccode\u003eOutputStream\u003c/code\u003e has not been closed for the \u003ccode\u003eSQLXML\u003c/code\u003e object\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @since 1.6\n */\n","tf":{"freq":{"result":1,"call":1,"stream":1,"send":1,"namedparamet":1,"correspond":1,"lexcept":1,"convert":1,"object":4,"close":2,"transform":1,"given":1,"callabl":1,"name":3,"map":1,"valu":2,"driver":2,"writer":1,"except":2,"support":1,"error":1,"paramet":4,"supportthi":1,"xml":2,"access":1,"databas":2,"lfeatur":1,"statement":1,"sql":1,"java":2,"method":2,"output":1,"design":1,"occur":1},"maxFreq":4,"totalTerms":50},"loc":0}