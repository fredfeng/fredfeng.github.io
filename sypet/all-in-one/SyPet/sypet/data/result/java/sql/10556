{"id":10556,"className":"java.sql.ResultSet","methodName":"rowDeleted","signature":"\u003cjava.sql.ResultSet: boolean rowDeleted()\u003e","javadoc":"/** \n * Retrieves whether a row has been deleted.  A deleted row may leave a visible \"hole\" in a result set.  This method can be used to detect holes in a result set.  The value returned depends on whether or not this \u003ccode\u003eResultSet\u003c/code\u003e object can detect deletions. \u003cp\u003e \u003cstrong\u003eNote:\u003c/strong\u003e Support for the \u003ccode\u003erowDeleted\u003c/code\u003e method is optional with a result set concurrency of \u003ccode\u003eCONCUR_READ_ONLY\u003c/code\u003e\n * @return \u003ccode\u003etrue\u003c/code\u003e if the current row is detected tohave been deleted by the owner or another; \u003ccode\u003efalse\u003c/code\u003e otherwise\n * @exception SQLException if a database access error occursor this method is called on a closed result set\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @see DatabaseMetaData#deletesAreDetected\n * @since 1.2\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"call":1,"result":5,"delet":7,"visibl":1,"concurr":1,"data":1,"lexcept":1,"use":1,"anoth":1,"object":1,"occursor":1,"meta":1,"whether":2,"close":1,"current":1,"driver":1,"valu":1,"note":1,"option":1,"hole":2,"detect":4,"except":3,"may":1,"support":2,"error":1,"depend":1,"true":1,"supportthi":1,"access":1,"databas":2,"row":5,"lfeatur":1,"strong":2,"retriev":1,"leav":1,"owner":1,"method":4,"tohav":1},"maxFreq":7,"totalTerms":67},"loc":0}