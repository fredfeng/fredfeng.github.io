{"id":10677,"className":"java.sql.ResultSet","methodName":"getObject","signature":"\u003cjava.sql.ResultSet: T getObject(int,java.lang.Class)\u003e","javadoc":"/** \n * \u003cp\u003eRetrieves the value of the designated column in the current row of this \u003ccode\u003eResultSet\u003c/code\u003e object and will convert from the SQL type of the column to the requested Java data type, if the conversion is supported. If the conversion is not supported  or null is specified for the type, a \u003ccode\u003eSQLException\u003c/code\u003e is thrown. \u003cp\u003e At a minimum, an implementation must support the conversions defined in Appendix B, Table B-3 and conversion of appropriate user defined SQL types to a Java type which implements  {@code SQLData}, or  {@code Struct}. Additional conversions may be supported and are vendor defined.\n * @param columnIndex the first column is 1, the second is 2, ...\n * @param type Class representing the Java data type to convert the designatedcolumn to.\n * @return an instance of {@code type} holding the column value\n * @throws SQLException if conversion is not supported, type is null oranother error occurs. The getCause() method of the exception may provide a more detailed exception, for example, if a conversion error occurs\n * @throws SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @since 1.7\n */\n","tf":{"freq":{"detail":1,"second":1,"lexcept":2,"type":9,"must":1,"ldata":1,"specifi":1,"request":1,"thrown":1,"index":1,"except":3,"support":6,"hold":1,"provid":1,"row":1,"instanc":1,"column":5,"will":1,"defin":3,"result":1,"minimum":1,"convers":7,"data":2,"convert":2,"object":2,"struct":1,"current":1,"driver":1,"valu":2,"addit":1,"may":2,"error":2,"repres":1,"vendor":1,"supportthi":1,"designatedcolumn":1,"lfeatur":1,"caus":1,"tabl":1,"retriev":1,"appropri":1,"exampl":1,"appendix":1,"java":3,"method":2,"user":1,"first":1,"design":1,"oranoth":1,"occur":2},"maxFreq":9,"totalTerms":88},"loc":0}