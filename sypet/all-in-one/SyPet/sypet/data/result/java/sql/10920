{"id":10920,"className":"java.sql.DatabaseMetaData","methodName":"getImportedKeys","signature":"\u003cjava.sql.DatabaseMetaData: java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Retrieves a description of the primary key columns that are referenced by the given table\u0027s foreign key columns (the primary keys imported by a table).  They are ordered by PKTABLE_CAT, PKTABLE_SCHEM, PKTABLE_NAME, and KEY_SEQ. \u003cP\u003eEach primary key column description has the following columns: \u003cOL\u003e \u003cLI\u003e\u003cB\u003ePKTABLE_CAT\u003c/B\u003e String \u003d\u003e primary key table catalog being imported (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003ePKTABLE_SCHEM\u003c/B\u003e String \u003d\u003e primary key table schema being imported (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003ePKTABLE_NAME\u003c/B\u003e String \u003d\u003e primary key table name being imported \u003cLI\u003e\u003cB\u003ePKCOLUMN_NAME\u003c/B\u003e String \u003d\u003e primary key column name being imported \u003cLI\u003e\u003cB\u003eFKTABLE_CAT\u003c/B\u003e String \u003d\u003e foreign key table catalog (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eFKTABLE_SCHEM\u003c/B\u003e String \u003d\u003e foreign key table schema (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eFKTABLE_NAME\u003c/B\u003e String \u003d\u003e foreign key table name \u003cLI\u003e\u003cB\u003eFKCOLUMN_NAME\u003c/B\u003e String \u003d\u003e foreign key column name \u003cLI\u003e\u003cB\u003eKEY_SEQ\u003c/B\u003e short \u003d\u003e sequence number within a foreign key( a value of 1 represents the first column of the foreign key, a value of 2 would represent the second column within the foreign key). \u003cLI\u003e\u003cB\u003eUPDATE_RULE\u003c/B\u003e short \u003d\u003e What happens to a foreign key when the primary key is updated: \u003cUL\u003e \u003cLI\u003e importedNoAction - do not allow update of primary key if it has been imported \u003cLI\u003e importedKeyCascade - change imported key to agree with primary key update \u003cLI\u003e importedKeySetNull - change imported key to \u003ccode\u003eNULL\u003c/code\u003e if its primary key has been updated \u003cLI\u003e importedKeySetDefault - change imported key to default values if its primary key has been updated \u003cLI\u003e importedKeyRestrict - same as importedKeyNoAction (for ODBC 2.x compatibility) \u003c/UL\u003e \u003cLI\u003e\u003cB\u003eDELETE_RULE\u003c/B\u003e short \u003d\u003e What happens to the foreign key when primary is deleted. \u003cUL\u003e \u003cLI\u003e importedKeyNoAction - do not allow delete of primary key if it has been imported \u003cLI\u003e importedKeyCascade - delete rows that import a deleted key \u003cLI\u003e importedKeySetNull - change imported key to NULL if its primary key has been deleted \u003cLI\u003e importedKeyRestrict - same as importedKeyNoAction (for ODBC 2.x compatibility) \u003cLI\u003e importedKeySetDefault - change imported key to default if its primary key has been deleted \u003c/UL\u003e \u003cLI\u003e\u003cB\u003eFK_NAME\u003c/B\u003e String \u003d\u003e foreign key name (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003ePK_NAME\u003c/B\u003e String \u003d\u003e primary key name (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eDEFERRABILITY\u003c/B\u003e short \u003d\u003e can the evaluation of foreign key constraints be deferred until commit \u003cUL\u003e \u003cLI\u003e importedKeyInitiallyDeferred - see SQL92 for definition \u003cLI\u003e importedKeyInitiallyImmediate - see SQL92 for definition \u003cLI\u003e importedKeyNotDeferrable - see SQL92 for definition \u003c/UL\u003e \u003c/OL\u003e\n * @param catalog a catalog name; must match the catalog name as itis stored in the database; \"\" retrieves those without a catalog; \u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search\n * @param schema a schema name; must match the schema nameas it is stored in the database; \"\" retrieves those without a schema; \u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search\n * @param table a table name; must match the table name as it is storedin the database\n * @return \u003ccode\u003eResultSet\u003c/code\u003e - each row is a primary key column description\n * @exception SQLException if a database access error occurs\n * @see #getExportedKeys\n */\n","tf":{"freq":{"second":1,"store":2,"lexcept":1,"must":3,"schema":7,"referenc":1,"deferr":1,"given":1,"search":2,"commit":1,"sequenc":1,"action":4,"happen":2,"key":51,"follow":1,"except":1,"cascad":2,"catalog":7,"descript":3,"number":1,"without":2,"restrict":2,"row":2,"databas":4,"updat":5,"definit":3,"column":9,"match":3,"foreign":12,"iti":1,"compat":2,"result":1,"allow":2,"delet":6,"use":2,"constraint":1,"namea":1,"defer":2,"order":1,"name":13,"mean":2,"valu":3,"immedi":1,"initi":2,"primari":18,"storedin":1,"export":1,"may":6,"error":1,"repres":2,"evalu":1,"access":1,"narrow":2,"agre":1,"retriev":3,"tabl":11,"string":10,"within":2,"chang":5,"first":1,"occur":1},"maxFreq":51,"totalTerms":242},"loc":0}