{"id":10048,"className":"java.sql.Wrapper","methodName":"unwrap","signature":"\u003cjava.sql.Wrapper: T unwrap(java.lang.Class)\u003e","javadoc":"/** \n * Returns an object that implements the given interface to allow access to non-standard methods, or standard methods not exposed by the proxy. If the receiver implements the interface then the result is the receiver or a proxy for the receiver. If the receiver is a wrapper and the wrapped object implements the interface then the result is the wrapped object or a proxy for the wrapped object. Otherwise return the the result of calling \u003ccode\u003eunwrap\u003c/code\u003e recursively on the wrapped object or a proxy for that result. If the receiver is not a wrapper and does not implement the interface, then an \u003ccode\u003eSQLException\u003c/code\u003e is thrown.\n * @param iface A Class defining an interface that the result must implement.\n * @return an object that implements the interface. May be a proxy for the actual implementing object.\n * @throws java.sql.SQLException If no object found that implements the interface\n * @since 1.6\n */\n","tf":{"freq":{"otherwis":1,"result":5,"call":1,"defin":1,"allow":1,"unwrap":2,"lexcept":2,"object":8,"ifac":1,"must":1,"given":1,"wrapper":2,"expos":1,"wrap":4,"thrown":1,"may":1,"proxi":5,"standard":2,"receiv":5,"access":1,"non":1,"sql":1,"actual":1,"java":1,"method":2,"recurs":1,"found":1},"maxFreq":8,"totalTerms":54},"loc":0}