{"id":10168,"className":"java.sql.CallableStatement","methodName":"getString","signature":"\u003cjava.sql.CallableStatement: java.lang.String getString(java.lang.String)\u003e","javadoc":"/** \n * Retrieves the value of a JDBC \u003ccode\u003eCHAR\u003c/code\u003e, \u003ccode\u003eVARCHAR\u003c/code\u003e, or \u003ccode\u003eLONGVARCHAR\u003c/code\u003e parameter as a \u003ccode\u003eString\u003c/code\u003e in the Java programming language. \u003cp\u003e For the fixed-length type JDBC \u003ccode\u003eCHAR\u003c/code\u003e, the \u003ccode\u003eString\u003c/code\u003e object returned has exactly the same value the SQL \u003ccode\u003eCHAR\u003c/code\u003e value had in the database, including any padding added by the database.\n * @param parameterName the name of the parameter\n * @return the parameter value. If the value is SQL \u003ccode\u003eNULL\u003c/code\u003e, the resultis \u003ccode\u003enull\u003c/code\u003e.\n * @exception SQLException if parameterName does not correspond to a namedparameter; if a database access error occurs or this method is called on a closed \u003ccode\u003eCallableStatement\u003c/code\u003e\n * @exception SQLFeatureNotSupportedException if the JDBC driver does not supportthis method\n * @see #setString\n * @since 1.4\n */\n","tf":{"freq":{"call":1,"namedparamet":1,"correspond":1,"lexcept":1,"languag":1,"object":1,"type":1,"close":1,"resulti":1,"fix":1,"callabl":1,"exact":1,"name":3,"length":1,"driver":1,"valu":5,"pad":1,"except":3,"support":1,"includ":1,"error":1,"paramet":5,"supportthi":1,"access":1,"databas":3,"lfeatur":1,"statement":1,"program":1,"retriev":1,"string":4,"ad":1,"method":2,"java":1,"occur":1},"maxFreq":5,"totalTerms":52},"loc":0}