{"id":10140,"className":"java.sql.CallableStatement","methodName":"registerOutParameter","signature":"\u003cjava.sql.CallableStatement: void registerOutParameter(java.lang.String,int,int)\u003e","javadoc":"/** \n * Registers the parameter named \u003ccode\u003eparameterName\u003c/code\u003e to be of JDBC type \u003ccode\u003esqlType\u003c/code\u003e.  All OUT parameters must be registered before a stored procedure is executed. \u003cp\u003e The JDBC type specified by \u003ccode\u003esqlType\u003c/code\u003e for an OUT parameter determines the Java type that must be used in the \u003ccode\u003eget\u003c/code\u003e method to read the value of that parameter. \u003cp\u003e This version of \u003ccode\u003eregisterOutParameter\u003c/code\u003e should be used when the parameter is of JDBC type \u003ccode\u003eNUMERIC\u003c/code\u003e or \u003ccode\u003eDECIMAL\u003c/code\u003e.\n * @param parameterName the name of the parameter\n * @param sqlType SQL type code defined by \u003ccode\u003ejava.sql.Types\u003c/code\u003e.\n * @param scale the desired number of digits to the right of thedecimal point.  It must be greater than or equal to zero.\n * @exception SQLException if parameterName does not correspond to a namedparameter; if a database access error occurs or this method is called on a closed \u003ccode\u003eCallableStatement\u003c/code\u003e\n * @exception SQLFeatureNotSupportedException if \u003ccode\u003esqlType\u003c/code\u003e isa \u003ccode\u003eARRAY\u003c/code\u003e, \u003ccode\u003eBLOB\u003c/code\u003e, \u003ccode\u003eCLOB\u003c/code\u003e, \u003ccode\u003eDATALINK\u003c/code\u003e, \u003ccode\u003eJAVA_OBJECT\u003c/code\u003e, \u003ccode\u003eNCHAR\u003c/code\u003e, \u003ccode\u003eNCLOB\u003c/code\u003e, \u003ccode\u003eNVARCHAR\u003c/code\u003e, \u003ccode\u003eLONGNVARCHAR\u003c/code\u003e, \u003ccode\u003eREF\u003c/code\u003e, \u003ccode\u003eROWID\u003c/code\u003e, \u003ccode\u003eSQLXML\u003c/code\u003e or  \u003ccode\u003eSTRUCT\u003c/code\u003e data type and the JDBC driver does not support this data type or if the JDBC driver does not support this method\n * @since 1.4\n * @see Types\n */\n","tf":{"freq":{"call":1,"defin":1,"scale":1,"namedparamet":1,"greater":1,"store":1,"correspond":1,"data":2,"lexcept":1,"use":2,"thedecim":1,"zero":1,"type":13,"desir":1,"must":3,"close":1,"specifi":1,"version":1,"callabl":1,"name":5,"isa":1,"regist":4,"read":1,"driver":2,"valu":1,"right":1,"except":3,"support":3,"error":1,"paramet":11,"equal":1,"number":1,"access":1,"databas":1,"procedur":1,"lfeatur":1,"statement":1,"digit":1,"point":1,"sql":5,"determin":1,"java":2,"method":3,"execut":1,"occur":1},"maxFreq":13,"totalTerms":90},"loc":0}