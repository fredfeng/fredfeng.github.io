{"id":10960,"className":"java.sql.DatabaseMetaData","methodName":"getFunctions","signature":"\u003cjava.sql.DatabaseMetaData: java.sql.ResultSet getFunctions(java.lang.String,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Retrieves a description of the  system and user functions available in the given catalog. \u003cP\u003e Only system and user function descriptions matching the schema and function name criteria are returned.  They are ordered by \u003ccode\u003eFUNCTION_CAT\u003c/code\u003e, \u003ccode\u003eFUNCTION_SCHEM\u003c/code\u003e, \u003ccode\u003eFUNCTION_NAME\u003c/code\u003e and \u003ccode\u003eSPECIFIC_ NAME\u003c/code\u003e. \u003cP\u003eEach function description has the the following columns: \u003cOL\u003e \u003cLI\u003e\u003cB\u003eFUNCTION_CAT\u003c/B\u003e String \u003d\u003e function catalog (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eFUNCTION_SCHEM\u003c/B\u003e String \u003d\u003e function schema (may be \u003ccode\u003enull\u003c/code\u003e) \u003cLI\u003e\u003cB\u003eFUNCTION_NAME\u003c/B\u003e String \u003d\u003e function name.  This is the name used to invoke the function \u003cLI\u003e\u003cB\u003eREMARKS\u003c/B\u003e String \u003d\u003e explanatory comment on the function \u003cLI\u003e\u003cB\u003eFUNCTION_TYPE\u003c/B\u003e short \u003d\u003e kind of function: \u003cUL\u003e \u003cLI\u003efunctionResultUnknown - Cannot determine if a return value or table will be returned \u003cLI\u003e functionNoTable- Does not return a table \u003cLI\u003e functionReturnsTable - Returns a table \u003c/UL\u003e \u003cLI\u003e\u003cB\u003eSPECIFIC_NAME\u003c/B\u003e String  \u003d\u003e the name which uniquely identifies this function within its schema.  This is a user specified, or DBMS generated, name that may be different then the \u003ccode\u003eFUNCTION_NAME\u003c/code\u003e for example with overload functions \u003c/OL\u003e \u003cp\u003e A user may not have permission to execute any of the functions that are returned by \u003ccode\u003egetFunctions\u003c/code\u003e\n * @param catalog a catalog name; must match the catalog name as itis stored in the database; \"\" retrieves those without a catalog; \u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search\n * @param schemaPattern a schema name pattern; must match the schema nameas it is stored in the database; \"\" retrieves those without a schema; \u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search\n * @param functionNamePattern a function name pattern; must match thefunction name as it is stored in the database\n * @return \u003ccode\u003eResultSet\u003c/code\u003e - each row is a function description\n * @exception SQLException if a database access error occurs\n * @see #getSearchStringEscape\n * @since 1.6\n */\n","tf":{"freq":{"store":3,"lexcept":1,"thefunct":1,"must":3,"function":21,"specifi":1,"schema":8,"uniqu":1,"given":1,"search":3,"permiss":1,"follow":1,"except":1,"invok":1,"catalog":7,"descript":4,"avail":1,"without":2,"row":1,"databas":4,"explanatori":1,"system":2,"determin":1,"column":1,"will":1,"match":4,"comment":1,"execut":1,"iti":1,"result":2,"use":3,"identifi":1,"escap":1,"kind":1,"namea":1,"order":1,"name":13,"mean":2,"valu":1,"may":4,"error":1,"criteria":1,"overload":1,"unknown":1,"access":1,"differ":1,"narrow":2,"pattern":4,"retriev":3,"tabl":5,"string":6,"generat":1,"exampl":1,"within":1,"user":4,"occur":1},"maxFreq":21,"totalTerms":143},"loc":0}