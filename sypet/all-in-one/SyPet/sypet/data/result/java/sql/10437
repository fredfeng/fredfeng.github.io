{"id":10437,"className":"java.sql.Statement","methodName":"executeBatch","signature":"\u003cjava.sql.Statement: int[] executeBatch()\u003e","javadoc":"/** \n * Submits a batch of commands to the database for execution and if all commands execute successfully, returns an array of update counts. The \u003ccode\u003eint\u003c/code\u003e elements of the array that is returned are ordered to correspond to the commands in the batch, which are ordered according to the order in which they were added to the batch. The elements in the array returned by the method \u003ccode\u003eexecuteBatch\u003c/code\u003e may be one of the following: \u003cOL\u003e \u003cLI\u003eA number greater than or equal to zero -- indicates that the command was processed successfully and is an update count giving the number of rows in the database that were affected by the command\u0027s execution \u003cLI\u003eA value of \u003ccode\u003eSUCCESS_NO_INFO\u003c/code\u003e -- indicates that the command was processed successfully but that the number of rows affected is unknown \u003cP\u003e If one of the commands in a batch update fails to execute properly, this method throws a \u003ccode\u003eBatchUpdateException\u003c/code\u003e, and a JDBC driver may or may not continue to process the remaining commands in the batch.  However, the driver\u0027s behavior must be consistent with a particular DBMS, either always continuing to process commands or never continuing to process commands.  If the driver continues processing after a failure, the array returned by the method \u003ccode\u003eBatchUpdateException.getUpdateCounts\u003c/code\u003e will contain as many elements as there are commands in the batch, and at least one of the elements will be the following: \u003cP\u003e \u003cLI\u003eA value of \u003ccode\u003eEXECUTE_FAILED\u003c/code\u003e -- indicates that the command failed to execute successfully and occurs only if a driver continues to process commands after a command fails \u003c/OL\u003e \u003cP\u003e The possible implementations and return values have been modified in the Java 2 SDK, Standard Edition, version 1.3 to accommodate the option of continuing to proccess commands in a batch update after a \u003ccode\u003eBatchUpdateException\u003c/code\u003e obejct has been thrown.\n * @return an array of update counts containing one element for eachcommand in the batch.  The elements of the array are ordered according to the order in which commands were added to the batch.\n * @exception SQLException if a database access error occurs,this method is called on a closed \u003ccode\u003eStatement\u003c/code\u003e or the driver does not support batch statements. Throws  {@link BatchUpdateException}(a subclass of \u003ccode\u003eSQLException\u003c/code\u003e) if one of the commands sent to the database fails to execute properly or attempts to return a result set.\n * @throws SQLTimeoutException when the driver has determined that thetimeout value that was specified by the  {@code setQueryTimeout}method has been exceeded and has at least attempted to cancel the currently running  {@code Statement}\n * @see #addBatch\n * @see DatabaseMetaData#supportsBatchUpdates\n * @since 1.2\n */\n","tf":{"freq":{"greater":1,"count":4,"least":2,"lexcept":2,"possibl":1,"particular":1,"cancel":1,"zero":1,"must":1,"specifi":1,"close":1,"sent":1,"fail":4,"thetimeout":1,"proper":2,"howev":1,"option":1,"follow":2,"element":6,"mani":1,"thrown":1,"except":6,"support":2,"eachcommand":1,"submit":1,"consist":1,"alway":1,"number":3,"databas":5,"row":2,"continu":6,"statement":3,"queri":1,"ltimeout":1,"updat":11,"batch":18,"determin":1,"contain":2,"subclass":1,"will":2,"execut":8,"array":6,"attempt":2,"result":1,"call":1,"give":1,"correspond":1,"behavior":1,"link":1,"proccess":1,"one":5,"data":1,"add":1,"run":1,"affect":2,"meta":1,"version":1,"accommod":1,"indic":3,"order":5,"current":1,"command":17,"valu":4,"driver":6,"may":3,"error":1,"standard":1,"failur":1,"exceed":1,"edit":1,"equal":1,"accord":2,"unknown":1,"access":1,"process":7,"either":1,"never":1,"remain":1,"obejct":1,"modifi":1,"ad":2,"java":1,"method":5,"success":4,"timeout":1,"occur":2},"maxFreq":18,"totalTerms":216},"loc":0}