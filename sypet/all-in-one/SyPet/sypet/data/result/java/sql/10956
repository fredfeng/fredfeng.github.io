{"id":10956,"className":"java.sql.DatabaseMetaData","methodName":"getSchemas","signature":"\u003cjava.sql.DatabaseMetaData: java.sql.ResultSet getSchemas(java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Retrieves the schema names available in this database.  The results are ordered by \u003ccode\u003eTABLE_CATALOG\u003c/code\u003e and \u003ccode\u003eTABLE_SCHEM\u003c/code\u003e. \u003cP\u003eThe schema columns are: \u003cOL\u003e \u003cLI\u003e\u003cB\u003eTABLE_SCHEM\u003c/B\u003e String \u003d\u003e schema name \u003cLI\u003e\u003cB\u003eTABLE_CATALOG\u003c/B\u003e String \u003d\u003e catalog name (may be \u003ccode\u003enull\u003c/code\u003e) \u003c/OL\u003e\n * @param catalog a catalog name; must match the catalog name as it is storedin the database;\"\" retrieves those without a catalog; null means catalog name should not be used to narrow down the search.\n * @param schemaPattern a schema name; must match the schema name as it isstored in the database; null means schema name should not be used to narrow down the search.\n * @return a \u003ccode\u003eResultSet\u003c/code\u003e object in which each row is aschema description\n * @exception SQLException if a database access error occurs\n * @see #getSearchStringEscape\n * @since 1.6\n */\n","tf":{"freq":{"result":2,"lexcept":1,"use":2,"object":1,"escap":1,"must":2,"isstor":1,"schema":8,"order":1,"search":3,"name":9,"mean":2,"storedin":1,"except":1,"may":1,"error":1,"catalog":6,"descript":1,"avail":1,"access":1,"without":1,"databas":4,"row":1,"narrow":2,"pattern":1,"retriev":2,"string":3,"column":1,"match":2,"aschema":1,"occur":1},"maxFreq":9,"totalTerms":65},"loc":0}