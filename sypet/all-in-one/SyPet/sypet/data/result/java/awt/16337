{"id":16337,"className":"java.awt.Font","methodName":"getStringBounds","signature":"\u003cjava.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)\u003e","javadoc":"/** \n * Returns the logical bounds of the specified \u003ccode\u003eString\u003c/code\u003e in the specified \u003ccode\u003eFontRenderContext\u003c/code\u003e.  The logical bounds contains the origin, ascent, advance, and height, which includes the leading.  The logical bounds does not always enclose all the text.  For example, in some languages and in some fonts, accent marks can be positioned above the ascent or below the descent. To obtain a visual bounding box, which encloses all the text, use the  {@link TextLayout#getBounds() getBounds} method of\u003ccode\u003eTextLayout\u003c/code\u003e. \u003cp\u003eNote: The returned bounds is in baseline-relative coordinates (see  {@link java.awt.Font class notes}).\n * @param str the specified \u003ccode\u003eString\u003c/code\u003e\n * @param frc the specified \u003ccode\u003eFontRenderContext\u003c/code\u003e\n * @return a {@link Rectangle2D} that is the bounding box of thespecified \u003ccode\u003eString\u003c/code\u003e in the specified \u003ccode\u003eFontRenderContext\u003c/code\u003e.\n * @see FontRenderContext\n * @see Font#createGlyphVector\n * @since 1.2\n */\n","tf":{"freq":{"frc":1,"link":3,"use":1,"lead":1,"languag":1,"rectangl":1,"specifi":5,"height":1,"vector":1,"layout":2,"relat":1,"thespecifi":1,"accent":1,"note":2,"coordin":1,"text":4,"includ":1,"creat":1,"font":7,"alway":1,"glyph":1,"origin":1,"baselin":1,"mark":1,"descent":1,"ascent":2,"logic":3,"render":4,"awt":1,"obtain":1,"visual":1,"str":1,"advanc":1,"contain":1,"string":4,"enclos":2,"context":4,"exampl":1,"java":1,"method":1,"box":2,"posit":1,"bound":9},"maxFreq":9,"totalTerms":82},"loc":4}