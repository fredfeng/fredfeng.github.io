{"id":18577,"className":"java.awt.image.VolatileImage","methodName":"validate","signature":"\u003cjava.awt.image.VolatileImage: int validate(java.awt.GraphicsConfiguration)\u003e","javadoc":"/** \n * Attempts to restore the drawing surface of the image if the surface had been lost since the last \u003ccode\u003evalidate\u003c/code\u003e call.  Also validates this image against the given GraphicsConfiguration parameter to see whether operations from this image to the GraphicsConfiguration are compatible.  An example of an incompatible combination might be a situation where a VolatileImage object was created on one graphics device and then was used to render to a different graphics device.  Since VolatileImage objects tend to be very device-specific, this operation might not work as intended, so the return code from this validate call would note that incompatibility.  A null or incorrect value for gc may cause incorrect values to be returned from \u003ccode\u003evalidate\u003c/code\u003e and may cause later problems with rendering.\n * @param gc   a \u003ccode\u003eGraphicsConfiguration\u003c/code\u003e object for thisimage to be validated against.  A null gc implies that the validate method should skip the compatibility test.\n * @return  \u003ccode\u003eIMAGE_OK\u003c/code\u003e if the image did not need validation\u003cBR\u003e\u003ccode\u003eIMAGE_RESTORED\u003c/code\u003e if the image needed restoration. Restoration implies that the contents of the image may have been affected and the image may need to be re-rendered.\u003cBR\u003e \u003ccode\u003eIMAGE_INCOMPATIBLE\u003c/code\u003e if the image is incompatible with the \u003ccode\u003eGraphicsConfiguration\u003c/code\u003e object passed into the \u003ccode\u003evalidate\u003c/code\u003e method.  Incompatibility implies that the image may need to be recreated with a new \u003ccode\u003eComponent\u003c/code\u003e or \u003ccode\u003eGraphicsConfiguration\u003c/code\u003e in order to get an image that can be used successfully with this \u003ccode\u003eGraphicsConfiguration\u003c/code\u003e. An incompatible image is not checked for whether restoration was necessary, so the state of the image is unchanged after a return value of \u003ccode\u003eIMAGE_INCOMPATIBLE\u003c/code\u003e and this return value implies nothing about whether the image needs to be restored.\n * @see java.awt.GraphicsConfiguration\n * @see java.awt.Component\n * @see #IMAGE_OK\n * @see #IMAGE_RESTORED\n * @see #IMAGE_INCOMPATIBLE\n */\n","tf":{"freq":{"need":5,"last":1,"test":1,"tend":1,"skip":1,"necessari":1,"situat":1,"whether":3,"draw":1,"given":1,"oper":2,"combin":1,"impli":4,"incorrect":2,"work":1,"unchang":1,"creat":1,"imag":15,"incompat":5,"render":3,"content":1,"awt":2,"configur":7,"surfac":2,"restor":5,"compat":2,"attempt":1,"might":2,"valid":9,"call":2,"graphic":9,"lost":1,"thisimag":1,"one":1,"state":1,"use":2,"object":4,"affect":1,"order":1,"noth":1,"valu":4,"recreat":1,"note":1,"may":5,"check":1,"later":1,"paramet":1,"problem":1,"pass":1,"differ":1,"specif":1,"caus":2,"compon":2,"exampl":1,"java":2,"method":2,"devic":3,"intend":1,"success":1,"also":1},"maxFreq":15,"totalTerms":139},"loc":0}