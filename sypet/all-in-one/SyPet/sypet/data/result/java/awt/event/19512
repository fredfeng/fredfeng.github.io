{"id":19512,"className":"java.awt.event.HierarchyEvent","methodName":"HierarchyEvent","signature":"\u003cjava.awt.event.HierarchyEvent: void HierarchyEvent(java.awt.Component,int,java.awt.Component,java.awt.Container)\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eHierarchyEvent\u003c/code\u003e object to identify a change in the \u003ccode\u003eComponent\u003c/code\u003e hierarchy. \u003cp\u003eThis method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @param source          The \u003ccode\u003eComponent\u003c/code\u003e object thatoriginated the event\n * @param id              An integer indicating the type of event.For information on allowable values, see the class description for  {@link HierarchyEvent}\n * @param changed         The \u003ccode\u003eComponent\u003c/code\u003e at the top ofthe hierarchy which was changed\n * @param changedParent   The parent of the \u003ccode\u003echanged\u003c/code\u003e component.This may be the parent before or after the change, depending on the type of change\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is {@code null}\n * @see #getSource()\n * @see #getID()\n * @see #getChanged()\n * @see #getChangedParent()\n */\n","tf":{"freq":{"allow":1,"link":1,"identifi":1,"hierarchi":5,"object":2,"type":2,"indic":1,"event":5,"ofth":1,"valu":1,"top":1,"argument":2,"may":1,"except":2,"depend":1,"descript":1,"thatorigin":1,"parent":4,"illeg":2,"inform":1,"compon":4,"sourc":4,"method":1,"chang":9,"construct":1,"integ":1},"maxFreq":9,"totalTerms":56},"loc":5}