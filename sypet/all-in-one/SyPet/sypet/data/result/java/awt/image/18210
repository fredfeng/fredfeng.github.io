{"id":18210,"className":"java.awt.image.ColorModel","methodName":"isCompatibleRaster","signature":"\u003cjava.awt.image.ColorModel: boolean isCompatibleRaster(java.awt.image.Raster)\u003e","javadoc":"/** \n * Returns \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003eraster\u003c/code\u003e is compatible with this \u003ccode\u003eColorModel\u003c/code\u003e and \u003ccode\u003efalse\u003c/code\u003e if it is not. Since \u003ccode\u003eColorModel\u003c/code\u003e is an abstract class, any instance is an instance of a subclass.  Subclasses must override this method since the implementation in this abstract class throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @param raster the {@link Raster} object to test for compatibility\n * @return \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003eraster\u003c/code\u003e is compatiblewith this \u003ccode\u003eColorModel\u003c/code\u003e.\n * @throws UnsupportedOperationException if thismethod has not been implemented for this \u003ccode\u003eColorModel\u003c/code\u003e\n */\n","tf":{"freq":{"fals":1,"except":2,"model":4,"unsupport":2,"test":1,"link":1,"true":2,"object":1,"must":1,"instanc":2,"raster":5,"thismethod":1,"compatiblewith":1,"color":4,"oper":2,"subclass":2,"method":1,"compat":3},"maxFreq":5,"totalTerms":36},"loc":4}