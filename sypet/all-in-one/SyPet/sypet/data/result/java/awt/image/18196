{"id":18196,"className":"java.awt.image.ColorModel","methodName":"getDataElements","signature":"\u003cjava.awt.image.ColorModel: java.lang.Object getDataElements(int,java.lang.Object)\u003e","javadoc":"/** \n * Returns a data element array representation of a pixel in this \u003ccode\u003eColorModel\u003c/code\u003e, given an integer pixel representation in the default RGB color model. This array can then be passed to the {@link WritableRaster#setDataElements} method ofa  {@link WritableRaster} object.  If the pixel variable is\u003ccode\u003enull\u003c/code\u003e, a new array will be allocated.  If \u003ccode\u003epixel\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e, it must be a primitive array of type \u003ccode\u003etransferType\u003c/code\u003e; otherwise, a \u003ccode\u003eClassCastException\u003c/code\u003e is thrown.  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if \u003ccode\u003epixel\u003c/code\u003e is not large enough to hold a pixel value for this \u003ccode\u003eColorModel\u003c/code\u003e. The pixel array is returned. If this \u003ccode\u003etransferType\u003c/code\u003e is not supported, a \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e will be thrown.  Since \u003ccode\u003eColorModel\u003c/code\u003e is an abstract class, any instance is an instance of a subclass.  Subclasses must override this method since the implementation in this abstract class throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @param rgb the integer pixel representation in the default RGBcolor model\n * @param pixel the specified pixel\n * @return an array representation of the specified pixel in this\u003ccode\u003eColorModel\u003c/code\u003e.\n * @throws ClassCastException if \u003ccode\u003epixel\u003c/code\u003eis not a primitive array of type \u003ccode\u003etransferType\u003c/code\u003e\n * @throws ArrayIndexOutOfBoundsException if\u003ccode\u003epixel\u003c/code\u003e is not large enough to hold a pixel value for this \u003ccode\u003eColorModel\u003c/code\u003e\n * @throws UnsupportedOperationException if thismethod is not supported by this \u003ccode\u003eColorModel\u003c/code\u003e\n * @see WritableRaster#setDataElements\n * @see SampleModel#setDataElements\n */\n","tf":{"freq":{"otherwis":1,"primit":2,"unsupport":3,"model":9,"pixel":14,"link":2,"variabl":1,"data":5,"object":1,"enough":2,"type":5,"must":2,"specifi":2,"thismethod":1,"given":1,"bcolor":1,"oper":3,"valu":2,"element":5,"index":2,"thrown":3,"except":7,"transfer":3,"support":2,"hold":2,"rgb":1,"writabl":3,"instanc":2,"pass":1,"represent":4,"raster":3,"cast":2,"color":7,"larg":2,"subclass":2,"will":2,"method":2,"integ":2,"ofa":1,"sampl":1,"bound":2,"array":9,"alloc":1},"maxFreq":14,"totalTerms":128},"loc":4}