{"id":17573,"className":"java.awt.Container","methodName":"findComponentAt","signature":"\u003cjava.awt.Container: java.awt.Component findComponentAt(java.awt.Point)\u003e","javadoc":"/** \n * Locates the visible child component that contains the specified point.  The top-most child component is returned in the case where there is overlap in the components.  If the containing child component is a Container, this method will continue searching for the deepest nested child component.  Components which are not visible are ignored during the search.\u003cp\u003e The findComponentAt method is different from getComponentAt in that getComponentAt only searches the Container\u0027s immediate children; if the containing component is a Container, findComponentAt will search that child to find a nested component.\n * @param p   the point.\n * @return null if the component does not contain the position.If there is no child component at the requested point and the point is within the bounds of the container the container itself is returned.\n * @throws NullPointerException if {@code p} is {@code null}\n * @see Component#contains\n * @see #getComponentAt\n * @since 1.2\n */\n","tf":{"freq":{"visibl":2,"children":1,"specifi":1,"child":6,"search":4,"request":1,"immedi":1,"find":4,"top":1,"except":1,"locat":1,"ignor":1,"overlap":1,"nest":2,"continu":1,"point":4,"differ":1,"compon":17,"contain":10,"will":2,"pointer":1,"method":2,"within":1,"posit":1,"deepest":1,"bound":1},"maxFreq":17,"totalTerms":69},"loc":3}