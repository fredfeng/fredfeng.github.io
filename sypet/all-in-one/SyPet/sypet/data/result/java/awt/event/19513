{"id":19513,"className":"java.awt.event.HierarchyEvent","methodName":"HierarchyEvent","signature":"\u003cjava.awt.event.HierarchyEvent: void HierarchyEvent(java.awt.Component,int,java.awt.Component,java.awt.Container,long)\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eHierarchyEvent\u003c/code\u003e object to identify a change in the \u003ccode\u003eComponent\u003c/code\u003e hierarchy. \u003cp\u003e This method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @param source          The \u003ccode\u003eComponent\u003c/code\u003e object thatoriginated the event\n * @param id              An integer indicating the type of event.For information on allowable values, see the class description for  {@link HierarchyEvent}\n * @param changed         The \u003ccode\u003eComponent\u003c/code\u003e at the topof the hierarchy which was changed\n * @param changedParent   The parent of the \u003ccode\u003echanged\u003c/code\u003e component.This may be the parent before or after the change, depending on the type of change\n * @param changeFlags     A bitmask which indicates the type(s) ofthe \u003ccode\u003eHIERARCHY_CHANGED\u003c/code\u003e events represented in this event object. For information on allowable values, see the class description for  {@link HierarchyEvent}\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is null\n * @see #getSource()\n * @see #getID()\n * @see #getChanged()\n * @see #getChangedParent()\n * @see #getChangeFlags()\n */\n","tf":{"freq":{"allow":2,"link":2,"identifi":1,"hierarchi":6,"object":3,"type":3,"indic":2,"event":8,"ofth":1,"valu":2,"argument":2,"except":2,"may":1,"repres":1,"depend":1,"descript":2,"thatorigin":1,"parent":4,"illeg":2,"topof":1,"inform":2,"flag":2,"compon":4,"bitmask":1,"sourc":4,"method":1,"chang":11,"construct":1,"integ":1},"maxFreq":11,"totalTerms":74},"loc":6}