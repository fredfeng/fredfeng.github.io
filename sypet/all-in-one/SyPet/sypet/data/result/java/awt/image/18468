{"id":18468,"className":"java.awt.image.DirectColorModel","methodName":"getRed","signature":"\u003cjava.awt.image.DirectColorModel: int getRed(java.lang.Object)\u003e","javadoc":"/** \n * Returns the red color component for the specified pixel, scaled from 0 to 255 in the default RGB \u003ccode\u003eColorSpace\u003c/code\u003e, sRGB.  A color conversion is done if necessary.  The pixel value is specified by an array of data elements of type \u003ccode\u003etransferType\u003c/code\u003e passed in as an object reference. The returned value is a non pre-multiplied value.  Thus, if the alpha is premultiplied, this method divides it out before returning the value.  If the alpha value is 0, for example, the red value is 0. If \u003ccode\u003einData\u003c/code\u003e is not a primitive array of type \u003ccode\u003etransferType\u003c/code\u003e, a \u003ccode\u003eClassCastException\u003c/code\u003e is thrown.  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if \u003ccode\u003einData\u003c/code\u003e is not large enough to hold a pixel value for this \u003ccode\u003eColorModel\u003c/code\u003e.  Since \u003ccode\u003eDirectColorModel\u003c/code\u003e can be subclassed, subclasses inherit the implementation of this method and if they don\u0027t override it then they throw an exception if they use an unsupported \u003ccode\u003etransferType\u003c/code\u003e. An \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e is thrown if this \u003ccode\u003etransferType\u003c/code\u003e is not supported by this \u003ccode\u003eColorModel\u003c/code\u003e.\n * @param inData the array containing the pixel value\n * @return the value of the red component of the specified pixel.\n * @throws ArrayIndexOutOfBoundsException if \u003ccode\u003einData\u003c/code\u003e is notlarge enough to hold a pixel value for this color model\n * @throws ClassCastException if \u003ccode\u003einData\u003c/code\u003e is not aprimitive array of type \u003ccode\u003etransferType\u003c/code\u003e\n * @throws UnsupportedOperationException if this \u003ccode\u003etransferType\u003c/code\u003eis not supported by this color model\n */\n","tf":{"freq":{"primit":1,"scale":1,"unsupport":3,"model":5,"pixel":6,"convers":1,"data":6,"use":1,"object":1,"enough":2,"space":1,"type":9,"necessari":1,"specifi":3,"premultipli":1,"oper":2,"refer":1,"notlarg":1,"alpha":2,"multipli":1,"valu":10,"direct":1,"element":1,"index":2,"thrown":3,"except":7,"transfer":6,"support":2,"thus":1,"hold":2,"done":1,"divid":1,"pass":1,"non":1,"aprimit":1,"red":4,"cast":2,"compon":2,"color":8,"larg":1,"pre":1,"contain":1,"subclass":2,"exampl":1,"method":2,"bound":2,"array":6},"maxFreq":10,"totalTerms":121},"loc":21}