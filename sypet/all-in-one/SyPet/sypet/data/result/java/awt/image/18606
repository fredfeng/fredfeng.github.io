{"id":18606,"className":"java.awt.image.FilteredImageSource","methodName":"addConsumer","signature":"\u003cjava.awt.image.FilteredImageSource: void addConsumer(java.awt.image.ImageConsumer)\u003e","javadoc":"/** \n * Adds the specified \u003ccode\u003eImageConsumer\u003c/code\u003e to the list of consumers interested in data for the filtered image. An instance of the original \u003ccode\u003eImageFilter\u003c/code\u003e is created (using the filter\u0027s \u003ccode\u003egetFilterInstance\u003c/code\u003e method) to manipulate the image data for the specified \u003ccode\u003eImageConsumer\u003c/code\u003e. The newly created filter instance is then passed to the \u003ccode\u003eaddConsumer\u003c/code\u003e method of the original \u003ccode\u003eImageProducer\u003c/code\u003e. \u003cp\u003e This method is public as a side effect of this class implementing the \u003ccode\u003eImageProducer\u003c/code\u003e interface. It should not be called from user code, and its behavior if called from user code is unspecified.\n * @param ic  the consumer for the filtered image\n * @see ImageConsumer\n */\n","tf":{"freq":{"unspecifi":1,"call":2,"manipul":1,"creat":2,"behavior":1,"data":2,"origin":2,"use":1,"produc":2,"list":1,"add":3,"imag":9,"pass":1,"specifi":2,"instanc":3,"consum":7,"newli":1,"effect":1,"side":1,"interest":1,"method":3,"user":2,"filter":6},"maxFreq":9,"totalTerms":55},"loc":10}