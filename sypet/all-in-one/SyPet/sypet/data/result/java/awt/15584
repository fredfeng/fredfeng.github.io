{"id":15584,"className":"java.awt.Dialog","methodName":"setModalityType","signature":"\u003cjava.awt.Dialog: void setModalityType(java.awt.ModalityType)\u003e","javadoc":"/** \n * Sets the modality type for this dialog. See  {@link java.awt.Dialog.ModalityType ModalityType} for possible modality types.\u003cp\u003e If the given modality type is not supported, \u003ccode\u003eMODELESS\u003c/code\u003e is used. You may want to call \u003ccode\u003egetModalityType()\u003c/code\u003e after calling this method to ensure that the modality type has been set. \u003cp\u003e Note: changing modality of the visible dialog may have no effect until it is hidden and then shown again.\n * @param type specifies whether dialog blocks input to otherwindows when shown. \u003ccode\u003enull\u003c/code\u003e value and unsupported modality types are equivalent to \u003ccode\u003eMODELESS\u003c/code\u003e\n * @exception SecurityException if the calling thread does not have permissionto create modal dialogs with the given \u003ccode\u003emodalityType\u003c/code\u003e\n * @see java.awt.Dialog#getModalityType\n * @see java.awt.Toolkit#isModalityTypeSupported\n * @since     1.6\n */\n","tf":{"freq":{"call":3,"unsupport":1,"visibl":1,"link":1,"use":1,"possibl":1,"block":1,"type":13,"whether":1,"ensur":1,"specifi":1,"given":2,"equival":1,"permissionto":1,"thread":1,"toolkit":1,"valu":1,"dialog":6,"modal":14,"want":1,"note":1,"except":2,"may":2,"support":2,"creat":1,"otherwindow":1,"shown":2,"input":1,"awt":3,"secur":1,"effect":1,"hidden":1,"java":3,"method":1,"chang":1},"maxFreq":14,"totalTerms":76},"loc":19}