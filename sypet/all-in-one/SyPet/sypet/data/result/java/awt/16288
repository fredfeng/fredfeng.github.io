{"id":16288,"className":"java.awt.Font","methodName":"getFont","signature":"\u003cjava.awt.Font: java.awt.Font getFont(java.util.Map)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eFont\u003c/code\u003e appropriate to the attributes. If \u003ccode\u003eattributes\u003c/code\u003econtains a \u003ccode\u003eFONT\u003c/code\u003e attribute with a valid \u003ccode\u003eFont\u003c/code\u003e as its value, it will be merged with any remaining attributes.  See {@link java.awt.font.TextAttribute#FONT} for moreinformation.\n * @param attributes the attributes to assign to the new\u003ccode\u003eFont\u003c/code\u003e\n * @return a new \u003ccode\u003eFont\u003c/code\u003e created with the specifiedattributes\n * @throws NullPointerException if \u003ccode\u003eattributes\u003c/code\u003e is null.\n * @since 1.2\n * @see java.awt.font.TextAttribute\n */\n","tf":{"freq":{"valid":1,"except":1,"assign":1,"text":2,"creat":1,"font":7,"link":1,"specifiedattribut":1,"moreinform":1,"awt":2,"attribut":9,"remain":1,"appropri":1,"contain":1,"will":1,"pointer":1,"valu":1,"java":2,"merg":1},"maxFreq":9,"totalTerms":36},"loc":37}