{"id":19417,"className":"java.awt.event.KeyEvent","methodName":"KeyEvent","signature":"\u003cjava.awt.event.KeyEvent: void KeyEvent(java.awt.Component,int,long,int,int,char)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eKeyEvent\u003c/code\u003e object. \u003cp\u003e This method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @param source    The \u003ccode\u003eComponent\u003c/code\u003e that originated the event\n * @param id              An integer indicating the type of event.For information on allowable values, see the class description for  {@link KeyEvent}\n * @param when      A long integer that specifies the time the eventoccurred. Passing negative or zero value is not recommended\n * @param modifiers The modifier keys down during event (shift, ctrl,alt, meta). Passing negative value is not recommended. Zero value means that no modifiers were passed. Use either an extended _DOWN_MASK or old _MASK modifiers, however do not mix models in the one event. The extended modifiers are preferred for using\n * @param keyCode   The integer code for an actual key, or VK_UNDEFINED(for a key-typed event)\n * @param keyChar   The Unicode character generated by this event, orCHAR_UNDEFINED (for key-pressed and key-released events which do not map to a valid Unicode character)\n * @throws IllegalArgumentException  if \u003ccode\u003eid\u003c/code\u003e is\u003ccode\u003eKEY_TYPED\u003c/code\u003e and \u003ccode\u003ekeyChar\u003c/code\u003e is \u003ccode\u003eCHAR_UNDEFINED\u003c/code\u003e; or if \u003ccode\u003eid\u003c/code\u003e is \u003ccode\u003eKEY_TYPED\u003c/code\u003e and \u003ccode\u003ekeyCode\u003c/code\u003e is not \u003ccode\u003eVK_UNDEFINED\u003c/code\u003e\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is null\n * @see #getSource()\n * @see #getID()\n * @see #getWhen()\n * @see #getModifiers()\n * @see #getKeyCode()\n * @see #getKeyChar()\n */\n","tf":{"freq":{"valid":1,"press":1,"model":1,"old":1,"allow":1,"eventoccur":1,"one":1,"link":1,"use":2,"object":1,"ctrl":1,"zero":2,"type":2,"recommend":2,"meta":1,"specifi":1,"time":1,"releas":1,"indic":1,"alt":1,"event":10,"map":1,"mean":1,"valu":4,"howev":1,"key":14,"argument":3,"except":3,"charact":2,"origin":1,"descript":1,"illeg":3,"mix":1,"pass":3,"inform":1,"either":1,"compon":1,"generat":1,"unicod":2,"modifi":6,"actual":1,"sourc":4,"method":1,"negat":2,"construct":1,"prefer":1,"integ":3,"shift":1},"maxFreq":14,"totalTerms":98},"loc":4}