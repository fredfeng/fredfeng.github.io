{"id":18528,"className":"java.awt.image.PixelGrabber","methodName":"PixelGrabber","signature":"\u003cjava.awt.image.PixelGrabber: void PixelGrabber(java.awt.image.ImageProducer,int,int,int,int,int[],int,int)\u003e","javadoc":"/** \n * Create a PixelGrabber object to grab the (x, y, w, h) rectangular section of pixels from the image produced by the specified ImageProducer into the given array. The pixels are stored into the array in the default RGB ColorModel. The RGB data for pixel (i, j) where (i, j) is inside the rectangle (x, y, w, h) is stored in the array at \u003ctt\u003epix[(j - y) * scansize + (i - x) + off]\u003c/tt\u003e.\n * @param ip the \u003ccode\u003eImageProducer\u003c/code\u003e that produces theimage from which to retrieve pixels\n * @param x the x coordinate of the upper left corner of the rectangleof pixels to retrieve from the image, relative to the default (unscaled) size of the image\n * @param y the y coordinate of the upper left corner of the rectangleof pixels to retrieve from the image\n * @param w the width of the rectangle of pixels to retrieve\n * @param h the height of the rectangle of pixels to retrieve\n * @param pix the array of integers which are to be used to hold theRGB pixels retrieved from the image\n * @param off the offset into the array of where to store the first pixel\n * @param scansize the distance from one row of pixels to the next inthe array\n * @see ColorModel#getRGBdefault\n */\n","tf":{"freq":{"rectangular":1,"grab":1,"model":2,"grabber":2,"store":3,"pixel":13,"next":1,"one":1,"data":1,"use":1,"object":1,"scansiz":2,"rectangl":3,"specifi":1,"upper":2,"inth":1,"height":1,"given":1,"rectangleof":2,"relat":1,"left":2,"offset":1,"coordin":2,"corner":2,"creat":1,"hold":1,"width":1,"produc":4,"imag":7,"row":1,"section":1,"size":1,"unscal":1,"color":2,"retriev":6,"distanc":1,"theimag":1,"insid":1,"first":1,"integ":1,"bdefault":1,"array":6,"pix":2},"maxFreq":13,"totalTerms":88},"loc":11}