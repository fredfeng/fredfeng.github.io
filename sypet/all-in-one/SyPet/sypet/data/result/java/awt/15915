{"id":15915,"className":"java.awt.GridLayout","methodName":"layoutContainer","signature":"\u003cjava.awt.GridLayout: void layoutContainer(java.awt.Container)\u003e","javadoc":"/** \n * Lays out the specified container using this layout. \u003cp\u003e This method reshapes the components in the specified target container in order to satisfy the constraints of the \u003ccode\u003eGridLayout\u003c/code\u003e object. \u003cp\u003e The grid layout manager determines the size of individual components by dividing the free space in the container into equal-sized portions according to the number of rows and columns in the layout. The container\u0027s free space equals the container\u0027s size minus any insets and any specified horizontal or vertical gap. All components in a grid layout are given the same size.\n * @param parent   the container in which to do the layout\n * @see java.awt.Container\n * @see java.awt.Container#doLayout\n */\n","tf":{"freq":{"constraint":1,"use":1,"reshap":1,"object":1,"space":2,"specifi":3,"free":2,"given":1,"order":1,"layout":8,"grid":3,"horizont":1,"individu":1,"portion":1,"minus":1,"vertic":1,"inset":1,"lay":1,"manag":1,"parent":1,"divid":1,"number":1,"equal":2,"accord":1,"row":1,"size":4,"awt":2,"compon":3,"satisfi":1,"contain":9,"determin":1,"column":1,"target":1,"java":2,"method":1,"gap":1},"maxFreq":9,"totalTerms":65},"loc":51}