{"id":18228,"className":"java.awt.image.WritableRaster","methodName":"setDataElements","signature":"\u003cjava.awt.image.WritableRaster: void setDataElements(int,int,java.awt.image.Raster)\u003e","javadoc":"/** \n * Sets the data for a rectangle of pixels from an input Raster. The input Raster must be compatible with this WritableRaster in that they must have the same number of bands, corresponding bands must have the same number of bits per sample, the TransferTypes and NumDataElements must be the same, and the packing used by the getDataElements/setDataElements must be identical. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.\n * @param x        The X coordinate of the pixel location.\n * @param y        The Y coordinate of the pixel location.\n * @param inRaster Raster containing data to place at x,y.\n * @throws NullPointerException if inRaster is null.\n * @throws ArrayIndexOutOfBoundsException if the coordinates are notin bounds.\n */\n","tf":{"freq":{"pixel":3,"correspond":1,"data":6,"use":1,"pack":1,"type":1,"rectangl":1,"must":5,"band":2,"ident":1,"notin":1,"place":1,"howev":1,"coordin":4,"element":4,"locat":2,"thrown":1,"may":1,"except":3,"transfer":1,"index":2,"check":1,"guarante":1,"number":2,"writabl":1,"raster":6,"bit":1,"input":2,"num":1,"per":1,"explicit":1,"contain":1,"pointer":1,"sampl":1,"bound":5,"compat":1,"array":2},"maxFreq":6,"totalTerms":71},"loc":23}