{"id":18449,"className":"java.awt.image.RescaleOp","methodName":"filter","signature":"\u003cjava.awt.image.RescaleOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)\u003e","javadoc":"/** \n * Rescales the pixel data in the source Raster. If the destination Raster is null, a new Raster will be created. The source and destination must have the same number of bands. Otherwise, an IllegalArgumentException is thrown. Note that the number of scaling factors/offsets in this object must meet the restrictions stated in the class comments above. Otherwise, an IllegalArgumentException is thrown.\n * @param src the \u003ccode\u003eRaster\u003c/code\u003e to be filtered\n * @param dst the destination for the filtering operationor \u003ccode\u003enull\u003c/code\u003e\n * @return the filtered \u003ccode\u003eWritableRaster\u003c/code\u003e.\n * @throws IllegalArgumentException if \u003ccode\u003esrc\u003c/code\u003e and\u003ccode\u003edst\u003c/code\u003e do not have the same number of bands, or if the number of scaling factors and offsets in this \u003ccode\u003eRescaleOp\u003c/code\u003e do not meet the requirements stated in the class comments.\n */\n","tf":{"freq":{"otherwis":2,"scale":2,"pixel":1,"state":2,"data":1,"dst":2,"object":1,"must":2,"requir":1,"band":2,"rescal":2,"operationor":1,"src":2,"offset":2,"note":1,"argument":3,"except":3,"thrown":2,"creat":1,"writabl":1,"number":4,"factor":2,"meet":2,"illeg":3,"restrict":1,"raster":5,"will":1,"sourc":2,"comment":2,"filter":4,"destin":3},"maxFreq":5,"totalTerms":63},"loc":119}