{"id":18072,"className":"java.awt.image.BufferedImage","methodName":"BufferedImage","signature":"\u003cjava.awt.image.BufferedImage: void BufferedImage(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)\u003e","javadoc":"/** \n * Constructs a new \u003ccode\u003eBufferedImage\u003c/code\u003e with a specified \u003ccode\u003eColorModel\u003c/code\u003e and \u003ccode\u003eRaster\u003c/code\u003e.  If the number and types of bands in the \u003ccode\u003eSampleModel\u003c/code\u003e of the \u003ccode\u003eRaster\u003c/code\u003e do not match the number and types required by the \u003ccode\u003eColorModel\u003c/code\u003e to represent its color and alpha components, a  {@link RasterFormatException} is thrown.  Thismethod can multiply or divide the color \u003ccode\u003eRaster\u003c/code\u003e data by alpha to match the \u003ccode\u003ealphaPremultiplied\u003c/code\u003e state in the \u003ccode\u003eColorModel\u003c/code\u003e.  Properties for this \u003ccode\u003eBufferedImage\u003c/code\u003e can be established by passing in a  {@link Hashtable} of \u003ccode\u003eString\u003c/code\u003e/\u003ccode\u003eObject\u003c/code\u003epairs.\n * @param cm \u003ccode\u003eColorModel\u003c/code\u003e for the new image\n * @param raster     \u003ccode\u003eRaster\u003c/code\u003e for the image data\n * @param isRasterPremultiplied   if \u003ccode\u003etrue\u003c/code\u003e, the data inthe raster has been premultiplied with alpha.\n * @param properties \u003ccode\u003eHashtable\u003c/code\u003e of\u003ccode\u003eString\u003c/code\u003e/\u003ccode\u003eObject\u003c/code\u003e pairs.\n * @exception \u003ccode\u003eRasterFormatException\u003c/code\u003e if the number andtypes of bands in the \u003ccode\u003eSampleModel\u003c/code\u003e of the \u003ccode\u003eRaster\u003c/code\u003e do not match the number and types required by the \u003ccode\u003eColorModel\u003c/code\u003e to represent its color and alpha components.\n * @exception \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if\u003ccode\u003eraster\u003c/code\u003e is incompatible with \u003ccode\u003ecm\u003c/code\u003e\n * @see ColorModel\n * @see Raster\n * @see WritableRaster\n */\n","tf":{"freq":{"model":8,"andtyp":1,"pair":2,"link":2,"state":1,"data":3,"object":2,"type":3,"specifi":1,"premultipli":3,"buffer":3,"inth":1,"band":2,"requir":2,"thismethod":1,"alpha":5,"multipli":1,"argument":1,"except":5,"thrown":1,"hashtabl":2,"repres":2,"establish":1,"true":1,"divid":1,"writabl":1,"number":4,"format":2,"imag":5,"incompat":1,"illeg":1,"pass":1,"raster":13,"compon":2,"color":9,"string":2,"properti":2,"match":3,"construct":1,"sampl":2},"maxFreq":13,"totalTerms":104},"loc":169}