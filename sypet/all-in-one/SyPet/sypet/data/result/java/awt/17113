{"id":17113,"className":"java.awt.FontMetrics","methodName":"charWidth","signature":"\u003cjava.awt.FontMetrics: int charWidth(int)\u003e","javadoc":"/** \n * Returns the advance width of the specified character in this \u003ccode\u003eFont\u003c/code\u003e.  The advance is the distance from the leftmost point to the rightmost point on the character\u0027s baseline.  Note that the advance of a \u003ccode\u003eString\u003c/code\u003e is not necessarily the sum of the advances of its characters. \u003cp\u003eThis method doesn\u0027t validate the specified character to be a valid Unicode code point. The caller must validate the character value using  {@link java.lang.Character#isValidCodePoint(int) Character.isValidCodePoint} if necessary.\n * @param codePoint the character (Unicode code point) to be measured\n * @return    the advance width of the specified characterin the \u003ccode\u003eFont\u003c/code\u003e described by this \u003ccode\u003eFontMetrics\u003c/code\u003e object.\n * @see #charsWidth(char[],int,int)\n * @see #stringWidth(String)\n */\n","tf":{"freq":{"caller":1,"valid":5,"link":1,"sum":1,"use":1,"object":1,"necessari":1,"lang":1,"must":1,"specifi":3,"valu":1,"note":1,"characterin":1,"charact":8,"font":3,"width":5,"describ":1,"baselin":1,"point":7,"advanc":5,"metric":1,"string":3,"leftmost":1,"distanc":1,"unicod":2,"measur":1,"method":1,"java":1,"rightmost":1,"necessarili":1},"maxFreq":8,"totalTerms":62},"loc":13}