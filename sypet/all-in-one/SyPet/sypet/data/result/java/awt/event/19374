{"id":19374,"className":"java.awt.event.ActionEvent","methodName":"ActionEvent","signature":"\u003cjava.awt.event.ActionEvent: void ActionEvent(java.lang.Object,int,java.lang.String,int)\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eActionEvent\u003c/code\u003e object with modifier keys. \u003cp\u003e This method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e. A \u003ccode\u003enull\u003c/code\u003e \u003ccode\u003ecommand\u003c/code\u003e string is legal, but not recommended.\n * @param source  The object that originated the event\n * @param id      An integer that identifies the event.For information on allowable values, see the class description for  {@link ActionEvent}\n * @param command A string that may specify a command (possibly oneof several) associated with the event\n * @param modifiers The modifier keys down during event(shift, ctrl, alt, meta). Passing negative parameter is not recommended. Zero value means that no modifiers were passed\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is null\n * @see #getSource()\n * @see #getID()\n * @see #getActionCommand()\n * @see #getModifiers()\n */\n","tf":{"freq":{"legal":1,"allow":1,"link":1,"possibl":1,"identifi":1,"object":2,"zero":1,"ctrl":1,"recommend":2,"meta":1,"specifi":1,"associ":1,"alt":1,"event":7,"command":4,"action":4,"mean":1,"valu":2,"key":2,"argument":2,"except":2,"may":1,"paramet":1,"origin":1,"descript":1,"illeg":2,"sever":1,"pass":2,"inform":1,"string":2,"modifi":5,"negat":1,"sourc":4,"method":1,"construct":1,"oneof":1,"integ":1,"shift":1},"maxFreq":7,"totalTerms":66},"loc":3}