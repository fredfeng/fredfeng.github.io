{"id":19917,"className":"java.awt.geom.CubicCurve2D","methodName":"getPathIterator","signature":"\u003cjava.awt.geom.CubicCurve2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)\u003e","javadoc":"/** \n * Return an iteration object that defines the boundary of the flattened shape. The iterator for this class is not multi-threaded safe, which means that this \u003ccode\u003eCubicCurve2D\u003c/code\u003e class does not guarantee that modifications to the geometry of this \u003ccode\u003eCubicCurve2D\u003c/code\u003e object do not affect any iterations of that geometry that are already in process.\n * @param at an optional \u003ccode\u003eAffineTransform\u003c/code\u003e to be applied to thecoordinates as they are returned in the iteration, or \u003ccode\u003enull\u003c/code\u003e if untransformed coordinates are desired\n * @param flatness the maximum amount that the control pointsfor a given curve can vary from colinear before a subdivided curve is replaced by a straight line connecting the end points\n * @return    the \u003ccode\u003ePathIterator\u003c/code\u003e object that returns thegeometry of the outline of this \u003ccode\u003eCubicCurve2D\u003c/code\u003e, one segment at a time.\n * @since 1.2\n */\n","tf":{"freq":{"defin":1,"outlin":1,"connect":1,"segment":1,"one":1,"line":1,"untransform":1,"object":3,"desir":1,"affect":1,"amount":1,"transform":1,"time":1,"flatten":1,"given":1,"thecoordin":1,"thread":1,"path":2,"mean":1,"curv":5,"end":1,"option":1,"pointsfor":1,"coordin":1,"subdivid":1,"control":1,"safe":1,"guarante":1,"flat":1,"cubic":3,"shape":1,"colinear":1,"thegeometri":1,"process":1,"point":1,"appli":1,"maximum":1,"replac":1,"multi":1,"alreadi":1,"iter":6,"boundari":1,"straight":1,"modif":1,"geometri":2,"vari":1,"affin":1},"maxFreq":6,"totalTerms":62},"loc":3}