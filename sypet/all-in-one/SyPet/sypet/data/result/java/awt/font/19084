{"id":19084,"className":"java.awt.font.TextLayout","methodName":"getCaretInfo","signature":"\u003cjava.awt.font.TextLayout: float[] getCaretInfo(java.awt.font.TextHitInfo,java.awt.geom.Rectangle2D)\u003e","javadoc":"/** \n * Returns information about the caret corresponding to \u003ccode\u003ehit\u003c/code\u003e. The first element of the array is the intersection of the caret with the baseline, as a distance along the baseline. The second element of the array is the inverse slope (run/rise) of the caret, measured with respect to the baseline at that point. \u003cp\u003e This method is meant for informational use.  To display carets, it is better to use \u003ccode\u003egetCaretShapes\u003c/code\u003e.\n * @param hit a hit on a character in this \u003ccode\u003eTextLayout\u003c/code\u003e\n * @param bounds the bounds to which the caret info is constructed.The bounds is in baseline-relative coordinates.\n * @return a two-element array containing the position and slope ofthe caret.  The returned caret info is in baseline-relative coordinates.\n * @see #getCaretShapes(int,Rectangle2D,TextLayout.CaretPolicy)\n * @see Font#getItalicAngle\n */\n","tf":{"freq":{"second":1,"correspond":1,"use":2,"run":1,"rectangl":1,"info":3,"invers":1,"hit":3,"slope":2,"rise":1,"ofth":1,"layout":2,"relat":2,"along":1,"coordin":2,"element":3,"text":2,"charact":1,"font":1,"ital":1,"baselin":5,"meant":1,"display":1,"polici":1,"shape":2,"two":1,"inform":2,"caret":11,"point":1,"better":1,"contain":1,"intersect":1,"distanc":1,"angl":1,"measur":1,"method":1,"construct":1,"posit":1,"first":1,"bound":3,"respect":1,"array":3},"maxFreq":11,"totalTerms":74},"loc":6}