{"id":18709,"className":"java.awt.image.ImageProducer","methodName":"requestTopDownLeftRightResend","signature":"\u003cjava.awt.image.ImageProducer: void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)\u003e","javadoc":"/** \n * Requests, on behalf of the \u003ccode\u003eImageConsumer\u003c/code\u003e, that the \u003ccode\u003eImageProducer\u003c/code\u003e attempt to resend the image data one more time in TOPDOWNLEFTRIGHT order so that higher quality conversion algorithms which depend on receiving pixels in order can be used to produce a better output version of the image.  The \u003ccode\u003eImageProducer\u003c/code\u003e is free to ignore this call if it cannot resend the data in that order.  If the data can be resent, the \u003ccode\u003eImageProducer\u003c/code\u003e should respond by executing the following minimum set of \u003ccode\u003eImageConsumer\u003c/code\u003e method calls: \u003cpre\u003e ic.setHints(TOPDOWNLEFTRIGHT | \u003c otherhints \u003e); ic.setPixels(...);      // As many times as needed ic.imageComplete(); \u003c/pre\u003e\n * @param ic the specified \u003ccode\u003eImageConsumer\u003c/code\u003e\n * @see ImageConsumer#setHints\n */\n","tf":{"freq":{"need":1,"attempt":1,"behalf":1,"call":2,"minimum":1,"pixel":2,"one":1,"data":3,"higher":1,"convers":1,"use":1,"specifi":1,"version":1,"algorithm":1,"consum":4,"free":1,"time":2,"order":3,"respond":1,"request":2,"left":1,"right":1,"resent":1,"complet":1,"follow":1,"top":1,"mani":1,"otherhint":1,"ignor":1,"depend":1,"resend":3,"qualiti":1,"hint":2,"produc":4,"receiv":1,"imag":10,"pre":2,"better":1,"method":1,"execut":1,"output":1},"maxFreq":10,"totalTerms":68},"loc":0}