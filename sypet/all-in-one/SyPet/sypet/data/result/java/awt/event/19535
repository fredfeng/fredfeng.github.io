{"id":19535,"className":"java.awt.event.InputEvent","methodName":"getModifiersExText","signature":"\u003cjava.awt.event.InputEvent: java.lang.String getModifiersExText(int)\u003e","javadoc":"/** \n * Returns a String describing the extended modifier keys and mouse buttons, such as \"Shift\", \"Button1\", or \"Ctrl+Shift\". These strings can be localized by changing the \u003ccode\u003eawt.properties\u003c/code\u003e file. \u003cp\u003e Note that passing negative parameter is incorrect, and will cause the returning an unspecified string. Zero parameter means that no modifiers were passed and will cause the returning an empty string.\n * @param modifiers a modifier mask describing the extendedmodifier keys and mouse buttons for the event\n * @return a text description of the combination of extendedmodifier keys and mouse buttons that were held down during the event.\n * @since 1.4\n */\n","tf":{"freq":{"unspecifi":1,"mask":1,"ctrl":1,"zero":1,"mous":3,"button":4,"event":2,"file":1,"combin":1,"mean":1,"incorrect":1,"key":3,"note":1,"held":1,"text":2,"descript":1,"paramet":2,"describ":2,"extendedmodifi":2,"empti":1,"pass":2,"awt":1,"caus":2,"string":4,"modifi":5,"will":2,"negat":1,"chang":1,"local":1,"properti":1,"shift":2},"maxFreq":5,"totalTerms":54},"loc":36}