{"id":17492,"className":"java.awt.FileDialog","methodName":"FileDialog","signature":"\u003cjava.awt.FileDialog: void FileDialog(java.awt.Dialog,java.lang.String)\u003e","javadoc":"/** \n * Creates a file dialog window with the specified title for loading a file. The files shown are those in the current directory. This is a convenience method for \u003ccode\u003eFileDialog(parent, title, LOAD)\u003c/code\u003e.\n * @param parent   the owner of the dialog\n * @param title    the title of the dialog; a \u003ccode\u003enull\u003c/code\u003e valuewill be accepted without causing a \u003ccode\u003eNullPointerException\u003c/code\u003e to be thrown\n * @exception java.lang.IllegalArgumentException if the \u003ccode\u003eparent\u003c/code\u003e\u0027s\u003ccode\u003eGraphicsConfiguration\u003c/code\u003e is not from a screen device;\n * @exception java.lang.IllegalArgumentException if \u003ccode\u003eparent\u003c/code\u003eis \u003ccode\u003enull\u003c/code\u003e; this exception is always thrown when \u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \u003ccode\u003etrue\u003c/code\u003e\n * @see java.awt.GraphicsEnvironment#isHeadless\n * @since     1.5\n */\n","tf":{"freq":{"graphic":3,"directori":1,"accept":1,"lang":2,"specifi":1,"file":5,"valuewil":1,"current":1,"dialog":5,"conveni":1,"argument":2,"screen":1,"except":6,"thrown":2,"creat":1,"alway":1,"titl":4,"environ":2,"true":1,"shown":1,"parent":4,"headless":2,"without":1,"illeg":2,"awt":1,"configur":1,"caus":1,"window":1,"owner":1,"pointer":1,"method":1,"load":1,"java":3,"devic":1},"maxFreq":6,"totalTerms":63},"loc":3}