{"id":15379,"className":"java.awt.GraphicsEnvironment","methodName":"preferProportionalFonts","signature":"\u003cjava.awt.GraphicsEnvironment: void preferProportionalFonts()\u003e","javadoc":"/** \n * Indicates a preference for proportional over non-proportional (e.g. dual-spaced CJK fonts) fonts in the mapping of logical fonts to physical fonts. If the default mapping contains fonts for which proportional and non-proportional variants exist, then calling this method indicates the mapping should use a proportional variant. \u003cp\u003e The actual change in font rendering behavior resulting from a call to this method is implementation dependent; it may have no effect at all. The behavior may differ between font rendering in lightweight and peered components. Since calling this method requests a different font, clients should expect different metrics, and may need to recalculate window sizes and layout. Therefore this method should be called before user interface initialisation.\n * @since 1.5\n */\n","tf":{"freq":{"need":1,"call":4,"result":1,"client":1,"behavior":2,"proport":6,"use":1,"therefor":1,"space":1,"variant":2,"expect":1,"dual":1,"indic":2,"layout":1,"request":1,"map":3,"exist":1,"peer":1,"recalcul":1,"may":3,"initialis":1,"physic":1,"font":9,"depend":1,"logic":1,"size":1,"non":2,"render":2,"differ":3,"window":1,"compon":1,"effect":1,"metric":1,"contain":1,"actual":1,"method":4,"lightweight":1,"chang":1,"prefer":2,"user":1},"maxFreq":9,"totalTerms":71},"loc":4}