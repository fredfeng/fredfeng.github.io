{"id":17401,"className":"java.awt.Label","methodName":"Label","signature":"\u003cjava.awt.Label: void Label(java.lang.String,int)\u003e","javadoc":"/** \n * Constructs a new label that presents the specified string of text with the specified alignment. Possible values for \u003ccode\u003ealignment\u003c/code\u003e are \u003ccode\u003eLabel.LEFT\u003c/code\u003e, \u003ccode\u003eLabel.RIGHT\u003c/code\u003e, and \u003ccode\u003eLabel.CENTER\u003c/code\u003e.\n * @param text the string that the label presents.A \u003ccode\u003enull\u003c/code\u003e value will be accepted without causing a NullPointerException to be thrown.\n * @param alignment   the alignment value.\n * @exception HeadlessException if GraphicsEnvironment.isHeadless()returns true.\n * @see java.awt.GraphicsEnvironment#isHeadless\n */\n","tf":{"freq":{"graphic":2,"thrown":1,"except":3,"text":2,"accept":1,"align":4,"environ":2,"true":1,"possibl":1,"label":6,"headless":3,"without":1,"specifi":2,"present":2,"awt":1,"caus":1,"string":2,"will":1,"pointer":1,"java":1,"valu":3,"construct":1},"maxFreq":6,"totalTerms":42},"loc":5}