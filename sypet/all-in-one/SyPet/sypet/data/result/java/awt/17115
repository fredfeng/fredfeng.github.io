{"id":17115,"className":"java.awt.FontMetrics","methodName":"stringWidth","signature":"\u003cjava.awt.FontMetrics: int stringWidth(java.lang.String)\u003e","javadoc":"/** \n * Returns the total advance width for showing the specified \u003ccode\u003eString\u003c/code\u003e in this \u003ccode\u003eFont\u003c/code\u003e.  The advance is the distance from the leftmost point to the rightmost point on the string\u0027s baseline. \u003cp\u003e Note that the advance of a \u003ccode\u003eString\u003c/code\u003e is not necessarily the sum of the advances of its characters.\n * @param str the \u003ccode\u003eString\u003c/code\u003e to be measured\n * @return    the advance width of the specified \u003ccode\u003eString\u003c/code\u003ein the \u003ccode\u003eFont\u003c/code\u003e described by this \u003ccode\u003eFontMetrics\u003c/code\u003e.\n * @throws NullPointerException if str is null.\n * @see #bytesWidth(byte[],int,int)\n * @see #charsWidth(char[],int,int)\n * @see #getStringBounds(String,Graphics)\n */\n","tf":{"freq":{"total":1,"graphic":1,"except":1,"charact":1,"font":3,"width":5,"describ":1,"sum":1,"baselin":1,"show":1,"specifi":2,"point":2,"str":2,"advanc":5,"metric":1,"string":8,"distanc":1,"leftmost":1,"pointer":1,"measur":1,"rightmost":1,"necessarili":1,"bound":1,"note":1},"maxFreq":8,"totalTerms":44},"loc":6}