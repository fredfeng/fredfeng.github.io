{"id":19061,"className":"java.awt.font.GlyphVector","methodName":"getGlyphVisualBounds","signature":"\u003cjava.awt.font.GlyphVector: java.awt.Shape getGlyphVisualBounds(int)\u003e","javadoc":"/** \n * Returns the visual bounds of the specified glyph within the \u003ccode\u003eGlyphVector\u003c/code\u003e. The bounds returned by this method is positioned around the origin of each individual glyph.\n * @param glyphIndex the index into this \u003ccode\u003eGlyphVector\u003c/code\u003ethat corresponds to the glyph from which to retrieve its visual bounds\n * @return a \u003ccode\u003eShape\u003c/code\u003e that is the visual bounds of theglyph at the specified \u003ccode\u003eglyphIndex\u003c/code\u003e.\n * @throws IndexOutOfBoundsException if \u003ccode\u003eglyphIndex\u003c/code\u003eis less than 0 or greater than or equal to the number of glyphs in this \u003ccode\u003eGlyphVector\u003c/code\u003e\n * @see #getGlyphLogicalBounds\n */\n","tf":{"freq":{"except":1,"index":5,"greater":1,"correspond":1,"glyph":12,"origin":1,"number":1,"equal":1,"shape":1,"logic":1,"specifi":2,"around":1,"visual":4,"retriev":1,"vector":3,"theglyph":1,"method":1,"within":1,"posit":1,"less":1,"bound":7,"individu":1},"maxFreq":12,"totalTerms":49},"loc":0}