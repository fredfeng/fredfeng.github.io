{"id":17775,"className":"java.awt.print.PrinterJob","methodName":"getPrinterJob","signature":"\u003cjava.awt.print.PrinterJob: java.awt.print.PrinterJob getPrinterJob()\u003e","javadoc":"/** \n * Creates and returns a \u003ccode\u003ePrinterJob\u003c/code\u003e which is initially associated with the default printer. If no printers are available on the system, a PrinterJob will still be returned from this method, but \u003ccode\u003egetPrintService()\u003c/code\u003e will return \u003ccode\u003enull\u003c/code\u003e, and calling {@link #print() print} with this \u003ccode\u003ePrinterJob\u003c/code\u003e mightgenerate an exception.  Applications that need to determine if there are suitable printers before creating a \u003ccode\u003ePrinterJob\u003c/code\u003e should ensure that the array returned from {@link #lookupPrintServices() lookupPrintServices} is not empty.\n * @return a new \u003ccode\u003ePrinterJob\u003c/code\u003e.\n * @throws SecurityException if a security manager exists and its{@link java.lang.SecurityManager#checkPrintJobAccess}method disallows this thread from creating a print job request\n */\n","tf":{"freq":{"need":1,"call":1,"servic":3,"link":3,"suitabl":1,"lang":1,"lookup":2,"applic":1,"ensur":1,"disallow":1,"associ":1,"request":1,"thread":1,"initi":1,"exist":1,"except":2,"check":1,"creat":3,"manag":2,"job":8,"still":1,"avail":1,"access":1,"print":7,"printer":9,"empti":1,"system":1,"secur":3,"mightgener":1,"determin":1,"will":2,"java":1,"method":2,"array":1},"maxFreq":9,"totalTerms":68},"loc":21}