{"id":16302,"className":"java.awt.Font","methodName":"getSize","signature":"\u003cjava.awt.Font: int getSize()\u003e","javadoc":"/** \n * Returns the point size of this \u003ccode\u003eFont\u003c/code\u003e, rounded to an integer. Most users are familiar with the idea of using \u003ci\u003epoint size\u003c/i\u003e to specify the size of glyphs in a font. This point size defines a measurement between the baseline of one line to the baseline of the following line in a single spaced text document. The point size is based on \u003ci\u003etypographic points\u003c/i\u003e, approximately 1/72 of an inch. \u003cp\u003e The Java(tm)2D API adopts the convention that one point is equivalent to one unit in user coordinates.  When using a normalized transform for converting user space coordinates to device space coordinates 72 user space units equal 1 inch in device space.  In this case one point is 1/72 of an inch.\n * @return the point size of this \u003ccode\u003eFont\u003c/code\u003e in 1/72 of aninch units.\n * @see #getSize2D\n * @see GraphicsConfiguration#getDefaultTransform\n * @see GraphicsConfiguration#getNormalizingTransform\n * @since JDK1.0\n */\n","tf":{"freq":{"defin":1,"graphic":2,"idea":1,"convent":1,"singl":1,"normal":2,"one":4,"convert":1,"use":2,"line":2,"round":1,"approxim":1,"space":5,"specifi":1,"transform":3,"document":1,"equival":1,"adopt":1,"follow":1,"coordin":3,"typograph":1,"text":1,"inch":3,"font":3,"glyph":1,"baselin":2,"equal":1,"aninch":1,"size":8,"familiar":1,"unit":3,"point":8,"configur":2,"base":1,"java":1,"measur":1,"devic":2,"user":4,"integ":1},"maxFreq":8,"totalTerms":80},"loc":3}