{"id":18288,"className":"java.awt.image.AffineTransformOp","methodName":"filter","signature":"\u003cjava.awt.image.AffineTransformOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)\u003e","javadoc":"/** \n * Transforms the source \u003cCODE\u003eRaster\u003c/CODE\u003e and stores the results in the destination \u003cCODE\u003eRaster\u003c/CODE\u003e.  This operation performs the transform band by band. \u003cp\u003e If the destination \u003cCODE\u003eRaster\u003c/CODE\u003e is null, a new \u003cCODE\u003eRaster\u003c/CODE\u003e is created. An \u003cCODE\u003eIllegalArgumentException\u003c/CODE\u003e may be thrown if the source is the same as the destination or if the number of bands in the source is not equal to the number of bands in the destination. \u003cp\u003e The coordinates of the rectangle returned by \u003ccode\u003egetBounds2D(Raster)\u003c/code\u003e are not necessarily the same as the coordinates of the \u003ccode\u003eWritableRaster\u003c/code\u003e returned by this method.  If the upper-left corner coordinates of rectangle are negative then this part of the rectangle is not drawn.  If the coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination \u003ccode\u003eRaster\u003c/code\u003e. \u003cp\u003e\n * @param src The \u003cCODE\u003eRaster\u003c/CODE\u003e to transform.\n * @param dst The \u003cCODE\u003eRaster\u003c/CODE\u003e in which to store the results of thetransformation.\n * @return The transformed \u003cCODE\u003eRaster\u003c/CODE\u003e.\n * @throws ImagingOpException if the raster cannot be transformedbecause of a data-processing error that might be caused by an invalid image format, tile format, or image-processing operation, or any other unsupported operation.\n */\n","tf":{"freq":{"might":1,"result":2,"unsupport":1,"store":2,"data":1,"perform":1,"dst":1,"rectangl":4,"thetransform":1,"upper":1,"transform":4,"band":4,"invalid":1,"transformedbecaus":1,"oper":3,"left":1,"src":1,"drawn":2,"argument":1,"coordin":4,"except":2,"may":1,"thrown":1,"error":1,"corner":1,"creat":1,"number":2,"equal":1,"writabl":1,"format":2,"imag":4,"illeg":1,"process":2,"raster":11,"caus":1,"tile":1,"negat":1,"sourc":3,"method":1,"part":1,"necessarili":1,"posit":2,"filter":2,"bound":1,"destin":5},"maxFreq":11,"totalTerms":87},"loc":24}