{"id":18401,"className":"java.awt.image.Raster","methodName":"createWritableRaster","signature":"\u003cjava.awt.image.Raster: java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Point)\u003e","javadoc":"/** \n * Creates a WritableRaster with the specified SampleModel and DataBuffer. The upper left corner of the Raster is given by the location argument. If location is null, (0, 0) will be used.\n * @param sm the specified \u003ccode\u003eSampleModel\u003c/code\u003e\n * @param db the specified \u003ccode\u003eDataBuffer\u003c/code\u003e\n * @param location the upper-left corner of the\u003ccode\u003eWritableRaster\u003c/code\u003e\n * @return a \u003ccode\u003eWritableRaster\u003c/code\u003e with the specified\u003ccode\u003eSampleModel\u003c/code\u003e, \u003ccode\u003eDataBuffer\u003c/code\u003e, and location.\n * @throws RasterFormatException if computing either\u003ccode\u003elocation.x + sm.getWidth()\u003c/code\u003e or \u003ccode\u003elocation.y + sm.getHeight()\u003c/code\u003e results in integer overflow\n * @throws RasterFormatException if \u003ccode\u003edb\u003c/code\u003e has morethan one bank and \u003ccode\u003esm\u003c/code\u003e is a PixelInterleavedSampleModel, SinglePixelPackedSampleModel, or MultiPixelPackedSampleModel.\n * @throws NullPointerException if either SampleModel or DataBuffer is null\n */\n","tf":{"freq":{"result":1,"model":7,"singl":1,"pixel":3,"interleav":1,"one":1,"data":4,"use":1,"pack":2,"specifi":4,"buffer":4,"upper":2,"height":1,"given":1,"bank":1,"left":2,"morethan":1,"argument":1,"locat":6,"except":3,"corner":2,"creat":2,"width":1,"writabl":4,"format":2,"raster":7,"either":2,"overflow":1,"multi":1,"will":1,"pointer":1,"comput":1,"integ":1,"sampl":7},"maxFreq":7,"totalTerms":80},"loc":39}