{"id":18370,"className":"java.awt.image.ComponentColorModel","methodName":"getDataElements","signature":"\u003cjava.awt.image.ComponentColorModel: java.lang.Object getDataElements(float[],int,java.lang.Object)\u003e","javadoc":"/** \n * Returns a data element array representation of a pixel in this \u003ccode\u003eColorModel\u003c/code\u003e, given an array of normalized color/alpha components.  This array can then be passed to the \u003ccode\u003esetDataElements\u003c/code\u003e method of a \u003ccode\u003eWritableRaster\u003c/code\u003e object.  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if the \u003ccode\u003enormComponents\u003c/code\u003e array is not large enough to hold all the color and alpha components (starting at \u003ccode\u003enormOffset\u003c/code\u003e).  If the \u003ccode\u003eobj\u003c/code\u003e variable is \u003ccode\u003enull\u003c/code\u003e, a new array will be allocated.  If \u003ccode\u003eobj\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e, it must be a primitive array of type transferType; otherwise, a \u003ccode\u003eClassCastException\u003c/code\u003e is thrown.  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if \u003ccode\u003eobj\u003c/code\u003e is not large enough to hold a pixel value for this \u003ccode\u003eColorModel\u003c/code\u003e.\n * @param normComponents an array of normalized color and alphacomponents\n * @param normOffset the index into \u003ccode\u003enormComponents\u003c/code\u003e at which tobegin retrieving color and alpha components\n * @param obj a primitive data array to hold the returned pixel\n * @return an \u003ccode\u003eObject\u003c/code\u003e which is a primitive data arrayrepresentation of a pixel\n * @throws ClassCastException if \u003ccode\u003eobj\u003c/code\u003eis not a primitive array of type \u003ccode\u003etransferType\u003c/code\u003e\n * @throws ArrayIndexOutOfBoundsException if\u003ccode\u003eobj\u003c/code\u003e is not large enough to hold a pixel value for this \u003ccode\u003eColorModel\u003c/code\u003e or the \u003ccode\u003enormComponents\u003c/code\u003e array is not large enough to hold all of the color and alpha components starting at \u003ccode\u003enormOffset\u003c/code\u003e\n * @see WritableRaster#setDataElements\n * @see SampleModel#setDataElements\n * @since 1.4\n */\n","tf":{"freq":{"otherwis":1,"primit":4,"model":4,"pixel":5,"variabl":1,"normal":2,"data":7,"object":2,"type":4,"enough":4,"must":1,"given":1,"norm":7,"alpha":4,"valu":2,"offset":3,"element":5,"transfer":2,"index":4,"except":5,"thrown":3,"hold":5,"writabl":2,"arrayrepresent":1,"alphacompon":1,"pass":1,"represent":1,"tobegin":1,"raster":2,"cast":2,"compon":8,"start":2,"color":8,"retriev":1,"larg":4,"will":1,"obj":6,"method":1,"sampl":1,"bound":3,"alloc":1,"array":13},"maxFreq":13,"totalTerms":136},"loc":186}