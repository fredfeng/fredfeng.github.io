{"id":17586,"className":"java.awt.Container","methodName":"setFocusTraversalPolicy","signature":"\u003cjava.awt.Container: void setFocusTraversalPolicy(java.awt.FocusTraversalPolicy)\u003e","javadoc":"/** \n * Sets the focus traversal policy that will manage keyboard traversal of this Container\u0027s children, if this Container is a focus cycle root. If the argument is null, this Container inherits its policy from its focus- cycle-root ancestor. If the argument is non-null, this policy will be inherited by all focus-cycle-root children that have no keyboard- traversal policy of their own (as will, recursively, their focus-cycle- root children). \u003cp\u003e If this Container is not a focus cycle root, the policy will be remembered, but will not be used or inherited by this or any other Containers until this Container is made a focus cycle root.\n * @param policy the new focus traversal policy for this Container\n * @see #getFocusTraversalPolicy\n * @see #setFocusCycleRoot\n * @see #isFocusCycleRoot\n * @since 1.4\n * @beaninfo bound: true\n */\n","tf":{"freq":{"travers":6,"argument":2,"keyboard":2,"beaninfo":1,"root":8,"rememb":1,"manag":1,"made":1,"cycl":8,"true":1,"use":1,"children":3,"polici":9,"non":1,"contain":7,"will":5,"focus":12,"ancestor":1,"bound":1,"recurs":1},"maxFreq":12,"totalTerms":72},"loc":8}