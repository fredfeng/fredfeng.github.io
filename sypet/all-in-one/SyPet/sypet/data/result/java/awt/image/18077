{"id":18077,"className":"java.awt.image.BufferedImage","methodName":"getRGB","signature":"\u003cjava.awt.image.BufferedImage: int getRGB(int,int)\u003e","javadoc":"/** \n * Returns an integer pixel in the default RGB color model (TYPE_INT_ARGB) and default sRGB colorspace.  Color conversion takes place if this default model does not match the image \u003ccode\u003eColorModel\u003c/code\u003e.  There are only 8-bits of precision for each color component in the returned data when using this method. \u003cp\u003e An \u003ccode\u003eArrayOutOfBoundsException\u003c/code\u003e may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.\n * @param x the X coordinate of the pixel from which to getthe pixel in the default RGB color model and sRGB color space\n * @param y the Y coordinate of the pixel from which to getthe pixel in the default RGB color model and sRGB color space\n * @return an integer pixel in the default RGB color model anddefault sRGB colorspace.\n * @see #setRGB(int,int,int)\n * @see #setRGB(int,int,int,int,int[],int,int)\n */\n","tf":{"freq":{"model":6,"getth":2,"pixel":6,"convers":1,"data":1,"use":1,"space":2,"precis":1,"place":1,"howev":1,"anddefault":1,"coordin":3,"except":1,"may":1,"thrown":1,"check":1,"guarante":1,"imag":1,"bit":1,"compon":1,"color":9,"explicit":1,"take":1,"method":1,"match":1,"integ":2,"bound":3,"colorspac":2,"array":1},"maxFreq":9,"totalTerms":55},"loc":3}