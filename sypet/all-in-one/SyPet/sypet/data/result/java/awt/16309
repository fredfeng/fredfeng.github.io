{"id":16309,"className":"java.awt.Font","methodName":"getFont","signature":"\u003cjava.awt.Font: java.awt.Font getFont(java.lang.String)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eFont\u003c/code\u003e object from the system properties list. \u003ccode\u003enm\u003c/code\u003e is treated as the name of a system property to be obtained.  The \u003ccode\u003eString\u003c/code\u003e value of this property is then interpreted as a \u003ccode\u003eFont\u003c/code\u003e object according to the specification of \u003ccode\u003eFont.decode(String)\u003c/code\u003e If the specified property is not found, or the executing code does not have permission to read the property, null is returned instead.\n * @param nm the property name\n * @return a \u003ccode\u003eFont\u003c/code\u003e object that the property namedescribes, or null if no such property exists.\n * @throws NullPointerException if nm is null.\n * @since 1.2\n * @see #decode(String)\n */\n","tf":{"freq":{"decod":2,"except":1,"font":5,"interpret":1,"list":1,"object":3,"accord":1,"namedescrib":1,"specifi":1,"specif":1,"system":2,"obtain":1,"name":2,"string":3,"instead":1,"permiss":1,"pointer":1,"read":1,"valu":1,"properti":8,"execut":1,"exist":1,"found":1,"treat":1},"maxFreq":8,"totalTerms":42},"loc":3}