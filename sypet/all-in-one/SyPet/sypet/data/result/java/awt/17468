{"id":17468,"className":"java.awt.Color","methodName":"decode","signature":"\u003cjava.awt.Color: java.awt.Color decode(java.lang.String)\u003e","javadoc":"/** \n * Converts a \u003ccode\u003eString\u003c/code\u003e to an integer and returns the specified opaque \u003ccode\u003eColor\u003c/code\u003e. This method handles string formats that are used to represent octal and hexadecimal numbers.\n * @param nm a \u003ccode\u003eString\u003c/code\u003e that representsan opaque color as a 24-bit integer\n * @return     the new \u003ccode\u003eColor\u003c/code\u003e object.\n * @see java.lang.Integer#decode\n * @exception NumberFormatException  if the specified string cannotbe interpreted as a decimal, octal, or hexadecimal integer.\n * @since      JDK1.1\n */\n","tf":{"freq":{"decod":2,"except":2,"cannotb":1,"repres":1,"interpret":1,"hexadecim":2,"convert":1,"use":1,"number":2,"object":1,"format":2,"decim":1,"lang":1,"specifi":2,"handl":1,"bit":1,"opaqu":2,"octal":2,"color":3,"string":4,"java":1,"method":1,"representsan":1,"integ":4},"maxFreq":4,"totalTerms":40},"loc":5}