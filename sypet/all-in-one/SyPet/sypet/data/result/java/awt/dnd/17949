{"id":17949,"className":"java.awt.dnd.DragSourceContext","methodName":"DragSourceContext","signature":"\u003cjava.awt.dnd.DragSourceContext: void DragSourceContext(java.awt.dnd.peer.DragSourceContextPeer,java.awt.dnd.DragGestureEvent,java.awt.Cursor,java.awt.Image,java.awt.Point,java.awt.datatransfer.Transferable,java.awt.dnd.DragSourceListener)\u003e","javadoc":"/** \n * Called from \u003ccode\u003eDragSource\u003c/code\u003e, this constructor creates a new \u003ccode\u003eDragSourceContext\u003c/code\u003e given the \u003ccode\u003eDragSourceContextPeer\u003c/code\u003e for this Drag, the \u003ccode\u003eDragGestureEvent\u003c/code\u003e that triggered the Drag, the initial \u003ccode\u003eCursor\u003c/code\u003e to use for the Drag, an (optional) \u003ccode\u003eImage\u003c/code\u003e to display while the Drag is taking place, the offset of the \u003ccode\u003eImage\u003c/code\u003e origin from the hotspot at the instant of the triggering event, the \u003ccode\u003eTransferable\u003c/code\u003e subject data, and the \u003ccode\u003eDragSourceListener\u003c/code\u003e to use during the Drag and Drop operation. \u003cbr\u003e If \u003ccode\u003eDragSourceContextPeer\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e \u003ccode\u003eNullPointerException\u003c/code\u003e is thrown. \u003cbr\u003e If \u003ccode\u003eDragGestureEvent\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e \u003ccode\u003eNullPointerException\u003c/code\u003e is thrown. \u003cbr\u003e If \u003ccode\u003eCursor\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e no exception is thrown and the default drag cursor behavior is activated for this drag operation. \u003cbr\u003e If \u003ccode\u003eImage\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e no exception is thrown. \u003cbr\u003e If \u003ccode\u003eImage\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e and the offset is \u003ccode\u003enull\u003c/code\u003e \u003ccode\u003eNullPointerException\u003c/code\u003e is thrown. \u003cbr\u003e If \u003ccode\u003eTransferable\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e \u003ccode\u003eNullPointerException\u003c/code\u003e is thrown. \u003cbr\u003e If \u003ccode\u003eDragSourceListener\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e no exception is thrown.\n * @param dscp       the \u003ccode\u003eDragSourceContextPeer\u003c/code\u003e for this drag\n * @param trigger    the triggering event\n * @param dragCursor     the initial {@code Cursor} for this drag operationor  {@code null} for the default cursor handling;see \u003ca href\u003d\"DragSourceContext.html#defaultCursor\"\u003eclass level documentation\u003c/a\u003e for more details on the cursor handling mechanism during drag and drop\n * @param dragImage  the \u003ccode\u003eImage\u003c/code\u003e to drag (or \u003ccode\u003enull\u003c/code\u003e)\n * @param offset     the offset of the image origin from the hotspot at theinstant of the triggering event\n * @param t          the \u003ccode\u003eTransferable\u003c/code\u003e\n * @param dsl        the \u003ccode\u003eDragSourceListener\u003c/code\u003e\n * @throws IllegalArgumentException if the \u003ccode\u003eComponent\u003c/code\u003e associatedwith the trigger event is \u003ccode\u003enull\u003c/code\u003e.\n * @throws IllegalArgumentException if the \u003ccode\u003eDragSource\u003c/code\u003e for thetrigger event is \u003ccode\u003enull\u003c/code\u003e.\n * @throws IllegalArgumentException if the drag action for thetrigger event is \u003ccode\u003eDnDConstants.ACTION_NONE\u003c/code\u003e.\n * @throws IllegalArgumentException if the source actions for the\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e associated with the trigger event are equal to \u003ccode\u003eDnDConstants.ACTION_NONE\u003c/code\u003e.\n * @throws NullPointerException if dscp, trigger, or t are null, orif dragImage is non-null and offset is null\n */\n","tf":{"freq":{"detail":1,"cursor":8,"drop":2,"associatedwith":1,"orif":1,"level":1,"given":1,"oper":2,"event":9,"dscp":2,"action":2,"operationor":1,"dconstant":2,"place":1,"recogn":1,"instant":1,"href":1,"option":1,"argument":4,"transfer":3,"except":12,"thrown":7,"creat":1,"display":1,"imag":8,"non":1,"pointer":5,"sourc":12,"call":1,"subject":1,"behavior":1,"data":1,"use":2,"theinstant":1,"activ":1,"document":1,"thetrigg":2,"associ":1,"initi":2,"offset":5,"hotspot":2,"gestur":3,"listen":3,"constructor":1,"peer":3,"trigger":8,"drag":29,"origin":2,"equal":1,"illeg":4,"handl":2,"dsl":1,"compon":1,"take":1,"mechan":1,"context":6,"html":1},"maxFreq":29,"totalTerms":180},"loc":46}