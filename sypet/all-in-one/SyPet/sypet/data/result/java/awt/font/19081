{"id":19081,"className":"java.awt.font.TextLayout","methodName":"isLeftToRight","signature":"\u003cjava.awt.font.TextLayout: boolean isLeftToRight()\u003e","javadoc":"/** \n * Returns \u003ccode\u003etrue\u003c/code\u003e if this \u003ccode\u003eTextLayout\u003c/code\u003e has a left-to-right base direction or \u003ccode\u003efalse\u003c/code\u003e if it has a right-to-left base direction.  The \u003ccode\u003eTextLayout\u003c/code\u003e has a base direction of either left-to-right (LTR) or right-to-left (RTL).  The base direction is independent of the actual direction of text on the line, which may be either LTR, RTL, or mixed. Left-to-right layouts by default should position flush left.  If the layout is on a tabbed line, the tabs run left to right, so that logically successive layouts position left to right.  The opposite is true for RTL layouts. By default they should position flush left, and tabs run right-to-left.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the base direction of this\u003ccode\u003eTextLayout\u003c/code\u003e is left-to-right; \u003ccode\u003efalse\u003c/code\u003e otherwise.\n */\n","tf":{"freq":{"otherwis":1,"direct":6,"fals":2,"may":1,"text":4,"tab":3,"true":3,"line":2,"opposit":1,"run":2,"logic":1,"mix":1,"either":2,"independ":1,"flush":2,"layout":7,"base":5,"actual":1,"left":12,"success":1,"posit":3,"right":10},"maxFreq":12,"totalTerms":71},"loc":3}