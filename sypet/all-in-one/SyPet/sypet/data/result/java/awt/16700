{"id":16700,"className":"java.awt.Polygon","methodName":"getPathIterator","signature":"\u003cjava.awt.Polygon: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)\u003e","javadoc":"/** \n * Returns an iterator object that iterates along the boundary of the \u003ccode\u003eShape\u003c/code\u003e and provides access to the geometry of the outline of the \u003ccode\u003eShape\u003c/code\u003e.  Only SEG_MOVETO, SEG_LINETO, and SEG_CLOSE point types are returned by the iterator. Since polygons are already flat, the \u003ccode\u003eflatness\u003c/code\u003e parameter is ignored.  An optional \u003ccode\u003eAffineTransform\u003c/code\u003e can be specified in which case the coordinates returned in the iteration are transformed accordingly.\n * @param at an optional \u003ccode\u003eAffineTransform\u003c/code\u003e to be applied to thecoordinates as they are returned in the iteration, or \u003ccode\u003enull\u003c/code\u003e if untransformed coordinates are desired\n * @param flatness the maximum amount that the control pointsfor a given curve can vary from colinear before a subdivided curve is replaced by a straight line connecting the endpoints.  Since polygons are already flat the \u003ccode\u003eflatness\u003c/code\u003e parameter is ignored.\n * @return a \u003ccode\u003ePathIterator\u003c/code\u003e object that provides access to the\u003ccode\u003eShape\u003c/code\u003e object\u0027s geometry.\n * @since 1.2\n */\n","tf":{"freq":{"connect":1,"outlin":1,"line":1,"untransform":1,"object":3,"desir":1,"type":1,"specifi":1,"amount":1,"polygon":2,"transform":3,"given":1,"thecoordin":1,"path":2,"along":1,"curv":2,"option":2,"pointsfor":1,"coordin":2,"subdivid":1,"control":1,"ignor":2,"flat":5,"paramet":2,"shape":3,"accord":1,"colinear":1,"access":2,"provid":2,"endpoint":1,"point":1,"appli":1,"maximum":1,"replac":1,"alreadi":2,"iter":7,"boundari":1,"straight":1,"geometri":2,"vari":1,"affin":2},"maxFreq":7,"totalTerms":69},"loc":3}