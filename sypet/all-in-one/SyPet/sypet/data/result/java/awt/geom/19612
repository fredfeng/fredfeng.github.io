{"id":19612,"className":"java.awt.geom.AffineTransform","methodName":"preConcatenate","signature":"\u003cjava.awt.geom.AffineTransform: void preConcatenate(java.awt.geom.AffineTransform)\u003e","javadoc":"/** \n * Concatenates an \u003ccode\u003eAffineTransform\u003c/code\u003e \u003ccode\u003eTx\u003c/code\u003e to this \u003ccode\u003eAffineTransform\u003c/code\u003e Cx in a less commonly used way such that \u003ccode\u003eTx\u003c/code\u003e modifies the coordinate transformation relative to the absolute pixel space rather than relative to the existing user space. Cx is updated to perform the combined transformation. Transforming a point p by the updated transform Cx\u0027 is equivalent to first transforming p by the original transform Cx and then transforming the result by \u003ccode\u003eTx\u003c/code\u003e like this: Cx\u0027(p) \u003d Tx(Cx(p)) In matrix notation, if this transform Cx is represented by the matrix [this] and \u003ccode\u003eTx\u003c/code\u003e is represented by the matrix [Tx] then this method does the following: \u003cpre\u003e [this] \u003d [Tx] x [this] \u003c/pre\u003e\n * @param Tx the \u003ccode\u003eAffineTransform\u003c/code\u003e object to beconcatenated with this \u003ccode\u003eAffineTransform\u003c/code\u003e object.\n * @see #concatenate\n * @since 1.2\n */\n","tf":{"freq":{"result":1,"common":1,"pixel":1,"way":1,"use":1,"perform":1,"beconcaten":1,"object":2,"space":2,"transform":12,"equival":1,"relat":2,"combin":1,"rather":1,"exist":1,"less":1,"follow":1,"coordin":1,"repres":2,"matrix":3,"concaten":3,"origin":1,"absolut":1,"like":1,"point":1,"notat":1,"updat":2,"pre":3,"modifi":1,"method":1,"user":1,"first":1,"affin":4},"maxFreq":12,"totalTerms":58},"loc":192}