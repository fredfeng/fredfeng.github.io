{"id":18146,"className":"java.awt.image.ColorConvertOp","methodName":"filter","signature":"\u003cjava.awt.image.ColorConvertOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)\u003e","javadoc":"/** \n * ColorConverts the source BufferedImage. If the destination image is null, a BufferedImage will be created with an appropriate ColorModel.\n * @param src the source \u003ccode\u003eBufferedImage\u003c/code\u003e to be converted\n * @param dest the destination \u003ccode\u003eBufferedImage\u003c/code\u003e,or \u003ccode\u003enull\u003c/code\u003e\n * @return \u003ccode\u003edest\u003c/code\u003e color converted from \u003ccode\u003esrc\u003c/code\u003eor a new, converted \u003ccode\u003eBufferedImage\u003c/code\u003e if \u003ccode\u003edest\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @exception IllegalArgumentException if dest is null and this op wasconstructed using the constructor which takes only a RenderingHints argument, since the operation is ill defined.\n */\n","tf":{"freq":{"argument":2,"defin":1,"except":2,"model":1,"ill":1,"creat":1,"use":1,"convert":4,"hint":1,"imag":6,"illeg":1,"render":1,"buffer":5,"dest":4,"oper":1,"color":3,"take":1,"appropri":1,"will":1,"sourc":2,"src":2,"wasconstruct":1,"filter":1,"constructor":1,"destin":2},"maxFreq":6,"totalTerms":47},"loc":43}