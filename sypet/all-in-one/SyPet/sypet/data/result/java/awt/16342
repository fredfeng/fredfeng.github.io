{"id":16342,"className":"java.awt.Font","methodName":"createGlyphVector","signature":"\u003cjava.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)\u003e","javadoc":"/** \n * Creates a  {@link java.awt.font.GlyphVector GlyphVector} bymapping characters to glyphs one-to-one based on the Unicode cmap in this \u003ccode\u003eFont\u003c/code\u003e.  This method does no other processing besides the mapping of glyphs to characters.  This means that this method is not useful for some scripts, such as Arabic, Hebrew, Thai, and Indic, that require reordering, shaping, or ligature substitution.\n * @param frc the specified \u003ccode\u003eFontRenderContext\u003c/code\u003e\n * @param str the specified \u003ccode\u003eString\u003c/code\u003e\n * @return a new \u003ccode\u003eGlyphVector\u003c/code\u003e created with thespecified \u003ccode\u003eString\u003c/code\u003e and the specified \u003ccode\u003eFontRenderContext\u003c/code\u003e.\n */\n","tf":{"freq":{"arab":1,"frc":1,"one":2,"link":1,"hebrew":1,"use":1,"thai":1,"besid":1,"substitut":1,"specifi":3,"requir":1,"ligatur":1,"indic":1,"vector":4,"map":1,"thespecifi":1,"mean":1,"bymap":1,"charact":2,"creat":3,"font":4,"glyph":6,"shape":1,"script":1,"reorder":1,"render":2,"process":1,"awt":1,"str":1,"string":2,"cmap":1,"context":2,"unicod":1,"base":1,"java":1,"method":2},"maxFreq":6,"totalTerms":57},"loc":3}