{"id":18834,"className":"java.awt.image.renderable.RenderableImageOp","methodName":"createRendering","signature":"\u003cjava.awt.image.renderable.RenderableImageOp: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)\u003e","javadoc":"/** \n * Creates a RenderedImage which represents this RenderableImageOp (including its Renderable sources) rendered according to the given RenderContext. \u003cp\u003e This method supports chaining of either Renderable or RenderedImage operations.  If sources in the ParameterBlock used to construct the RenderableImageOp are RenderableImages, then a three step process is followed: \u003col\u003e \u003cli\u003e mapRenderContext() is called on the associated CRIF for each RenderableImage source; \u003cli\u003e createRendering() is called on each of the RenderableImage sources using the backwards-mapped RenderContexts obtained in step 1, resulting in a rendering of each source; \u003cli\u003e ContextualRenderedImageFactory.create() is called with a new ParameterBlock containing the parameters of the RenderableImageOp and the RenderedImages that were created by the createRendering() calls. \u003c/ol\u003e \u003cp\u003e If the elements of the source Vector of the ParameterBlock used to construct the RenderableImageOp are instances of RenderedImage, then the CRIF.create() method is called immediately using the original ParameterBlock. This provides a basis case for the recursion. \u003cp\u003e The created RenderedImage may have a property identified by the String HINTS_OBSERVED to indicate which RenderingHints (from the RenderContext) were used to create the image. In addition any RenderedImages that are obtained via the getSources() method on the created RenderedImage may have such a property.\n * @param renderContext The RenderContext to use to perform the rendering.\n * @return a RenderedImage containing the desired output image.\n */\n","tf":{"freq":{"via":1,"perform":1,"desir":1,"given":1,"oper":1,"three":1,"contextu":1,"follow":1,"element":1,"support":1,"creat":10,"imag":18,"provid":1,"render":31,"instanc":1,"obtain":2,"contain":2,"sourc":7,"properti":2,"output":1,"recurs":1,"call":5,"result":1,"backward":1,"use":6,"block":4,"identifi":1,"indic":1,"associ":1,"factori":1,"vector":1,"map":2,"immedi":1,"addit":1,"may":2,"includ":1,"repres":1,"paramet":5,"origin":1,"hint":1,"accord":1,"process":1,"either":1,"chain":1,"string":1,"context":6,"method":3,"construct":2,"basi":1,"step":2},"maxFreq":31,"totalTerms":142},"loc":41}