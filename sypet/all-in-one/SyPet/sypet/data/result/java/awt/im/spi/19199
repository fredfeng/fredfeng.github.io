{"id":19199,"className":"java.awt.im.spi.InputMethod","methodName":"isCompositionEnabled","signature":"\u003cjava.awt.im.spi.InputMethod: boolean isCompositionEnabled()\u003e","javadoc":"/** \n * Determines whether this input method is enabled. An input method that is enabled for composition interprets incoming events for both composition and control purposes, while a disabled input method does not interpret events for composition. \u003cp\u003e This method is called \u003cul\u003e \u003cli\u003eby  {@link java.awt.im.InputContext#isCompositionEnabled InputContext.isCompositionEnabled} and\u003cli\u003ewhen switching from this input method to a different one using the user interface or {@link java.awt.im.InputContext#selectInputMethod InputContext.selectInputMethod}. \u003c/ul\u003e\n * @return \u003ccode\u003etrue\u003c/code\u003e if this input method is enabled forcomposition; \u003ccode\u003efalse\u003c/code\u003e otherwise.\n * @throws UnsupportedOperationException if this input method does notsupport checking whether it is enabled for composition\n * @see #setCompositionEnabled\n */\n","tf":{"freq":{"otherwis":1,"fals":1,"call":1,"unsupport":1,"link":2,"one":1,"interpret":2,"use":1,"whether":2,"forcomposit":1,"oper":1,"event":2,"purpos":1,"control":1,"except":1,"check":1,"composit":8,"enabl":8,"select":2,"true":1,"notsupport":1,"differ":1,"input":12,"awt":2,"disabl":1,"determin":1,"context":4,"method":9,"java":2,"user":1,"incom":1},"maxFreq":12,"totalTerms":74},"loc":0}