{"id":19059,"className":"java.awt.font.GlyphVector","methodName":"getGlyphPositions","signature":"\u003cjava.awt.font.GlyphVector: float[] getGlyphPositions(int,int,float[])\u003e","javadoc":"/** \n * Returns an array of glyph positions for the specified glyphs. This method is used for convenience and performance when processing glyph positions. If no array is passed in, a new array is created. Even numbered array entries beginning with position zero are the X coordinates of the glyph numbered \u003ccode\u003ebeginGlyphIndex + position/2\u003c/code\u003e. Odd numbered array entries beginning with position one are the Y coordinates of the glyph numbered \u003ccode\u003ebeginGlyphIndex + (position-1)/2\u003c/code\u003e. If \u003ccode\u003ebeginGlyphIndex\u003c/code\u003e equals the number of of glyphs in this \u003ccode\u003eGlyphVector\u003c/code\u003e, this method gets the position after the last glyph and this position is used to define the advance of the entire \u003ccode\u003eGlyphVector\u003c/code\u003e.\n * @param beginGlyphIndex the index at which to begin retrievingglyph positions\n * @param numEntries the number of glyphs to retrieve\n * @param positionReturn the array that receives the glyph positionsand is then returned.\n * @return an array of glyph positions specified by\u003ccode\u003ebeginGlyphIndex\u003c/code\u003e and \u003ccode\u003enumEntries\u003c/code\u003e.\n * @throws IllegalArgumentException if \u003ccode\u003enumEntries\u003c/code\u003e isless than 0\n * @throws IndexOutOfBoundsException if \u003ccode\u003ebeginGlyphIndex\u003c/code\u003eis less than 0\n * @throws IndexOutOfBoundsException if the sum of\u003ccode\u003ebeginGlyphIndex\u003c/code\u003e and \u003ccode\u003enumEntries\u003c/code\u003e is greater than the number of glyphs in this \u003ccode\u003eGlyphVector\u003c/code\u003e plus one\n */\n","tf":{"freq":{"defin":1,"greater":1,"last":1,"one":2,"sum":1,"use":2,"perform":1,"zero":1,"specifi":2,"vector":3,"less":1,"conveni":1,"argument":1,"coordin":2,"plus":1,"except":3,"index":10,"creat":1,"entri":6,"glyph":22,"positionsand":1,"receiv":1,"number":7,"equal":1,"illeg":1,"pass":1,"begin":10,"process":1,"num":4,"advanc":1,"retriev":1,"even":1,"method":2,"isless":1,"retrievingglyph":1,"odd":1,"entir":1,"posit":12,"bound":2,"array":7},"maxFreq":22,"totalTerms":120},"loc":0}