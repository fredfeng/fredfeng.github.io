{"id":18197,"className":"java.awt.image.ColorModel","methodName":"getComponents","signature":"\u003cjava.awt.image.ColorModel: int[] getComponents(int,int[],int)\u003e","javadoc":"/** \n * Returns an array of unnormalized color/alpha components given a pixel in this \u003ccode\u003eColorModel\u003c/code\u003e.  The pixel value is specified as an \u003ccode\u003eint\u003c/code\u003e.  An \u003ccode\u003eIllegalArgumentException\u003c/code\u003e will be thrown if pixel values for this \u003ccode\u003eColorModel\u003c/code\u003e are not conveniently representable as a single \u003ccode\u003eint\u003c/code\u003e or if color component values for this \u003ccode\u003eColorModel\u003c/code\u003e are not conveniently representable in the unnormalized form. For example, this method can be used to retrieve the components for a specific pixel value in a \u003ccode\u003eDirectColorModel\u003c/code\u003e.  If the components array is \u003ccode\u003enull\u003c/code\u003e, a new array will be allocated.  The components array will be returned.  Color/alpha components are stored in the components array starting at \u003ccode\u003eoffset\u003c/code\u003e (even if the array is allocated by this method).  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if  the components array is not \u003ccode\u003enull\u003c/code\u003e and is not large enough to hold all the color and alpha components (starting at offset). Since \u003ccode\u003eColorModel\u003c/code\u003e is an abstract class, any instance is an instance of a subclass.  Subclasses must override this method since the implementation in this abstract class throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @param pixel the specified pixel\n * @param components the array to receive the color and alphacomponents of the specified pixel\n * @param offset the offset into the \u003ccode\u003ecomponents\u003c/code\u003e array atwhich to start storing the color and alpha components\n * @return an array containing the color and alpha components of thespecified pixel starting at the specified offset.\n * @throws UnsupportedOperationException if thismethod is not supported by this \u003ccode\u003eColorModel\u003c/code\u003e\n */\n","tf":{"freq":{"unsupport":2,"model":6,"store":2,"pixel":8,"singl":1,"unnorm":2,"use":1,"enough":1,"must":1,"specifi":4,"thismethod":1,"given":1,"oper":2,"alpha":5,"thespecifi":1,"valu":4,"offset":5,"conveni":2,"direct":1,"argument":1,"index":1,"except":4,"thrown":2,"support":1,"form":1,"hold":1,"receiv":1,"illeg":1,"alphacompon":1,"instanc":2,"represent":2,"specif":1,"compon":14,"start":4,"color":13,"larg":1,"retriev":1,"contain":1,"subclass":2,"will":3,"exampl":1,"atwhich":1,"even":1,"method":3,"bound":1,"alloc":2,"array":11},"maxFreq":14,"totalTerms":128},"loc":4}