{"id":19399,"className":"java.awt.event.MouseEvent","methodName":"getMouseModifiersText","signature":"\u003cjava.awt.event.MouseEvent: java.lang.String getMouseModifiersText(int)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eString\u003c/code\u003e instance describing the modifier keys and mouse buttons that were down during the event, such as \"Shift\", or \"Ctrl+Shift\". These strings can be localized by changing the \u003ccode\u003eawt.properties\u003c/code\u003e file. \u003cp\u003e Note that the \u003ccode\u003eInputEvent.ALT_MASK\u003c/code\u003e and \u003ccode\u003eInputEvent.BUTTON2_MASK\u003c/code\u003e have equal values, so the \"Alt\" string is returned for both modifiers.  Likewise, the \u003ccode\u003eInputEvent.META_MASK\u003c/code\u003e and \u003ccode\u003eInputEvent.BUTTON3_MASK\u003c/code\u003e have equal values, so the \"Meta\" string is returned for both modifiers. \u003cp\u003e Note that passing negative parameter is incorrect, and will cause the returning an unspecified string. Zero parameter means that no modifiers were passed and will cause the returning an empty string. \u003cp\u003e\n * @param modifiers A modifier mask describing the modifier keys andmouse buttons that were down during the event\n * @return string   string text description of the combination of modifierkeys and mouse buttons that were down during the event\n * @see InputEvent#getModifiersExText(int)\n * @since 1.4\n */\n","tf":{"freq":{"unspecifi":1,"mask":1,"zero":1,"ctrl":1,"mous":3,"meta":1,"modifierkey":1,"button":3,"event":8,"file":1,"alt":1,"combin":1,"mean":1,"valu":2,"incorrect":1,"key":2,"note":2,"text":3,"andmous":1,"descript":1,"paramet":2,"describ":2,"equal":2,"empti":1,"instanc":1,"pass":2,"awt":1,"input":5,"caus":2,"likewis":1,"string":8,"will":2,"modifi":9,"negat":1,"local":1,"chang":1,"properti":1,"shift":2},"maxFreq":9,"totalTerms":80},"loc":57}