{"id":19592,"className":"java.awt.geom.AffineTransform","methodName":"rotate","signature":"\u003cjava.awt.geom.AffineTransform: void rotate(double,double,double)\u003e","javadoc":"/** \n * Concatenates this transform with a transform that rotates coordinates around an anchor point. This operation is equivalent to translating the coordinates so that the anchor point is at the origin (S1), then rotating them about the new origin (S2), and finally translating so that the intermediate origin is restored to the coordinates of the original anchor point (S3). \u003cp\u003e This operation is equivalent to the following sequence of calls: \u003cpre\u003e translate(anchorx, anchory);      // S3: final translation rotate(theta);                    // S2: rotate around anchor translate(-anchorx, -anchory);    // S1: translate anchor to origin \u003c/pre\u003e Rotating by a positive angle theta rotates points on the positive X axis toward the positive Y axis. Note also the discussion of \u003ca href\u003d\"#quadrantapproximation\"\u003eHandling 90-Degree Rotations\u003c/a\u003e above.\n * @param theta the angle of rotation measured in radians\n * @param anchorx the X coordinate of the rotation anchor point\n * @param anchory the Y coordinate of the rotation anchor point\n * @since 1.2\n */\n","tf":{"freq":{"call":1,"theta":3,"axi":2,"intermedi":1,"anchor":7,"anchorx":3,"transform":2,"quadrantapproxim":1,"toward":1,"equival":2,"oper":2,"sequenc":1,"href":1,"note":1,"follow":1,"coordin":5,"concaten":1,"origin":5,"rotat":11,"translat":6,"radian":1,"handl":1,"around":2,"degre":1,"point":6,"discuss":1,"pre":2,"restor":1,"measur":1,"angl":2,"anchori":3,"also":1,"posit":3},"maxFreq":11,"totalTerms":82},"loc":6}