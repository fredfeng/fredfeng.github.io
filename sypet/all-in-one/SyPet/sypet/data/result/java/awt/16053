{"id":16053,"className":"java.awt.Graphics","methodName":"copyArea","signature":"\u003cjava.awt.Graphics: void copyArea(int,int,int,int,int,int)\u003e","javadoc":"/** \n * Copies an area of the component by a distance specified by \u003ccode\u003edx\u003c/code\u003e and \u003ccode\u003edy\u003c/code\u003e. From the point specified by \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e, this method copies downwards and to the right.  To copy an area of the component to the left or upwards, specify a negative value for \u003ccode\u003edx\u003c/code\u003e or \u003ccode\u003edy\u003c/code\u003e. If a portion of the source rectangle lies outside the bounds of the component, or is obscured by another window or component, \u003ccode\u003ecopyArea\u003c/code\u003e will be unable to copy the associated pixels. The area that is omitted can be refreshed by calling the component\u0027s \u003ccode\u003epaint\u003c/code\u003e method.\n * @param x the \u003ci\u003ex\u003c/i\u003e coordinate of the source rectangle.\n * @param y the \u003ci\u003ey\u003c/i\u003e coordinate of the source rectangle.\n * @param width the width of the source rectangle.\n * @param height the height of the source rectangle.\n * @param dx the horizontal distance to copy the pixels.\n * @param dy the vertical distance to copy the pixels.\n */\n","tf":{"freq":{"call":1,"pixel":3,"anoth":1,"rectangl":5,"copi":8,"specifi":3,"height":2,"area":5,"associ":1,"downward":1,"horizont":1,"left":1,"valu":1,"refresh":1,"right":1,"portion":1,"coordin":2,"vertic":1,"width":2,"paint":1,"upward":1,"unabl":1,"point":1,"compon":5,"window":1,"outsid":1,"omit":1,"distanc":3,"will":1,"negat":1,"method":2,"sourc":5,"obscur":1,"lie":1,"bound":1},"maxFreq":8,"totalTerms":68},"loc":0}