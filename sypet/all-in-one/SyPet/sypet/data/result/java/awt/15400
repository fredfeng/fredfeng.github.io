{"id":15400,"className":"java.awt.LinearGradientPaint","methodName":"LinearGradientPaint","signature":"\u003cjava.awt.LinearGradientPaint: void LinearGradientPaint(java.awt.geom.Point2D,java.awt.geom.Point2D,float[],java.awt.Color[],java.awt.MultipleGradientPaint$CycleMethod)\u003e","javadoc":"/** \n * Constructs a  {@code LinearGradientPaint} with a default {@code SRGB}color space.\n * @param start the gradient axis start {@code Point2D} in user space\n * @param end the gradient axis end {@code Point2D} in user space\n * @param fractions numbers ranging from 0.0 to 1.0 specifying thedistribution of colors along the gradient\n * @param colors array of colors corresponding to each fractional value\n * @param cycleMethod either {@code NO_CYCLE},  {@code REFLECT}, or  {@code REPEAT}\n * @throws NullPointerException if one of the points is null, or  {@code fractions} array is null,or  {@code colors} array is null,or  {@code cycleMethod} is null\n * @throws IllegalArgumentException if start and end points are the same points, or  {@code fractions.length !\u003d colors.length}, or  {@code colors} is less than 2 in size,or a  {@code fractions} value is less than 0.0 or greater than 1.0,or the  {@code fractions} are not provided in strictly increasing order\n */\n","tf":{"freq":{"increas":1,"greater":1,"axi":2,"correspond":1,"one":1,"cycl":2,"space":3,"specifi":1,"order":1,"rang":1,"length":2,"valu":2,"along":1,"less":2,"end":3,"argument":1,"thedistribut":1,"except":2,"fraction":6,"linear":2,"paint":2,"number":1,"provid":1,"illeg":1,"size":1,"point":5,"either":1,"start":3,"color":7,"pointer":1,"method":2,"construct":1,"strict":1,"user":2,"gradient":5,"array":3},"maxFreq":7,"totalTerms":73},"loc":7}