{"id":17642,"className":"java.awt.datatransfer.DataFlavor","methodName":"DataFlavor","signature":"\u003cjava.awt.datatransfer.DataFlavor: void DataFlavor(java.lang.String,java.lang.String,java.lang.ClassLoader)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eDataFlavor\u003c/code\u003e that represents a \u003ccode\u003eMimeType\u003c/code\u003e. \u003cp\u003e The returned \u003ccode\u003eDataFlavor\u003c/code\u003e will have the following characteristics: \u003cp\u003e If the mimeType is \"application/x-java-serialized-object; class\u003d\u0026lt;representation class\u0026gt;\", the result is the same as calling \u003ccode\u003enew DataFlavor(Class:forName(\u0026lt;representation class\u0026gt;)\u003c/code\u003e. \u003cp\u003e Otherwise: \u003cpre\u003e representationClass \u003d InputStream mimeType            \u003d mimeType \u003c/pre\u003e\n * @param mimeType the string used to identify the MIME type for this flavor\n * @param humanPresentableName the human-readable string used toidentify this flavor\n * @param classLoader the class loader to use\n * @exception ClassNotFoundException if the class is not loaded\n * @exception IllegalArgumentException if \u003ccode\u003emimeType\u003c/code\u003e isinvalid\n * @exception NullPointerException if \u003ccode\u003emimeType\u003c/code\u003e is null\n */\n","tf":{"freq":{"characterist":1,"otherwis":1,"result":1,"call":1,"stream":1,"readabl":1,"toidentifi":1,"data":4,"use":3,"identifi":1,"object":1,"type":8,"applic":1,"name":2,"follow":1,"argument":1,"except":6,"repres":1,"loader":2,"flavor":6,"illeg":1,"human":2,"represent":3,"present":1,"input":1,"pre":2,"isinvalid":1,"string":2,"will":1,"pointer":1,"load":1,"java":1,"mime":7,"construct":1,"serial":1,"found":1},"maxFreq":8,"totalTerms":71},"loc":11}