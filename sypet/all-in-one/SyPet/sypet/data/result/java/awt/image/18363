{"id":18363,"className":"java.awt.image.ComponentColorModel","methodName":"getComponents","signature":"\u003cjava.awt.image.ComponentColorModel: int[] getComponents(int,int[],int)\u003e","javadoc":"/** \n * Returns an array of unnormalized color/alpha components given a pixel in this \u003cCODE\u003eColorModel\u003c/CODE\u003e. An IllegalArgumentException is thrown if the component value for this \u003cCODE\u003eColorModel\u003c/CODE\u003e is not conveniently representable in the unnormalized form.  Color/alpha components are stored in the \u003cCODE\u003ecomponents\u003c/CODE\u003e array starting at \u003cCODE\u003eoffset\u003c/CODE\u003e (even if the array is allocated by this method).\n * @param pixel The pixel value specified as an integer.\n * @param components An integer array in which to store the unnormalizedcolor/alpha components. If the \u003cCODE\u003ecomponents\u003c/CODE\u003e array is null, a new array is allocated.\n * @param offset An offset into the \u003cCODE\u003ecomponents\u003c/CODE\u003e array.\n * @return The components array.\n * @throws IllegalArgumentException If there is more than onecomponent in this \u003cCODE\u003eColorModel\u003c/CODE\u003e.\n * @throws IllegalArgumentException If this\u003cCODE\u003eColorModel\u003c/CODE\u003e does not support the unnormalized form\n * @throws ArrayIndexOutOfBoundsException If the \u003cCODE\u003ecomponents\u003c/CODE\u003earray is not null and is not large enough to hold all the color and alpha components (starting at offset).\n */\n","tf":{"freq":{"model":4,"store":2,"pixel":3,"onecompon":1,"unnorm":3,"enough":1,"specifi":1,"given":1,"alpha":4,"valu":2,"offset":4,"conveni":1,"argument":3,"index":1,"thrown":1,"except":4,"support":1,"form":2,"hold":1,"illeg":3,"represent":1,"compon":12,"color":7,"start":2,"larg":1,"unnormalizedcolor":1,"even":1,"method":1,"integ":2,"bound":1,"array":10,"alloc":2},"maxFreq":12,"totalTerms":84},"loc":20}