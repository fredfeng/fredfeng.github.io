{"id":15381,"className":"java.awt.GraphicsEnvironment","methodName":"getMaximumWindowBounds","signature":"\u003cjava.awt.GraphicsEnvironment: java.awt.Rectangle getMaximumWindowBounds()\u003e","javadoc":"/** \n * Returns the maximum bounds for centered Windows. These bounds account for objects in the native windowing system such as task bars and menu bars.  The returned bounds will reside on a single display with one exception: on multi-screen systems where Windows should be centered across all displays, this method returns the bounds of the entire display area. \u003cp\u003e To get the usable bounds of a single display, use \u003ccode\u003eGraphicsConfiguration.getBounds()\u003c/code\u003e and \u003ccode\u003eToolkit.getScreenInsets()\u003c/code\u003e.\n * @return  the maximum bounds for centered Windows\n * @exception HeadlessException if isHeadless() returns true\n * @see #getCenterPoint\n * @see GraphicsConfiguration#getBounds\n * @see Toolkit#getScreenInsets\n * @since 1.4\n */\n","tf":{"freq":{"graphic":2,"singl":2,"one":1,"use":1,"object":1,"across":1,"center":4,"area":1,"toolkit":2,"usabl":1,"screen":3,"except":3,"resid":1,"inset":2,"task":1,"menu":1,"true":1,"display":4,"headless":2,"point":1,"configur":2,"system":2,"window":5,"maximum":3,"will":1,"multi":1,"account":1,"method":1,"bar":2,"entir":1,"bound":9},"maxFreq":9,"totalTerms":63},"loc":5}