{"id":16989,"className":"java.awt.Component","methodName":"setComponentOrientation","signature":"\u003cjava.awt.Component: void setComponentOrientation(java.awt.ComponentOrientation)\u003e","javadoc":"/** \n * Sets the language-sensitive orientation that is to be used to order the elements or text within this component.  Language-sensitive \u003ccode\u003eLayoutManager\u003c/code\u003e and \u003ccode\u003eComponent\u003c/code\u003e subclasses will use this property to determine how to lay out and draw components. \u003cp\u003e At construction time, a component\u0027s orientation is set to \u003ccode\u003eComponentOrientation.UNKNOWN\u003c/code\u003e, indicating that it has not been specified explicitly.  The UNKNOWN orientation behaves the same as \u003ccode\u003eComponentOrientation.LEFT_TO_RIGHT\u003c/code\u003e. \u003cp\u003e To set the orientation of a single component, use this method. To set the orientation of an entire component hierarchy, use {@link #applyComponentOrientation applyComponentOrientation}. \u003cp\u003e This method changes layout-related information, and therefore, invalidates the component hierarchy.\n * @see ComponentOrientation\n * @see #invalidate\n * @author Laura Werner, IBM\n * @beaninfo bound: true\n */\n","tf":{"freq":{"beaninfo":1,"singl":1,"behav":1,"link":1,"use":4,"hierarchi":2,"languag":2,"therefor":1,"specifi":1,"draw":1,"author":1,"time":1,"invalid":2,"order":1,"indic":1,"layout":2,"relat":1,"element":1,"text":1,"sensit":2,"manag":1,"lay":1,"true":1,"inform":1,"appli":2,"orient":11,"werner":1,"compon":13,"explicit":1,"determin":1,"subclass":1,"will":1,"method":2,"laura":1,"chang":1,"within":1,"properti":1,"construct":1,"entir":1,"bound":1},"maxFreq":13,"totalTerms":72},"loc":11}