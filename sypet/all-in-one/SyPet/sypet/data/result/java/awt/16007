{"id":16007,"className":"java.awt.Window","methodName":"setLocationRelativeTo","signature":"\u003cjava.awt.Window: void setLocationRelativeTo(java.awt.Component)\u003e","javadoc":"/** \n * Sets the location of the window relative to the specified component according to the following scenarios. \u003cp\u003e The target screen mentioned below is a screen to which the window should be placed after the setLocationRelativeTo method is called. \u003cul\u003e \u003cli\u003eIf the component is  {@code null}, or the  {@code GraphicsConfiguration} associated with this component is{@code null}, the window is placed in the center of the screen. The center point can be obtained with the  {@link GraphicsEnvironment#getCenterPoint GraphicsEnvironment.getCenterPoint} method.\u003cli\u003eIf the component is not  {@code null}, but it is not currently showing, the window is placed in the center of the target screen defined by the  {@code GraphicsConfiguration} associated with this component.\u003cli\u003eIf the component is not  {@code null} and is shown onthe screen, then the window is located in such a way that the center of the window coincides with the center of the component. \u003c/ul\u003e \u003cp\u003e If the screens configuration does not allow the window to be moved from one screen to another, then the window is only placed at the location determined according to the above conditions and its  {@code GraphicsConfiguration} isnot changed. \u003cp\u003e \u003cb\u003eNote\u003c/b\u003e: If the lower edge of the window is out of the screen, then the window is placed to the side of the \u003ccode\u003eComponent\u003c/code\u003e that is closest to the center of the screen. So if the component is on the right part of the screen, the window is placed to its left, and vice versa. \u003cp\u003e If after the window location has been calculated, the upper, left, or right edge of the window is out of the screen, then the window is located in such a way that the upper, left, or right edge of the window coincides with the corresponding edge of the screen. If both left and right edges of the window are out of the screen, the window is placed at the left side of the screen. The similar placement will occur if both top and bottom edges are out of the screen. In that case, the window is placed at the top side of the screen. \u003cp\u003e The method changes the geometry-related data. Therefore, the native windowing system may ignore such requests, or it may modify the requested data, so that the  {@code Window} object is placed and sizedin a way that corresponds closely to the desktop settings.\n * @param c  the component in relation to which the window\u0027s locationis determined\n * @see java.awt.GraphicsEnvironment#getCenterPoint\n * @since 1.4\n */\n","tf":{"freq":{"lower":1,"desktop":1,"show":1,"close":1,"specifi":1,"center":9,"request":2,"relat":5,"closest":1,"place":9,"right":4,"move":1,"follow":1,"versa":1,"screen":16,"ignor":1,"calcul":1,"environ":3,"onth":1,"shown":1,"awt":1,"system":1,"obtain":1,"configur":4,"scenario":1,"window":21,"determin":2,"bottom":1,"will":1,"coincid":2,"geometri":1,"placement":1,"call":1,"defin":1,"graphic":6,"allow":1,"edg":6,"vice":1,"correspond":2,"link":1,"one":1,"data":2,"way":3,"object":1,"therefor":1,"anoth":1,"sizedin":1,"upper":2,"isnot":1,"associ":2,"side":3,"current":1,"mention":1,"left":5,"note":1,"locationi":1,"top":2,"similar":1,"condit":1,"may":2,"locat":7,"accord":2,"point":4,"compon":10,"modifi":1,"target":2,"java":1,"method":3,"chang":2,"part":1,"occur":1},"maxFreq":21,"totalTerms":184},"loc":62}