{"id":18547,"className":"java.awt.image.SinglePixelPackedSampleModel","methodName":"SinglePixelPackedSampleModel","signature":"\u003cjava.awt.image.SinglePixelPackedSampleModel: void SinglePixelPackedSampleModel(int,int,int,int[])\u003e","javadoc":"/** \n * Constructs a SinglePixelPackedSampleModel with bitMasks.length bands. Each sample is stored in a data array element in the position of its corresponding bit mask.  Each bit mask must be contiguous and masks must not overlap. Bit masks exceeding data type capacity are truncated.\n * @param dataType  The data type for storing samples.\n * @param w         The width (in pixels) of the region of theimage data described.\n * @param h         The height (in pixels) of the region of theimage data described.\n * @param bitMasks  The bit masks for all bands.\n * @throws IllegalArgumentException if \u003ccode\u003edataType\u003c/code\u003e is noteither \u003ccode\u003eDataBuffer.TYPE_BYTE\u003c/code\u003e, \u003ccode\u003eDataBuffer.TYPE_USHORT\u003c/code\u003e, or \u003ccode\u003eDataBuffer.TYPE_INT\u003c/code\u003e\n */\n","tf":{"freq":{"region":2,"model":2,"store":2,"pixel":4,"singl":2,"correspond":1,"data":10,"mask":7,"truncat":1,"pack":2,"type":4,"must":2,"buffer":3,"height":1,"band":2,"length":1,"argument":1,"element":1,"except":1,"overlap":1,"width":1,"exceed":1,"describ":2,"contigu":1,"illeg":1,"bit":6,"noteith":1,"theimag":2,"construct":1,"capac":1,"posit":1,"sampl":4,"array":1},"maxFreq":10,"totalTerms":73},"loc":9}