{"id":16489,"className":"java.awt.TrayIcon","methodName":"TrayIcon","signature":"\u003cjava.awt.TrayIcon: void TrayIcon(java.awt.Image,java.lang.String,java.awt.PopupMenu)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eTrayIcon\u003c/code\u003e with the specified image, tooltip and popup menu.\n * @param image the \u003ccode\u003eImage\u003c/code\u003e to be used\n * @param tooltip the string to be used as tooltip text; if thevalue is \u003ccode\u003enull\u003c/code\u003e no tooltip is shown\n * @param popup the menu to be used for the tray icon\u0027s popupmenu; if the value is \u003ccode\u003enull\u003c/code\u003e no popup menu is shown\n * @throws IllegalArgumentException if \u003ccode\u003eimage\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n * @throws UnsupportedOperationException if the system tray isn\u0027tsupported by the current platform\n * @throws HeadlessException if{@code GraphicsEnvironment.isHeadless()} returns {@code true}\n * @throws SecurityException if {@code accessSystemTray} permissionis not granted\n * @see SystemTray#add(TrayIcon)\n * @see TrayIcon#TrayIcon(Image,String)\n * @see TrayIcon#TrayIcon(Image)\n * @see PopupMenu\n * @see MouseListener\n * @see #addMouseListener(MouseListener)\n * @see SecurityManager#checkPermission\n * @see AWTPermission\n */\n","tf":{"freq":{"graphic":1,"unsupport":1,"grant":1,"tsupport":1,"use":3,"add":2,"mous":3,"specifi":1,"oper":1,"popup":4,"permiss":1,"current":1,"tpermiss":1,"valu":1,"listen":3,"argument":1,"icon":8,"platform":1,"text":1,"except":4,"check":1,"creat":1,"manag":1,"menu":4,"permissioni":1,"environ":1,"true":1,"shown":2,"access":1,"imag":6,"headless":2,"illeg":1,"popupmenu":1,"system":3,"secur":2,"string":2,"tray":11,"thevalu":1,"tooltip":4},"maxFreq":11,"totalTerms":86},"loc":4}