{"id":18727,"className":"java.awt.image.DataBufferFloat","methodName":"DataBufferFloat","signature":"\u003cjava.awt.image.DataBufferFloat: void DataBufferFloat(float[][],int)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003efloat\u003c/code\u003e-based \u003ccode\u003eDataBuffer\u003c/code\u003e with the specified data arrays.  Only the first \u003ccode\u003esize\u003c/code\u003e elements of each array are available for use by this \u003ccode\u003eDataBuffer\u003c/code\u003e.  The number of banks will be equal to \u003ccode\u003edataArray.length\u003c/code\u003e. \u003cp\u003e Note that  {@code DataBuffer} objects created by this constructormay be incompatible with \u003ca href\u003d\"#optimizations\"\u003eperformance optimizations\u003c/a\u003e used by some implementations (such as caching an associated image in video memory).\n * @param dataArray An array of arrays of \u003ccode\u003efloat\u003c/code\u003es to beused as the banks of this \u003ccode\u003eDataBuffer\u003c/code\u003e.\n * @param size The number of elements of each array to be used.\n */\n","tf":{"freq":{"memori":1,"data":8,"use":3,"perform":1,"object":1,"specifi":1,"buffer":5,"constructormay":1,"associ":1,"length":1,"bank":2,"href":1,"video":1,"note":1,"element":2,"optim":2,"creat":1,"beus":1,"number":2,"avail":1,"equal":1,"cach":1,"imag":1,"incompat":1,"size":2,"base":1,"will":1,"construct":1,"first":1,"array":7},"maxFreq":8,"totalTerms":54},"loc":5}