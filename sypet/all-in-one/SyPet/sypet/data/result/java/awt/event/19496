{"id":19496,"className":"java.awt.event.AdjustmentEvent","methodName":"AdjustmentEvent","signature":"\u003cjava.awt.event.AdjustmentEvent: void AdjustmentEvent(java.awt.Adjustable,int,int,int)\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eAdjustmentEvent\u003c/code\u003e object with the specified \u003ccode\u003eAdjustable\u003c/code\u003e source, event type, adjustment type, and value. \u003cp\u003e This method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @param source The \u003ccode\u003eAdjustable\u003c/code\u003e object where theevent originated\n * @param id     An integer indicating the type of event.For information on allowable values, see the class description for  {@link AdjustmentEvent}\n * @param type   An integer indicating the adjustment type.For information on allowable values, see the class description for  {@link AdjustmentEvent}\n * @param value  The current value of the adjustment\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is null\n * @see #getSource()\n * @see #getID()\n * @see #getAdjustmentType()\n * @see #getValue()\n */\n","tf":{"freq":{"argument":2,"except":2,"allow":2,"link":2,"descript":2,"origin":1,"object":2,"type":6,"illeg":2,"specifi":1,"inform":2,"indic":2,"theevent":1,"event":6,"current":1,"adjust":10,"sourc":5,"valu":6,"method":1,"construct":1,"integ":2},"maxFreq":10,"totalTerms":59},"loc":3}