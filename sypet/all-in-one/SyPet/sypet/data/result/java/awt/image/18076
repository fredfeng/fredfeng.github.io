{"id":18076,"className":"java.awt.image.BufferedImage","methodName":"getAlphaRaster","signature":"\u003cjava.awt.image.BufferedImage: java.awt.image.WritableRaster getAlphaRaster()\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eWritableRaster\u003c/code\u003e representing the alpha channel for \u003ccode\u003eBufferedImage\u003c/code\u003e objects with \u003ccode\u003eColorModel\u003c/code\u003e objects that support a separate spatial alpha channel, such as \u003ccode\u003eComponentColorModel\u003c/code\u003e and \u003ccode\u003eDirectColorModel\u003c/code\u003e.  Returns \u003ccode\u003enull\u003c/code\u003e if there is no alpha channel associated with the \u003ccode\u003eColorModel\u003c/code\u003e in this image.  This method assumes that for all \u003ccode\u003eColorModel\u003c/code\u003e objects other than \u003ccode\u003eIndexColorModel\u003c/code\u003e, if the \u003ccode\u003eColorModel\u003c/code\u003e supports alpha, there is a separate alpha channel which is stored as the last band of image data. If the image uses an \u003ccode\u003eIndexColorModel\u003c/code\u003e that has alpha in the lookup table, this method returns \u003ccode\u003enull\u003c/code\u003e since there is no spatially discrete alpha channel.  This method creates a new \u003ccode\u003eWritableRaster\u003c/code\u003e, but shares the data array.\n * @return a \u003ccode\u003eWritableRaster\u003c/code\u003e or \u003ccode\u003enull\u003c/code\u003e if this\u003ccode\u003eBufferedImage\u003c/code\u003e has no alpha channel associated with its \u003ccode\u003eColorModel\u003c/code\u003e.\n */\n","tf":{"freq":{"discret":1,"model":9,"store":1,"last":1,"data":2,"use":1,"object":3,"lookup":1,"buffer":2,"share":1,"band":1,"associ":2,"alpha":9,"direct":1,"index":2,"support":2,"assum":1,"spatial":2,"creat":1,"repres":1,"writabl":3,"imag":5,"raster":4,"compon":1,"separ":2,"color":9,"tabl":1,"method":3,"channel":6,"array":1},"maxFreq":9,"totalTerms":79},"loc":3}