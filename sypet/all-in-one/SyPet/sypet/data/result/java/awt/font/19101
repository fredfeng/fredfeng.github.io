{"id":19101,"className":"java.awt.font.TextLayout","methodName":"getVisualHighlightShape","signature":"\u003cjava.awt.font.TextLayout: java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eShape\u003c/code\u003e enclosing the visual selection in the specified range, extended to the bounds.  This method is a convenience overload of \u003ccode\u003egetVisualHighlightShape\u003c/code\u003e that uses the natural bounds of this \u003ccode\u003eTextLayout\u003c/code\u003e.\n * @param firstEndpoint one end of the visual selection\n * @param secondEndpoint the other end of the visual selection\n * @return a \u003ccode\u003eShape\u003c/code\u003e enclosing the selection.  This isin standard coordinates.\n */\n","tf":{"freq":{"coordin":1,"text":1,"standard":1,"second":1,"select":4,"one":1,"natur":1,"use":1,"overload":1,"shape":4,"highlight":2,"endpoint":2,"specifi":1,"visual":5,"rang":1,"layout":1,"enclos":2,"method":1,"first":1,"end":2,"bound":2,"conveni":1,"isin":1},"maxFreq":5,"totalTerms":38},"loc":3}