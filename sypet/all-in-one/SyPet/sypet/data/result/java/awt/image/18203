{"id":18203,"className":"java.awt.image.ColorModel","methodName":"getDataElement","signature":"\u003cjava.awt.image.ColorModel: int getDataElement(float[],int)\u003e","javadoc":"/** \n * Returns a pixel value represented as an \u003ccode\u003eint\u003c/code\u003e in this \u003ccode\u003eColorModel\u003c/code\u003e, given an array of normalized color/alpha components.  This method will throw an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if pixel values for this \u003ccode\u003eColorModel\u003c/code\u003e are not conveniently representable as a single \u003ccode\u003eint\u003c/code\u003e.  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if  the \u003ccode\u003enormComponents\u003c/code\u003e array is not large enough to hold all the color and alpha components (starting at \u003ccode\u003enormOffset\u003c/code\u003e). Since \u003ccode\u003eColorModel\u003c/code\u003e is an abstract class, any instance is an instance of a subclass.  The default implementation of this method in this abstract class first converts from the normalized form to the unnormalized form and then calls \u003ccode\u003egetDataElement(int[], int)\u003c/code\u003e.  Subclasses which may have instances which do not support the unnormalized form must override this method.\n * @param normComponents an array of normalized color and alphacomponents\n * @param normOffset the index into \u003ccode\u003enormComponents\u003c/code\u003e at which tobegin retrieving the color and alpha components\n * @return an \u003ccode\u003eint\u003c/code\u003e pixel value in this\u003ccode\u003eColorModel\u003c/code\u003e corresponding to the specified components.\n * @throws IllegalArgumentException ifpixel values for this \u003ccode\u003eColorModel\u003c/code\u003e are not conveniently representable as a single \u003ccode\u003eint\u003c/code\u003e\n * @throws ArrayIndexOutOfBoundsException ifthe \u003ccode\u003enormComponents\u003c/code\u003e array is not large enough to hold all of the color and alpha components starting at \u003ccode\u003enormOffset\u003c/code\u003e\n * @since 1.4\n */\n","tf":{"freq":{"call":1,"model":5,"pixel":3,"singl":2,"correspond":1,"normal":3,"unnorm":2,"data":2,"convert":1,"enough":2,"must":1,"specifi":1,"given":1,"norm":7,"alpha":4,"valu":4,"offset":3,"conveni":2,"argument":2,"element":2,"may":1,"except":4,"index":3,"thrown":1,"support":1,"ifth":1,"form":3,"repres":1,"hold":2,"ifpixel":1,"illeg":2,"alphacompon":1,"instanc":3,"represent":2,"tobegin":1,"compon":9,"start":2,"color":10,"retriev":1,"larg":2,"subclass":2,"will":1,"method":3,"first":1,"bound":2,"array":6},"maxFreq":10,"totalTerms":115},"loc":5}