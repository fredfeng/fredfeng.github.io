{"id":19614,"className":"java.awt.geom.AffineTransform","methodName":"invert","signature":"\u003cjava.awt.geom.AffineTransform: void invert()\u003e","javadoc":"/** \n * Sets this transform to the inverse of itself. The inverse transform Tx\u0027 of this transform Tx maps coordinates transformed by Tx back to their original coordinates. In other words, Tx\u0027(Tx(p)) \u003d p \u003d Tx(Tx\u0027(p)). \u003cp\u003e If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The \u003ccode\u003egetDeterminant\u003c/code\u003e method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the \u003ccode\u003einvert\u003c/code\u003e method is called.\n * @see #getDeterminant\n * @exception NoninvertibleTransformException if the matrix cannot be inverted.\n * @since 1.6\n */\n","tf":{"freq":{"coordin":4,"call":1,"onto":1,"thrown":1,"except":3,"matrix":1,"origin":1,"use":1,"back":1,"line":2,"invert":3,"transform":7,"point":2,"invers":5,"determin":3,"map":3,"will":3,"method":2,"word":1,"lie":1,"noninvert":1,"destin":1},"maxFreq":7,"totalTerms":48},"loc":108}