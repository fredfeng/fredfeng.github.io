{"id":16293,"className":"java.awt.Font","methodName":"createFont","signature":"\u003cjava.awt.Font: java.awt.Font createFont(int,java.io.File)\u003e","javadoc":"/** \n * Returns a new \u003ccode\u003eFont\u003c/code\u003e using the specified font type and the specified font file.  The new \u003ccode\u003eFont\u003c/code\u003e is created with a point size of 1 and style  {@link #PLAIN PLAIN}. This base font can then be used with the \u003ccode\u003ederiveFont\u003c/code\u003e methods in this class to derive new \u003ccode\u003eFont\u003c/code\u003e objects with varying sizes, styles, transforms and font features.\n * @param fontFormat the type of the \u003ccode\u003eFont\u003c/code\u003e, which is{@link #TRUETYPE_FONT TRUETYPE_FONT} if a TrueType resource isspecified or  {@link #TYPE1_FONT TYPE1_FONT} if a Type 1 resource isspecified. So long as the returned font, or its derived fonts are referenced the implementation may continue to access \u003ccode\u003efontFile\u003c/code\u003e to retrieve font data. Thus the results are undefined if the file is changed, or becomes inaccessible. \u003cp\u003e To make the \u003ccode\u003eFont\u003c/code\u003e available to Font constructors the returned \u003ccode\u003eFont\u003c/code\u003e must be registered in the \u003ccode\u003eGraphicsEnviroment\u003c/code\u003e by calling {@link GraphicsEnvironment#registerFont(Font) registerFont(Font)}.\n * @param fontFile a \u003ccode\u003eFile\u003c/code\u003e object representing theinput data for the font.\n * @return a new \u003ccode\u003eFont\u003c/code\u003e created with the specified font type.\n * @throws IllegalArgumentException if \u003ccode\u003efontFormat\u003c/code\u003e is not\u003ccode\u003eTRUETYPE_FONT\u003c/code\u003eor\u003ccode\u003eTYPE1_FONT\u003c/code\u003e.\n * @throws NullPointerException if \u003ccode\u003efontFile\u003c/code\u003e is null.\n * @throws IOException if the \u003ccode\u003efontFile\u003c/code\u003e cannot be read.\n * @throws FontFormatException if \u003ccode\u003efontFile\u003c/code\u003e doesnot contain the required font tables for the specified format.\n * @throws SecurityException if the executing code does not havepermission to read from the file.\n * @see GraphicsEnvironment#registerFont(Font)\n * @since 1.5\n */\n","tf":{"freq":{"inaccess":1,"deriv":3,"type":5,"must":1,"specifi":4,"referenc":1,"theinput":1,"requir":1,"becom":1,"file":9,"undefin":1,"argument":1,"except":5,"creat":3,"font":34,"enviro":1,"environ":2,"avail":1,"format":4,"continu":1,"size":2,"havepermiss":1,"contain":1,"pointer":1,"execut":1,"make":1,"vari":1,"result":1,"call":1,"graphic":3,"link":4,"data":2,"use":2,"object":2,"transform":1,"resourc":2,"style":2,"read":2,"regist":4,"doesnot":1,"constructor":1,"may":1,"thus":1,"repres":1,"true":1,"isspecifi":2,"access":1,"illeg":1,"point":1,"secur":1,"tabl":1,"retriev":1,"featur":1,"base":1,"method":1,"chang":1},"maxFreq":34,"totalTerms":132},"loc":19}