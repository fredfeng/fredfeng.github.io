{"id":20201,"className":"java.awt.geom.Rectangle2D","methodName":"getPathIterator","signature":"\u003cjava.awt.geom.Rectangle2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)\u003e","javadoc":"/** \n * Returns an iteration object that defines the boundary of the flattened \u003ccode\u003eRectangle2D\u003c/code\u003e.  Since rectangles are already flat, the \u003ccode\u003eflatness\u003c/code\u003e parameter is ignored. The iterator for this class is multi-threaded safe, which means that this \u003ccode\u003eRectangle2D\u003c/code\u003e class guarantees that modifications to the geometry of this \u003ccode\u003eRectangle2D\u003c/code\u003e object do not affect any iterations of that geometry that are already in process.\n * @param at an optional \u003ccode\u003eAffineTransform\u003c/code\u003e to be applied tothe coordinates as they are returned in the iteration, or \u003ccode\u003enull\u003c/code\u003e if untransformed coordinates are desired\n * @param flatness the maximum distance that the line segments used toapproximate the curved segments are allowed to deviate from any point on the original curve.  Since rectangles are already flat, the \u003ccode\u003eflatness\u003c/code\u003e parameter is ignored.\n * @return    the \u003ccode\u003ePathIterator\u003c/code\u003e object that returns thegeometry of the outline of this \u003ccode\u003eRectangle2D\u003c/code\u003e, one segment at a time.\n * @since 1.2\n */\n","tf":{"freq":{"defin":1,"outlin":1,"allow":1,"segment":3,"one":1,"toapproxim":1,"use":1,"line":1,"untransform":1,"object":3,"desir":1,"toth":1,"rectangl":6,"affect":1,"deviat":1,"transform":1,"time":1,"flatten":1,"thread":1,"path":2,"mean":1,"curv":2,"option":1,"coordin":2,"safe":1,"ignor":2,"guarante":1,"flat":5,"origin":1,"paramet":2,"thegeometri":1,"process":1,"point":1,"appli":1,"maximum":1,"distanc":1,"multi":1,"alreadi":3,"iter":6,"boundari":1,"modif":1,"geometri":2,"affin":1},"maxFreq":6,"totalTerms":69},"loc":3}