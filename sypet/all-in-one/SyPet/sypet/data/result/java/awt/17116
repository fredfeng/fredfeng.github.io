{"id":17116,"className":"java.awt.FontMetrics","methodName":"charsWidth","signature":"\u003cjava.awt.FontMetrics: int charsWidth(char[],int,int)\u003e","javadoc":"/** \n * Returns the total advance width for showing the specified array of characters in this \u003ccode\u003eFont\u003c/code\u003e.  The advance is the distance from the leftmost point to the rightmost point on the string\u0027s baseline.  The advance of a \u003ccode\u003eString\u003c/code\u003e is not necessarily the sum of the advances of its characters. This is equivalent to measuring a \u003ccode\u003eString\u003c/code\u003e of the characters in the specified range.\n * @param data the array of characters to be measured\n * @param off the start offset of the characters in the array\n * @param len the number of characters to be measured from the array\n * @return    the advance width of the subarray of the specified\u003ccode\u003echar\u003c/code\u003e array in the font described by this \u003ccode\u003eFontMetrics\u003c/code\u003e object.\n * @throws NullPointerException if \u003ccode\u003edata\u003c/code\u003e is null.\n * @throws IndexOutOfBoundsException if the \u003ccode\u003eoff\u003c/code\u003eand \u003ccode\u003elen\u003c/code\u003e arguments index characters outside the bounds of the \u003ccode\u003edata\u003c/code\u003e array.\n * @see #charWidth(int)\n * @see #charWidth(char)\n * @see #bytesWidth(byte[],int,int)\n * @see #stringWidth(String)\n */\n","tf":{"freq":{"total":1,"data":3,"sum":1,"show":1,"object":1,"specifi":3,"equival":1,"rang":1,"offset":1,"argument":1,"index":2,"except":2,"charact":7,"font":3,"width":7,"describ":1,"baselin":1,"number":1,"len":2,"subarray":1,"point":2,"outsid":1,"advanc":5,"start":1,"metric":1,"string":5,"leftmost":1,"distanc":1,"pointer":1,"measur":3,"rightmost":1,"necessarili":1,"bound":2,"array":6},"maxFreq":7,"totalTerms":72},"loc":3}