{"id":18227,"className":"java.awt.image.WritableRaster","methodName":"setDataElements","signature":"\u003cjava.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)\u003e","javadoc":"/** \n * Sets the data for a single pixel from a primitive array of type TransferType.  For image data supported by the Java 2D(tm) API, this will be one of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, DataBuffer.TYPE_INT, DataBuffer.TYPE_SHORT, DataBuffer.TYPE_FLOAT, or DataBuffer.TYPE_DOUBLE.  Data in the array may be in a packed format, thus increasing efficiency for data transfers. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds, or if inData is not large enough to hold the pixel data. However, explicit bounds checking is not guaranteed. A ClassCastException will be thrown if the input object is not null and references anything other than an array of TransferType.\n * @see java.awt.image.SampleModel#setDataElements(int,int,Object,DataBuffer)\n * @param x        The X coordinate of the pixel location.\n * @param y        The Y coordinate of the pixel location.\n * @param inData   An object reference to an array of type defined bygetTransferType() and length getNumDataElements() containing the pixel data to place at x,y.\n * @throws ArrayIndexOutOfBoundsException if the coordinates are notin bounds, or if inData is too small to hold the input.\n */\n","tf":{"freq":{"increas":1,"defin":1,"anyth":1,"primit":1,"model":1,"pixel":5,"singl":1,"one":1,"data":19,"object":3,"pack":1,"enough":1,"type":5,"buffer":7,"byget":1,"refer":2,"length":1,"notin":1,"effici":1,"place":1,"howev":1,"coordin":4,"element":3,"locat":2,"transfer":4,"may":2,"index":2,"except":3,"thrown":2,"support":1,"check":1,"thus":1,"guarante":1,"hold":2,"format":1,"imag":2,"num":1,"awt":1,"input":2,"cast":1,"explicit":1,"larg":1,"contain":1,"will":2,"java":2,"small":1,"sampl":1,"bound":5,"array":6},"maxFreq":19,"totalTerms":112},"loc":5}