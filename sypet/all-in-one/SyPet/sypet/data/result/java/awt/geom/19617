{"id":19617,"className":"java.awt.geom.AffineTransform","methodName":"transform","signature":"\u003cjava.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)\u003e","javadoc":"/** \n * Transforms an array of floating point coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order \u003ccode\u003e[x0, y0, x1, y1, ..., xn, yn]\u003c/code\u003e.\n * @param srcPts the array containing the source point coordinates.Each point is stored as a pair of x,\u0026nbsp;y coordinates.\n * @param dstPts the array into which the transformed point coordinatesare returned.  Each point is stored as a pair of x,\u0026nbsp;y coordinates.\n * @param srcOff the offset to the first point to be transformedin the source array\n * @param dstOff the offset to the location of the firsttransformed point that is stored in the destination array\n * @param numPts the number of points to be transformed\n * @since 1.2\n */\n","tf":{"freq":{"result":1,"valid":1,"store":4,"pair":2,"dst":2,"affect":1,"ensur":1,"specifi":1,"transform":6,"order":1,"oper":1,"exact":1,"coordinatesar":1,"src":2,"offset":3,"nbsp":2,"coordin":7,"locat":1,"overlap":1,"previous":1,"number":1,"without":1,"section":2,"overwritten":1,"transformedin":1,"two":1,"point":8,"num":1,"start":1,"contain":1,"firsttransform":1,"method":1,"sourc":3,"first":1,"pts":3,"destin":1,"array":8},"maxFreq":8,"totalTerms":76},"loc":90}