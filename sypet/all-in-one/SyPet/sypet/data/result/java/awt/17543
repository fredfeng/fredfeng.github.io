{"id":17543,"className":"java.awt.Container","methodName":"isValidateRoot","signature":"\u003cjava.awt.Container: boolean isValidateRoot()\u003e","javadoc":"/** \n * Indicates if this container is a \u003ci\u003evalidate root\u003c/i\u003e. \u003cp\u003e Layout-related changes, such as bounds of the validate root descendants, do not affect the layout of the validate root parent. This peculiarity enables the  {@code invalidate()} method to stop invalidating thecomponent hierarchy when the method encounters a validate root. However, to preserve backward compatibility this new optimized behavior is enabled only when the  {@code java.awt.smartInvalidate} system propertyvalue is set to  {@code true}. \u003cp\u003e If a component hierarchy contains validate roots and the new optimized {@code invalidate()} behavior is enabled, the {@code validate()} methodmust be invoked on the validate root of a previously invalidated component to restore the validity of the hierarchy later. Otherwise, calling the  {@code validate()} method on the top-level container (suchas a  {@code Frame} object) should be used to restore the validity of thecomponent hierarchy. \u003cp\u003e The  {@code Window} class and the {@code Applet} class are the validateroots in AWT.  Swing introduces more validate roots.\n * @return whether this container is a validate root\n * @see #invalidate\n * @see java.awt.Component#invalidate\n * @see javax.swing.JComponent#isValidateRoot\n * @see javax.swing.JComponent#revalidate\n * @since 1.7\n */\n","tf":{"freq":{"peculiar":1,"root":10,"methodmust":1,"whether":1,"jcompon":2,"level":1,"invalid":7,"javax":2,"relat":1,"swing":3,"howev":1,"enabl":3,"invok":1,"preserv":1,"parent":1,"awt":2,"system":1,"frame":1,"window":1,"contain":4,"restor":2,"compat":1,"otherwis":1,"stop":1,"valid":14,"call":1,"backward":1,"behavior":2,"use":1,"revalid":1,"hierarchi":4,"object":1,"affect":1,"introduc":1,"propertyvalu":1,"indic":1,"layout":2,"applet":1,"thecompon":2,"top":1,"optim":2,"previous":1,"later":1,"true":1,"sucha":1,"compon":3,"encount":1,"method":3,"java":2,"chang":1,"descend":1,"validateroot":1,"bound":1,"smart":1},"maxFreq":14,"totalTerms":105},"loc":3}