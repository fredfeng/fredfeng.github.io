{"id":18071,"className":"java.awt.image.BufferedImage","methodName":"BufferedImage","signature":"\u003cjava.awt.image.BufferedImage: void BufferedImage(int,int,int,java.awt.image.IndexColorModel)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eBufferedImage\u003c/code\u003e of one of the predefined image types: TYPE_BYTE_BINARY or TYPE_BYTE_INDEXED. \u003cp\u003e If the image type is TYPE_BYTE_BINARY, the number of entries in the color model is used to determine whether the image should have 1, 2, or 4 bits per pixel.  If the color model has 1 or 2 entries, the image will have 1 bit per pixel.  If it has 3 or 4 entries, the image with have 2 bits per pixel.  If it has between 5 and 16 entries, the image will have 4 bits per pixel.  Otherwise, an IllegalArgumentException will be thrown.\n * @param width     width of the created image\n * @param height    height of the created image\n * @param imageType type of the created image\n * @param cm        \u003ccode\u003eIndexColorModel\u003c/code\u003e of the created image\n * @throws IllegalArgumentException   if the imageType is notTYPE_BYTE_BINARY or TYPE_BYTE_INDEXED or if the imageType is TYPE_BYTE_BINARY and the color map has more than 16 entries.\n * @see #TYPE_BYTE_BINARY\n * @see #TYPE_BYTE_INDEXED\n */\n","tf":{"freq":{"otherwis":1,"model":3,"pixel":4,"one":1,"predefin":1,"use":1,"type":6,"whether":1,"buffer":2,"height":2,"map":1,"argument":2,"index":1,"except":2,"thrown":1,"creat":4,"entri":5,"width":2,"number":1,"imag":15,"illeg":2,"bit":4,"per":4,"color":4,"determin":1,"will":3,"construct":1},"maxFreq":15,"totalTerms":75},"loc":43}