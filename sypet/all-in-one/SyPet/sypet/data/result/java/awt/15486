{"id":15486,"className":"java.awt.GraphicsDevice","methodName":"setFullScreenWindow","signature":"\u003cjava.awt.GraphicsDevice: void setFullScreenWindow(java.awt.Window)\u003e","javadoc":"/** \n * Enter full-screen mode, or return to windowed mode.  The entered full-screen mode may be either exclusive or simulated.  Exclusive mode is only available if \u003ccode\u003eisFullScreenSupported\u003c/code\u003e returns \u003ccode\u003etrue\u003c/code\u003e. \u003cp\u003e Exclusive mode implies: \u003cul\u003e \u003cli\u003eWindows cannot overlap the full-screen window.  All other application windows will always appear beneath the full-screen window in the Z-order. \u003cli\u003eThere can be only one full-screen window on a device at any time, so calling this method while there is an existing full-screen Window will cause the existing full-screen window to return to windowed mode. \u003cli\u003eInput method windows are disabled.  It is advisable to call \u003ccode\u003eComponent.enableInputMethods(false)\u003c/code\u003e to make a component a non-client of the input method framework. \u003c/ul\u003e \u003cp\u003e The simulated full-screen mode places and resizes the window to the maximum possible visible area of the screen. However, the native windowing system may modify the requested geometry-related data, so that the  {@code Window} objectis placed and sized in a way that corresponds closely to the desktop settings. \u003cp\u003e When entering full-screen mode, if the window to be used as a full-screen window is not visible, this method will make it visible. It will remain visible when returning to windowed mode. \u003cp\u003e When entering full-screen mode, all the translucency effects are reset for the window. Its shape is set to  {@code null}, the opacity value is set to 1.0f, and the background color alpha is set to 255 (completely opaque). These values are not restored when returning to windowed mode. \u003cp\u003e It is unspecified and platform-dependent how decorated windows operate in full-screen mode. For this reason, it is recommended to turn off the decorations in a  {@code Frame} or {@code Dialog} object by using the{@code setUndecorated} method.\u003cp\u003e When returning to windowed mode from an exclusive full-screen window, any display changes made by calling  {@code setDisplayMode} areautomatically restored to their original state.\n * @param w a window to use as the full-screen window; {@code null}if returning to windowed mode.  Some platforms expect the fullscreen window to be a top-level component (i.e., a  {@code Frame}); therefore it is preferable to use a  {@code Frame} here rather than a{@code Window}.\n * @see #isFullScreenSupported\n * @see #getFullScreenWindow\n * @see #setDisplayMode\n * @see Component#enableInputMethods\n * @see Component#setVisible\n * @see Frame#setUndecorated\n * @see Dialog#setUndecorated\n * @since 1.4\n */\n","tf":{"freq":{"fals":1,"objecti":1,"areautomat":1,"appear":1,"client":1,"reason":1,"desktop":1,"possibl":1,"close":1,"advis":1,"resiz":1,"expect":1,"decor":2,"time":1,"level":1,"oper":1,"request":1,"relat":1,"impli":1,"reset":1,"place":2,"howev":1,"turn":1,"platform":2,"screen":19,"overlap":1,"support":2,"alway":1,"enabl":2,"opac":1,"transluc":1,"display":3,"enter":4,"avail":1,"shape":1,"size":1,"non":1,"fullscreen":1,"input":4,"system":1,"frame":4,"simul":2,"window":28,"disabl":1,"maximum":1,"restor":2,"will":4,"prefer":1,"make":2,"geometri":1,"unspecifi":1,"call":3,"correspond":1,"visibl":5,"one":1,"state":1,"made":1,"data":1,"use":4,"way":1,"therefor":1,"object":1,"recommend":1,"applic":1,"mode":16,"opaqu":1,"area":1,"order":1,"full":18,"alpha":1,"rather":1,"valu":2,"exclus":4,"dialog":2,"exist":2,"top":1,"complet":1,"beneath":1,"may":2,"depend":1,"origin":1,"true":1,"framework":1,"either":1,"caus":1,"effect":1,"remain":1,"compon":5,"undecor":3,"color":1,"background":1,"modifi":1,"method":7,"chang":1,"devic":1},"maxFreq":28,"totalTerms":222},"loc":44}