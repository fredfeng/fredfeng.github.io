{"id":16420,"className":"java.awt.KeyboardFocusManager","methodName":"addKeyEventDispatcher","signature":"\u003cjava.awt.KeyboardFocusManager: void addKeyEventDispatcher(java.awt.KeyEventDispatcher)\u003e","javadoc":"/** \n * Adds a KeyEventDispatcher to this KeyboardFocusManager\u0027s dispatcher chain. This KeyboardFocusManager will request that each KeyEventDispatcher dispatch KeyEvents generated by the user before finally dispatching the KeyEvent itself. KeyEventDispatchers will be notified in the order in which they were added. Notifications will halt as soon as one KeyEventDispatcher returns \u003ccode\u003etrue\u003c/code\u003e from its \u003ccode\u003edispatchKeyEvent\u003c/code\u003e method. There is no limit to the total number of KeyEventDispatchers which can be added, nor to the number of times which a particular KeyEventDispatcher instance can be added. \u003cp\u003e If a null dispatcher is specified, no action is taken and no exception is thrown. \u003cp\u003e In a multithreaded application,  {@link KeyEventDispatcher} behavesthe same as other AWT listeners.  See \u003ca href\u003d\"doc-files/AWTThreadIssues.html#ListenersThreads\" \u003eAWT Threading Issues\u003c/a\u003e for more details.\n * @param dispatcher the KeyEventDispatcher to add to the dispatcher chain\n * @see #removeKeyEventDispatcher\n */\n","tf":{"freq":{"total":1,"detail":1,"link":1,"one":1,"particular":1,"add":3,"issu":2,"applic":1,"specifi":1,"notif":1,"time":1,"tthread":1,"order":1,"file":1,"event":13,"thread":2,"request":1,"action":1,"taken":1,"focus":2,"dispatch":17,"multithread":1,"href":1,"listen":2,"key":13,"notifi":1,"limit":1,"thrown":1,"except":1,"keyboard":2,"manag":2,"remov":1,"true":1,"number":2,"soon":1,"instanc":1,"chain":2,"behavesth":1,"generat":1,"will":3,"ad":3,"html":1,"method":1,"halt":1,"user":1},"maxFreq":17,"totalTerms":99},"loc":10}