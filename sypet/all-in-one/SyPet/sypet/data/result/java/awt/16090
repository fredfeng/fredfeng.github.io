{"id":16090,"className":"java.awt.BasicStroke","methodName":"BasicStroke","signature":"\u003cjava.awt.BasicStroke: void BasicStroke(float,int,int,float,float[],float)\u003e","javadoc":"/** \n * Constructs a new \u003ccode\u003eBasicStroke\u003c/code\u003e with the specified attributes.\n * @param width the width of this \u003ccode\u003eBasicStroke\u003c/code\u003e.  Thewidth must be greater than or equal to 0.0f.  If width is set to 0.0f, the stroke is rendered as the thinnest possible line for the target device and the antialias hint setting.\n * @param cap the decoration of the ends of a \u003ccode\u003eBasicStroke\u003c/code\u003e\n * @param join the decoration applied where path segments meet\n * @param miterlimit the limit to trim the miter join.  The miterlimitmust be greater than or equal to 1.0f.\n * @param dash the array representing the dashing pattern\n * @param dash_phase the offset to start the dashing pattern\n * @throws IllegalArgumentException if \u003ccode\u003ewidth\u003c/code\u003e is negative\n * @throws IllegalArgumentException if \u003ccode\u003ecap\u003c/code\u003e is not eitherCAP_BUTT, CAP_ROUND or CAP_SQUARE\n * @throws IllegalArgumentException if \u003ccode\u003emiterlimit\u003c/code\u003e is lessthan 1 and \u003ccode\u003ejoin\u003c/code\u003e is JOIN_MITER\n * @throws IllegalArgumentException if \u003ccode\u003ejoin\u003c/code\u003e is noteither JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER\n * @throws IllegalArgumentException if \u003ccode\u003edash_phase\u003c/code\u003eis negative and \u003ccode\u003edash\u003c/code\u003e is not \u003ccode\u003enull\u003c/code\u003e\n * @throws IllegalArgumentException if the length of\u003ccode\u003edash\u003c/code\u003e is zero\n * @throws IllegalArgumentException if dash lengths are all zero.\n */\n","tf":{"freq":{"thewidth":1,"greater":2,"segment":1,"cap":2,"possibl":1,"line":1,"zero":2,"must":1,"specifi":1,"decor":2,"stroke":5,"attribut":1,"basic":4,"lessthan":1,"length":2,"path":1,"offset":1,"trim":1,"end":1,"argument":7,"limit":1,"except":7,"repres":1,"width":4,"miter":1,"equal":2,"hint":1,"join":4,"meet":1,"illeg":7,"render":1,"either":1,"antialia":1,"appli":1,"dash":8,"pattern":2,"start":1,"miterlimit":2,"noteith":1,"target":1,"negat":2,"miterlimitmust":1,"construct":1,"devic":1,"phase":2,"array":1,"thinnest":1},"maxFreq":8,"totalTerms":95},"loc":40}