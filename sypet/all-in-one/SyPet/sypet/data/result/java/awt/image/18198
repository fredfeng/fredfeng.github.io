{"id":18198,"className":"java.awt.image.ColorModel","methodName":"getComponents","signature":"\u003cjava.awt.image.ColorModel: int[] getComponents(java.lang.Object,int[],int)\u003e","javadoc":"/** \n * Returns an array of unnormalized color/alpha components given a pixel in this \u003ccode\u003eColorModel\u003c/code\u003e.  The pixel value is specified by an array of data elements of type transferType passed in as an object reference.  If \u003ccode\u003epixel\u003c/code\u003e is not a primitive array of type transferType, a \u003ccode\u003eClassCastException\u003c/code\u003e is thrown. An \u003ccode\u003eIllegalArgumentException\u003c/code\u003e will be thrown if color component values for this \u003ccode\u003eColorModel\u003c/code\u003e are not conveniently representable in the unnormalized form. An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if \u003ccode\u003epixel\u003c/code\u003e is not large enough to hold a pixel value for this \u003ccode\u003eColorModel\u003c/code\u003e. This method can be used to retrieve the components for a specific pixel value in any \u003ccode\u003eColorModel\u003c/code\u003e.  If the components array is \u003ccode\u003enull\u003c/code\u003e, a new array will be allocated.  The components array will be returned.  Color/alpha components are stored in the \u003ccode\u003ecomponents\u003c/code\u003e array starting at \u003ccode\u003eoffset\u003c/code\u003e (even if the array is allocated by this method).  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if  the components array is not \u003ccode\u003enull\u003c/code\u003e and is not large enough to hold all the color and alpha components (starting at \u003ccode\u003eoffset\u003c/code\u003e). Since \u003ccode\u003eColorModel\u003c/code\u003e is an abstract class, any instance is an instance of a subclass.  Subclasses must override this method since the implementation in this abstract class throws an \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e.\n * @param pixel the specified pixel\n * @param components an array that receives the color and alphacomponents of the specified pixel\n * @param offset the index into the \u003ccode\u003ecomponents\u003c/code\u003e array atwhich to begin storing the color and alpha components of the specified pixel\n * @return an array containing the color and alpha components of thespecified pixel starting at the specified offset.\n * @throws UnsupportedOperationException if thismethod is not supported by this \u003ccode\u003eColorModel\u003c/code\u003e\n */\n","tf":{"freq":{"unsupport":2,"store":2,"unnorm":2,"type":4,"enough":2,"must":1,"specifi":5,"given":1,"refer":1,"oper":2,"thespecifi":1,"argument":1,"element":1,"thrown":4,"except":6,"transfer":2,"index":3,"support":1,"form":1,"hold":2,"instanc":2,"cast":1,"start":3,"contain":1,"will":3,"subclass":2,"atwhich":1,"even":1,"array":14,"alloc":2,"primit":1,"model":6,"pixel":11,"data":1,"use":1,"object":1,"thismethod":1,"alpha":5,"valu":4,"offset":4,"conveni":1,"receiv":1,"illeg":1,"begin":1,"pass":1,"represent":1,"alphacompon":1,"specif":1,"compon":14,"color":13,"larg":2,"retriev":1,"method":3,"bound":2},"maxFreq":14,"totalTerms":152},"loc":4}