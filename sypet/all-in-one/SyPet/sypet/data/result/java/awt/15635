{"id":15635,"className":"java.awt.Toolkit","methodName":"isFrameStateSupported","signature":"\u003cjava.awt.Toolkit: boolean isFrameStateSupported(int)\u003e","javadoc":"/** \n * Returns whether Toolkit supports this state for \u003ccode\u003eFrame\u003c/code\u003es.  This method tells whether the \u003cem\u003eUI concept\u003c/em\u003e of, say, maximization or iconification is supported.  It will always return false for \"compound\" states like \u003ccode\u003eFrame.ICONIFIED|Frame.MAXIMIZED_VERT\u003c/code\u003e. In other words, the rule of thumb is that only queries with a single frame state constant as an argument are meaningful. \u003cp\u003eNote that supporting a given concept is a platform- dependent feature. Due to native limitations the Toolkit object may report a particular state as supported, however at the same time the Toolkit object will be unable to apply the state to a given frame.  This circumstance has two following consequences: \u003cul\u003e \u003cli\u003eOnly the return value of  {@code false} for the presentmethod actually indicates that the given state is not supported. If the method returns  {@code true} the given statemay still be unsupported and/or unavailable for a particular frame. \u003cli\u003eThe developer should consider examining the value of the {@link java.awt.event.WindowEvent#getNewState} method of the{@code WindowEvent} received through the {@link java.awt.event.WindowStateListener}, rather than assuming that the state given to the  {@code setExtendedState()} methodwill be definitely applied. For more information see the documentation for the  {@link Frame#setExtendedState} method.\u003c/ul\u003e\n * @param state one of named frame state constants.\n * @return \u003ccode\u003etrue\u003c/code\u003e is this frame state is supported bythis Toolkit implementation, \u003ccode\u003efalse\u003c/code\u003e otherwise.\n * @exception HeadlessException if \u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e returns \u003ccode\u003etrue\u003c/code\u003e.\n * @see java.awt.Window#addWindowStateListener\n * @since   1.4\n */\n","tf":{"freq":{"fals":3,"unsupport":1,"compound":1,"singl":1,"consequ":1,"particular":2,"whether":2,"maxim":1,"iconif":1,"time":1,"given":5,"event":4,"unavail":1,"report":1,"bythi":1,"howev":1,"examin":1,"follow":1,"argument":1,"limit":1,"platform":1,"except":2,"support":7,"alway":1,"environ":1,"circumst":1,"like":1,"headless":2,"inform":1,"queri":1,"awt":3,"appli":2,"presentmethod":1,"frame":10,"window":5,"definit":1,"say":1,"will":2,"due":1,"word":1,"thumb":1,"otherwis":1,"graphic":1,"concept":2,"one":1,"link":3,"state":16,"object":2,"add":1,"consid":1,"document":1,"indic":1,"name":1,"rule":1,"methodwil":1,"rather":1,"toolkit":4,"tell":1,"valu":2,"develop":1,"statemay":1,"listen":2,"note":1,"may":1,"assum":1,"constant":2,"depend":1,"true":3,"receiv":1,"still":1,"meaning":1,"unabl":1,"two":1,"featur":1,"actual":1,"java":3,"method":4},"maxFreq":16,"totalTerms":145},"loc":10}