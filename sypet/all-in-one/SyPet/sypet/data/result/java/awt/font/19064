{"id":19064,"className":"java.awt.font.GlyphVector","methodName":"getGlyphJustificationInfo","signature":"\u003cjava.awt.font.GlyphVector: java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo(int)\u003e","javadoc":"/** \n * Returns the justification information for the glyph at the specified index into this \u003ccode\u003eGlyphVector\u003c/code\u003e.\n * @param glyphIndex the index into this \u003ccode\u003eGlyphVector\u003c/code\u003ethat corresponds to the glyph from which to retrieve its justification properties\n * @return a {@link GlyphJustificationInfo} object thatrepresents the justification properties of the glyph at the specified \u003ccode\u003eglyphIndex\u003c/code\u003e into this \u003ccode\u003eGlyphVector\u003c/code\u003e.\n * @throws IndexOutOfBoundsException if \u003ccode\u003eglyphIndex\u003c/code\u003eis less than 0 or greater than or equal to the number of glyphs in this \u003ccode\u003eGlyphVector\u003c/code\u003e\n */\n","tf":{"freq":{"except":1,"index":6,"greater":1,"correspond":1,"glyph":13,"link":1,"number":1,"equal":1,"object":1,"thatrepres":1,"info":2,"specifi":2,"inform":1,"vector":4,"retriev":1,"properti":2,"justif":5,"less":1,"bound":1},"maxFreq":13,"totalTerms":46},"loc":0}