{"id":16182,"className":"java.awt.Rectangle","methodName":"intersection","signature":"\u003cjava.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)\u003e","javadoc":"/** \n * Computes the intersection of this \u003ccode\u003eRectangle\u003c/code\u003e with the specified \u003ccode\u003eRectangle\u003c/code\u003e. Returns a new \u003ccode\u003eRectangle\u003c/code\u003e that represents the intersection of the two rectangles. If the two rectangles do not intersect, the result will be an empty rectangle.\n * @param r   the specified \u003ccode\u003eRectangle\u003c/code\u003e\n * @return    the largest \u003ccode\u003eRectangle\u003c/code\u003e contained in both thespecified \u003ccode\u003eRectangle\u003c/code\u003e and in this \u003ccode\u003eRectangle\u003c/code\u003e; or if the rectangles do not intersect, an empty rectangle.\n */\n","tf":{"freq":{"result":1,"two":2,"repres":1,"contain":1,"intersect":5,"will":1,"thespecifi":1,"comput":1,"rectangl":12,"largest":1,"empti":2,"specifi":2},"maxFreq":12,"totalTerms":30},"loc":22}