{"id":15625,"className":"java.awt.Toolkit","methodName":"getPrintJob","signature":"\u003cjava.awt.Toolkit: java.awt.PrintJob getPrintJob(java.awt.Frame,java.lang.String,java.awt.JobAttributes,java.awt.PageAttributes)\u003e","javadoc":"/** \n * Gets a \u003ccode\u003ePrintJob\u003c/code\u003e object which is the result of initiating a print operation on the toolkit\u0027s platform. \u003cp\u003e Each actual implementation of this method should first check if there is a security manager installed. If there is, the method should call the security manager\u0027s \u003ccode\u003echeckPrintJobAccess\u003c/code\u003e method to ensure initiation of a print operation is allowed. If the default implementation of \u003ccode\u003echeckPrintJobAccess\u003c/code\u003e is used (that is, that method is not overriden), then this results in a call to the security manager\u0027s \u003ccode\u003echeckPermission\u003c/code\u003e method with a \u003ccode\u003e RuntimePermission(\"queuePrintJob\")\u003c/code\u003e permission.\n * @param frame the parent of the print dialog. May not be null.\n * @param jobtitle the title of the PrintJob. A null title is equivalentto \"\".\n * @param jobAttributes a set of job attributes which will control thePrintJob. The attributes will be updated to reflect the user\u0027s choices as outlined in the JobAttributes documentation. May be null.\n * @param pageAttributes a set of page attributes which will control thePrintJob. The attributes will be applied to every page in the job. The attributes will be updated to reflect the user\u0027s choices as outlined in the PageAttributes documentation. May be null.\n * @return  a \u003ccode\u003ePrintJob\u003c/code\u003e object, or \u003ccode\u003enull\u003c/code\u003e if theuser cancelled the print job.\n * @throws NullPointerException if frame is null\n * @throws IllegalArgumentException if pageAttributes specifies differingcross feed and feed resolutions. Also if this thread has access to the file system and jobAttributes specifies print to file, and the specified destination file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason. However in the case of print to file, if a dialog is also requested to be displayed then the user will be given an opportunity to select a file and proceed with printing. The dialog will ensure that the selected output file is valid before returning from this method.\n * @throws SecurityException if this thread is not allowed to initiate aprint job request, or if jobAttributes specifies print to file, and this thread is not allowed to access the file system\n * @see java.awt.PrintJob\n * @see java.awt.GraphicsEnvironment#isHeadless\n * @see java.lang.RuntimePermission\n * @see java.awt.JobAttributes\n * @see java.awt.PageAttributes\n * @since   1.3\n */\n","tf":{"freq":{"queue":1,"outlin":2,"reason":1,"cancel":1,"specifi":4,"open":1,"differingcross":1,"given":1,"oper":2,"page":6,"file":9,"request":2,"thread":3,"proceed":1,"permiss":4,"equivalentto":1,"howev":1,"everi":1,"argument":1,"theuser":1,"platform":1,"control":2,"except":3,"creat":1,"select":2,"runtim":2,"environ":1,"job":19,"parent":1,"display":1,"headless":1,"opportun":1,"awt":4,"system":2,"appli":1,"frame":2,"updat":2,"will":7,"pointer":1,"output":1,"valid":1,"call":2,"result":2,"graphic":1,"allow":3,"directori":1,"use":1,"aprint":1,"object":2,"lang":1,"ensur":2,"resolut":1,"document":2,"attribut":14,"rather":1,"feed":2,"toolkit":1,"initi":3,"dialog":3,"exist":2,"overriden":1,"jobtitl":1,"may":3,"check":4,"regular":1,"manag":3,"titl":2,"instal":1,"choic":2,"access":4,"illeg":1,"print":18,"secur":4,"actual":1,"java":5,"method":6,"also":2,"first":1,"user":3,"reflect":2,"destin":1},"maxFreq":19,"totalTerms":211},"loc":11}