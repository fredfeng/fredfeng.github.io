{"id":19060,"className":"java.awt.font.GlyphVector","methodName":"getGlyphLogicalBounds","signature":"\u003cjava.awt.font.GlyphVector: java.awt.Shape getGlyphLogicalBounds(int)\u003e","javadoc":"/** \n * Returns the logical bounds of the specified glyph within this \u003ccode\u003eGlyphVector\u003c/code\u003e. These logical bounds have a total of four edges, with two edges parallel to the baseline under the glyph\u0027s transform and the other two edges are shared with adjacent glyphs if they are present.  This method is useful for hit-testing of the specified glyph, positioning of a caret at the leading or trailing edge of a glyph, and for drawing a highlight region around the specified glyph.\n * @param glyphIndex the index into this \u003ccode\u003eGlyphVector\u003c/code\u003ethat corresponds to the glyph from which to retrieve its logical bounds\n * @return  a \u003ccode\u003eShape\u003c/code\u003e that is the logical bounds of theglyph at the specified \u003ccode\u003eglyphIndex\u003c/code\u003e.\n * @throws IndexOutOfBoundsException if \u003ccode\u003eglyphIndex\u003c/code\u003eis less than 0 or greater than or equal to the number of glyphs in this \u003ccode\u003eGlyphVector\u003c/code\u003e\n * @see #getGlyphVisualBounds\n */\n","tf":{"freq":{"region":1,"total":1,"greater":1,"edg":4,"test":1,"correspond":1,"use":1,"lead":1,"highlight":1,"specifi":4,"draw":1,"transform":1,"share":1,"hit":1,"vector":3,"trail":1,"four":1,"less":1,"adjac":1,"parallel":1,"except":1,"index":5,"glyph":16,"baselin":1,"number":1,"equal":1,"shape":1,"logic":5,"around":1,"two":2,"present":1,"caret":1,"visual":1,"retriev":1,"theglyph":1,"method":1,"within":1,"posit":1,"bound":7},"maxFreq":16,"totalTerms":77},"loc":0}