{"id":15868,"className":"java.awt.Graphics2D","methodName":"drawString","signature":"\u003cjava.awt.Graphics2D: void drawString(java.lang.String,int,int)\u003e","javadoc":"/** \n * Renders the text of the specified \u003ccode\u003eString\u003c/code\u003e, using the current text attribute state in the \u003ccode\u003eGraphics2D\u003c/code\u003e context. The baseline of the first character is at position (\u003ci\u003ex\u003c/i\u003e,\u0026nbsp;\u003ci\u003ey\u003c/i\u003e) in the User Space. The rendering attributes applied include the \u003ccode\u003eClip\u003c/code\u003e, \u003ccode\u003eTransform\u003c/code\u003e, \u003ccode\u003ePaint\u003c/code\u003e, \u003ccode\u003eFont\u003c/code\u003e and \u003ccode\u003eComposite\u003c/code\u003e attributes.  For characters in script systems such as Hebrew and Arabic, the glyphs can be rendered from right to left, in which case the coordinate supplied is the location of the leftmost character on the baseline.\n * @param str the string to be rendered\n * @param x the x coordinate of the location where the\u003ccode\u003eString\u003c/code\u003e should be rendered\n * @param y the y coordinate of the location where the\u003ccode\u003eString\u003c/code\u003e should be rendered\n * @throws NullPointerException if \u003ccode\u003estr\u003c/code\u003e is\u003ccode\u003enull\u003c/code\u003e\n * @see java.awt.Graphics#drawBytes\n * @see java.awt.Graphics#drawChars\n * @since       JDK1.0\n */\n","tf":{"freq":{"graphic":3,"arab":1,"hebrew":1,"state":1,"use":1,"space":1,"specifi":1,"draw":3,"transform":1,"attribut":3,"current":1,"left":1,"right":1,"nbsp":1,"coordin":3,"clip":1,"except":1,"locat":3,"text":2,"includ":1,"composit":1,"charact":3,"font":1,"glyph":1,"baselin":2,"suppli":1,"paint":1,"script":1,"render":6,"awt":2,"system":1,"appli":1,"str":2,"string":5,"leftmost":1,"context":1,"pointer":1,"java":2,"first":1,"posit":1,"user":1},"maxFreq":6,"totalTerms":67},"loc":0}