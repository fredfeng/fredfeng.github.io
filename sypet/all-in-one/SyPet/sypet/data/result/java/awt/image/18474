{"id":18474,"className":"java.awt.image.DirectColorModel","methodName":"getComponents","signature":"\u003cjava.awt.image.DirectColorModel: int[] getComponents(int,int[],int)\u003e","javadoc":"/** \n * Returns an array of unnormalized color/alpha components given a pixel in this \u003ccode\u003eColorModel\u003c/code\u003e.  The pixel value is specified as an \u003ccode\u003eint\u003c/code\u003e.  If the \u003ccode\u003ecomponents\u003c/code\u003e array is \u003ccode\u003enull\u003c/code\u003e, a new array is allocated.  The \u003ccode\u003ecomponents\u003c/code\u003e array is returned.  Color/alpha components are stored in the \u003ccode\u003ecomponents\u003c/code\u003e array starting at \u003ccode\u003eoffset\u003c/code\u003e, even if the array is allocated by this method. An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if the \u003ccode\u003ecomponents\u003c/code\u003e array is not \u003ccode\u003enull\u003c/code\u003e and is not large enough to hold all the color and alpha components, starting at \u003ccode\u003eoffset\u003c/code\u003e.\n * @param pixel the specified pixel\n * @param components the array to receive the color and alphacomponents of the specified pixel\n * @param offset the offset into the \u003ccode\u003ecomponents\u003c/code\u003e array atwhich to start storing the color and alpha components\n * @return an array containing the color and alpha components of thespecified pixel starting at the specified offset.\n */\n","tf":{"freq":{"model":1,"store":2,"pixel":6,"unnorm":1,"enough":1,"specifi":4,"given":1,"alpha":5,"thespecifi":1,"valu":1,"offset":5,"index":1,"except":1,"thrown":1,"hold":1,"receiv":1,"alphacompon":1,"compon":12,"color":7,"start":4,"larg":1,"contain":1,"atwhich":1,"even":1,"method":1,"bound":1,"alloc":2,"array":11},"maxFreq":12,"totalTerms":76},"loc":11}