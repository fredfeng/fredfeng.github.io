{"id":19700,"className":"java.awt.geom.Area","methodName":"subtract","signature":"\u003cjava.awt.geom.Area: void subtract(java.awt.geom.Area)\u003e","javadoc":"/** \n * Subtracts the shape of the specified \u003ccode\u003eArea\u003c/code\u003e from the shape of this \u003ccode\u003eArea\u003c/code\u003e. The resulting shape of this \u003ccode\u003eArea\u003c/code\u003e will include areas that were contained only in this \u003ccode\u003eArea\u003c/code\u003e and not in the specified \u003ccode\u003eArea\u003c/code\u003e. \u003cpre\u003e // Example: Area a1 \u003d new Area([triangle 0,0 \u003d\u0026gt; 8,0 \u003d\u0026gt; 0,8]); Area a2 \u003d new Area([triangle 0,0 \u003d\u0026gt; 8,0 \u003d\u0026gt; 8,8]); a1.subtract(a2); a1(before)     -         a2         \u003d     a1(after) ################     ################ ##############         ##############     ## ############             ############     #### ##########                 ##########     ###### ########                     ########     ######## ######                         ######     ###### ####                             ####     #### ##                                 ##     ## \u003c/pre\u003e\n * @param rhs  the \u003ccode\u003eArea\u003c/code\u003e to be subtracted from thecurrent shape\n * @throws NullPointerException if \u003ccode\u003erhs\u003c/code\u003e is null\n * @since 1.2\n */\n","tf":{"freq":{"result":1,"except":1,"includ":1,"shape":4,"specifi":2,"subtract":4,"area":11,"pre":2,"contain":1,"thecurr":1,"will":1,"exampl":1,"pointer":1,"rhs":2,"triangl":2},"maxFreq":11,"totalTerms":35},"loc":4}