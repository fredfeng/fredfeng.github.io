{"id":18287,"className":"java.awt.image.AffineTransformOp","methodName":"filter","signature":"\u003cjava.awt.image.AffineTransformOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)\u003e","javadoc":"/** \n * Transforms the source \u003cCODE\u003eBufferedImage\u003c/CODE\u003e and stores the results in the destination \u003cCODE\u003eBufferedImage\u003c/CODE\u003e. If the color models for the two images do not match, a color conversion into the destination color model is performed. If the destination image is null, a \u003cCODE\u003eBufferedImage\u003c/CODE\u003e is created with the source \u003cCODE\u003eColorModel\u003c/CODE\u003e. \u003cp\u003e The coordinates of the rectangle returned by \u003ccode\u003egetBounds2D(BufferedImage)\u003c/code\u003e are not necessarily the same as the coordinates of the \u003ccode\u003eBufferedImage\u003c/code\u003e returned by this method.  If the upper-left corner coordinates of the rectangle are negative then this part of the rectangle is not drawn.  If the upper-left corner coordinates of the  rectangle are positive then the filtered image is drawn at that position in the destination \u003ccode\u003eBufferedImage\u003c/code\u003e. \u003cp\u003e An \u003cCODE\u003eIllegalArgumentException\u003c/CODE\u003e is thrown if the source is the same as the destination.\n * @param src The \u003cCODE\u003eBufferedImage\u003c/CODE\u003e to transform.\n * @param dst The \u003cCODE\u003eBufferedImage\u003c/CODE\u003e in which to store the resultsof the transformation.\n * @return The filtered \u003cCODE\u003eBufferedImage\u003c/CODE\u003e.\n * @throws IllegalArgumentException if \u003ccode\u003esrc\u003c/code\u003e and\u003ccode\u003edst\u003c/code\u003e are the same\n * @throws ImagingOpException if the image cannot be transformedbecause of a data-processing error that might be caused by an invalid image format, tile format, or image-processing operation, or any other unsupported operation.\n */\n","tf":{"freq":{"might":1,"result":1,"unsupport":1,"model":3,"store":2,"resultsof":1,"data":1,"convers":1,"perform":1,"dst":2,"rectangl":4,"buffer":9,"transform":3,"upper":2,"invalid":1,"oper":2,"transformedbecaus":1,"left":2,"src":2,"drawn":2,"argument":2,"coordin":4,"thrown":1,"except":3,"error":1,"corner":2,"creat":1,"format":2,"imag":16,"illeg":2,"process":2,"two":1,"caus":1,"color":4,"tile":1,"sourc":3,"method":1,"negat":1,"match":1,"part":1,"necessarili":1,"posit":2,"filter":3,"bound":1,"destin":5},"maxFreq":16,"totalTerms":104},"loc":93}