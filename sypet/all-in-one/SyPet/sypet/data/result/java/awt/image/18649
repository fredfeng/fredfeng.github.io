{"id":18649,"className":"java.awt.image.PackedColorModel","methodName":"PackedColorModel","signature":"\u003cjava.awt.image.PackedColorModel: void PackedColorModel(java.awt.color.ColorSpace,int,int,int,int,int,boolean,int,int)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003ePackedColorModel\u003c/code\u003e from the specified masks which indicate which bits in an \u003ccode\u003eint\u003c/code\u003e pixel representation contain the alpha, red, green and blue color samples. Color components are in the specified \u003ccode\u003eColorSpace\u003c/code\u003e, which must be of type ColorSpace.TYPE_RGB.  All of the bits in each mask must be contiguous and fit in the specified number of least significant bits of an \u003ccode\u003eint\u003c/code\u003e pixel representation.  If \u003ccode\u003eamask\u003c/code\u003e is 0, there is no alpha.  If there is alpha, the \u003ccode\u003eboolean\u003c/code\u003e \u003ccode\u003eisAlphaPremultiplied\u003c/code\u003e specifies how to interpret color and alpha samples in pixel values.  If the \u003ccode\u003eboolean\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, color samples are assumed to have been multiplied by the alpha sample. The transparency, \u003ccode\u003etrans\u003c/code\u003e, specifies what alpha values can be represented by this color model. The transfer type is the type of primitive array used to represent pixel values.\n * @param space the specified \u003ccode\u003eColorSpace\u003c/code\u003e\n * @param bits the number of bits in the pixel values\n * @param rmask specifies the mask representingthe bits of the pixel values that represent the red color component\n * @param gmask specifies the mask representingthe bits of the pixel values that represent the green color component\n * @param bmask specifies the mask representingthe bits of the pixel values that represent the blue color component\n * @param amask specifies the mask representingthe bits of the pixel values that represent the alpha component\n * @param isAlphaPremultiplied \u003ccode\u003etrue\u003c/code\u003e if color samples arepremultiplied by the alpha sample; \u003ccode\u003efalse\u003c/code\u003e otherwise\n * @param trans specifies the alpha value that can be represented bythis color model\n * @param transferType the type of array used to represent pixel values\n * @throws IllegalArgumentException if \u003ccode\u003espace\u003c/code\u003e is not aTYPE_RGB space\n * @see ColorSpace\n */\n","tf":{"freq":{"fals":1,"least":1,"amask":2,"rmask":1,"mask":6,"pack":2,"type":5,"must":2,"specifi":11,"premultipli":2,"bythi":1,"argument":1,"except":1,"transfer":2,"signific":1,"number":2,"tran":2,"bit":9,"contain":1,"array":2,"otherwis":1,"primit":1,"model":4,"gmask":1,"pixel":10,"interpret":1,"use":2,"space":7,"fit":1,"transpar":1,"bmask":1,"indic":1,"alpha":11,"multipli":1,"valu":10,"assum":1,"repres":8,"arepremultipli":1,"green":2,"true":2,"contigu":1,"illeg":1,"represent":2,"representingth":4,"red":2,"compon":5,"blue":2,"color":16,"construct":1,"sampl":6},"maxFreq":16,"totalTerms":162},"loc":26}