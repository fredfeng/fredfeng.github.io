{"id":16479,"className":"java.awt.RadialGradientPaint","methodName":"RadialGradientPaint","signature":"\u003cjava.awt.RadialGradientPaint: void RadialGradientPaint(java.awt.geom.Rectangle2D,float[],java.awt.Color[],java.awt.MultipleGradientPaint$CycleMethod)\u003e","javadoc":"/** \n * Constructs a  {@code RadialGradientPaint} with a default{@code SRGB} color space.The gradient circle of the  {@code RadialGradientPaint} is definedby the given bounding box. \u003cp\u003e This constructor is a more convenient way to express the following (equivalent) code:\u003cbr\u003e \u003cpre\u003e double gw \u003d gradientBounds.getWidth(); double gh \u003d gradientBounds.getHeight(); double cx \u003d gradientBounds.getCenterX(); double cy \u003d gradientBounds.getCenterY(); Point2D center \u003d new Point2D.Double(cx, cy); AffineTransform gradientTransform \u003d new AffineTransform(); gradientTransform.translate(cx, cy); gradientTransform.scale(gw / 2, gh / 2); gradientTransform.translate(-cx, -cy); RadialGradientPaint gp \u003d new RadialGradientPaint(center, 1.0f, center, fractions, colors, cycleMethod, ColorSpaceType.SRGB, gradientTransform); \u003c/pre\u003e\n * @param gradientBounds the bounding box, in user space, of the circledefining the outermost extent of the gradient\n * @param fractions numbers ranging from 0.0 to 1.0 specifying thedistribution of colors along the gradient\n * @param colors array of colors to use in the gradient.  The first coloris used at the focus point, the last color around the perimeter of the circle.\n * @param cycleMethod either {@code NO_CYCLE},  {@code REFLECT}, or  {@code REPEAT}\n * @throws NullPointerException if  {@code gradientBounds} is null,or  {@code fractions} array is null,or  {@code colors} array is null,or  {@code cycleMethod} is null\n * @throws IllegalArgumentException if  {@code gradientBounds} is empty,or  {@code fractions.length !\u003d colors.length}, or  {@code colors} is less than 2 in size,or a  {@code fractions} value is less than 0.0 or greater than 1.0,or the  {@code fractions} are not provided in strictly increasing order\n */\n","tf":{"freq":{"greater":1,"last":1,"circl":2,"cycl":3,"outermost":1,"type":1,"specifi":1,"center":5,"height":1,"given":1,"equival":1,"rang":1,"definedbi":1,"focus":1,"along":1,"follow":1,"argument":1,"thedistribut":1,"except":2,"width":1,"circledefin":1,"paint":5,"number":1,"provid":1,"size":1,"colori":1,"pointer":1,"strict":1,"array":3,"increas":1,"scale":1,"way":1,"use":2,"express":1,"space":3,"perimet":1,"transform":7,"radial":5,"order":1,"extent":1,"length":2,"valu":1,"less":2,"conveni":1,"constructor":1,"fraction":6,"translat":2,"illeg":1,"empti":1,"around":1,"point":3,"either":1,"color":10,"pre":2,"box":2,"method":3,"construct":1,"user":1,"first":1,"bound":9,"affin":2,"gradient":21},"maxFreq":21,"totalTerms":141},"loc":20}