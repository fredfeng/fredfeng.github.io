{"id":16310,"className":"java.awt.Font","methodName":"decode","signature":"\u003cjava.awt.Font: java.awt.Font decode(java.lang.String)\u003e","javadoc":"/** \n * Returns the \u003ccode\u003eFont\u003c/code\u003e that the \u003ccode\u003estr\u003c/code\u003e argument describes. To ensure that this method returns the desired Font, format the \u003ccode\u003estr\u003c/code\u003e parameter in one of these ways \u003cp\u003e \u003cul\u003e \u003cli\u003e\u003cem\u003efontname-style-pointsize\u003c/em\u003e \u003cli\u003e\u003cem\u003efontname-pointsize\u003c/em\u003e \u003cli\u003e\u003cem\u003efontname-style\u003c/em\u003e \u003cli\u003e\u003cem\u003efontname\u003c/em\u003e \u003cli\u003e\u003cem\u003efontname style pointsize\u003c/em\u003e \u003cli\u003e\u003cem\u003efontname pointsize\u003c/em\u003e \u003cli\u003e\u003cem\u003efontname style\u003c/em\u003e \u003cli\u003e\u003cem\u003efontname\u003c/em\u003e \u003c/ul\u003e in which \u003ci\u003estyle\u003c/i\u003e is one of the four case-insensitive strings: \u003ccode\u003e\"PLAIN\"\u003c/code\u003e, \u003ccode\u003e\"BOLD\"\u003c/code\u003e, \u003ccode\u003e\"BOLDITALIC\"\u003c/code\u003e, or \u003ccode\u003e\"ITALIC\"\u003c/code\u003e, and pointsize is a positive decimal integer representation of the point size. For example, if you want a font that is Arial, bold, with a point size of 18, you would call this method with: \"Arial-BOLD-18\". This is equivalent to calling the Font constructor : \u003ccode\u003enew Font(\"Arial\", Font.BOLD, 18);\u003c/code\u003e and the values are interpreted as specified by that constructor. \u003cp\u003e A valid trailing decimal field is always interpreted as the pointsize. Therefore a fontname containing a trailing decimal value should not be used in the fontname only form. \u003cp\u003e If a style name field is not one of the valid style strings, it is interpreted as part of the font name, and the default style is used. \u003cp\u003e Only one of \u0027 \u0027 or \u0027-\u0027 may be used to separate fields in the input. The identified separator is the one closest to the end of the string which separates a valid pointsize, or a valid style name from the rest of the string. Null (empty) pointsize and style fields are treated as valid fields with the default value for that field. \u003cp\u003e Some font names may include the separator characters \u0027 \u0027 or \u0027-\u0027. If \u003ccode\u003estr\u003c/code\u003e is not formed with 3 components, e.g. such that \u003ccode\u003estyle\u003c/code\u003e or \u003ccode\u003epointsize\u003c/code\u003e fields are not present in \u003ccode\u003estr\u003c/code\u003e, and \u003ccode\u003efontname\u003c/code\u003e also contains a character determined to be the separator character then these characters where they appear as intended to be part of \u003ccode\u003efontname\u003c/code\u003e may instead be interpreted as separators so the font name may not be properly recognised. \u003cp\u003e The default size is 12 and the default style is PLAIN. If \u003ccode\u003estr\u003c/code\u003e does not specify a valid size, the returned \u003ccode\u003eFont\u003c/code\u003e has a size of 12.  If \u003ccode\u003estr\u003c/code\u003e does not specify a valid style, the returned Font has a style of PLAIN. If you do not specify a valid font name in the \u003ccode\u003estr\u003c/code\u003e argument, this method will return a font with the family name \"Dialog\". To determine what font family names are available on your system, use the {@link GraphicsEnvironment#getAvailableFontFamilyNames()} method.If \u003ccode\u003estr\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, a new \u003ccode\u003eFont\u003c/code\u003e is returned with the family name \"Dialog\", a size of 12 and a PLAIN style.\n * @param str the name of the font, or \u003ccode\u003enull\u003c/code\u003e\n * @return the \u003ccode\u003eFont\u003c/code\u003e object that \u003ccode\u003estr\u003c/code\u003edescribes, or a new default \u003ccode\u003eFont\u003c/code\u003e if \u003ccode\u003estr\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @see #getFamily\n * @since JDK1.1\n */\n","tf":{"freq":{"appear":1,"desir":1,"arial":3,"specifi":4,"bold":1,"equival":1,"trail":2,"closest":1,"proper":1,"fontnam":12,"argument":2,"decod":1,"form":2,"famili":5,"charact":4,"font":19,"alway":1,"environ":1,"recognis":1,"describ":2,"avail":2,"format":1,"size":6,"present":1,"system":1,"input":1,"str":11,"separ":6,"determin":2,"contain":2,"will":1,"rest":1,"posit":1,"treat":1,"call":2,"valid":8,"graphic":1,"link":1,"one":5,"interpret":4,"way":1,"use":4,"identifi":1,"object":1,"therefor":1,"decim":3,"ensur":1,"style":15,"name":11,"valu":3,"four":1,"dialog":2,"end":1,"want":1,"constructor":2,"may":4,"includ":1,"pointsiz":9,"paramet":1,"empti":1,"represent":1,"field":7,"point":2,"insensit":1,"compon":1,"string":4,"instead":1,"exampl":1,"method":4,"intend":1,"part":2,"also":1,"integ":1},"maxFreq":19,"totalTerms":214},"loc":72}