{"id":18663,"className":"java.awt.image.BandCombineOp","methodName":"filter","signature":"\u003cjava.awt.image.BandCombineOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)\u003e","javadoc":"/** \n * Transforms the \u003cCODE\u003eRaster\u003c/CODE\u003e using the matrix specified in the constructor. An \u003cCODE\u003eIllegalArgumentException\u003c/CODE\u003e may be thrown if the number of bands in the source or destination is incompatible with the matrix.  See the class comments for more details. \u003cp\u003e If the destination is null, it will be created with a number of bands equalling the number of rows in the matrix. No exception is thrown if the operation causes a data overflow.\n * @param src The \u003cCODE\u003eRaster\u003c/CODE\u003e to be filtered.\n * @param dst The \u003cCODE\u003eRaster\u003c/CODE\u003e in which to store the resultsof the filter operation.\n * @return The filtered \u003cCODE\u003eRaster\u003c/CODE\u003e.\n * @throws IllegalArgumentException If the number of bands in thesource or destination is incompatible with the matrix.\n */\n","tf":{"freq":{"detail":1,"store":1,"resultsof":1,"data":1,"use":1,"dst":1,"specifi":1,"transform":1,"band":3,"oper":2,"src":1,"constructor":1,"argument":2,"thrown":2,"may":1,"except":3,"creat":1,"matrix":4,"number":4,"equal":1,"illeg":2,"incompat":2,"row":1,"raster":4,"caus":1,"thesourc":1,"overflow":1,"will":1,"sourc":1,"comment":1,"filter":4,"destin":3},"maxFreq":4,"totalTerms":55},"loc":71}