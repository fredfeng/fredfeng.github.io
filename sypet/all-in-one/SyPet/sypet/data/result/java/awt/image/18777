{"id":18777,"className":"java.awt.image.BufferedImageFilter","methodName":"setPixels","signature":"\u003cjava.awt.image.BufferedImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)\u003e","javadoc":"/** \n * Filters the information provided in the \u003ccode\u003esetPixels\u003c/code\u003e method of the \u003ccode\u003eImageConsumer\u003c/code\u003e interface which takes an array of bytes. \u003cp\u003e Note: This method is intended to be called by the \u003ccode\u003eImageProducer\u003c/code\u003e of the \u003ccode\u003eImage\u003c/code\u003e whose pixels are being filtered.  Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.\n * @throws IllegalArgumentException if width or height are less thanzero.\n * @see ImageConsumer#setPixels(int,int,int,int,ColorModel,byte[],int,int)\n */\n","tf":{"freq":{"call":2,"result":1,"model":1,"pixel":6,"use":1,"consum":2,"avoid":1,"height":1,"oper":1,"request":1,"develop":1,"less":1,"note":1,"argument":1,"direct":1,"except":1,"whose":1,"width":1,"produc":1,"problem":1,"imag":5,"provid":1,"illeg":1,"inform":1,"thanzero":1,"color":1,"take":1,"retriev":2,"method":3,"intend":1,"filter":2,"array":1},"maxFreq":6,"totalTerms":47},"loc":69}