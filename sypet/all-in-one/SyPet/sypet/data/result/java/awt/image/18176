{"id":18176,"className":"java.awt.image.ColorModel","methodName":"ColorModel","signature":"\u003cjava.awt.image.ColorModel: void ColorModel(int)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eColorModel\u003c/code\u003e that translates pixels of the specified number of bits to color/alpha components.  The color space is the default RGB \u003ccode\u003eColorSpace\u003c/code\u003e, which is sRGB. Pixel values are assumed to include alpha information.  If color and alpha information are represented in the pixel value as separate spatial bands, the color bands are assumed not to be premultiplied with the alpha value. The transparency type is java.awt.Transparency.TRANSLUCENT.  The transfer type will be the smallest of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, or DataBuffer.TYPE_INT that can hold a single pixel (or DataBuffer.TYPE_UNDEFINED if bits is greater than 32).  Since this constructor has no information about the number of bits per color and alpha component, any subclass calling this constructor should override any method that requires this information.\n * @param bits the number of bits of a pixel\n * @throws IllegalArgumentException if the numberof bits in \u003ccode\u003ebits\u003c/code\u003e is less than 1\n */\n","tf":{"freq":{"call":1,"model":2,"greater":1,"singl":1,"pixel":5,"data":4,"space":2,"type":2,"specifi":1,"numberof":1,"buffer":4,"premultipli":1,"transpar":2,"requir":1,"band":2,"alpha":5,"valu":3,"less":1,"constructor":2,"argument":1,"except":1,"transfer":1,"assum":2,"includ":1,"spatial":1,"repres":1,"hold":1,"smallest":1,"number":3,"translat":1,"illeg":1,"bit":7,"inform":4,"awt":1,"per":1,"compon":2,"color":8,"separ":1,"subclass":1,"will":1,"method":1,"java":1,"construct":1},"maxFreq":8,"totalTerms":85},"loc":11}