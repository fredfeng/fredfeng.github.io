{"id":19160,"className":"java.awt.im.InputContext","methodName":"selectInputMethod","signature":"\u003cjava.awt.im.InputContext: boolean selectInputMethod(java.util.Locale)\u003e","javadoc":"/** \n * Attempts to select an input method or keyboard layout that supports the given locale, and returns a value indicating whether such an input method or keyboard layout has been successfully selected. The following steps are taken until an input method has been selected: \u003cp\u003e \u003cul\u003e \u003cli\u003e If the currently selected input method or keyboard layout supports the requested locale, it remains selected.\u003c/li\u003e \u003cli\u003e If there is no input method or keyboard layout available that supports the requested locale, the current input method or keyboard layout remains selected.\u003c/li\u003e \u003cli\u003e If the user has previously selected an input method or keyboard layout for the requested locale from the user interface, then the most recently selected such input method or keyboard layout is reselected.\u003c/li\u003e \u003cli\u003e Otherwise, an input method or keyboard layout that supports the requested locale is selected in an implementation dependent way.\u003c/li\u003e \u003cp\u003e \u003c/ul\u003e Before switching away from an input method, any currently uncommitted text is committed. If no input method or keyboard layout supporting the requested locale is available, then false is returned. \u003cp\u003e Not all host operating systems provide API to determine the locale of the currently selected native input method or keyboard layout, and to select a native input method or keyboard layout by locale. For host operating systems that don\u0027t provide such API, \u003ccode\u003eselectInputMethod\u003c/code\u003e assumes that native input methods or keyboard layouts provided by the host operating system support only the system\u0027s default locale. \u003cp\u003e A text editing component may call this method, for example, when the user changes the insertion point, so that the user can immediately continue typing in the language of the surrounding text.\n * @param locale The desired new locale.\n * @return true if the input method or keyboard layout that\u0027s active afterthis call supports the desired locale.\n * @exception NullPointerException if \u003ccode\u003elocale\u003c/code\u003e is null\n */\n","tf":{"freq":{"fals":1,"afterthi":1,"languag":1,"desir":2,"type":1,"uncommit":1,"whether":1,"given":1,"commit":1,"oper":3,"request":5,"taken":1,"follow":1,"except":2,"text":3,"support":7,"host":3,"select":13,"avail":2,"provid":3,"continu":1,"input":17,"system":4,"determin":1,"pointer":1,"attempt":1,"otherwis":1,"call":2,"way":1,"activ":1,"surround":1,"recent":1,"indic":1,"reselect":1,"layout":13,"current":4,"valu":1,"immedi":1,"keyboard":13,"may":1,"assum":1,"previous":1,"depend":1,"edit":1,"true":1,"away":1,"point":1,"remain":2,"compon":1,"exampl":1,"method":18,"local":13,"chang":1,"insert":1,"user":4,"success":1,"step":1},"maxFreq":18,"totalTerms":170},"loc":4}