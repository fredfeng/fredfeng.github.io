{"id":16186,"className":"java.awt.Rectangle","methodName":"add","signature":"\u003cjava.awt.Rectangle: void add(java.awt.Rectangle)\u003e","javadoc":"/** \n * Adds a \u003ccode\u003eRectangle\u003c/code\u003e to this \u003ccode\u003eRectangle\u003c/code\u003e. The resulting \u003ccode\u003eRectangle\u003c/code\u003e is the union of the two rectangles. \u003cp\u003e If either  {@code Rectangle} has any dimension less than 0, theresult will have the dimensions of the other  {@code Rectangle}. If both  {@code Rectangle}s have at least one dimension less than 0, the result will have at least one dimension less than 0. \u003cp\u003e If either  {@code Rectangle} has one or both dimensions equalto 0, the result along those axes with 0 dimensions will be equivalent to the results obtained by adding the corresponding origin coordinate to the result rectangle along that axis, similar to the operation of the  {@link #add(Point)} method,but contribute no further dimension beyond that. \u003cp\u003e If the resulting  {@code Rectangle} would have a dimensiontoo large to be expressed as an  {@code int}, the result will have a dimension of  {@code Integer.MAX_VALUE} alongthat dimension.\n * @param r the specified \u003ccode\u003eRectangle\u003c/code\u003e\n */\n","tf":{"freq":{"result":7,"axi":1,"dimensiontoo":1,"least":2,"correspond":1,"link":1,"one":3,"express":1,"add":3,"rectangl":11,"specifi":1,"beyond":1,"contribut":1,"equival":1,"oper":1,"union":1,"along":2,"less":3,"axe":1,"similar":1,"coordin":1,"origin":1,"theresult":1,"dimens":9,"point":1,"two":1,"either":2,"obtain":1,"alongthat":1,"larg":1,"will":4,"ad":1,"method":1,"equalto":1,"integ":1},"maxFreq":11,"totalTerms":71},"loc":32}