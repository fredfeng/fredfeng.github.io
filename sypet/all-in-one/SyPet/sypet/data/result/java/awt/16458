{"id":16458,"className":"java.awt.BorderLayout","methodName":"addLayoutComponent","signature":"\u003cjava.awt.BorderLayout: void addLayoutComponent(java.awt.Component,java.lang.Object)\u003e","javadoc":"/** \n * Adds the specified component to the layout, using the specified constraint object.  For border layouts, the constraint must be one of the following constants:  \u003ccode\u003eNORTH\u003c/code\u003e, \u003ccode\u003eSOUTH\u003c/code\u003e, \u003ccode\u003eEAST\u003c/code\u003e, \u003ccode\u003eWEST\u003c/code\u003e, or \u003ccode\u003eCENTER\u003c/code\u003e. \u003cp\u003e Most applications do not call this method directly. This method is called when a component is added to a container using the \u003ccode\u003eContainer.add\u003c/code\u003e method with the same argument types.\n * @param comp         the component to be added.\n * @param constraints  an object that specifies how and wherethe component is added to the layout.\n * @see java.awt.Container#add(java.awt.Component,java.lang.Object)\n * @exception IllegalArgumentException  if the constraint object is nota string, or if it not one of the five specified constants.\n * @since   JDK1.1\n */\n","tf":{"freq":{"call":2,"nota":1,"one":2,"constraint":4,"use":2,"object":4,"add":4,"type":1,"lang":1,"must":1,"applic":1,"specifi":4,"whereth":1,"layout":4,"border":1,"follow":1,"direct":1,"argument":2,"except":2,"comp":1,"five":1,"constant":2,"illeg":1,"awt":2,"compon":6,"string":1,"contain":3,"ad":3,"method":3,"java":3},"maxFreq":6,"totalTerms":65},"loc":9}