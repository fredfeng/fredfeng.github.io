{"id":16537,"className":"java.awt.MediaTracker","methodName":"statusID","signature":"\u003cjava.awt.MediaTracker: int statusID(int,boolean)\u003e","javadoc":"/** \n * Calculates and returns the bitwise inclusive \u003cb\u003eOR\u003c/b\u003e of the status of all media with the specified identifier that are tracked by this media tracker. \u003cp\u003e Possible flags defined by the \u003ccode\u003eMediaTracker\u003c/code\u003e class are \u003ccode\u003eLOADING\u003c/code\u003e, \u003ccode\u003eABORTED\u003c/code\u003e, \u003ccode\u003eERRORED\u003c/code\u003e, and \u003ccode\u003eCOMPLETE\u003c/code\u003e. An image that hasn\u0027t started loading has zero as its status. \u003cp\u003e If the value of \u003ccode\u003eload\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, then this method starts loading any images that are not yet being loaded.\n * @param id   the identifier of the images to check\n * @param load   if \u003ccode\u003etrue\u003c/code\u003e, start loadingany images that are not yet being loaded\n * @return       the bitwise inclusive \u003cb\u003eOR\u003c/b\u003e of the status ofall of the media with the specified identifier that are being tracked\n * @see java.awt.MediaTracker#statusAll(boolean)\n * @see java.awt.MediaTracker#LOADING\n * @see java.awt.MediaTracker#ABORTED\n * @see java.awt.MediaTracker#ERRORED\n * @see java.awt.MediaTracker#COMPLETE\n */\n","tf":{"freq":{"defin":1,"check":1,"bitwis":2,"status":5,"calcul":1,"track":2,"true":2,"possibl":1,"identifi":3,"zero":1,"imag":4,"loadingani":1,"specifi":2,"inclus":2,"awt":5,"flag":1,"start":3,"ofal":1,"java":5,"method":1,"valu":1,"load":6,"tracker":7,"media":9,"yet":2},"maxFreq":9,"totalTerms":69},"loc":3}