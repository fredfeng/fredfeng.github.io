{"id":15902,"className":"java.awt.GridLayout","methodName":"GridLayout","signature":"\u003cjava.awt.GridLayout: void GridLayout(int,int,int,int)\u003e","javadoc":"/** \n * Creates a grid layout with the specified number of rows and columns. All components in the layout are given equal size. \u003cp\u003e In addition, the horizontal and vertical gaps are set to the specified values. Horizontal gaps are placed between each of the columns. Vertical gaps are placed between each of the rows. \u003cp\u003e One, but not both, of \u003ccode\u003erows\u003c/code\u003e and \u003ccode\u003ecols\u003c/code\u003e can be zero, which means that any number of objects can be placed in a row or in a column. \u003cp\u003e All \u003ccode\u003eGridLayout\u003c/code\u003e constructors defer to this one.\n * @param rows   the rows, with the value zero meaningany number of rows\n * @param cols   the columns, with the value zero meaningany number of columns\n * @param hgap   the horizontal gap\n * @param vgap   the vertical gap\n * @exception IllegalArgumentException  if the value of both\u003ccode\u003erows\u003c/code\u003e and \u003ccode\u003ecols\u003c/code\u003e is set to zero\n */\n","tf":{"freq":{"col":3,"one":2,"object":1,"zero":4,"specifi":2,"defer":1,"given":1,"layout":4,"grid":3,"mean":1,"horizont":3,"valu":4,"place":3,"constructor":1,"argument":1,"addit":1,"except":2,"vertic":3,"creat":1,"hgap":1,"equal":1,"number":4,"illeg":1,"vgap":1,"row":8,"size":1,"compon":1,"column":5,"meaningani":2,"gap":5},"maxFreq":8,"totalTerms":71},"loc":9}