{"id":19450,"className":"java.awt.event.MouseWheelEvent","methodName":"MouseWheelEvent","signature":"\u003cjava.awt.event.MouseWheelEvent: void MouseWheelEvent(java.awt.Component,int,long,int,int,int,int,boolean,int,int,int)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eMouseWheelEvent\u003c/code\u003e object with the specified source component, type, modifiers, coordinates, scroll type, scroll amount, and wheel rotation. \u003cp\u003eAbsolute coordinates xAbs and yAbs are set to source\u0027s location on screen plus relative coordinates x and y. xAbs and yAbs are set to zero if the source is not showing. \u003cp\u003eNote that passing in an invalid \u003ccode\u003eid\u003c/code\u003e results in unspecified behavior. This method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @param source         the \u003ccode\u003eComponent\u003c/code\u003e that originatedthe event\n * @param id             the integer that identifies the event\n * @param when           a long that gives the time the event occurred\n * @param modifiers      the modifier keys down during event(shift, ctrl, alt, meta)\n * @param x              the horizontal x coordinate for the mouse location\n * @param y              the vertical y coordinate for the mouse location\n * @param clickCount     the number of mouse clicks associated with event\n * @param popupTrigger   a boolean, true if this event is a trigger for apopup-menu\n * @param scrollType     the type of scrolling which should take place inresponse to this event;  valid values are \u003ccode\u003eWHEEL_UNIT_SCROLL\u003c/code\u003e and \u003ccode\u003eWHEEL_BLOCK_SCROLL\u003c/code\u003e\n * @param scrollAmount  for scrollType \u003ccode\u003eWHEEL_UNIT_SCROLL\u003c/code\u003e,the number of units to be scrolled\n * @param wheelRotation  the integer number of \"clicks\" by which the mousewheel was rotated\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is null\n * @see MouseEvent#MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean)\n * @see MouseEvent#MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int)\n */\n","tf":{"freq":{"count":1,"show":1,"zero":1,"type":5,"ctrl":1,"mous":9,"specifi":1,"amount":2,"time":1,"invalid":1,"event":13,"relat":1,"place":1,"key":1,"coordin":5,"argument":2,"plus":1,"screen":1,"except":2,"vertic":1,"scroll":7,"menu":1,"rotat":3,"number":3,"absolut":1,"awt":2,"sourc":6,"valid":1,"result":1,"unspecifi":1,"mousewheel":1,"wheel":4,"give":1,"behavior":1,"click":3,"identifi":1,"object":1,"originatedth":1,"meta":1,"associ":1,"popup":1,"alt":1,"valu":1,"horizont":1,"inrespons":1,"note":1,"trigger":2,"locat":3,"true":1,"illeg":2,"pass":1,"unit":1,"compon":4,"take":1,"modifi":3,"java":2,"method":1,"ab":4,"construct":1,"apopup":1,"integ":2,"shift":1,"occur":1},"maxFreq":13,"totalTerms":129},"loc":5}