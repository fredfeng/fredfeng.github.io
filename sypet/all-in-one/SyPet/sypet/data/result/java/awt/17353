{"id":17353,"className":"java.awt.Robot","methodName":"mousePress","signature":"\u003cjava.awt.Robot: void mousePress(int)\u003e","javadoc":"/** \n * Presses one or more mouse buttons.  The mouse buttons should be released using the  {@link #mouseRelease(int)} method.\n * @param buttons the Button mask; a combination of one or moremouse button masks. \u003cp\u003e It is allowed to use only a combination of valid values as a  {@code buttons} parameter.A valid combination consists of  {@code InputEvent.BUTTON1_DOWN_MASK}, {@code InputEvent.BUTTON2_DOWN_MASK},  {@code InputEvent.BUTTON3_DOWN_MASK}and values returned by the {@link InputEvent#getMaskForButton(int) InputEvent.getMaskForButton(button)} method.The valid combination also depends on a {@link Toolkit#areExtraMouseButtonsEnabled() Toolkit.areExtraMouseButtonsEnabled()} value as follows:\u003cul\u003e \u003cli\u003e If support for extended mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Javathen it is allowed to use only the following standard button masks: {@code InputEvent.BUTTON1_DOWN_MASK},  {@code InputEvent.BUTTON2_DOWN_MASK}, {@code InputEvent.BUTTON3_DOWN_MASK}. \u003cli\u003e If support for extended mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() enabled} by Javathen it is allowed to use the standard button masks and masks for existing extended mouse buttons, if the mouse has more then three buttons. In that way, it is allowed to use the button masks corresponding to the buttons in the range from 1 to  {@link java.awt.MouseInfo#getNumberOfButtons() MouseInfo.getNumberOfButtons()}. \u003cbr\u003e It is recommended to use the  {@link InputEvent#getMaskForButton(int) InputEvent.getMaskForButton(button)}method to obtain the mask for any mouse button by its number. \u003c/ul\u003e \u003cp\u003e The following standard button masks are also accepted: \u003cul\u003e \u003cli\u003e {@code InputEvent.BUTTON1_MASK}\u003cli\u003e {@code InputEvent.BUTTON2_MASK}\u003cli\u003e {@code InputEvent.BUTTON3_MASK}\u003c/ul\u003e However, it is recommended to use  {@code InputEvent.BUTTON1_DOWN_MASK}, {@code InputEvent.BUTTON2_DOWN_MASK},   {@code InputEvent.BUTTON3_DOWN_MASK} instead.Either extended  {@code _DOWN_MASK} or old {@code _MASK} valuesshould be used, but both those models should not be mixed.\n * @throws IllegalArgumentException if the {@code buttons} mask contains the mask for extra mouse buttonand support for extended mouse buttons is  {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java\n * @throws IllegalArgumentException if the {@code buttons} mask contains the mask for extra mouse buttonthat does not exist on the mouse and support for extended mouse buttons is  {@link Toolkit#areExtraMouseButtonsEnabled() enabled} by Java\n * @see #mouseRelease(int)\n * @see InputEvent#getMaskForButton(int)\n * @see Toolkit#areExtraMouseButtonsEnabled()\n * @see java.awt.MouseInfo#getNumberOfButtons()\n * @see java.awt.event.MouseEvent\n */\n","tf":{"freq":{"old":1,"accept":1,"mask":17,"mous":26,"info":3,"button":37,"event":19,"rang":1,"combin":4,"three":1,"howev":1,"javathen":2,"follow":3,"argument":2,"except":2,"support":4,"consist":1,"enabl":9,"extra":9,"buttonthat":1,"number":4,"input":17,"awt":3,"obtain":1,"disabl":2,"contain":2,"valid":3,"press":2,"model":1,"allow":4,"correspond":1,"one":2,"link":9,"use":8,"way":1,"valuesshould":1,"recommend":2,"buttonand":1,"releas":3,"toolkit":7,"valu":3,"moremous":1,"exist":2,"standard":3,"depend":1,"paramet":1,"illeg":2,"mix":1,"either":1,"instead":1,"method":3,"java":5,"also":2},"maxFreq":37,"totalTerms":244},"loc":5}