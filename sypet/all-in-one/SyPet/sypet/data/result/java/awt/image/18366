{"id":18366,"className":"java.awt.image.ComponentColorModel","methodName":"getNormalizedComponents","signature":"\u003cjava.awt.image.ComponentColorModel: float[] getNormalizedComponents(int[],int,float[],int)\u003e","javadoc":"/** \n * Returns an array of all of the color/alpha components in normalized form, given an unnormalized component array.  Unnormalized components are unsigned integral values between 0 and 2\u003csup\u003en\u003c/sup\u003e - 1, where n is the number of bits for a particular component.  Normalized components are float values between a per component minimum and maximum specified by the \u003ccode\u003eColorSpace\u003c/code\u003e object for this \u003ccode\u003eColorModel\u003c/code\u003e.  An \u003ccode\u003eIllegalArgumentException\u003c/code\u003e will be thrown if color component values for this \u003ccode\u003eColorModel\u003c/code\u003e are not conveniently representable in the unnormalized form.  If the \u003ccode\u003enormComponents\u003c/code\u003e array is \u003ccode\u003enull\u003c/code\u003e, a new array will be allocated.  The \u003ccode\u003enormComponents\u003c/code\u003e array will be returned.  Color/alpha components are stored in the \u003ccode\u003enormComponents\u003c/code\u003e array starting at \u003ccode\u003enormOffset\u003c/code\u003e (even if the array is allocated by this method).  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if the \u003ccode\u003enormComponents\u003c/code\u003e array is not \u003ccode\u003enull\u003c/code\u003e and is not large enough to hold all the color and alpha components (starting at \u003ccode\u003enormOffset\u003c/code\u003e).  An \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown if the \u003ccode\u003ecomponents\u003c/code\u003e array is not large enough to hold all the color and alpha components starting at \u003ccode\u003eoffset\u003c/code\u003e.\n * @param components an array containing unnormalized components\n * @param offset the offset into the \u003ccode\u003ecomponents\u003c/code\u003e array atwhich to start retrieving unnormalized components\n * @param normComponents an array that receives the normalized components\n * @param normOffset the index into \u003ccode\u003enormComponents\u003c/code\u003e atwhich to begin storing normalized components\n * @return an array containing normalized color and alphacomponents.\n * @throws IllegalArgumentException If this\u003cCODE\u003eComponentColorModel\u003c/CODE\u003e does not support the unnormalized form\n */\n","tf":{"freq":{"model":3,"integr":1,"store":2,"minimum":1,"normal":6,"unnorm":6,"particular":1,"object":1,"enough":2,"sup":2,"space":1,"specifi":1,"norm":9,"given":1,"alpha":4,"valu":3,"offset":6,"conveni":1,"argument":3,"index":2,"thrown":3,"except":4,"support":1,"form":3,"hold":2,"receiv":1,"number":1,"illeg":3,"alphacompon":1,"begin":1,"represent":1,"bit":1,"compon":25,"per":1,"start":4,"color":10,"retriev":1,"larg":2,"unsign":1,"maximum":1,"contain":2,"will":3,"atwhich":2,"method":1,"even":1,"bound":1,"alloc":2,"array":14},"maxFreq":25,"totalTerms":149},"loc":12}