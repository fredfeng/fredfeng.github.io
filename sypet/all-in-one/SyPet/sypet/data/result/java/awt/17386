{"id":17386,"className":"java.awt.GraphicsConfiguration","methodName":"createCompatibleVolatileImage","signature":"\u003cjava.awt.GraphicsConfiguration: java.awt.image.VolatileImage createCompatibleVolatileImage(int,int)\u003e","javadoc":"/** \n * Returns a  {@link VolatileImage} with a data layout and color modelcompatible with this \u003ccode\u003eGraphicsConfiguration\u003c/code\u003e. The returned \u003ccode\u003eVolatileImage\u003c/code\u003e may have data that is stored optimally for the underlying graphics device and may therefore benefit from platform-specific rendering acceleration.\n * @param width the width of the returned \u003ccode\u003eVolatileImage\u003c/code\u003e\n * @param height the height of the returned \u003ccode\u003eVolatileImage\u003c/code\u003e\n * @return a \u003ccode\u003eVolatileImage\u003c/code\u003e whose data layout and colormodel is compatible with this \u003ccode\u003eGraphicsConfiguration\u003c/code\u003e.\n * @see Component#createVolatileImage(int,int)\n * @since 1.4\n */\n","tf":{"freq":{"platform":1,"graphic":3,"may":2,"optim":1,"store":1,"whose":1,"benefit":1,"creat":2,"width":2,"link":1,"data":3,"colormodel":1,"therefor":1,"imag":7,"render":1,"specif":1,"configur":2,"height":2,"acceler":1,"compon":1,"color":1,"modelcompat":1,"layout":2,"devic":1,"compat":2},"maxFreq":7,"totalTerms":42},"loc":11}