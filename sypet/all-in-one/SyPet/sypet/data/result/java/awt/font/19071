{"id":19071,"className":"java.awt.font.TextLayout","methodName":"getJustifiedLayout","signature":"\u003cjava.awt.font.TextLayout: java.awt.font.TextLayout getJustifiedLayout(float)\u003e","javadoc":"/** \n * Creates a copy of this \u003ccode\u003eTextLayout\u003c/code\u003e justified to the specified width. \u003cp\u003e If this \u003ccode\u003eTextLayout\u003c/code\u003e has already been justified, an exception is thrown.  If this \u003ccode\u003eTextLayout\u003c/code\u003e object\u0027s justification ratio is zero, a \u003ccode\u003eTextLayout\u003c/code\u003e identical to this \u003ccode\u003eTextLayout\u003c/code\u003e is returned.\n * @param justificationWidth the width to use when justifying the line.For best results, it should not be too different from the current advance of the line.\n * @return a \u003ccode\u003eTextLayout\u003c/code\u003e justified to the specified width.\n * @exception Error if this layout has already been justified, an Error isthrown.\n */\n","tf":{"freq":{"result":1,"text":6,"except":2,"thrown":1,"error":2,"creat":1,"width":4,"line":2,"use":1,"object":1,"zero":1,"copi":1,"specifi":2,"isthrown":1,"differ":1,"ident":1,"advanc":1,"ratio":1,"justifi":6,"layout":8,"current":1,"best":1,"alreadi":2,"justif":2},"maxFreq":8,"totalTerms":50},"loc":25}