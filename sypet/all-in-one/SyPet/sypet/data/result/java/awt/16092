{"id":16092,"className":"java.awt.BasicStroke","methodName":"BasicStroke","signature":"\u003cjava.awt.BasicStroke: void BasicStroke(float,int,int)\u003e","javadoc":"/** \n * Constructs a solid \u003ccode\u003eBasicStroke\u003c/code\u003e with the specified attributes.  The \u003ccode\u003emiterlimit\u003c/code\u003e parameter is unnecessary in cases where the default is allowable or the line joins are not specified as JOIN_MITER.\n * @param width the width of the \u003ccode\u003eBasicStroke\u003c/code\u003e\n * @param cap the decoration of the ends of a \u003ccode\u003eBasicStroke\u003c/code\u003e\n * @param join the decoration applied where path segments meet\n * @throws IllegalArgumentException if \u003ccode\u003ewidth\u003c/code\u003e is negative\n * @throws IllegalArgumentException if \u003ccode\u003ecap\u003c/code\u003e is not eitherCAP_BUTT, CAP_ROUND or CAP_SQUARE\n * @throws IllegalArgumentException if \u003ccode\u003ejoin\u003c/code\u003e is noteither JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER\n */\n","tf":{"freq":{"allow":1,"cap":2,"segment":1,"line":1,"specifi":2,"decor":2,"stroke":4,"attribut":1,"basic":4,"path":1,"end":1,"argument":3,"except":3,"width":3,"paramet":1,"join":3,"meet":1,"illeg":3,"solid":1,"either":1,"appli":1,"miterlimit":1,"noteith":1,"unnecessari":1,"negat":1,"construct":1},"maxFreq":4,"totalTerms":45},"loc":3}