{"id":16861,"className":"java.awt.Component","methodName":"imageUpdate","signature":"\u003cjava.awt.Component: boolean imageUpdate(java.awt.Image,int,int,int,int,int)\u003e","javadoc":"/** \n * Repaints the component when the image has changed. This \u003ccode\u003eimageUpdate\u003c/code\u003e method of an \u003ccode\u003eImageObserver\u003c/code\u003e is called when more information about an image which had been previously requested using an asynchronous routine such as the \u003ccode\u003edrawImage\u003c/code\u003e method of \u003ccode\u003eGraphics\u003c/code\u003e becomes available. See the definition of \u003ccode\u003eimageUpdate\u003c/code\u003e for more information on this method and its arguments. \u003cp\u003e The \u003ccode\u003eimageUpdate\u003c/code\u003e method of \u003ccode\u003eComponent\u003c/code\u003e incrementally draws an image on the component as more of the bits of the image are available. \u003cp\u003e If the system property \u003ccode\u003eawt.image.incrementaldraw\u003c/code\u003e is missing or has the value \u003ccode\u003etrue\u003c/code\u003e, the image is incrementally drawn. If the system property has any other value, then the image is not drawn until it has been completely loaded. \u003cp\u003e Also, if incremental drawing is in effect, the value of the system property \u003ccode\u003eawt.image.redrawrate\u003c/code\u003e is interpreted as an integer to give the maximum redraw rate, in milliseconds. If the system property is missing or cannot be interpreted as an integer, the redraw rate is once every 100ms. \u003cp\u003e The interpretation of the \u003ccode\u003ex\u003c/code\u003e, \u003ccode\u003ey\u003c/code\u003e, \u003ccode\u003ewidth\u003c/code\u003e, and \u003ccode\u003eheight\u003c/code\u003e arguments depends on the value of the \u003ccode\u003einfoflags\u003c/code\u003e argument.\n * @param img   the image being observed\n * @param infoflags   see \u003ccode\u003eimageUpdate\u003c/code\u003e for more information\n * @param x   the \u003ci\u003ex\u003c/i\u003e coordinate\n * @param y   the \u003ci\u003ey\u003c/i\u003e coordinate\n * @param w   the width\n * @param h   the height\n * @return    \u003ccode\u003efalse\u003c/code\u003e if the infoflags indicate that theimage is completely loaded; \u003ccode\u003etrue\u003c/code\u003e otherwise.\n * @see java.awt.image.ImageObserver\n * @see Graphics#drawImage(Image,int,int,Color,java.awt.image.ImageObserver)\n * @see Graphics#drawImage(Image,int,int,java.awt.image.ImageObserver)\n * @see Graphics#drawImage(Image,int,int,int,int,Color,java.awt.image.ImageObserver)\n * @see Graphics#drawImage(Image,int,int,int,int,java.awt.image.ImageObserver)\n * @see java.awt.image.ImageObserver#imageUpdate(java.awt.Image,int,int,int,int,int)\n * @since   JDK1.0\n */\n","tf":{"freq":{"fals":1,"redrawr":1,"img":1,"draw":7,"infoflag":3,"becom":1,"observ":8,"height":2,"request":1,"everi":1,"coordin":2,"argument":3,"increment":3,"width":2,"avail":2,"imag":38,"bit":1,"inform":3,"system":4,"awt":9,"updat":6,"maximum":1,"definit":1,"routin":1,"theimag":1,"repaint":1,"load":2,"properti":4,"otherwis":1,"asynchron":1,"call":1,"graphic":5,"give":1,"interpret":3,"use":1,"redraw":2,"rate":2,"indic":1,"millisecond":1,"valu":4,"drawn":2,"complet":2,"previous":1,"depend":1,"true":2,"compon":3,"effect":1,"color":2,"incrementaldraw":1,"java":7,"method":4,"chang":1,"also":1,"integ":2,"miss":2},"maxFreq":38,"totalTerms":165},"loc":17}