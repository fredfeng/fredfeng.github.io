{"id":17114,"className":"java.awt.FontMetrics","methodName":"charWidth","signature":"\u003cjava.awt.FontMetrics: int charWidth(char)\u003e","javadoc":"/** \n * Returns the advance width of the specified character in this \u003ccode\u003eFont\u003c/code\u003e.  The advance is the distance from the leftmost point to the rightmost point on the character\u0027s baseline.  Note that the advance of a \u003ccode\u003eString\u003c/code\u003e is not necessarily the sum of the advances of its characters. \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e This method cannot handle \u003ca href\u003d\"../lang/Character.html#supplementary\"\u003e supplementary characters\u003c/a\u003e. To support all Unicode characters, including supplementary characters, use the  {@link #charWidth(int)} method.\n * @param ch the character to be measured\n * @return     the advance width of the specified characterin the \u003ccode\u003eFont\u003c/code\u003e described by this \u003ccode\u003eFontMetrics\u003c/code\u003e object.\n * @see #charsWidth(char[],int,int)\n * @see #stringWidth(String)\n */\n","tf":{"freq":{"supplementari":3,"link":1,"sum":1,"use":1,"object":1,"lang":1,"specifi":2,"href":1,"note":2,"characterin":1,"support":1,"includ":1,"charact":8,"font":3,"width":6,"describ":1,"baselin":1,"handl":1,"point":2,"advanc":5,"metric":1,"string":3,"leftmost":1,"distanc":1,"unicod":1,"measur":1,"method":2,"html":1,"rightmost":1,"necessarili":1},"maxFreq":8,"totalTerms":56},"loc":7}