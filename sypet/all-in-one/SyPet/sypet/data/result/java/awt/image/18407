{"id":18407,"className":"java.awt.image.Raster","methodName":"createCompatibleWritableRaster","signature":"\u003cjava.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster(java.awt.Rectangle)\u003e","javadoc":"/** \n * Create a compatible WritableRaster with location (minX, minY) and size (width, height) specified by rect, a new SampleModel, and a new initialized DataBuffer.\n * @param rect a \u003ccode\u003eRectangle\u003c/code\u003e that specifies the size andlocation of the \u003ccode\u003eWritableRaster\u003c/code\u003e\n * @return a compatible \u003ccode\u003eWritableRaster\u003c/code\u003e with the specifiedsize and location and a new sample model and data buffer.\n * @throws RasterFormatException if \u003ccode\u003erect\u003c/code\u003e has widthor height less than or equal to zero, or computing either \u003ccode\u003erect.x + rect.width\u003c/code\u003e or \u003ccode\u003erect.y + rect.height\u003c/code\u003e results in integer overflow\n * @throws NullPointerException if \u003ccode\u003erect\u003c/code\u003e is null\n */\n","tf":{"freq":{"result":1,"model":2,"data":2,"zero":1,"rectangl":1,"specifi":2,"buffer":2,"height":3,"initi":1,"less":1,"min":2,"locat":2,"except":2,"creat":2,"width":2,"andloc":1,"specifieds":1,"writabl":4,"equal":1,"format":1,"rect":8,"size":2,"raster":5,"either":1,"overflow":1,"pointer":1,"comput":1,"integ":1,"widthor":1,"sampl":2,"compat":3},"maxFreq":8,"totalTerms":60},"loc":7}