{"id":15650,"className":"java.awt.Toolkit","methodName":"removeAWTEventListener","signature":"\u003cjava.awt.Toolkit: void removeAWTEventListener(java.awt.event.AWTEventListener)\u003e","javadoc":"/** \n * Removes an AWTEventListener from receiving dispatched AWTEvents. \u003cp\u003e First, if there is a security manager, its \u003ccode\u003echeckPermission\u003c/code\u003e method is called with an \u003ccode\u003eAWTPermission(\"listenToAllAWTEvents\")\u003c/code\u003e permission. This may result in a SecurityException. \u003cp\u003e Note:  event listener use is not recommended for normal application use, but are intended solely to support special purpose facilities including support for accessibility, event record/playback, and diagnostic tracing. If listener is null, no exception is thrown and no action is performed.\n * @param listener   the event listener.\n * @throws SecurityException if a security manager exists and its \u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow the operation.\n * @see #addAWTEventListener\n * @see #getAWTEventListeners\n * @see SecurityManager#checkPermission\n * @see java.awt.AWTEvent\n * @see java.awt.AWTPermission\n * @see java.awt.event.AWTEventListener\n * @see java.awt.event.AWTEventListenerProxy\n * @since    1.2\n */\n","tf":{"freq":{"call":1,"result":1,"allow":1,"normal":1,"use":2,"perform":1,"add":1,"recommend":1,"applic":1,"oper":1,"tevent":9,"event":5,"action":1,"permiss":4,"diagnost":1,"purpos":1,"tpermiss":2,"dispatch":1,"exist":1,"listen":11,"note":1,"sole":1,"facil":1,"thrown":1,"may":1,"except":3,"includ":1,"support":2,"proxi":1,"check":3,"trace":1,"manag":3,"remov":2,"receiv":1,"access":1,"record":1,"awt":4,"secur":5,"playback":1,"java":4,"special":1,"method":2,"intend":1,"first":1},"maxFreq":11,"totalTerms":90},"loc":31}