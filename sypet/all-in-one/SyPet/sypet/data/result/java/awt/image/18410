{"id":18410,"className":"java.awt.image.Raster","methodName":"createChild","signature":"\u003cjava.awt.image.Raster: java.awt.image.Raster createChild(int,int,int,int,int,int,int[])\u003e","javadoc":"/** \n * Returns a new Raster which shares all or part of this Raster\u0027s DataBuffer.  The new Raster will possess a reference to the current Raster, accessible through its getParent() method. \u003cp\u003e The parentX, parentY, width and height parameters form a Rectangle in this Raster\u0027s coordinate space, indicating the area of pixels to be shared.  An error will be thrown if this Rectangle is not contained with the bounds of the current Raster. \u003cp\u003e The new Raster may additionally be translated to a different coordinate system for the plane than that used by the current Raster.  The childMinX and childMinY parameters give the new (x, y) coordinate of the upper-left pixel of the returned Raster; the coordinate (childMinX, childMinY) in the new Raster will map to the same pixel as the coordinate (parentX, parentY) in the current Raster. \u003cp\u003e The new Raster may be defined to contain only a subset of the bands of the current Raster, possibly reordered, by means of the bandList parameter.  If bandList is null, it is taken to include all of the bands of the current Raster in their current order. \u003cp\u003e To create a new Raster that contains a subregion of the current Raster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.\n * @param parentX The X coordinate of the upper-left cornerin this Raster\u0027s coordinates\n * @param parentY The Y coordinate of the upper-left cornerin this Raster\u0027s coordinates\n * @param width      Width of the region starting at (parentX, parentY)\n * @param height     Height of the region starting at (parentX, parentY).\n * @param childMinX The X coordinate of the upper-left cornerof the returned Raster\n * @param childMinY The Y coordinate of the upper-left cornerof the returned Raster\n * @param bandList   Array of band indices, or null to use all bands\n * @return a new \u003ccode\u003eRaster\u003c/code\u003e.\n * @exception RasterFormatException if the specified subregion is outsideof the raster bounds.\n * @throws RasterFormatException if \u003ccode\u003ewidth\u003c/code\u003e or\u003ccode\u003eheight\u003c/code\u003e is less than or equal to zero, or computing any of \u003ccode\u003eparentX + width\u003c/code\u003e, \u003ccode\u003eparentY + height\u003c/code\u003e, \u003ccode\u003echildMinX + width\u003c/code\u003e, or \u003ccode\u003echildMinY + height\u003c/code\u003e results in integer overflow\n */\n","tf":{"freq":{"possibl":1,"zero":1,"specifi":1,"buffer":1,"height":6,"band":9,"cornerof":2,"refer":1,"taken":1,"coordin":12,"except":3,"thrown":1,"form":1,"creat":2,"width":6,"parent":15,"format":2,"system":2,"start":2,"overflow":1,"contain":3,"will":3,"comput":1,"array":1,"region":2,"result":1,"call":1,"defin":1,"pixel":3,"give":1,"data":1,"use":2,"space":1,"rectangl":2,"cornerin":2,"child":11,"subset":1,"subregion":2,"upper":5,"share":3,"area":1,"order":1,"indic":2,"possess":1,"current":8,"map":1,"mean":1,"left":5,"less":1,"min":10,"addit":1,"may":2,"includ":1,"error":1,"paramet":3,"equal":4,"list":4,"access":1,"translat":1,"outsideof":1,"reorder":1,"raster":24,"differ":1,"plane":1,"method":2,"part":1,"integ":1,"bound":2},"maxFreq":24,"totalTerms":200},"loc":36}