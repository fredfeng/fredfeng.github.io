{"id":16311,"className":"java.awt.Font","methodName":"getFont","signature":"\u003cjava.awt.Font: java.awt.Font getFont(java.lang.String,java.awt.Font)\u003e","javadoc":"/** \n * Gets the specified \u003ccode\u003eFont\u003c/code\u003e from the system properties list.  As in the \u003ccode\u003egetProperty\u003c/code\u003e method of \u003ccode\u003eSystem\u003c/code\u003e, the first argument is treated as the name of a system property to be obtained.  The \u003ccode\u003eString\u003c/code\u003e value of this property is then interpreted as a \u003ccode\u003eFont\u003c/code\u003e object. \u003cp\u003e The property value should be one of the forms accepted by \u003ccode\u003eFont.decode(String)\u003c/code\u003e If the specified property is not found, or the executing code does not have permission to read the property, the \u003ccode\u003efont\u003c/code\u003e argument is returned instead.\n * @param nm the case-insensitive property name\n * @param font a default \u003ccode\u003eFont\u003c/code\u003e to return if property\u003ccode\u003enm\u003c/code\u003e is not defined\n * @return    the \u003ccode\u003eFont\u003c/code\u003e value of the property.\n * @throws NullPointerException if nm is null.\n * @see #decode(String)\n */\n","tf":{"freq":{"defin":1,"accept":1,"one":1,"interpret":1,"object":1,"specifi":2,"name":2,"permiss":1,"read":1,"valu":3,"argument":2,"decod":2,"except":1,"form":1,"font":8,"list":1,"insensit":1,"obtain":1,"system":3,"string":3,"instead":1,"pointer":1,"method":1,"properti":10,"execut":1,"first":1,"treat":1,"found":1},"maxFreq":10,"totalTerms":54},"loc":11}