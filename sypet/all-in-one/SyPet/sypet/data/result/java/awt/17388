{"id":17388,"className":"java.awt.GraphicsConfiguration","methodName":"createCompatibleVolatileImage","signature":"\u003cjava.awt.GraphicsConfiguration: java.awt.image.VolatileImage createCompatibleVolatileImage(int,int,java.awt.ImageCapabilities)\u003e","javadoc":"/** \n * Returns a  {@link VolatileImage} with a data layout and color modelcompatible with this \u003ccode\u003eGraphicsConfiguration\u003c/code\u003e, using the specified image capabilities. If the \u003ccode\u003ecaps\u003c/code\u003e parameter is null, it is effectively ignored and this method will create a VolatileImage without regard to \u003ccode\u003eImageCapabilities\u003c/code\u003e constraints. The returned \u003ccode\u003eVolatileImage\u003c/code\u003e has a layout and color model that is closest to this native device configuration and can therefore be optimally blitted to this device.\n * @return a \u003ccode\u003eVolatileImage\u003c/code\u003e whose data layout and colormodel is compatible with this \u003ccode\u003eGraphicsConfiguration\u003c/code\u003e.\n * @param width the width of the returned \u003ccode\u003eVolatileImage\u003c/code\u003e\n * @param height the height of the returned \u003ccode\u003eVolatileImage\u003c/code\u003e\n * @param caps the image capabilities\n * @exception AWTException if the supplied image capabilities could notbe met by this graphics configuration\n * @since 1.4\n */\n","tf":{"freq":{"notb":1,"graphic":3,"model":1,"cap":2,"link":1,"data":2,"use":1,"constraint":1,"colormodel":1,"therefor":1,"blit":1,"specifi":1,"met":1,"height":2,"texcept":1,"layout":3,"closest":1,"except":1,"ignor":1,"optim":1,"whose":1,"creat":2,"width":2,"paramet":1,"suppli":1,"capabl":4,"regard":1,"imag":11,"without":1,"configur":4,"effect":1,"color":2,"modelcompat":1,"will":1,"method":1,"devic":2,"compat":2},"maxFreq":11,"totalTerms":65},"loc":4}