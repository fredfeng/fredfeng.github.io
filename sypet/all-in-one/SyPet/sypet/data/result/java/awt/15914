{"id":15914,"className":"java.awt.GridLayout","methodName":"minimumLayoutSize","signature":"\u003cjava.awt.GridLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)\u003e","javadoc":"/** \n * Determines the minimum size of the container argument using this grid layout. \u003cp\u003e The minimum width of a grid layout is the largest minimum width of all of the components in the container times the number of columns, plus the horizontal padding times the number of columns minus one, plus the left and right insets of the target container. \u003cp\u003e The minimum height of a grid layout is the largest minimum height of all of the components in the container times the number of rows, plus the vertical padding times the number of rows minus one, plus the top and bottom insets of the target container.\n * @param parent   the container in which to do the layout\n * @return      the minimum dimensions needed to lay out thesubcomponents of the specified container\n * @see java.awt.GridLayout#preferredLayoutSize\n * @see java.awt.Container#doLayout\n */\n","tf":{"freq":{"need":1,"minimum":7,"one":2,"use":1,"specifi":1,"time":4,"height":2,"layout":8,"grid":4,"horizont":1,"left":1,"right":1,"top":1,"argument":1,"plus":4,"pad":2,"minus":2,"vertic":1,"lay":1,"inset":2,"width":2,"parent":1,"number":4,"thesubcompon":1,"dimens":1,"row":2,"largest":2,"size":3,"awt":2,"compon":2,"contain":8,"determin":1,"bottom":1,"column":2,"target":2,"java":2,"prefer":1},"maxFreq":8,"totalTerms":84},"loc":28}