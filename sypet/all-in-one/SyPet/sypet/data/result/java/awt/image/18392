{"id":18392,"className":"java.awt.image.Raster","methodName":"createBandedRaster","signature":"\u003cjava.awt.image.Raster: java.awt.image.WritableRaster createBandedRaster(int,int,int,int,int[],int[],java.awt.Point)\u003e","javadoc":"/** \n * Creates a Raster based on a BandedSampleModel with the specified data type, width, height, scanline stride, bank indices and band offsets.  The number of bands is inferred from bankIndices.length and bandOffsets.length, which must be the same. \u003cp\u003e The upper left corner of the Raster is given by the location argument.  The dataType parameter should be one of the enumerated values defined in the DataBuffer class. \u003cp\u003e The only dataTypes supported currently are TYPE_BYTE, TYPE_USHORT, and TYPE_INT.\n * @param dataType  the data type for storing samples\n * @param w         the width in pixels of the image data\n * @param h         the height in pixels of the image data\n * @param scanlineStride the line stride of the image data\n * @param bankIndices the bank indices for each band\n * @param bandOffsets the offsets of all bands\n * @param location  the upper-left corner of the \u003ccode\u003eRaster\u003c/code\u003e\n * @return a WritableRaster object with the specified data type,width, height, scanline stride, bank indices and band offsets.\n * @throws RasterFormatException if \u003ccode\u003ew\u003c/code\u003e or \u003ccode\u003eh\u003c/code\u003eis less than or equal to zero, or computing either \u003ccode\u003elocation.x + w\u003c/code\u003e or \u003ccode\u003elocation.y + h\u003c/code\u003e results in integer overflow\n * @throws IllegalArgumentException if \u003ccode\u003edataType\u003c/code\u003e is notone of the supported data types, which are \u003ccode\u003eDataBuffer.TYPE_BYTE\u003c/code\u003e, \u003ccode\u003eDataBuffer.TYPE_USHORT\u003c/code\u003e or \u003ccode\u003eDataBuffer.TYPE_INT\u003c/code\u003e\n * @throws ArrayIndexOutOfBoundsException if \u003ccode\u003ebankIndices\u003c/code\u003eor \u003ccode\u003ebandOffsets\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e\n */\n","tf":{"freq":{"store":1,"infer":1,"type":8,"zero":1,"must":1,"specifi":2,"buffer":4,"band":10,"height":3,"scanlin":3,"given":1,"bank":6,"argument":2,"index":1,"except":3,"support":2,"creat":2,"width":3,"number":1,"writabl":1,"format":1,"imag":3,"stride":4,"overflow":1,"comput":1,"array":1,"defin":1,"result":1,"model":1,"pixel":2,"one":1,"data":15,"line":1,"object":1,"upper":2,"indic":6,"length":2,"current":1,"left":2,"valu":1,"offset":6,"noton":1,"less":1,"locat":4,"corner":2,"paramet":1,"equal":1,"illeg":1,"raster":6,"either":1,"base":1,"integ":1,"bound":1,"sampl":2},"maxFreq":15,"totalTerms":133},"loc":48}