{"id":19389,"className":"java.awt.event.MouseEvent","methodName":"MouseEvent","signature":"\u003cjava.awt.event.MouseEvent: void MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eMouseEvent\u003c/code\u003e object with the specified source component, type, modifiers, coordinates, click count, and popupTrigger flag. An invocation of the form \u003ctt\u003eMouseEvent(source, id, when, modifiers, x, y, clickCount, popupTrigger)\u003c/tt\u003e behaves in exactly the same way as the invocation \u003ctt\u003e  {@link #MouseEvent(Component,int,long,int,int,int,int,int,int,boolean,int) MouseEvent}(source, id, when, modifiers, x, y, xAbs, yAbs, clickCount, popupTrigger, MouseEvent.NOBUTTON)\u003c/tt\u003e where xAbs and yAbs defines as source\u0027s location on screen plus relative coordinates x and y. xAbs and yAbs are set to zero if the source is not showing. This method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @param source       The \u003ccode\u003eComponent\u003c/code\u003e that originated the event\n * @param id              An integer indicating the type of event.For information on allowable values, see the class description for  {@link MouseEvent}\n * @param when         A long integer that gives the time the event occurred.Passing negative or zero value is not recommended\n * @param modifiers    The modifier keys down during event (e.g. shift, ctrl,alt, meta) Passing negative parameter is not recommended. Zero value means that no modifiers were passed. Use either an extended _DOWN_MASK or old _MASK modifiers, however do not mix models in the one event. The extended modifiers are preferred for using\n * @param x            The horizontal x coordinate for the mouse location.It is allowed to pass negative values\n * @param y            The vertical y coordinate for the mouse location.It is allowed to pass negative values\n * @param clickCount   The number of mouse clicks associated with event.Passing negative value is not recommended\n * @param popupTrigger A boolean that equals {@code true} if this eventis a trigger for a popup menu\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is null\n * @see #getSource()\n * @see #getID()\n * @see #getWhen()\n * @see #getModifiers()\n * @see #getX()\n * @see #getY()\n * @see #getClickCount()\n * @see #isPopupTrigger()\n */\n","tf":{"freq":{"old":1,"count":5,"behav":1,"show":1,"ctrl":1,"type":2,"zero":3,"mous":10,"specifi":1,"time":1,"event":13,"exact":1,"relat":1,"howev":1,"key":1,"coordin":4,"argument":2,"screen":1,"plus":1,"except":2,"vertic":1,"form":1,"menu":1,"descript":1,"number":1,"invoc":2,"inform":1,"flag":1,"sourc":9,"negat":5,"prefer":1,"defin":1,"model":1,"allow":3,"give":1,"one":1,"link":2,"use":2,"way":1,"click":6,"object":1,"recommend":3,"meta":1,"eventi":1,"indic":1,"associ":1,"alt":1,"popup":6,"mean":1,"horizont":1,"valu":6,"trigger":6,"locat":3,"paramet":1,"origin":1,"true":1,"equal":1,"illeg":2,"mix":1,"pass":6,"either":1,"compon":3,"modifi":9,"method":1,"ab":6,"construct":1,"integ":2,"shift":1,"occur":1},"maxFreq":13,"totalTerms":165},"loc":3}