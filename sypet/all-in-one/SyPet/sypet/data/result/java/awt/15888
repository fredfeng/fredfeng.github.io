{"id":15888,"className":"java.awt.Graphics2D","methodName":"scale","signature":"\u003cjava.awt.Graphics2D: void scale(double,double)\u003e","javadoc":"/** \n * Concatenates the current \u003ccode\u003eGraphics2D\u003c/code\u003e \u003ccode\u003eTransform\u003c/code\u003e with a scaling transformation Subsequent rendering is resized according to the specified scaling factors relative to the previous scaling. This is equivalent to calling \u003ccode\u003etransform(S)\u003c/code\u003e, where S is an \u003ccode\u003eAffineTransform\u003c/code\u003e represented by the following matrix: \u003cpre\u003e [   sx   0    0   ] [   0    sy   0   ] [   0    0    1   ] \u003c/pre\u003e\n * @param sx the amount by which X coordinates in subsequentrendering operations are multiplied relative to previous rendering operations.\n * @param sy the amount by which Y coordinates in subsequentrendering operations are multiplied relative to previous rendering operations.\n */\n","tf":{"freq":{"coordin":2,"call":1,"scale":4,"graphic":1,"previous":3,"repres":1,"matrix":1,"concaten":1,"accord":1,"factor":1,"render":3,"resiz":1,"specifi":1,"amount":2,"transform":4,"oper":4,"equival":1,"pre":2,"current":1,"relat":3,"multipli":2,"subsequentrend":2,"subsequ":1,"follow":1,"affin":1},"maxFreq":4,"totalTerms":45},"loc":0}