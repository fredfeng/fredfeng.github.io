{"id":18362,"className":"java.awt.image.ComponentColorModel","methodName":"getDataElements","signature":"\u003cjava.awt.image.ComponentColorModel: java.lang.Object getDataElements(int,java.lang.Object)\u003e","javadoc":"/** \n * Returns a data element array representation of a pixel in this \u003cCODE\u003eColorModel\u003c/CODE\u003e, given an integer pixel representation in the default RGB color model. This array can then be passed to the \u003cCODE\u003esetDataElements\u003c/CODE\u003e method of a \u003cCODE\u003eWritableRaster\u003c/CODE\u003e object.  If the \u003cCODE\u003epixel\u003c/CODE\u003e parameter is null, a new array is allocated.  Since \u003ccode\u003eComponentColorModel\u003c/code\u003e can be subclassed, subclasses inherit the implementation of this method and if they don\u0027t override it then they throw an exception if they use an unsupported \u003ccode\u003etransferType\u003c/code\u003e.\n * @param rgb the integer representation of the pixel in the RGBcolor model\n * @param pixel the specified pixel\n * @return The data element array representation of a pixelin this \u003cCODE\u003eColorModel\u003c/CODE\u003e.\n * @throws ClassCastException If \u003cCODE\u003epixel\u003c/CODE\u003e is not null andis not a primitive array of type \u003cCODE\u003etransferType\u003c/CODE\u003e.\n * @throws ArrayIndexOutOfBoundsException If \u003cCODE\u003epixel\u003c/CODE\u003e isnot large enough to hold a pixel value for this \u003cCODE\u003eColorModel\u003c/CODE\u003e.\n * @throws UnsupportedOperationException If the transfer type ofthis \u003cCODE\u003eComponentColorModel\u003c/CODE\u003e is not one of the supported transfer types: \u003cCODE\u003eDataBuffer.TYPE_BYTE\u003c/CODE\u003e, \u003cCODE\u003eDataBuffer.TYPE_USHORT\u003c/CODE\u003e, \u003cCODE\u003eDataBuffer.TYPE_INT\u003c/CODE\u003e, \u003cCODE\u003eDataBuffer.TYPE_SHORT\u003c/CODE\u003e, \u003cCODE\u003eDataBuffer.TYPE_FLOAT\u003c/CODE\u003e, or \u003cCODE\u003eDataBuffer.TYPE_DOUBLE\u003c/CODE\u003e.\n * @see WritableRaster#setDataElements\n * @see SampleModel#setDataElements\n */\n","tf":{"freq":{"primit":1,"model":8,"unsupport":2,"pixel":9,"one":1,"data":12,"use":1,"object":1,"enough":1,"type":5,"specifi":1,"buffer":6,"andi":1,"isnot":1,"given":1,"oper":1,"bcolor":1,"valu":1,"element":6,"index":1,"except":4,"transfer":4,"support":1,"hold":1,"paramet":1,"writabl":2,"rgb":1,"pass":1,"represent":4,"ofthi":1,"raster":2,"cast":1,"compon":2,"color":6,"larg":1,"subclass":2,"pixelin":1,"method":2,"integ":2,"sampl":1,"bound":1,"array":6,"alloc":1},"maxFreq":12,"totalTerms":109},"loc":471}