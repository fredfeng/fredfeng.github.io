{"id":17457,"className":"java.awt.Color","methodName":"Color","signature":"\u003cjava.awt.Color: void Color(java.awt.color.ColorSpace,float[],float)\u003e","javadoc":"/** \n * Creates a color in the specified \u003ccode\u003eColorSpace\u003c/code\u003e with the color components specified in the \u003ccode\u003efloat\u003c/code\u003e array and the specified alpha.  The number of components is determined by the type of the \u003ccode\u003eColorSpace\u003c/code\u003e.  For example, RGB requires 3 components, but CMYK requires 4 components.\n * @param cspace the \u003ccode\u003eColorSpace\u003c/code\u003e to be used tointerpret the components\n * @param components an arbitrary number of color componentsthat is compatible with the \u003ccode\u003eColorSpace\u003c/code\u003e\n * @param alpha alpha value\n * @throws IllegalArgumentException if any of the values in the\u003ccode\u003ecomponents\u003c/code\u003e array or \u003ccode\u003ealpha\u003c/code\u003e is outside of the range 0.0 to 1.0\n * @see #getComponents\n * @see #getColorComponents\n */\n","tf":{"freq":{"argument":1,"except":1,"creat":1,"use":1,"number":2,"space":4,"type":1,"illeg":1,"specifi":3,"arbitrari":1,"componentsthat":1,"requir":2,"compon":9,"outsid":1,"color":9,"rang":1,"cspace":1,"alpha":4,"determin":1,"exampl":1,"valu":2,"tointerpret":1,"compat":1,"array":2},"maxFreq":9,"totalTerms":52},"loc":32}