{"id":18779,"className":"java.awt.image.BufferedImageFilter","methodName":"imageComplete","signature":"\u003cjava.awt.image.BufferedImageFilter: void imageComplete(int)\u003e","javadoc":"/** \n * Filters the information provided in the \u003ccode\u003eimageComplete\u003c/code\u003e method of the \u003ccode\u003eImageConsumer\u003c/code\u003e interface. \u003cp\u003e Note: This method is intended to be called by the \u003ccode\u003eImageProducer\u003c/code\u003e of the \u003ccode\u003eImage\u003c/code\u003e whose pixels are being filtered.  Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.\n * @param status the status of image loading\n * @throws ImagingOpException if there was a problem calling the filtermethod of the \u003ccode\u003eBufferedImageOp\u003c/code\u003e associated with this instance.\n * @see ImageConsumer#imageComplete\n */\n","tf":{"freq":{"call":3,"result":1,"pixel":3,"use":1,"buffer":1,"consum":2,"avoid":1,"associ":1,"oper":1,"request":1,"develop":1,"note":1,"complet":3,"direct":1,"except":1,"whose":1,"status":2,"produc":1,"problem":2,"imag":11,"provid":1,"filtermethod":1,"instanc":1,"inform":1,"retriev":2,"method":3,"load":1,"intend":1,"filter":2},"maxFreq":11,"totalTerms":52},"loc":60}