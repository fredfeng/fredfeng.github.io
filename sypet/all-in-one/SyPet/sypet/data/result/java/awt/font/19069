{"id":19069,"className":"java.awt.font.TextLayout","methodName":"TextLayout","signature":"\u003cjava.awt.font.TextLayout: void TextLayout(java.lang.String,java.util.Map,java.awt.font.FontRenderContext)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eTextLayout\u003c/code\u003e from a \u003ccode\u003eString\u003c/code\u003e and an attribute set. \u003cp\u003e All the text is styled using the provided attributes. \u003cp\u003e \u003ccode\u003estring\u003c/code\u003e must specify a single paragraph of text because an entire paragraph is required for the bidirectional algorithm.\n * @param string the text to display\n * @param attributes the attributes used to style the text\n * @param frc contains information about a graphics device which is neededto measure the text correctly. Text measurements can vary slightly depending on the device resolution, and attributes such as antialiasing.  This parameter does not specify a translation between the \u003ccode\u003eTextLayout\u003c/code\u003e and user space.\n */\n","tf":{"freq":{"graphic":1,"paragraph":2,"singl":1,"frc":1,"use":2,"space":1,"must":1,"specifi":2,"algorithm":1,"resolut":1,"slight":1,"attribut":5,"requir":1,"correct":1,"style":2,"neededto":1,"layout":3,"text":9,"antialias":1,"depend":1,"paramet":1,"display":1,"translat":1,"provid":1,"inform":1,"string":3,"contain":1,"measur":2,"construct":1,"devic":2,"user":1,"entir":1,"vari":1,"bidirect":1},"maxFreq":9,"totalTerms":56},"loc":22}