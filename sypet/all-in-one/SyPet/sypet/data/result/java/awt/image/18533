{"id":18533,"className":"java.awt.image.PixelGrabber","methodName":"grabPixels","signature":"\u003cjava.awt.image.PixelGrabber: boolean grabPixels(long)\u003e","javadoc":"/** \n * Request the Image or ImageProducer to start delivering pixels and wait for all of the pixels in the rectangle of interest to be delivered or until the specified timeout has elapsed.  This method behaves in the following ways, depending on the value of \u003ccode\u003ems\u003c/code\u003e: \u003cul\u003e \u003cli\u003e If \u003ccode\u003ems\u003c/code\u003e \u003d\u003d 0, waits until all pixels are delivered \u003cli\u003e If \u003ccode\u003ems\u003c/code\u003e \u003e 0, waits until all pixels are delivered as timeout expires. \u003cli\u003e If \u003ccode\u003ems\u003c/code\u003e \u003c 0, returns \u003ccode\u003etrue\u003c/code\u003e if all pixels are grabbed, \u003ccode\u003efalse\u003c/code\u003e otherwise and does not wait. \u003c/ul\u003e\n * @param ms the number of milliseconds to wait for the image pixelsto arrive before timing out\n * @return true if the pixels were successfully grabbed, false onabort, error or timeout\n * @exception InterruptedException Another thread has interrupted this thread.\n */\n","tf":{"freq":{"fals":2,"otherwis":1,"grab":3,"pixel":7,"behav":1,"way":1,"anoth":1,"wait":5,"pixelsto":1,"rectangl":1,"specifi":1,"expir":1,"elaps":1,"time":1,"millisecond":1,"interest":1,"thread":2,"request":1,"valu":1,"follow":1,"except":2,"error":1,"depend":1,"true":2,"produc":1,"number":1,"imag":3,"interrupt":2,"onabort":1,"start":1,"deliv":4,"method":1,"arriv":1,"success":1,"timeout":3},"maxFreq":7,"totalTerms":59},"loc":24}