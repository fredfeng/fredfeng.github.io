{"id":18393,"className":"java.awt.image.Raster","methodName":"createPackedRaster","signature":"\u003cjava.awt.image.Raster: java.awt.image.WritableRaster createPackedRaster(int,int,int,int[],java.awt.Point)\u003e","javadoc":"/** \n * Creates a Raster based on a SinglePixelPackedSampleModel with the specified data type, width, height, and band masks. The number of bands is inferred from bandMasks.length. \u003cp\u003e The upper left corner of the Raster is given by the location argument.  If location is null, (0, 0) will be used. The dataType parameter should be one of the enumerated values defined in the DataBuffer class. \u003cp\u003e The only dataTypes supported currently are TYPE_BYTE, TYPE_USHORT, and TYPE_INT.\n * @param dataType  the data type for storing samples\n * @param w         the width in pixels of the image data\n * @param h         the height in pixels of the image data\n * @param bandMasks an array containing an entry for each band\n * @param location  the upper-left corner of the \u003ccode\u003eRaster\u003c/code\u003e\n * @return a WritableRaster object with the specified data type,width, height, and band masks.\n * @throws RasterFormatException if \u003ccode\u003ew\u003c/code\u003e or \u003ccode\u003eh\u003c/code\u003eis less than or equal to zero, or computing either \u003ccode\u003elocation.x + w\u003c/code\u003e or \u003ccode\u003elocation.y + h\u003c/code\u003e results in integer overflow\n * @throws IllegalArgumentException if \u003ccode\u003edataType\u003c/code\u003e is notone of the supported data types, which are \u003ccode\u003eDataBuffer.TYPE_BYTE\u003c/code\u003e, \u003ccode\u003eDataBuffer.TYPE_USHORT\u003c/code\u003e or \u003ccode\u003eDataBuffer.TYPE_INT\u003c/code\u003e\n */\n","tf":{"freq":{"store":1,"singl":1,"infer":1,"mask":4,"pack":2,"type":8,"zero":1,"specifi":2,"buffer":4,"band":6,"height":3,"given":1,"argument":2,"except":2,"support":2,"creat":2,"width":3,"number":1,"writabl":1,"format":1,"imag":2,"overflow":1,"contain":1,"will":1,"comput":1,"array":1,"defin":1,"result":1,"model":1,"pixel":3,"one":1,"data":14,"use":1,"object":1,"upper":2,"length":1,"current":1,"left":2,"valu":1,"noton":1,"less":1,"locat":5,"corner":2,"entri":1,"paramet":1,"equal":1,"illeg":1,"raster":6,"either":1,"base":1,"integ":1,"sampl":2},"maxFreq":14,"totalTerms":109},"loc":23}