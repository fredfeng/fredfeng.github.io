{"id":15595,"className":"java.awt.Dialog","methodName":"setUndecorated","signature":"\u003cjava.awt.Dialog: void setUndecorated(boolean)\u003e","javadoc":"/** \n * Disables or enables decorations for this dialog. \u003cp\u003e This method can only be called while the dialog is not displayable. To make this dialog decorated, it must be opaque and have the default shape, otherwise the  {@code IllegalComponentStateException} will be thrown.Refer to  {@link Window#setShape},  {@link Window#setOpacity} and {@link Window#setBackground} for details\n * @param undecorated {@code true} if no dialog decorations are to beenabled;  {@code false} if dialog decorations are to be enabled\n * @throws IllegalComponentStateException if the dialog is displayable\n * @throws IllegalComponentStateException if {@code undecorated} is{@code false}, and this dialog does not have the default shape\n * @throws IllegalComponentStateException if {@code undecorated} is{@code false}, and this dialog opacity is less than  {@code 1.0f}\n * @throws IllegalComponentStateException if {@code undecorated} is{@code false}, and the alpha value of this dialog background color is less than  {@code 1.0f}\n * @see #isUndecorated\n * @see Component#isDisplayable\n * @see Window#getShape\n * @see Window#getOpacity\n * @see Window#getBackground\n * @since 1.4\n */\n","tf":{"freq":{"fals":4,"otherwis":1,"call":1,"detail":1,"link":3,"state":5,"must":1,"decor":4,"opaqu":1,"refer":1,"alpha":1,"valu":1,"dialog":9,"less":2,"except":5,"thrown":1,"beenabl":1,"enabl":2,"opac":3,"true":1,"display":3,"shape":4,"illeg":5,"disabl":1,"compon":6,"window":6,"color":1,"undecor":6,"background":3,"will":1,"method":1,"make":1},"maxFreq":9,"totalTerms":86},"loc":21}