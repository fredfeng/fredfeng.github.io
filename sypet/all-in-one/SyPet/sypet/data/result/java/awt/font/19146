{"id":19146,"className":"java.awt.font.LayoutPath","methodName":"pointToPath","signature":"\u003cjava.awt.font.LayoutPath: boolean pointToPath(java.awt.geom.Point2D,java.awt.geom.Point2D)\u003e","javadoc":"/** \n * Convert a point in user space to a location relative to the path. The location is chosen so as to minimize the distance from the point to the path (e.g., the magnitude of the offset will be smallest).  If there is more than one such location, the location with the smallest advance is chosen.\n * @param point the point to convert.  If it is not the sameobject as location, point will remain unmodified by this call.\n * @param location a \u003ccode\u003ePoint2D\u003c/code\u003e to hold the returned location.It can be the same object as point.\n * @return true if the point is associated with the portion of thepath preceding the location, false if it is associated with the portion following.  The default, if the location is not at a break or sharp bend in the path, is to return true.\n * @throws NullPointerException if point or location is null\n * @since 1.6\n */\n","tf":{"freq":{"fals":1,"call":1,"sameobject":1,"one":1,"bend":1,"convert":2,"thepath":1,"chosen":2,"object":1,"space":1,"minim":1,"associ":2,"relat":1,"path":4,"offset":1,"follow":1,"portion":2,"except":1,"locat":10,"sharp":1,"smallest":2,"hold":1,"magnitud":1,"true":2,"preced":1,"point":10,"unmodifi":1,"remain":1,"advanc":1,"distanc":1,"will":2,"pointer":1,"user":1},"maxFreq":10,"totalTerms":61},"loc":0}