{"id":19114,"className":"java.awt.font.TextLayout","methodName":"hitToPoint","signature":"\u003cjava.awt.font.TextLayout: void hitToPoint(java.awt.font.TextHitInfo,java.awt.geom.Point2D)\u003e","javadoc":"/** \n * Convert a hit to a point in standard coordinates.  The point is on the baseline of the character at the leading or trailing edge of the character, as appropriate.  If the path is broken at the side of the character represented by the hit, the point will be adjacent to the character.\n * @param hit the hit to check.  This must be a valid hit onthe TextLayout.\n * @param point the returned point. The point is in standardcoordinates.\n * @throws IllegalArgumentException if the hit is not valid for theTextLayout.\n * @throws NullPointerException if hit or point is null.\n * @since 1.6\n */\n","tf":{"freq":{"valid":2,"edg":1,"lead":1,"convert":1,"must":1,"standardcoordin":1,"hit":8,"side":1,"trail":1,"layout":2,"path":1,"argument":1,"coordin":1,"adjac":1,"except":2,"text":2,"standard":1,"check":1,"charact":4,"repres":1,"onth":1,"baselin":1,"illeg":1,"broken":1,"point":8,"appropri":1,"will":1,"pointer":1},"maxFreq":8,"totalTerms":49},"loc":28}