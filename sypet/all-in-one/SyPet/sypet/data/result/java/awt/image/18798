{"id":18798,"className":"java.awt.image.ImageObserver","methodName":"imageUpdate","signature":"\u003cjava.awt.image.ImageObserver: boolean imageUpdate(java.awt.Image,int,int,int,int,int)\u003e","javadoc":"/** \n * This method is called when information about an image which was previously requested using an asynchronous interface becomes available.  Asynchronous interfaces are method calls such as getWidth(ImageObserver) and drawImage(img, x, y, ImageObserver) which take an ImageObserver object as an argument.  Those methods register the caller as interested either in information about the overall image itself (in the case of getWidth(ImageObserver)) or about an output version of an image (in the case of the drawImage(img, x, y, [w, h,] ImageObserver) call). \u003cp\u003eThis method should return true if further updates are needed or false if the required information has been acquired.  The image which was being tracked is passed in using the img argument.  Various constants are combined to form the infoflags argument which indicates what information about the image is now available.  The interpretation of the x, y, width, and height arguments depends on the contents of the infoflags argument. \u003cp\u003e The \u003ccode\u003einfoflags\u003c/code\u003e argument should be the bitwise inclusive \u003cb\u003eOR\u003c/b\u003e of the following flags: \u003ccode\u003eWIDTH\u003c/code\u003e, \u003ccode\u003eHEIGHT\u003c/code\u003e, \u003ccode\u003ePROPERTIES\u003c/code\u003e, \u003ccode\u003eSOMEBITS\u003c/code\u003e, \u003ccode\u003eFRAMEBITS\u003c/code\u003e, \u003ccode\u003eALLBITS\u003c/code\u003e, \u003ccode\u003eERROR\u003c/code\u003e, \u003ccode\u003eABORT\u003c/code\u003e.\n * @param img   the image being observed.\n * @param infoflags   the bitwise inclusive OR of the followingflags:  \u003ccode\u003eWIDTH\u003c/code\u003e, \u003ccode\u003eHEIGHT\u003c/code\u003e, \u003ccode\u003ePROPERTIES\u003c/code\u003e, \u003ccode\u003eSOMEBITS\u003c/code\u003e, \u003ccode\u003eFRAMEBITS\u003c/code\u003e, \u003ccode\u003eALLBITS\u003c/code\u003e, \u003ccode\u003eERROR\u003c/code\u003e, \u003ccode\u003eABORT\u003c/code\u003e.\n * @param x   the \u003ci\u003ex\u003c/i\u003e coordinate.\n * @param y   the \u003ci\u003ey\u003c/i\u003e coordinate.\n * @param width    the width.\n * @param height   the height.\n * @return    \u003ccode\u003efalse\u003c/code\u003e if the infoflags indicate that theimage is completely loaded; \u003ccode\u003etrue\u003c/code\u003e otherwise.\n * @see #WIDTH\n * @see #HEIGHT\n * @see #PROPERTIES\n * @see #SOMEBITS\n * @see #FRAMEBITS\n * @see #ALLBITS\n * @see #ERROR\n * @see #ABORT\n * @see Image#getWidth\n * @see Image#getHeight\n * @see java.awt.Graphics#drawImage\n */\n","tf":{"freq":{"need":1,"fals":2,"acquir":1,"bitwis":2,"img":4,"draw":3,"infoflag":5,"observ":6,"becom":1,"requir":1,"height":4,"interest":1,"request":1,"combin":1,"follow":1,"argument":6,"coordin":2,"form":1,"width":6,"avail":2,"imag":17,"content":1,"inform":4,"awt":1,"flag":1,"updat":2,"now":1,"theimag":1,"load":1,"output":1,"otherwis":1,"caller":1,"call":3,"asynchron":2,"graphic":1,"interpret":1,"use":2,"followingflag":1,"object":1,"version":1,"inclus":2,"indic":2,"regist":1,"various":1,"complet":1,"constant":1,"previous":1,"depend":1,"track":1,"true":2,"pass":1,"either":1,"take":1,"java":1,"method":4},"maxFreq":17,"totalTerms":116},"loc":0}