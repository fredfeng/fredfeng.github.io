{"id":17628,"className":"java.awt.datatransfer.SystemFlavorMap","methodName":"setFlavorsForNative","signature":"\u003cjava.awt.datatransfer.SystemFlavorMap: void setFlavorsForNative(java.lang.String,java.awt.datatransfer.DataFlavor[])\u003e","javadoc":"/** \n * Discards the current mappings for the specified \u003ccode\u003eString\u003c/code\u003e native, and creates new mappings to the specified \u003ccode\u003eDataFlavor\u003c/code\u003es. Unlike \u003ccode\u003egetFlavorsForNative\u003c/code\u003e, the mappings will only be established in one direction, and the natives need not be encoded. To establish two-way mappings, call \u003ccode\u003esetNativesForFlavor\u003c/code\u003e as well. The first \u003ccode\u003eDataFlavor\u003c/code\u003e in the array will represent the highest priority mapping. Subsequent \u003ccode\u003eDataFlavor\u003c/code\u003es will represent mappings of decreasing priority. \u003cp\u003e If the array contains several elements that reference equal \u003ccode\u003eDataFlavor\u003c/code\u003es, this method will establish new mappings for the first of those elements and ignore the rest of them. \u003cp\u003e It is recommended that client code not reset mappings established by the data transfer subsystem. This method should only be used for application-level mappings.\n * @param nat the \u003ccode\u003eString\u003c/code\u003e native key for the mappings\n * @param flavors the \u003ccode\u003eDataFlavor\u003c/code\u003e values for the mappings\n * @throws NullPointerException if nat or flavors is \u003ccode\u003enull\u003c/code\u003eor if flavors contains \u003ccode\u003enull\u003c/code\u003e elements\n * @see #setNativesForFlavor\n * @since 1.4\n */\n","tf":{"freq":{"need":1,"call":1,"client":1,"decreas":1,"highest":1,"one":1,"data":6,"use":1,"way":1,"well":1,"discard":1,"recommend":1,"applic":1,"specifi":2,"level":1,"refer":1,"unlik":1,"map":11,"current":1,"reset":1,"valu":1,"subsequ":1,"key":1,"direct":1,"element":3,"except":1,"transfer":1,"ignor":1,"creat":1,"repres":2,"prioriti":2,"establish":4,"flavor":12,"equal":1,"sever":1,"two":1,"encod":1,"contain":2,"string":2,"will":4,"pointer":1,"subsystem":1,"nat":2,"method":2,"rest":1,"first":2,"array":2},"maxFreq":12,"totalTerms":90},"loc":14}