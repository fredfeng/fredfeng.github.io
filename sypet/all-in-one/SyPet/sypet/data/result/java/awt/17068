{"id":17068,"className":"java.awt.JobAttributes","methodName":"JobAttributes","signature":"\u003cjava.awt.JobAttributes: void JobAttributes(int,java.awt.JobAttributes$DefaultSelectionType,java.awt.JobAttributes$DestinationType,java.awt.JobAttributes$DialogType,java.lang.String,int,int,java.awt.JobAttributes$MultipleDocumentHandlingType,int[][],java.lang.String,java.awt.JobAttributes$SidesType)\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003eJobAttributes\u003c/code\u003e instance with the specified values for every attribute.\n * @param copies an integer greater than 0\n * @param defaultSelection \u003ccode\u003eDefaultSelectionType.ALL\u003c/code\u003e,\u003ccode\u003eDefaultSelectionType.RANGE\u003c/code\u003e, or \u003ccode\u003eDefaultSelectionType.SELECTION\u003c/code\u003e\n * @param destination \u003ccode\u003eDesintationType.FILE\u003c/code\u003e or\u003ccode\u003eDesintationType.PRINTER\u003c/code\u003e\n * @param dialog \u003ccode\u003eDialogType.COMMON\u003c/code\u003e,\u003ccode\u003eDialogType.NATIVE\u003c/code\u003e, or \u003ccode\u003eDialogType.NONE\u003c/code\u003e\n * @param fileName the possibly \u003ccode\u003enull\u003c/code\u003e file name\n * @param maxPage an integer greater than zero and greater than or equalto \u003ci\u003eminPage\u003c/i\u003e\n * @param minPage an integer greater than zero and less than or equalto \u003ci\u003emaxPage\u003c/i\u003e\n * @param multipleDocumentHandling \u003ccode\u003eMultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e or \u003ccode\u003eMultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/code\u003e\n * @param pageRanges an array of integer arrays of two elements; an arrayis interpreted as a range spanning all pages including and between the specified pages; ranges must be in ascending order and must not overlap; specified page numbers cannot be less than \u003ci\u003eminPage\u003c/i\u003e nor greater than \u003ci\u003emaxPage\u003c/i\u003e; for example: \u003cpre\u003e (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 }, new int[] { 15, 19 } }), \u003c/pre\u003e specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19. Note that (\u003ccode\u003enew int[][] { new int[] { 1, 1 }, new int[] { 1, 2 } }\u003c/code\u003e), is an invalid set of page ranges because the two ranges overlap\n * @param printer the possibly \u003ccode\u003enull\u003c/code\u003e printer name\n * @param sides \u003ccode\u003eSidesType.ONE_SIDED\u003c/code\u003e,\u003ccode\u003eSidesType.TWO_SIDED_LONG_EDGE\u003c/code\u003e, or \u003ccode\u003eSidesType.TWO_SIDED_SHORT_EDGE\u003c/code\u003e\n * @throws IllegalArgumentException if one or more of the aboveconditions is violated\n */\n","tf":{"freq":{"greater":5,"possibl":2,"violat":1,"zero":2,"type":13,"copi":1,"must":2,"specifi":4,"invalid":1,"page":12,"file":2,"rang":5,"everi":1,"argument":1,"element":1,"except":1,"overlap":2,"multipl":3,"select":4,"job":2,"number":1,"instanc":1,"ascend":1,"array":2,"span":1,"one":1,"interpret":1,"document":3,"attribut":3,"order":1,"side":4,"name":3,"valu":1,"dialog":4,"less":2,"note":1,"min":3,"max":3,"includ":1,"desint":2,"illeg":1,"printer":2,"handl":3,"two":2,"abovecondit":1,"arrayi":1,"pre":2,"exampl":1,"equalto":2,"construct":1,"integ":4,"destin":1},"maxFreq":13,"totalTerms":125},"loc":13}