{"id":18226,"className":"java.awt.image.WritableRaster","methodName":"createWritableChild","signature":"\u003cjava.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])\u003e","javadoc":"/** \n * Returns a new WritableRaster which shares all or part of this WritableRaster\u0027s DataBuffer.  The new WritableRaster will possess a reference to the current WritableRaster, accessible through its getParent() and getWritableParent() methods. \u003cp\u003e The parentX, parentY, width and height parameters form a Rectangle in this WritableRaster\u0027s coordinate space, indicating the area of pixels to be shared.  An error will be thrown if this Rectangle is not contained with the bounds of the current WritableRaster. \u003cp\u003e The new WritableRaster may additionally be translated to a different coordinate system for the plane than that used by the current WritableRaster.  The childMinX and childMinY parameters give the new (x, y) coordinate of the upper-left pixel of the returned WritableRaster; the coordinate (childMinX, childMinY) in the new WritableRaster will map to the same pixel as the coordinate (parentX, parentY) in the current WritableRaster. \u003cp\u003e The new WritableRaster may be defined to contain only a subset of the bands of the current WritableRaster, possibly reordered, by means of the bandList parameter.  If bandList is null, it is taken to include all of the bands of the current WritableRaster in their current order. \u003cp\u003e To create a new WritableRaster that contains a subregion of the current WritableRaster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.\n * @param parentX    X coordinate of the upper left corner in thisWritableRaster\u0027s coordinates.\n * @param parentY    Y coordinate of the upper left corner in thisWritableRaster\u0027s coordinates.\n * @param w          Width of the region starting at (parentX, parentY).\n * @param h          Height of the region starting at (parentX, parentY).\n * @param childMinX  X coordinate of the upper left corner ofthe returned WritableRaster.\n * @param childMinY  Y coordinate of the upper left corner ofthe returned WritableRaster.\n * @param bandList   Array of band indices, or null to use all bands.\n * @return a \u003ccode\u003eWritableRaster\u003c/code\u003e sharing all or part of the\u003ccode\u003eDataBuffer\u003c/code\u003e of this \u003ccode\u003eWritableRaster\u003c/code\u003e.\n * @exception RasterFormatException if the subregion is outside of theraster bounds.\n * @throws RasterFormatException if \u003ccode\u003ew\u003c/code\u003e or\u003ccode\u003eh\u003c/code\u003e is less than or equal to zero, or computing any of \u003ccode\u003eparentX + w\u003c/code\u003e, \u003ccode\u003eparentY + h\u003c/code\u003e, \u003ccode\u003echildMinX + w\u003c/code\u003e, or \u003ccode\u003echildMinY + h\u003c/code\u003e results in integer overflow\n */\n","tf":{"freq":{"possibl":1,"zero":1,"buffer":2,"height":2,"band":9,"refer":1,"taken":1,"therast":1,"coordin":12,"except":3,"thrown":1,"form":1,"creat":2,"width":2,"parent":16,"writabl":24,"format":2,"system":2,"outsid":1,"start":2,"overflow":1,"contain":3,"will":3,"comput":1,"array":1,"region":2,"result":1,"call":1,"defin":1,"pixel":3,"give":1,"data":2,"use":2,"space":1,"rectangl":2,"child":11,"subset":1,"subregion":2,"upper":5,"share":4,"area":1,"order":1,"indic":2,"ofth":2,"possess":1,"current":8,"map":1,"mean":1,"left":5,"less":1,"min":10,"addit":1,"may":2,"includ":1,"corner":4,"error":1,"paramet":3,"equal":4,"list":4,"access":1,"translat":1,"reorder":1,"raster":24,"differ":1,"plane":1,"method":2,"part":2,"integ":1,"bound":2},"maxFreq":24,"totalTerms":223},"loc":38}