{"id":20142,"className":"java.awt.geom.Line2D","methodName":"getPathIterator","signature":"\u003cjava.awt.geom.Line2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)\u003e","javadoc":"/** \n * Returns an iteration object that defines the boundary of this flattened \u003ccode\u003eLine2D\u003c/code\u003e. The iterator for this class is not multi-threaded safe, which means that this \u003ccode\u003eLine2D\u003c/code\u003e class does not guarantee that modifications to the geometry of this \u003ccode\u003eLine2D\u003c/code\u003e object do not affect any iterations of that geometry that are already in process.\n * @param at the specified \u003ccode\u003eAffineTransform\u003c/code\u003e\n * @param flatness the maximum amount that the control points for agiven curve can vary from colinear before a subdivided curve is replaced by a straight line connecting the end points.  Since a \u003ccode\u003eLine2D\u003c/code\u003e object is always flat, this parameter is ignored.\n * @return a \u003ccode\u003ePathIterator\u003c/code\u003e that defines the boundary of theflattened \u003ccode\u003eLine2D\u003c/code\u003e\n * @since 1.2\n */\n","tf":{"freq":{"defin":2,"connect":1,"line":6,"object":3,"affect":1,"specifi":1,"amount":1,"transform":1,"flatten":1,"thread":1,"path":2,"theflatten":1,"mean":1,"curv":2,"end":1,"subdivid":1,"safe":1,"control":1,"ignor":1,"alway":1,"guarante":1,"agiven":1,"flat":2,"paramet":1,"colinear":1,"process":1,"point":2,"maximum":1,"replac":1,"multi":1,"alreadi":1,"iter":5,"boundari":2,"straight":1,"modif":1,"geometri":2,"vari":1,"affin":1},"maxFreq":6,"totalTerms":56},"loc":3}