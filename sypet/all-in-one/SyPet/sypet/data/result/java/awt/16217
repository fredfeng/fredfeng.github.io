{"id":16217,"className":"java.awt.TextField","methodName":"setEchoChar","signature":"\u003cjava.awt.TextField: void setEchoChar(char)\u003e","javadoc":"/** \n * Sets the echo character for this text field. \u003cp\u003e An echo character is useful for text fields where user input should not be echoed to the screen, as in the case of a text field for entering a password. Setting \u003ccode\u003eechoChar\u003c/code\u003e \u003d \u003ccode\u003e0\u003c/code\u003e allows user input to be echoed to the screen again. \u003cp\u003e A Java platform implementation may support only a limited, non-empty set of echo characters. Attempts to set an unsupported echo character will cause the default echo character to be used instead. Subsequent calls to getEchoChar() will return the echo character originally requested. This might or might not be identical to the echo character actually used by the TextField implementation.\n * @param c   the echo character for this text field.\n * @see java.awt.TextField#echoCharIsSet\n * @see java.awt.TextField#getEchoChar\n * @since       JDK1.1\n */\n","tf":{"freq":{"attempt":1,"might":2,"call":1,"unsupport":1,"allow":1,"use":3,"password":1,"echo":15,"ident":1,"request":1,"subsequ":1,"limit":1,"screen":2,"platform":1,"text":7,"may":1,"support":1,"charact":8,"origin":1,"enter":1,"non":1,"empti":1,"field":7,"awt":2,"input":2,"caus":1,"will":2,"instead":1,"actual":1,"java":3,"user":2},"maxFreq":15,"totalTerms":74},"loc":3}