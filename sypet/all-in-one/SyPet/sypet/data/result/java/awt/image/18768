{"id":18768,"className":"java.awt.image.ByteLookupTable","methodName":"lookupPixel","signature":"\u003cjava.awt.image.ByteLookupTable: int[] lookupPixel(int[],int[])\u003e","javadoc":"/** \n * Returns an array of samples of a pixel, translated with the lookup table. The source and destination array can be the same array. Array \u003ccode\u003edst\u003c/code\u003e is returned.\n * @param src the source array.\n * @param dst the destination array. This array must be at least aslong as \u003ccode\u003esrc\u003c/code\u003e.  If \u003ccode\u003edst\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e, a new array will be allocated having the same length as \u003ccode\u003esrc\u003c/code\u003e.\n * @return the array \u003ccode\u003edst\u003c/code\u003e, an \u003ccode\u003eint\u003c/code\u003e array ofsamples.\n * @exception ArrayIndexOutOfBoundsException if \u003ccode\u003esrc\u003c/code\u003e islonger than \u003ccode\u003edst\u003c/code\u003e or if for any element \u003ccode\u003ei\u003c/code\u003e of \u003ccode\u003esrc\u003c/code\u003e, \u003ccode\u003esrc[i]-offset\u003c/code\u003e is either less than zero or greater than or equal to the length of the lookup table for any band.\n */\n","tf":{"freq":{"greater":1,"aslong":1,"pixel":2,"least":1,"ofsampl":1,"dst":5,"zero":1,"lookup":3,"must":1,"band":1,"length":2,"src":6,"offset":1,"less":1,"element":1,"except":2,"index":1,"islong":1,"equal":1,"translat":1,"either":1,"tabl":2,"will":1,"sourc":2,"sampl":1,"bound":1,"destin":2,"array":11,"alloc":1},"maxFreq":11,"totalTerms":56},"loc":31}