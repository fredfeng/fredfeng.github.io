{"id":16421,"className":"java.awt.KeyboardFocusManager","methodName":"removeKeyEventDispatcher","signature":"\u003cjava.awt.KeyboardFocusManager: void removeKeyEventDispatcher(java.awt.KeyEventDispatcher)\u003e","javadoc":"/** \n * Removes a KeyEventDispatcher which was previously added to this KeyboardFocusManager\u0027s dispatcher chain. This KeyboardFocusManager cannot itself be removed, unless it was explicitly re-registered via a call to \u003ccode\u003eaddKeyEventDispatcher\u003c/code\u003e. \u003cp\u003e If a null dispatcher is specified, if the specified dispatcher is not in the dispatcher chain, or if this KeyboardFocusManager is specified without having been explicitly re-registered, no action is taken and no exception is thrown. \u003cp\u003e In a multithreaded application,  {@link KeyEventDispatcher} behavesthe same as other AWT listeners.  See \u003ca href\u003d\"doc-files/AWTThreadIssues.html#ListenersThreads\" \u003eAWT Threading Issues\u003c/a\u003e for more details.\n * @param dispatcher the KeyEventDispatcher to remove from the dispatcherchain\n * @see #addKeyEventDispatcher\n */\n","tf":{"freq":{"call":1,"detail":1,"via":1,"link":1,"add":2,"issu":2,"applic":1,"specifi":3,"tthread":1,"unless":1,"file":1,"event":6,"thread":2,"dispatcherchain":1,"action":1,"regist":2,"focus":3,"dispatch":11,"taken":1,"multithread":1,"href":1,"listen":2,"key":6,"keyboard":3,"except":1,"thrown":1,"previous":1,"manag":3,"remov":4,"without":1,"explicit":2,"chain":2,"behavesth":1,"ad":1,"html":1},"maxFreq":11,"totalTerms":73},"loc":9}