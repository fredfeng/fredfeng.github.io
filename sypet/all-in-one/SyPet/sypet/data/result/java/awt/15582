{"id":15582,"className":"java.awt.Dialog","methodName":"setModal","signature":"\u003cjava.awt.Dialog: void setModal(boolean)\u003e","javadoc":"/** \n * Specifies whether this dialog should be modal. \u003cp\u003e This method is obsolete and is kept for backwards compatibility only. Use  {@link #setModalityType setModalityType()} instead.\u003cp\u003e Note: changing modality of the visible dialog may have no effect until it is hidden and then shown again.\n * @param modal specifies whether dialog blocks input to other windowswhen shown; calling to \u003ccode\u003esetModal(true)\u003c/code\u003e is equivalent to \u003ccode\u003esetModalityType(Dialog.DEFAULT_MODALITY_TYPE)\u003c/code\u003e, and calling to \u003ccode\u003esetModal(false)\u003c/code\u003e is equvivalent to \u003ccode\u003esetModalityType(Dialog.ModalityType.MODELESS)\u003c/code\u003e\n * @see java.awt.Dialog#DEFAULT_MODALITY_TYPE\n * @see java.awt.Dialog.ModalityType#MODELESS\n * @see java.awt.Dialog#isModal\n * @see java.awt.Dialog#getModalityType\n * @see java.awt.Dialog#setModalityType\n * @since     1.1\n */\n","tf":{"freq":{"fals":1,"call":2,"backward":1,"obsolet":1,"visibl":1,"windowswhen":1,"link":1,"use":1,"block":1,"type":8,"whether":2,"specifi":2,"equival":1,"dialog":10,"modal":15,"note":1,"kept":1,"may":1,"true":1,"shown":2,"awt":5,"input":1,"equvival":1,"effect":1,"hidden":1,"instead":1,"java":5,"method":1,"chang":1,"compat":1},"maxFreq":15,"totalTerms":72},"loc":4}