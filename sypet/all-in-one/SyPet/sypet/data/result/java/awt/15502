{"id":15502,"className":"java.awt.SystemTray","methodName":"getSystemTray","signature":"\u003cjava.awt.SystemTray: java.awt.SystemTray getSystemTray()\u003e","javadoc":"/** \n * Gets the \u003ccode\u003eSystemTray\u003c/code\u003e instance that represents the desktop\u0027s tray area.  This always returns the same instance per application.  On some platforms the system tray may not be supported.  You may use the  {@link #isSupported} method tocheck if the system tray is supported. \u003cp\u003eIf a SecurityManager is installed, the AWTPermission {@code accessSystemTray} must be granted in order to get the{@code SystemTray} instance. Otherwise this method will throw aSecurityException.\n * @return the \u003ccode\u003eSystemTray\u003c/code\u003e instance that representsthe desktop\u0027s tray area\n * @throws UnsupportedOperationException if the system tray isn\u0027tsupported by the current platform\n * @throws HeadlessException if\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e returns \u003ccode\u003etrue\u003c/code\u003e\n * @throws SecurityException if {@code accessSystemTray} permissionis not granted\n * @see #add(TrayIcon)\n * @see TrayIcon\n * @see #isSupported\n * @see SecurityManager#checkPermission\n * @see AWTPermission\n */\n","tf":{"freq":{"otherwis":1,"graphic":1,"unsupport":1,"grant":2,"tsupport":1,"link":1,"desktop":2,"use":1,"add":1,"applic":1,"must":1,"tocheck":1,"area":2,"order":1,"oper":1,"permiss":1,"current":1,"tpermiss":2,"icon":2,"platform":2,"representsth":1,"except":4,"may":2,"support":4,"check":1,"repres":1,"alway":1,"manag":2,"instal":1,"permissioni":1,"environ":1,"true":1,"access":2,"headless":2,"instanc":4,"system":9,"secur":4,"per":1,"tray":13,"will":1,"method":2},"maxFreq":13,"totalTerms":84},"loc":15}