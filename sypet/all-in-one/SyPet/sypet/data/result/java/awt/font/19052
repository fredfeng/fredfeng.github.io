{"id":19052,"className":"java.awt.font.GlyphVector","methodName":"getGlyphOutline","signature":"\u003cjava.awt.font.GlyphVector: java.awt.Shape getGlyphOutline(int)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eShape\u003c/code\u003e whose interior corresponds to the visual representation of the specified glyph within this \u003ccode\u003eGlyphVector\u003c/code\u003e. The outline returned by this method is positioned around the origin of each individual glyph.\n * @param glyphIndex the index into this \u003ccode\u003eGlyphVector\u003c/code\u003e\n * @return a \u003ccode\u003eShape\u003c/code\u003e that is the outline of the glyphat the specified \u003ccode\u003eglyphIndex\u003c/code\u003e of this \u003ccode\u003eGlyphVector\u003c/code\u003e.\n * @throws IndexOutOfBoundsException if \u003ccode\u003eglyphIndex\u003c/code\u003eis less than 0 or greater than or equal to the number of glyphs in this \u003ccode\u003eGlyphVector\u003c/code\u003e\n */\n","tf":{"freq":{"interior":1,"except":1,"index":5,"greater":1,"outlin":3,"whose":1,"correspond":1,"glyph":11,"origin":1,"number":1,"equal":1,"shape":2,"around":1,"represent":1,"specifi":2,"visual":1,"vector":4,"method":1,"glyphat":1,"within":1,"posit":1,"less":1,"bound":1,"individu":1},"maxFreq":11,"totalTerms":45},"loc":0}