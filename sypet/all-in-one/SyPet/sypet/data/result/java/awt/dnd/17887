{"id":17887,"className":"java.awt.dnd.DragSourceDropEvent","methodName":"DragSourceDropEvent","signature":"\u003cjava.awt.dnd.DragSourceDropEvent: void DragSourceDropEvent(java.awt.dnd.DragSourceContext)\u003e","javadoc":"/** \n * Construct a \u003ccode\u003eDragSourceDropEvent\u003c/code\u003e for a drag that does not result in a drop. The coordinates for this \u003ccode\u003eDragSourceDropEvent\u003c/code\u003e are not specified, so \u003ccode\u003egetLocation\u003c/code\u003e will return \u003ccode\u003enull\u003c/code\u003e for this event.\n * @param dsc the \u003ccode\u003eDragSourceContext\u003c/code\u003e\n * @throws \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003edsc\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @see DragSourceEvent#getLocation\n */\n","tf":{"freq":{"argument":1,"coordin":1,"result":1,"except":1,"locat":2,"drop":4,"drag":6,"illeg":1,"specifi":1,"event":5,"will":1,"context":1,"sourc":5,"construct":1,"dsc":2},"maxFreq":6,"totalTerms":33},"loc":5}