{"id":19366,"className":"java.awt.event.InvocationEvent","methodName":"InvocationEvent","signature":"\u003cjava.awt.event.InvocationEvent: void InvocationEvent(java.lang.Object,java.lang.Runnable,java.lang.Object,boolean)\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eInvocationEvent\u003c/code\u003e with the specified source which will execute the runnable\u0027s \u003ccode\u003erun\u003c/code\u003e method when dispatched.  If notifier is non-\u003ccode\u003enull\u003c/code\u003e, \u003ccode\u003enotifyAll()\u003c/code\u003e will be called on it immediately after \u003ccode\u003erun\u003c/code\u003e has returned or thrown an exception. \u003cp\u003eAn invocation of the form \u003ctt\u003eInvocationEvent(source, runnable, notifier, catchThrowables)\u003c/tt\u003e behaves in exactly the same way as the invocation of \u003ctt\u003e {@link #InvocationEvent(Object,int,Runnable,Object,boolean) InvocationEvent}(source, InvocationEvent.INVOCATION_DEFAULT, runnable, notifier, catchThrowables)\u003c/tt\u003e. \u003cp\u003eThis method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @param source            The \u003ccode\u003eObject\u003c/code\u003e that originatedthe event\n * @param runnable          The \u003ccode\u003eRunnable\u003c/code\u003e whose\u003ccode\u003erun\u003c/code\u003e method will be executed\n * @param notifier          The {@code Object} whose \u003ccode\u003enotifyAll\u003c/code\u003emethod will be called after \u003ccode\u003eRunnable.run\u003c/code\u003e has returned or thrown an exception\n * @param catchThrowables   Specifies whether \u003ccode\u003edispatch\u003c/code\u003eshould catch Throwable when executing the \u003ccode\u003eRunnable\u003c/code\u003e\u0027s \u003ccode\u003erun\u003c/code\u003e method, or should instead propagate those Throwables to the EventDispatchThread\u0027s dispatch loop\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is null\n * @see #getSource()\n * @see #InvocationEvent(Object,int,Runnable,Object,boolean)\n */\n","tf":{"freq":{"call":2,"behav":1,"link":1,"way":1,"object":6,"originatedth":1,"run":5,"whether":1,"specifi":2,"event":9,"thread":1,"exact":1,"loop":1,"propag":1,"dispatch":4,"immedi":1,"runnabl":9,"argument":2,"notifi":6,"thrown":2,"except":4,"form":1,"whose":2,"illeg":2,"invoc":9,"non":1,"instead":1,"will":4,"method":5,"sourc":7,"construct":1,"throwabl":5,"execut":3},"maxFreq":9,"totalTerms":102},"loc":3}