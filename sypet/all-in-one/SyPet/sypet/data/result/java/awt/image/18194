{"id":18194,"className":"java.awt.image.ColorModel","methodName":"getAlpha","signature":"\u003cjava.awt.image.ColorModel: int getAlpha(java.lang.Object)\u003e","javadoc":"/** \n * Returns the alpha component for the specified pixel, scaled from 0 to 255.  The pixel value is specified by an array of data elements of type transferType passed in as an object reference. If inData is not a primitive array of type transferType, a \u003ccode\u003eClassCastException\u003c/code\u003e is thrown.  An \u003ccode\u003eArrayIndexOutOfBoundsException\u003c/code\u003e is thrown if \u003ccode\u003einData\u003c/code\u003e is not large enough to hold a pixel value for this \u003ccode\u003eColorModel\u003c/code\u003e. If this \u003ccode\u003etransferType\u003c/code\u003e is not supported, a \u003ccode\u003eUnsupportedOperationException\u003c/code\u003e will be thrown.  Since \u003ccode\u003eColorModel\u003c/code\u003e is an abstract class, any instance must be an instance of a subclass.  Subclasses inherit the implementation of this method and if they don\u0027t override it, this method throws an exception if the subclass uses a \u003ccode\u003etransferType\u003c/code\u003e other than \u003ccode\u003eDataBuffer.TYPE_BYTE\u003c/code\u003e, \u003ccode\u003eDataBuffer.TYPE_USHORT\u003c/code\u003e, or \u003ccode\u003eDataBuffer.TYPE_INT\u003c/code\u003e.\n * @param inData the specified pixel\n * @return the alpha component of the specified pixel, scaled from0 to 255.\n * @throws ClassCastException if \u003ccode\u003einData\u003c/code\u003eis not a primitive array of type \u003ccode\u003etransferType\u003c/code\u003e\n * @throws ArrayIndexOutOfBoundsException if\u003ccode\u003einData\u003c/code\u003e is not large enough to hold a pixel value for this \u003ccode\u003eColorModel\u003c/code\u003e\n * @throws UnsupportedOperationException if this\u003ccode\u003etranferType\u003c/code\u003e is not supported by this \u003ccode\u003eColorModel\u003c/code\u003e\n */\n","tf":{"freq":{"scale":2,"primit":2,"unsupport":2,"model":4,"pixel":6,"data":9,"use":1,"object":1,"type":9,"enough":2,"must":1,"specifi":4,"buffer":3,"oper":2,"refer":1,"alpha":3,"valu":3,"element":1,"tranfer":1,"transfer":5,"except":7,"thrown":3,"index":2,"support":2,"hold":2,"instanc":2,"pass":1,"compon":2,"cast":2,"color":4,"larg":2,"subclass":3,"will":1,"method":2,"bound":2,"array":5},"maxFreq":9,"totalTerms":104},"loc":30}