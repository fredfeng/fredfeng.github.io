{"id":17716,"className":"java.awt.datatransfer.StringSelection","methodName":"getTransferData","signature":"\u003cjava.awt.datatransfer.StringSelection: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)\u003e","javadoc":"/** \n * Returns the \u003ccode\u003eTransferable\u003c/code\u003e\u0027s data in the requested \u003ccode\u003eDataFlavor\u003c/code\u003e if possible. If the desired flavor is \u003ccode\u003eDataFlavor.stringFlavor\u003c/code\u003e, or an equivalent flavor, the \u003ccode\u003eString\u003c/code\u003e representing the selection is returned. If the desired flavor is \u003ccode\u003eDataFlavor.plainTextFlavor\u003c/code\u003e, or an equivalent flavor, a \u003ccode\u003eReader\u003c/code\u003e is returned. \u003cb\u003eNote:\u003c/b\u003e The behavior of this method for \u003ccode\u003eDataFlavor.plainTextFlavor\u003c/code\u003e and equivalent \u003ccode\u003eDataFlavor\u003c/code\u003es is inconsistent with the definition of \u003ccode\u003eDataFlavor.plainTextFlavor\u003c/code\u003e.\n * @param flavor the requested flavor for the data\n * @return the data in the requested flavor, as outlined above\n * @throws UnsupportedFlavorException if the requested data flavor isnot equivalent to either \u003ccode\u003eDataFlavor.stringFlavor\u003c/code\u003e or \u003ccode\u003eDataFlavor.plainTextFlavor\u003c/code\u003e\n * @throws IOException if an IOException occurs while retrieving the data.By default, StringSelection never throws this exception, but a subclass may.\n * @throws NullPointerException if flavor is \u003ccode\u003enull\u003c/code\u003e\n * @see java.io.Reader\n */\n","tf":{"freq":{"inconsist":1,"unsupport":1,"outlin":1,"behavior":1,"data":14,"possibl":1,"desir":2,"isnot":1,"equival":4,"request":4,"plain":4,"note":1,"may":1,"text":4,"transfer":2,"except":5,"repres":1,"select":2,"flavor":24,"never":1,"either":1,"reader":2,"retriev":1,"string":4,"definit":1,"subclass":1,"pointer":1,"java":1,"method":1,"occur":1},"maxFreq":24,"totalTerms":89},"loc":10}