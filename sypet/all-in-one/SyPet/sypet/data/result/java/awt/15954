{"id":15954,"className":"java.awt.Window","methodName":"dispose","signature":"\u003cjava.awt.Window: void dispose()\u003e","javadoc":"/** \n * Releases all of the native screen resources used by this \u003ccode\u003eWindow\u003c/code\u003e, its subcomponents, and all of its owned children. That is, the resources for these \u003ccode\u003eComponent\u003c/code\u003es will be destroyed, any memory they consume will be returned to the OS, and they will be marked as undisplayable. \u003cp\u003e The \u003ccode\u003eWindow\u003c/code\u003e and its subcomponents can be made displayable again by rebuilding the native resources with a subsequent call to \u003ccode\u003epack\u003c/code\u003e or \u003ccode\u003eshow\u003c/code\u003e. The states of the recreated \u003ccode\u003eWindow\u003c/code\u003e and its subcomponents will be identical to the states of these objects at the point where the \u003ccode\u003eWindow\u003c/code\u003e was disposed (not accounting for additional modifications between those actions). \u003cp\u003e \u003cb\u003eNote\u003c/b\u003e: When the last displayable window within the Java virtual machine (VM) is disposed of, the VM may terminate.  See \u003ca href\u003d\"doc-files/AWTThreadIssues.html#Autoshutdown\"\u003e AWT Threading Issues\u003c/a\u003e for more information.\n * @see Component#isDisplayable\n * @see #pack\n * @see #show\n */\n","tf":{"freq":{"virtual":1,"call":1,"memori":1,"last":1,"subcompon":3,"made":1,"state":2,"children":1,"use":1,"show":2,"object":1,"pack":2,"issu":2,"destroy":1,"consum":1,"resourc":3,"tthread":1,"ident":1,"releas":1,"autoshutdown":1,"file":1,"thread":1,"action":1,"rebuild":1,"subsequ":1,"recreat":1,"href":1,"note":1,"addit":1,"screen":1,"may":1,"mark":1,"display":3,"inform":1,"point":1,"termin":1,"machin":1,"undisplay":1,"compon":2,"window":5,"will":4,"account":1,"dispos":3,"html":1,"java":1,"within":1,"modif":1},"maxFreq":5,"totalTerms":67},"loc":3}