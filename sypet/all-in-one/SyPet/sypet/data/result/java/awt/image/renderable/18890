{"id":18890,"className":"java.awt.image.renderable.ParameterBlock","methodName":"getCharParameter","signature":"\u003cjava.awt.image.renderable.ParameterBlock: char getCharParameter(int)\u003e","javadoc":"/** \n * A convenience method to return a parameter as a char.  An exception is thrown if the parameter is \u003ccode\u003enull\u003c/code\u003e or not a \u003ccode\u003eCharacter\u003c/code\u003e.\n * @param index the index of the parameter to be returned.\n * @return the parameter at the specified indexas a \u003ccode\u003echar\u003c/code\u003e value.\n * @throws ClassCastException if the parameter at thespecified index is not a \u003ccode\u003eCharacter\u003c/code\u003e\n * @throws NullPointerException if the parameter at the specifiedindex is \u003ccode\u003enull\u003c/code\u003e\n * @throws ArrayIndexOutOfBoundsException if \u003ccode\u003eindex\u003c/code\u003eis negative or not less than the current size of this \u003ccode\u003eParameterBlock\u003c/code\u003e object\n */\n","tf":{"freq":{"except":4,"thrown":1,"index":5,"charact":2,"paramet":8,"block":1,"object":1,"size":1,"specifi":1,"indexa":1,"cast":1,"current":1,"pointer":1,"thespecifi":1,"negat":1,"method":1,"valu":1,"specifiedindex":1,"less":1,"bound":1,"conveni":1,"array":1},"maxFreq":8,"totalTerms":37},"loc":3}