{"id":16091,"className":"java.awt.BasicStroke","methodName":"BasicStroke","signature":"\u003cjava.awt.BasicStroke: void BasicStroke(float,int,int,float)\u003e","javadoc":"/** \n * Constructs a solid \u003ccode\u003eBasicStroke\u003c/code\u003e with the specified attributes.\n * @param width the width of the \u003ccode\u003eBasicStroke\u003c/code\u003e\n * @param cap the decoration of the ends of a \u003ccode\u003eBasicStroke\u003c/code\u003e\n * @param join the decoration applied where path segments meet\n * @param miterlimit the limit to trim the miter join\n * @throws IllegalArgumentException if \u003ccode\u003ewidth\u003c/code\u003e is negative\n * @throws IllegalArgumentException if \u003ccode\u003ecap\u003c/code\u003e is not eitherCAP_BUTT, CAP_ROUND or CAP_SQUARE\n * @throws IllegalArgumentException if \u003ccode\u003emiterlimit\u003c/code\u003e is lessthan 1 and \u003ccode\u003ejoin\u003c/code\u003e is JOIN_MITER\n * @throws IllegalArgumentException if \u003ccode\u003ejoin\u003c/code\u003e is noteither JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER\n */\n","tf":{"freq":{"cap":2,"segment":1,"specifi":1,"decor":2,"stroke":4,"attribut":1,"basic":4,"lessthan":1,"path":1,"trim":1,"end":1,"limit":1,"argument":4,"except":4,"width":3,"miter":1,"join":4,"meet":1,"illeg":4,"solid":1,"appli":1,"either":1,"miterlimit":2,"noteith":1,"negat":1,"construct":1},"maxFreq":4,"totalTerms":49},"loc":3}