{"id":17511,"className":"java.awt.Shape","methodName":"getBounds","signature":"\u003cjava.awt.Shape: java.awt.Rectangle getBounds()\u003e","javadoc":"/** \n * Returns an integer  {@link Rectangle} that completely encloses the\u003ccode\u003eShape\u003c/code\u003e.  Note that there is no guarantee that the returned \u003ccode\u003eRectangle\u003c/code\u003e is the smallest bounding box that encloses the \u003ccode\u003eShape\u003c/code\u003e, only that the \u003ccode\u003eShape\u003c/code\u003e lies entirely within the indicated  \u003ccode\u003eRectangle\u003c/code\u003e.  The returned \u003ccode\u003eRectangle\u003c/code\u003e might also fail to completely enclose the \u003ccode\u003eShape\u003c/code\u003e if the \u003ccode\u003eShape\u003c/code\u003e overflows the limited range of the integer data type.  The \u003ccode\u003egetBounds2D\u003c/code\u003e method generally returns a tighter bounding box due to its greater flexibility in representation. \u003cp\u003e Note that the \u003ca href\u003d\" {@docRoot}/java/awt/Shape.html#def_insideness\"\u003e definition of insideness\u003c/a\u003e can lead to situations where points on the defining outline of the  {@code shape} may not be consideredcontained in the returned  {@code bounds} object, but only in caseswhere those points are also not considered contained in the original {@code shape}. \u003c/p\u003e \u003cp\u003e If a  {@code point} is inside the {@code shape} according to the{@link #contains(double x,double y) contains(point)} method, thenit must be inside the returned  {@code Rectangle} bounds objectaccording to the  {@link #contains(double x,double y) contains(point)}method of the  {@code bounds}. Specifically: \u003c/p\u003e \u003cp\u003e {@code shape.contains(x,y)} requires {@code bounds.contains(x,y)}\u003c/p\u003e \u003cp\u003e If a  {@code point} is not inside the {@code shape}, then it might still be contained in the  {@code bounds} object:\u003c/p\u003e \u003cp\u003e {@code bounds.contains(x,y)} does not imply {@code shape.contains(x,y)}\u003c/p\u003e\n * @return an integer \u003ccode\u003eRectangle\u003c/code\u003e that completely enclosesthe \u003ccode\u003eShape\u003c/code\u003e.\n * @see #getBounds2D\n * @since 1.2\n */\n","tf":{"freq":{"greater":1,"outlin":1,"root":1,"lead":1,"type":1,"must":1,"situat":1,"requir":1,"fail":1,"rang":1,"impli":1,"href":1,"caseswher":1,"limit":1,"shape":13,"flexibl":1,"awt":1,"contain":10,"overflow":1,"enclos":3,"definit":1,"due":1,"objectaccord":1,"entir":1,"might":2,"defin":1,"link":3,"data":1,"object":2,"rectangl":6,"consid":1,"indic":1,"def":1,"consideredcontain":1,"note":2,"complet":3,"may":1,"thenit":1,"guarante":1,"smallest":1,"enclosesth":1,"origin":1,"still":1,"accord":1,"general":1,"represent":1,"point":6,"specif":1,"tighter":1,"method":3,"box":2,"java":1,"html":1,"insid":5,"within":1,"also":2,"integ":3,"bound":11,"lie":1},"maxFreq":13,"totalTerms":119},"loc":0}