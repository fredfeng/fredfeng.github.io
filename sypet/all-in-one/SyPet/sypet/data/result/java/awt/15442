{"id":15442,"className":"java.awt.Frame","methodName":"setState","signature":"\u003cjava.awt.Frame: void setState(int)\u003e","javadoc":"/** \n * Sets the state of this frame (obsolete). \u003cp\u003e In older versions of JDK a frame state could only be NORMAL or ICONIFIED.  Since JDK 1.4 set of supported frame states is expanded and frame state is represented as a bitwise mask. \u003cp\u003e For compatibility with applications developed earlier this method still accepts {@code Frame.NORMAL} and{@code Frame.ICONIFIED} only.  The iconicstate of the frame is only changed, other aspects of frame state are not affected by this method. If the state passed to this method is neither  {@code Frame.NORMAL} nor {@code Frame.ICONIFIED} themethod performs no actions at all. \u003cp\u003eNote that if the state is not supported on a given platform, neither the state nor the return value of the  {@link #getState} method will bechanged. The application may determine whether a specific state is supported via the  {@link java.awt.Toolkit#isFrameStateSupported} method.\u003cp\u003e\u003cb\u003eIf the frame is currently visible on the screen\u003c/b\u003e (the  {@link #isShowing} method returns{@code true}), the developer should examine the return value of the   {@link java.awt.event.WindowEvent#getNewState} method ofthe  {@code WindowEvent} received through the{@link java.awt.event.WindowStateListener} todetermine that the state has actually been changed. \u003cp\u003e\u003cb\u003eIf the frame is not visible on the screen\u003c/b\u003e, the events may or may not be generated.  In this case the developer may assume that the state changes immediately after this method returns.  Later, when the  {@code setVisible(true)} method is invoked, the framewill attempt to apply this state. Receiving any {@link java.awt.event.WindowEvent#WINDOW_STATE_CHANGED}events is not guaranteed in this case also.\n * @param state either \u003ccode\u003eFrame.NORMAL\u003c/code\u003e or\u003ccode\u003eFrame.ICONIFIED\u003c/code\u003e.\n * @see #setExtendedState(int)\n * @see java.awt.Window#addWindowStateListener\n */\n","tf":{"freq":{"via":1,"bitwis":1,"accept":1,"obsolet":1,"mask":1,"perform":1,"show":1,"whether":1,"todetermin":1,"given":1,"event":8,"action":1,"expand":1,"examin":1,"platform":1,"screen":2,"support":4,"invok":1,"bechang":1,"appli":1,"awt":5,"aspect":1,"earlier":1,"frame":15,"window":6,"themethod":1,"determin":1,"will":1,"compat":1,"attempt":1,"visibl":3,"link":6,"state":20,"iconicst":1,"add":1,"affect":1,"applic":2,"version":1,"older":1,"ofth":1,"current":1,"immedi":1,"valu":2,"toolkit":1,"develop":3,"listen":2,"note":1,"may":4,"assum":1,"repres":1,"guarante":1,"later":1,"true":2,"receiv":2,"still":1,"pass":1,"neither":2,"either":1,"specif":1,"generat":1,"actual":1,"method":9,"java":5,"chang":3,"framewil":1,"also":1},"maxFreq":20,"totalTerms":151},"loc":9}