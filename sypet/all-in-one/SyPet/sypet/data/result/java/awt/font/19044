{"id":19044,"className":"java.awt.font.GlyphVector","methodName":"getGlyphCodes","signature":"\u003cjava.awt.font.GlyphVector: int[] getGlyphCodes(int,int,int[])\u003e","javadoc":"/** \n * Returns an array of glyphcodes for the specified glyphs. The contents of this return value are meaningless to anything other than the \u003ccode\u003eFont\u003c/code\u003e used to create this \u003ccode\u003eGlyphVector\u003c/code\u003e.  This method is used for convenience and performance when processing glyphcodes. If no array is passed in, a new array is created.\n * @param beginGlyphIndex the index into this\u003ccode\u003eGlyphVector\u003c/code\u003e at which to start retrieving glyphcodes\n * @param numEntries the number of glyphcodes to retrieve\n * @param codeReturn the array that receives the glyphcodes and isthen returned\n * @return an array of glyphcodes for the specified glyphs.\n * @throws IllegalArgumentException if \u003ccode\u003enumEntries\u003c/code\u003e isless than 0\n * @throws IndexOutOfBoundsException if \u003ccode\u003ebeginGlyphIndex\u003c/code\u003eis less than 0\n * @throws IndexOutOfBoundsException if the sum of\u003ccode\u003ebeginGlyphIndex\u003c/code\u003e and \u003ccode\u003enumEntries\u003c/code\u003e is greater than the number of glyphs in this \u003ccode\u003eGlyphVector\u003c/code\u003e\n */\n","tf":{"freq":{"isthen":1,"anyth":1,"greater":1,"sum":1,"use":2,"perform":1,"specifi":2,"vector":3,"valu":1,"less":1,"conveni":1,"argument":1,"except":3,"index":6,"meaningless":1,"creat":2,"font":1,"entri":3,"glyph":10,"receiv":1,"number":2,"illeg":1,"pass":1,"begin":3,"content":1,"glyphcod":6,"process":1,"num":3,"start":1,"retriev":2,"method":1,"isless":1,"bound":2,"array":5},"maxFreq":10,"totalTerms":73},"loc":0}