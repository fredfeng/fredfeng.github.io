{"id":16475,"className":"java.awt.RadialGradientPaint","methodName":"RadialGradientPaint","signature":"\u003cjava.awt.RadialGradientPaint: void RadialGradientPaint(java.awt.geom.Point2D,float,float[],java.awt.Color[],java.awt.MultipleGradientPaint$CycleMethod)\u003e","javadoc":"/** \n * Constructs a  {@code RadialGradientPaint} with a default{@code SRGB} color space, using the center as the focus point.\n * @param center the center point, in user space, of the circle definingthe gradient\n * @param radius the radius of the circle defining the extents of thecolor gradient\n * @param fractions numbers ranging from 0.0 to 1.0 specifying thedistribution of colors along the gradient\n * @param colors array of colors to use in the gradient.  The first coloris used at the focus point, the last color around the perimeter of the circle.\n * @param cycleMethod either {@code NO_CYCLE},  {@code REFLECT}, or  {@code REPEAT}\n * @throws NullPointerException if  {@code center} point is null,or  {@code fractions} array is null,or  {@code colors} array is null,or  {@code cycleMethod} is null\n * @throws IllegalArgumentException if  {@code radius} is non-positive,or  {@code fractions.length !\u003d colors.length}, or  {@code colors} is less than 2 in size,or a  {@code fractions} value is less than 0.0 or greater than 1.0,or the  {@code fractions} are not provided in strictly increasing order\n */\n","tf":{"freq":{"increas":1,"defin":1,"greater":1,"last":1,"circl":3,"cycl":2,"use":3,"space":2,"perimet":1,"specifi":1,"center":4,"radial":2,"order":1,"extent":1,"rang":1,"length":2,"valu":1,"focus":2,"along":1,"less":2,"argument":1,"thedistribut":1,"except":2,"fraction":5,"paint":2,"number":1,"provid":1,"illeg":1,"size":1,"non":1,"around":1,"colori":1,"point":4,"either":1,"thecolor":1,"definingth":1,"color":8,"pointer":1,"method":2,"radius":3,"construct":1,"strict":1,"posit":1,"first":1,"user":1,"gradient":6,"array":3},"maxFreq":8,"totalTerms":86},"loc":8}