{"id":19056,"className":"java.awt.font.GlyphVector","methodName":"getGlyphTransform","signature":"\u003cjava.awt.font.GlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)\u003e","javadoc":"/** \n * Returns the transform of the specified glyph within this \u003ccode\u003eGlyphVector\u003c/code\u003e.  The transform is relative to the glyph position.  If no special transform has been applied, \u003ccode\u003enull\u003c/code\u003e can be returned.  A null return indicates an identity transform.\n * @param glyphIndex the index into this \u003ccode\u003eGlyphVector\u003c/code\u003e\n * @return an {@link AffineTransform} that is the transform ofthe glyph at the specified \u003ccode\u003eglyphIndex\u003c/code\u003e.\n * @throws IndexOutOfBoundsException if \u003ccode\u003eglyphIndex\u003c/code\u003eis less than 0 or greater than or equal to the number of glyphs in this \u003ccode\u003eGlyphVector\u003c/code\u003e\n * @see #setGlyphTransform\n */\n","tf":{"freq":{"except":1,"index":5,"greater":1,"link":1,"glyph":12,"number":1,"equal":1,"specifi":2,"transform":8,"appli":1,"indic":1,"ident":1,"vector":3,"ofth":1,"relat":1,"special":1,"within":1,"posit":1,"less":1,"bound":1,"affin":1},"maxFreq":12,"totalTerms":46},"loc":0}