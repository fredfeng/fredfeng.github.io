{"id":18086,"className":"java.awt.image.BufferedImage","methodName":"getProperty","signature":"\u003cjava.awt.image.BufferedImage: java.lang.Object getProperty(java.lang.String,java.awt.image.ImageObserver)\u003e","javadoc":"/** \n * Returns a property of the image by name.  Individual property names are defined by the various image formats.  If a property is not defined for a particular image, this method returns the \u003ccode\u003eUndefinedProperty\u003c/code\u003e field.  If the properties for this image are not yet known, then this method returns \u003ccode\u003enull\u003c/code\u003e and the \u003ccode\u003eImageObserver\u003c/code\u003e object is notified later.  The property name \"comment\" should be used to store an optional comment that can be presented to the user as a description of the image, its source, or its author.\n * @param name the property name\n * @param observer the \u003ccode\u003eImageObserver\u003c/code\u003e that receivesnotification regarding image information\n * @return an {@link Object} that is the property referred to by thespecified \u003ccode\u003ename\u003c/code\u003e or \u003ccode\u003enull\u003c/code\u003e if the properties of this image are not yet known.\n * @throws \u003ccode\u003eNullPointerException\u003c/code\u003e if the property name is null.\n * @see ImageObserver\n * @see java.awt.Image#UndefinedProperty\n */\n","tf":{"freq":{"defin":2,"store":1,"link":1,"particular":1,"use":1,"object":2,"author":1,"observ":4,"refer":1,"name":7,"thespecifi":1,"various":1,"undefin":2,"option":1,"individu":1,"notifi":1,"except":1,"later":1,"descript":1,"regard":1,"format":1,"imag":11,"field":1,"inform":1,"present":1,"awt":1,"pointer":1,"java":1,"sourc":1,"method":2,"receivesnotif":1,"properti":12,"known":2,"comment":2,"user":1,"yet":2},"maxFreq":12,"totalTerms":73},"loc":3}