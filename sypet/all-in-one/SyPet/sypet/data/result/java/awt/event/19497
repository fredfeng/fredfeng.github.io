{"id":19497,"className":"java.awt.event.AdjustmentEvent","methodName":"AdjustmentEvent","signature":"\u003cjava.awt.event.AdjustmentEvent: void AdjustmentEvent(java.awt.Adjustable,int,int,int,boolean)\u003e","javadoc":"/** \n * Constructs an \u003ccode\u003eAdjustmentEvent\u003c/code\u003e object with the specified Adjustable source, event type, adjustment type, and value. \u003cp\u003e This method throws an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e if \u003ccode\u003esource\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\n * @param source The \u003ccode\u003eAdjustable\u003c/code\u003e object where theevent originated\n * @param id     An integer indicating the type of event.For information on allowable values, see the class description for  {@link AdjustmentEvent}\n * @param type   An integer indicating the adjustment type.For information on allowable values, see the class description for  {@link AdjustmentEvent}\n * @param value  The current value of the adjustment\n * @param isAdjusting A boolean that equals \u003ccode\u003etrue\u003c/code\u003e if the event is oneof a series of multiple adjusting events, otherwise \u003ccode\u003efalse\u003c/code\u003e\n * @throws IllegalArgumentException if \u003ccode\u003esource\u003c/code\u003e is null\n * @since 1.4\n * @see #getSource()\n * @see #getID()\n * @see #getAdjustmentType()\n * @see #getValue()\n * @see #getValueIsAdjusting()\n */\n","tf":{"freq":{"fals":1,"otherwis":1,"seri":1,"allow":2,"link":2,"object":2,"type":6,"specifi":1,"indic":2,"event":8,"adjust":13,"current":1,"valu":7,"argument":2,"except":2,"multipl":1,"origin":1,"descript":2,"true":1,"equal":1,"illeg":2,"inform":2,"theevent":1,"method":1,"sourc":5,"construct":1,"oneof":1,"integ":2},"maxFreq":13,"totalTerms":72},"loc":7}