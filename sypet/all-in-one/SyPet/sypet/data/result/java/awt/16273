{"id":16273,"className":"java.awt.RenderingHints","methodName":"keySet","signature":"\u003cjava.awt.RenderingHints: java.util.Set\u003cjava.lang.Object\u003e keySet()\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eSet\u003c/code\u003e view of the Keys contained in this \u003ccode\u003eRenderingHints\u003c/code\u003e.  The Set is backed by the \u003ccode\u003eRenderingHints\u003c/code\u003e, so changes to the \u003ccode\u003eRenderingHints\u003c/code\u003e are reflected in the \u003ccode\u003eSet\u003c/code\u003e, and vice-versa.  If the \u003ccode\u003eRenderingHints\u003c/code\u003e is modified while an iteration over the \u003ccode\u003eSet\u003c/code\u003e is in progress, the results of the iteration are undefined.  The \u003ccode\u003eSet\u003c/code\u003e supports element removal, which removes the corresponding mapping from the \u003ccode\u003eRenderingHints\u003c/code\u003e, via the \u003ccode\u003eIterator.remove\u003c/code\u003e, \u003ccode\u003eSet.remove\u003c/code\u003e, \u003ccode\u003eremoveAll\u003c/code\u003e \u003ccode\u003eretainAll\u003c/code\u003e, and \u003ccode\u003eclear\u003c/code\u003e operations.  It does not support the \u003ccode\u003eadd\u003c/code\u003e or \u003ccode\u003eaddAll\u003c/code\u003e operations.\n * @return a \u003ccode\u003eSet\u003c/code\u003e view of the keys containedin this \u003ccode\u003eRenderingHints\u003c/code\u003e.\n */\n","tf":{"freq":{"progress":1,"result":1,"via":1,"vice":1,"correspond":1,"add":2,"clear":1,"oper":2,"map":1,"undefin":1,"key":3,"versa":1,"element":1,"containedin":1,"support":2,"remov":5,"back":1,"hint":6,"render":6,"contain":1,"modifi":1,"retain":1,"chang":1,"view":2,"iter":3,"reflect":1},"maxFreq":6,"totalTerms":48},"loc":3}