{"id":16081,"className":"java.awt.Graphics","methodName":"dispose","signature":"\u003cjava.awt.Graphics: void dispose()\u003e","javadoc":"/** \n * Disposes of this graphics context and releases any system resources that it is using. A \u003ccode\u003eGraphics\u003c/code\u003e object cannot be used after \u003ccode\u003edispose\u003c/code\u003ehas been called. \u003cp\u003e When a Java program runs, a large number of \u003ccode\u003eGraphics\u003c/code\u003e objects can be created within a short time frame. Although the finalization process of the garbage collector also disposes of the same system resources, it is preferable to manually free the associated resources by calling this method rather than to rely on a finalization process which may not run to completion for a long period of time. \u003cp\u003e Graphics objects which are provided as arguments to the \u003ccode\u003epaint\u003c/code\u003e and \u003ccode\u003eupdate\u003c/code\u003e methods of components are automatically released by the system when those methods return. For efficiency, programmers should call \u003ccode\u003edispose\u003c/code\u003e when finished using a \u003ccode\u003eGraphics\u003c/code\u003e object only if it was created directly from a component or another \u003ccode\u003eGraphics\u003c/code\u003e object.\n * @see java.awt.Graphics#finalize\n * @see java.awt.Component#paint\n * @see java.awt.Component#update\n * @see java.awt.Component#getGraphics\n * @see java.awt.Graphics#create\n */\n","tf":{"freq":{"call":3,"graphic":9,"use":3,"anoth":1,"object":5,"garbag":1,"run":2,"automat":1,"reli":1,"collector":1,"free":1,"resourc":3,"time":2,"although":1,"releas":2,"associ":1,"rather":1,"effici":1,"complet":1,"direct":1,"argument":1,"may":1,"creat":3,"programm":1,"paint":2,"number":1,"period":1,"provid":1,"manual":1,"process":2,"finish":1,"awt":5,"system":3,"frame":1,"compon":5,"updat":2,"program":1,"larg":1,"context":1,"dispos":5,"method":3,"java":6,"within":1,"prefer":1,"also":1},"maxFreq":9,"totalTerms":92},"loc":0}