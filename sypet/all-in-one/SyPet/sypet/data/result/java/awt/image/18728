{"id":18728,"className":"java.awt.image.DataBufferFloat","methodName":"DataBufferFloat","signature":"\u003cjava.awt.image.DataBufferFloat: void DataBufferFloat(float[][],int,int[])\u003e","javadoc":"/** \n * Constructs a \u003ccode\u003efloat\u003c/code\u003e-based \u003ccode\u003eDataBuffer\u003c/code\u003e with the specified data arrays, size, and per-bank offsets. The number of banks is equal to \u003ccode\u003edataArray.length\u003c/code\u003e. Each array must be at least as large as \u003ccode\u003esize\u003c/code\u003e plus the corresponding offset.  There must be an entry in the offsets array for each data array. \u003cp\u003e Note that  {@code DataBuffer} objects created by this constructormay be incompatible with \u003ca href\u003d\"#optimizations\"\u003eperformance optimizations\u003c/a\u003e used by some implementations (such as caching an associated image in video memory).\n * @param dataArray An array of arrays of \u003ccode\u003efloat\u003c/code\u003es to beused as the banks of this \u003ccode\u003eDataBuffer\u003c/code\u003e.\n * @param size The number of elements of each array to be used.\n * @param offsets An array of integer offsets, one for each bank.\n */\n","tf":{"freq":{"memori":1,"least":1,"correspond":1,"one":1,"data":8,"use":2,"perform":1,"object":1,"must":2,"specifi":1,"buffer":4,"constructormay":1,"associ":1,"length":1,"bank":4,"offset":5,"href":1,"video":1,"note":1,"element":1,"plus":1,"optim":2,"creat":1,"entri":1,"beus":1,"equal":1,"number":2,"cach":1,"imag":1,"incompat":1,"size":3,"per":1,"larg":1,"base":1,"construct":1,"integ":1,"array":10},"maxFreq":10,"totalTerms":69},"loc":5}