{"id":17517,"className":"java.awt.Shape","methodName":"contains","signature":"\u003cjava.awt.Shape: boolean contains(double,double,double,double)\u003e","javadoc":"/** \n * Tests if the interior of the \u003ccode\u003eShape\u003c/code\u003e entirely contains the specified rectangular area.  All coordinates that lie inside the rectangular area must lie within the \u003ccode\u003eShape\u003c/code\u003e for the entire rectanglar area to be considered contained within the \u003ccode\u003eShape\u003c/code\u003e. \u003cp\u003e The  {@code Shape.contains()} method allows a {@code Shape}implementation to conservatively return  {@code false} when:\u003cul\u003e \u003cli\u003e the \u003ccode\u003eintersect\u003c/code\u003e method returns \u003ccode\u003etrue\u003c/code\u003e and \u003cli\u003e the calculations to determine whether or not the \u003ccode\u003eShape\u003c/code\u003e entirely contains the rectangular area are prohibitively expensive. \u003c/ul\u003e This means that for some  {@code Shapes} this method mightreturn  {@code false} even though the {@code Shape} containsthe rectangular area. The  {@link java.awt.geom.Area Area} class performsmore accurate geometric computations than most {@code Shape} objects and therefore can be used if a more preciseanswer is required.\n * @param x the X coordinate of the upper-left cornerof the specified rectangular area\n * @param y the Y coordinate of the upper-left cornerof the specified rectangular area\n * @param w the width of the specified rectangular area\n * @param h the height of the specified rectangular area\n * @return \u003ccode\u003etrue\u003c/code\u003e if the interior of the \u003ccode\u003eShape\u003c/code\u003eentirely contains the specified rectangular area; \u003ccode\u003efalse\u003c/code\u003e otherwise or, if the \u003ccode\u003eShape\u003c/code\u003e contains the rectangular area and the \u003ccode\u003eintersects\u003c/code\u003e method returns \u003ccode\u003etrue\u003c/code\u003e and the containment calculations would be too expensive to perform.\n * @see java.awt.geom.Area\n * @see #intersects\n * @since 1.2\n */\n","tf":{"freq":{"fals":3,"interior":2,"rectangular":10,"test":1,"geom":2,"perform":1,"whether":1,"must":1,"though":1,"specifi":6,"height":1,"requir":1,"cornerof":2,"rectanglar":1,"containsth":1,"accur":1,"coordin":3,"calcul":2,"width":1,"shape":11,"awt":2,"determin":1,"intersect":3,"contain":8,"comput":1,"even":1,"entir":4,"otherwis":1,"mightreturn":1,"allow":1,"link":1,"use":1,"object":1,"therefor":1,"consid":1,"prohibit":1,"upper":2,"area":14,"mean":1,"geometr":1,"left":2,"performsmor":1,"conserv":1,"true":3,"preciseansw":1,"expens":2,"method":4,"insid":1,"java":2,"within":2,"lie":2},"maxFreq":14,"totalTerms":120},"loc":0}