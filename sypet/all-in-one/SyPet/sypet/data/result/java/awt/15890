{"id":15890,"className":"java.awt.Graphics2D","methodName":"transform","signature":"\u003cjava.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)\u003e","javadoc":"/** \n * Composes an \u003ccode\u003eAffineTransform\u003c/code\u003e object with the \u003ccode\u003eTransform\u003c/code\u003e in this \u003ccode\u003eGraphics2D\u003c/code\u003e according to the rule last-specified-first-applied.  If the current \u003ccode\u003eTransform\u003c/code\u003e is Cx, the result of composition with Tx is a new \u003ccode\u003eTransform\u003c/code\u003e Cx\u0027.  Cx\u0027 becomes the current \u003ccode\u003eTransform\u003c/code\u003e for this \u003ccode\u003eGraphics2D\u003c/code\u003e. Transforming a point p by the updated \u003ccode\u003eTransform\u003c/code\u003e Cx\u0027 is equivalent to first transforming p by Tx and then transforming the result by the original \u003ccode\u003eTransform\u003c/code\u003e Cx.  In other words, Cx\u0027(p) \u003d Cx(Tx(p)).  A copy of the Tx is made, if necessary, so further modifications to Tx do not affect rendering.\n * @param Tx the \u003ccode\u003eAffineTransform\u003c/code\u003e object to be composed withthe current \u003ccode\u003eTransform\u003c/code\u003e\n * @see #setTransform\n * @see AffineTransform\n */\n","tf":{"freq":{"result":2,"graphic":2,"last":1,"made":1,"object":2,"affect":1,"necessari":1,"copi":1,"specifi":1,"transform":15,"becom":1,"equival":1,"rule":1,"current":3,"composit":1,"compos":2,"origin":1,"accord":1,"render":1,"point":1,"appli":1,"withth":1,"updat":1,"word":1,"first":2,"modif":1,"affin":3},"maxFreq":15,"totalTerms":50},"loc":0}