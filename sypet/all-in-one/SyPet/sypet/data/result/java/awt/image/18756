{"id":18756,"className":"java.awt.image.BandedSampleModel","methodName":"setDataElements","signature":"\u003cjava.awt.image.BandedSampleModel: void setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\u003e","javadoc":"/** \n * Sets the data for a single pixel in the specified DataBuffer from a primitive array of type TransferType.  For a BandedSampleModel, this will be the same as the data type, and samples are transferred one per array element. \u003cp\u003e The following code illustrates transferring data for one pixel from DataBuffer \u003ccode\u003edb1\u003c/code\u003e, whose storage layout is described by BandedSampleModel \u003ccode\u003ebsm1\u003c/code\u003e, to DataBuffer \u003ccode\u003edb2\u003c/code\u003e, whose storage layout is described by BandedSampleModel \u003ccode\u003ebsm2\u003c/code\u003e. The transfer will generally be more efficient than using getPixel/setPixel. \u003cpre\u003e BandedSampleModel bsm1, bsm2; DataBufferInt db1, db2; bsm2.setDataElements(x, y, bsm1.getDataElements(x, y, null, db1), db2); \u003c/pre\u003e Using getDataElements/setDataElements to transfer between two DataBuffer/SampleModel pairs is legitimate if the SampleModels have the same number of bands, corresponding bands have the same number of bits per sample, and the TransferTypes are the same. \u003cp\u003e obj must be a primitive array of type TransferType.  Otherwise, a ClassCastException is thrown.  An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds, or if obj is not large enough to hold the pixel data.\n * @param x         The X coordinate of the pixel location\n * @param y         The Y coordinate of the pixel location\n * @param obj       If non-null, returns the primitive array in thisobject\n * @param data      The DataBuffer containing the image data\n * @see #getDataElements(int,int,Object,DataBuffer)\n */\n","tf":{"freq":{"singl":1,"type":6,"enough":1,"must":1,"specifi":1,"buffer":7,"band":6,"effici":1,"follow":1,"coordin":3,"element":7,"transfer":7,"except":2,"thrown":2,"index":1,"whose":2,"hold":1,"describ":2,"number":2,"imag":1,"non":1,"bit":1,"cast":1,"bsm":6,"contain":1,"will":2,"array":5,"otherwis":1,"primit":3,"model":6,"legitim":1,"pixel":7,"pair":1,"correspond":1,"one":2,"data":19,"use":2,"object":1,"layout":2,"thisobject":1,"may":1,"locat":2,"storag":2,"general":1,"two":1,"per":2,"pre":2,"larg":1,"obj":3,"illustr":1,"sampl":8,"bound":2},"maxFreq":19,"totalTerms":145},"loc":64}