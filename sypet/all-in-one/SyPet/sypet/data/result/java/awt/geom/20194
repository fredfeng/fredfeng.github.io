{"id":20194,"className":"java.awt.geom.Rectangle2D","methodName":"intersect","signature":"\u003cjava.awt.geom.Rectangle2D: void intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)\u003e","javadoc":"/** \n * Intersects the pair of specified source \u003ccode\u003eRectangle2D\u003c/code\u003e objects and puts the result into the specified destination \u003ccode\u003eRectangle2D\u003c/code\u003e object.  One of the source rectangles can also be the destination to avoid creating a third Rectangle2D object, but in this case the original points of this source rectangle will be overwritten by this method.\n * @param src1 the first of a pair of \u003ccode\u003eRectangle2D\u003c/code\u003eobjects to be intersected with each other\n * @param src2 the second of a pair of \u003ccode\u003eRectangle2D\u003c/code\u003eobjects to be intersected with each other\n * @param dest the \u003ccode\u003eRectangle2D\u003c/code\u003e that holds theresults of the intersection of \u003ccode\u003esrc1\u003c/code\u003e and \u003ccode\u003esrc2\u003c/code\u003e\n * @since 1.2\n */\n","tf":{"freq":{"result":1,"put":1,"second":1,"creat":1,"pair":3,"hold":1,"one":1,"origin":1,"theresult":1,"object":5,"third":1,"rectangl":8,"overwritten":1,"specifi":2,"point":1,"avoid":1,"dest":1,"intersect":5,"will":1,"method":1,"sourc":3,"src":4,"first":1,"also":1,"destin":2},"maxFreq":8,"totalTerms":49},"loc":7}