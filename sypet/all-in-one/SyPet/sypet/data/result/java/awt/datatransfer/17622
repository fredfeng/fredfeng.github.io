{"id":17622,"className":"java.awt.datatransfer.SystemFlavorMap","methodName":"getFlavorsForNative","signature":"\u003cjava.awt.datatransfer.SystemFlavorMap: java.util.List\u003cjava.awt.datatransfer.DataFlavor\u003e getFlavorsForNative(java.lang.String)\u003e","javadoc":"/** \n * Returns a \u003ccode\u003eList\u003c/code\u003e of \u003ccode\u003eDataFlavor\u003c/code\u003es to which the specified \u003ccode\u003eString\u003c/code\u003e native can be translated by the data transfer subsystem. The \u003ccode\u003eList\u003c/code\u003e will be sorted from best \u003ccode\u003eDataFlavor\u003c/code\u003e to worst. That is, the first \u003ccode\u003eDataFlavor\u003c/code\u003e will best reflect data in the specified native to a Java application. \u003cp\u003e If the specified native is previously unknown to the data transfer subsystem, and that native has been properly encoded, then invoking this method will establish a mapping in both directions between the specified native and a \u003ccode\u003eDataFlavor\u003c/code\u003e whose MIME type is a decoded version of the native. \u003cp\u003e If the specified native is not a properly encoded native and the mappings for this native have not been altered with \u003ccode\u003esetFlavorsForNative\u003c/code\u003e, then the contents of the \u003ccode\u003eList\u003c/code\u003e is platform dependent, but \u003ccode\u003enull\u003c/code\u003e cannot be returned.\n * @param nat the native whose corresponding \u003ccode\u003eDataFlavor\u003c/code\u003esshould be returned. If \u003ccode\u003enull\u003c/code\u003e is specified, all \u003ccode\u003eDataFlavor\u003c/code\u003es currently known to the data transfer subsystem are returned in a non-deterministic order.\n * @return a \u003ccode\u003ejava.util.List\u003c/code\u003e of \u003ccode\u003eDataFlavor\u003c/code\u003eobjects into which platform-specific data in the specified, platform-specific native can be translated\n * @see #encodeJavaMIMEType\n * @since 1.4\n */\n","tf":{"freq":{"sort":1,"correspond":1,"data":12,"object":1,"type":2,"applic":1,"version":1,"specifi":7,"order":1,"determinist":1,"current":1,"map":2,"best":2,"proper":2,"direct":1,"platform":3,"decod":1,"transfer":3,"sshould":1,"previous":1,"whose":2,"depend":1,"worst":1,"invok":1,"flavor":9,"establish":1,"list":4,"unknown":1,"translat":2,"alter":1,"non":1,"content":1,"specif":2,"encod":3,"string":1,"will":3,"subsystem":3,"nat":1,"java":3,"method":1,"known":1,"first":1,"util":1,"reflect":1},"maxFreq":12,"totalTerms":91},"loc":146}