{"id":20116,"className":"java.awt.geom.Line2D","methodName":"relativeCCW","signature":"\u003cjava.awt.geom.Line2D: int relativeCCW(double,double,double,double,double,double)\u003e","javadoc":"/** \n * Returns an indicator of where the specified point {@code (px,py)} lies with respect to the line segment from{@code (x1,y1)} to {@code (x2,y2)}. The return value can be either 1, -1, or 0 and indicates in which direction the specified line must pivot around its first end point,  {@code (x1,y1)}, in order to point at the specified point  {@code (px,py)}. \u003cp\u003eA return value of 1 indicates that the line segment must turn in the direction that takes the positive X axis towards the negative Y axis.  In the default coordinate system used by Java 2D, this direction is counterclockwise. \u003cp\u003eA return value of -1 indicates that the line segment must turn in the direction that takes the positive X axis towards the positive Y axis.  In the default coordinate system, this direction is clockwise. \u003cp\u003eA return value of 0 indicates that the point lies exactly on the line segment.  Note that an indicator value of 0 is rare and not useful for determining colinearity because of floating point rounding issues. \u003cp\u003eIf the point is colinear with the line segment, but not between the end points, then the value will be -1 if the point lies \"beyond  {@code (x1,y1)}\" or 1 if the point lies \"beyond  {@code (x2,y2)}\".\n * @param x1 the X coordinate of the start point of thespecified line segment\n * @param y1 the Y coordinate of the start point of thespecified line segment\n * @param x2 the X coordinate of the end point of thespecified line segment\n * @param y2 the Y coordinate of the end point of thespecified line segment\n * @param px the X coordinate of the specified point to becompared with the specified line segment\n * @param py the Y coordinate of the specified point to becompared with the specified line segment\n * @return an integer that indicates the position of the third specifiedcoordinates with respect to the line segment formed by the first two specified coordinates.\n * @since 1.2\n */\n","tf":{"freq":{"axi":4,"counterclockwis":1,"segment":12,"use":2,"line":13,"round":1,"issu":1,"must":3,"beyond":2,"specifi":8,"pivot":1,"clockwis":1,"indic":7,"order":1,"toward":2,"rare":1,"becompar":2,"exact":1,"relat":1,"thespecifi":4,"valu":6,"specifiedcoordin":1,"note":1,"end":4,"direct":5,"coordin":9,"turn":2,"form":1,"colinear":2,"third":1,"around":1,"two":1,"point":16,"system":2,"either":1,"start":2,"take":2,"determin":1,"will":1,"java":1,"negat":1,"integ":1,"first":2,"posit":4,"respect":2,"lie":4},"maxFreq":16,"totalTerms":142},"loc":32}