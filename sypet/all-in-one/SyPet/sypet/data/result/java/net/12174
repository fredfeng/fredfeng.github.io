{"id":12174,"className":"java.net.ServerSocket","methodName":"setSoTimeout","signature":"\u003cjava.net.ServerSocket: void setSoTimeout(int)\u003e","javadoc":"/** \n * Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds.  With this option set to a non-zero timeout, a call to accept() for this ServerSocket will block for only this amount of time.  If the timeout expires, a \u003cB\u003ejava.net.SocketTimeoutException\u003c/B\u003e is raised, though the ServerSocket is still valid.  The option \u003cB\u003emust\u003c/B\u003e be enabled prior to entering the blocking operation to have effect.  The timeout must be \u003e 0. A timeout of zero is interpreted as an infinite timeout.\n * @param timeout the specified timeout, in milliseconds\n * @exception SocketException if there is an error inthe underlying protocol, such as a TCP error.\n * @since   JDK1.1\n * @see #getSoTimeout()\n */\n","tf":{"freq":{"call":1,"valid":1,"accept":1,"interpret":1,"block":2,"zero":2,"net":1,"must":2,"though":1,"prior":1,"specifi":2,"amount":1,"expir":1,"inth":1,"infinit":1,"time":1,"rais":1,"oper":1,"millisecond":2,"socket":4,"option":2,"protocol":1,"except":3,"error":2,"enabl":2,"enter":1,"still":1,"non":1,"effect":1,"disabl":1,"will":1,"server":2,"java":1,"timeout":11},"maxFreq":11,"totalTerms":58},"loc":5}