{"id":12430,"className":"java.net.URLClassLoader","methodName":"URLClassLoader","signature":"\u003cjava.net.URLClassLoader: void URLClassLoader(java.net.URL[],java.lang.ClassLoader)\u003e","javadoc":"/** \n * Constructs a new URLClassLoader for the given URLs. The URLs will be searched in the order specified for classes and resources after first searching in the specified parent class loader. Any URL that ends with a \u0027/\u0027 is assumed to refer to a directory. Otherwise, the URL is assumed to refer to a JAR file which will be downloaded and opened as needed. \u003cp\u003eIf there is a security manager, this method first calls the security manager\u0027s  {@code checkCreateClassLoader} methodto ensure creation of a class loader is allowed.\n * @param urls the URLs from which to load classes and resources\n * @param parent the parent class loader for delegation\n * @exception SecurityException  if a security manager exists and its{@code checkCreateClassLoader} method doesn\u0027t allowcreation of a class loader.\n * @see SecurityManager#checkCreateClassLoader\n */\n","tf":{"freq":{"otherwis":1,"need":1,"creation":1,"call":1,"allow":1,"directori":1,"download":1,"ensur":1,"specifi":2,"open":1,"resourc":2,"deleg":1,"order":1,"given":1,"search":2,"refer":2,"file":1,"allowcr":1,"exist":1,"end":1,"except":2,"assum":2,"check":3,"creat":3,"loader":9,"manag":4,"parent":3,"url":1,"methodto":1,"secur":5,"lclass":1,"will":2,"load":1,"method":2,"construct":1,"first":2},"maxFreq":9,"totalTerms":66},"loc":10}