{"id":12108,"className":"java.net.Socket","methodName":"Socket","signature":"\u003cjava.net.Socket: void Socket(java.lang.String,int)\u003e","javadoc":"/** \n * Creates a stream socket and connects it to the specified port number on the named host. \u003cp\u003e If the specified host is \u003ctt\u003enull\u003c/tt\u003e it is the equivalent of specifying the address as \u003ctt\u003e {@link java.net.InetAddress#getByName InetAddress.getByName}(null)\u003c/tt\u003e. In other words, it is equivalent to specifying an address of the loopback interface. \u003c/p\u003e \u003cp\u003e If the application has specified a server socket factory, that factory\u0027s \u003ccode\u003ecreateSocketImpl\u003c/code\u003e method is called to create the actual socket implementation. Otherwise a \"plain\" socket is created. \u003cp\u003e If there is a security manager, its \u003ccode\u003echeckConnect\u003c/code\u003e method is called with the host address and \u003ccode\u003eport\u003c/code\u003e as its arguments. This could result in a SecurityException.\n * @param host   the host name, or \u003ccode\u003enull\u003c/code\u003e for the loopback address.\n * @param port   the port number.\n * @exception UnknownHostException if the IP address ofthe host could not be determined.\n * @exception IOException  if an I/O error occurs when creating the socket.\n * @exception SecurityException  if a security manager exists and its\u003ccode\u003echeckConnect\u003c/code\u003e method doesn\u0027t allow the operation.\n * @exception IllegalArgumentException if the port parameter is outsidethe specified range of valid port values, which is between 0 and 65535, inclusive.\n * @see java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory)\n * @see java.net.SocketImpl\n * @see java.net.SocketImplFactory#createSocketImpl()\n * @see SecurityManager#checkConnect\n */\n","tf":{"freq":{"otherwis":1,"port":6,"valid":1,"result":1,"call":2,"stream":1,"allow":1,"connect":4,"outsideth":1,"link":1,"net":5,"applic":1,"specifi":6,"inclus":1,"loopback":2,"oper":1,"equival":2,"rang":1,"factori":5,"ofth":1,"name":4,"socket":13,"valu":1,"plain":1,"exist":1,"argument":2,"except":9,"host":7,"error":1,"check":3,"impl":6,"creat":6,"manag":3,"paramet":1,"number":2,"unknown":1,"illeg":1,"secur":5,"address":7,"inet":2,"determin":1,"actual":1,"java":5,"word":1,"server":1,"method":3,"occur":1},"maxFreq":13,"totalTerms":133},"loc":5}