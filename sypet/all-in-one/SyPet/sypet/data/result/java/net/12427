{"id":12427,"className":"java.net.Authenticator","methodName":"requestPasswordAuthentication","signature":"\u003cjava.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Ask the authenticator that has been registered with the system for a password. \u003cp\u003e First, if there is a security manager, its \u003ccode\u003echeckPermission\u003c/code\u003e method is called with a \u003ccode\u003eNetPermission(\"requestPasswordAuthentication\")\u003c/code\u003e permission. This may result in a java.lang.SecurityException.\n * @param addr The InetAddress of the site requesting authorization,or null if not known.\n * @param port the port for the requested connection\n * @param protocol The protocol that\u0027s requesting the connection( {@link java.net.Authenticator#getRequestingProtocol()})\n * @param prompt A prompt string for the user\n * @param scheme The authentication scheme\n * @return The username/password, or null if one can\u0027t be gotten.\n * @throws SecurityException if a security manager exists and its \u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow the password authentication request.\n * @see SecurityManager#checkPermission\n * @see java.net.NetPermission\n */\n","tf":{"freq":{"port":2,"call":1,"result":1,"allow":1,"connect":2,"one":1,"usernam":1,"link":1,"addr":1,"net":4,"password":5,"lang":1,"authent":6,"author":1,"scheme":2,"request":7,"permiss":6,"regist":1,"exist":1,"site":1,"protocol":3,"may":1,"except":2,"check":3,"manag":3,"system":1,"gotten":1,"secur":5,"address":1,"inet":1,"string":1,"method":2,"java":3,"prompt":2,"known":1,"ask":1,"user":1,"first":1},"maxFreq":7,"totalTerms":79},"loc":24}