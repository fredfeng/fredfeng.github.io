{"id":12353,"className":"java.net.MulticastSocket","methodName":"MulticastSocket","signature":"\u003cjava.net.MulticastSocket: void MulticastSocket()\u003e","javadoc":"/** \n * Create a multicast socket. \u003cp\u003eIf there is a security manager, its \u003ccode\u003echeckListen\u003c/code\u003e method is first called with 0 as its argument to ensure the operation is allowed. This could result in a SecurityException. \u003cp\u003e When the socket is created the {@link DatagramSocket#setReuseAddress(boolean)} method iscalled to enable the SO_REUSEADDR socket option.\n * @exception IOException if an I/O exception occurswhile creating the MulticastSocket\n * @exception SecurityException  if a security manager exists and its\u003ccode\u003echeckListen\u003c/code\u003e method doesn\u0027t allow the operation.\n * @see SecurityManager#checkListen\n * @see java.net.DatagramSocket#setReuseAddress(boolean)\n */\n","tf":{"freq":{"call":1,"result":1,"allow":2,"link":1,"multicast":3,"net":1,"reus":2,"ensur":1,"oper":2,"iscal":1,"socket":7,"exist":1,"listen":3,"option":1,"argument":1,"except":6,"check":3,"creat":3,"manag":3,"enabl":1,"datagram":2,"secur":5,"address":2,"occurswhil":1,"java":1,"method":3,"first":1},"maxFreq":7,"totalTerms":59},"loc":3}