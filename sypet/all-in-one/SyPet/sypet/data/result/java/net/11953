{"id":11953,"className":"java.net.ResponseCache","methodName":"put","signature":"\u003cjava.net.ResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)\u003e","javadoc":"/** \n * The protocol handler calls this method after a resource has been retrieved, and the ResponseCache must decide whether or not to store the resource in its cache. If the resource is to be cached, then put() must return a CacheRequest object which contains an OutputStream that the protocol handler will use to write the resource into the cache. If the resource is not to be cached, then put must return null.\n * @param uri a \u003ccode\u003eURI\u003c/code\u003e used to reference the requestednetwork resource\n * @param conn - a URLConnection instance that is used to fetchthe response to be cached\n * @return a \u003ccode\u003eCacheRequest\u003c/code\u003e for recording theresponse to be cached. Null return indicates that the caller does not intend to cache the response.\n * @throws IOException if an I/O error occurs\n * @throws IllegalArgumentException if any one of the arguments isnull\n */\n","tf":{"freq":{"caller":1,"call":1,"stream":1,"conn":1,"put":3,"store":1,"one":1,"use":3,"object":1,"whether":1,"must":3,"resourc":6,"indic":1,"refer":1,"isnul":1,"request":2,"write":1,"lconnect":1,"argument":2,"requestednetwork":1,"except":2,"protocol":2,"error":1,"respons":3,"therespons":1,"cach":10,"illeg":1,"uri":1,"instanc":1,"record":1,"decid":1,"retriev":1,"contain":1,"will":1,"method":1,"fetchth":1,"intend":1,"output":1,"occur":1,"handler":2},"maxFreq":10,"totalTerms":67},"loc":0}