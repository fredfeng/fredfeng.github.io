{"id":12125,"className":"java.net.Socket","methodName":"getInputStream","signature":"\u003cjava.net.Socket: java.io.InputStream getInputStream()\u003e","javadoc":"/** \n * Returns an input stream for this socket. \u003cp\u003e If this socket has an associated channel then the resulting input stream delegates all of its operations to the channel.  If the channel is in non-blocking mode then the input stream\u0027s \u003ctt\u003eread\u003c/tt\u003e operations will throw an  {@link java.nio.channels.IllegalBlockingModeException}. \u003cp\u003eUnder abnormal conditions the underlying connection may be broken by the remote host or the network software (for example a connection reset in the case of TCP connections). When a broken connection is detected by the network software the following applies to the returned input stream :- \u003cul\u003e \u003cli\u003e\u003cp\u003eThe network software may discard bytes that are buffered by the socket. Bytes that aren\u0027t discarded by the network software can be read using  {@link java.io.InputStream#read read}. \u003cli\u003e\u003cp\u003eIf there are no bytes buffered on the socket, or all buffered bytes have been consumed by {@link java.io.InputStream#read read}, then all subsequent calls to  {@link java.io.InputStream#read read} will throw an{@link java.io.IOException IOException}. \u003cli\u003e\u003cp\u003eIf there are no bytes buffered on the socket, and the socket has not been closed using  {@link #close close}, then {@link java.io.InputStream#available available} willreturn \u003ccode\u003e0\u003c/code\u003e. \u003c/ul\u003e \u003cp\u003e Closing the returned  {@link java.io.InputStream InputStream}will close the associated socket.\n * @return     an input stream for reading bytes from this socket.\n * @exception IOException  if an I/O error occurs when creating theinput stream, the socket is closed, the socket is not connected, or the socket input has been shutdown using  {@link #shutdownInput()}\n * @revised 1.4\n * @spec JSR-51\n */\n","tf":{"freq":{"spec":1,"call":1,"result":1,"stream":13,"connect":5,"link":9,"use":3,"block":2,"discard":2,"network":4,"close":6,"mode":2,"theinput":1,"consum":1,"buffer":4,"deleg":1,"oper":2,"associ":2,"reset":1,"read":9,"socket":11,"subsequ":1,"shutdown":2,"willreturn":1,"follow":1,"softwar":4,"condit":1,"detect":1,"except":5,"may":2,"host":1,"error":1,"creat":1,"avail":2,"illeg":1,"non":1,"abnorm":1,"broken":2,"appli":1,"input":14,"revis":1,"remot":1,"exampl":1,"will":3,"java":7,"nio":1,"channel":4,"occur":1},"maxFreq":14,"totalTerms":143},"loc":21}