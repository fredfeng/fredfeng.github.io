{"id":12292,"className":"java.net.URI","methodName":"resolve","signature":"\u003cjava.net.URI: java.net.URI resolve(java.net.URI)\u003e","javadoc":"/** \n * Resolves the given URI against this URI. \u003cp\u003e If the given URI is already absolute, or if this URI is opaque, then the given URI is returned. \u003cp\u003e\u003ca name\u003d\"resolve-frag\"\u003e\u003c/a\u003e If the given URI\u0027s fragment component is defined, its path component is empty, and its scheme, authority, and query components are undefined, then a URI with the given fragment but with all other components equal to those of this URI is returned.  This allows a URI representing a standalone fragment reference, such as \u003ctt\u003e\"#foo\"\u003c/tt\u003e, to be usefully resolved against a base URI. \u003cp\u003e Otherwise this method constructs a new hierarchical URI in a manner consistent with \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2396.txt\"\u003eRFC\u0026nbsp;2396\u003c/a\u003e, section\u0026nbsp;5.2; that is: \u003c/p\u003e \u003col\u003e \u003cli\u003e\u003cp\u003e A new URI is constructed with this URI\u0027s scheme and the given URI\u0027s query and fragment components. \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e If the given URI has an authority component then the new URI\u0027s authority and path are taken from the given URI. \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e Otherwise the new URI\u0027s authority component is copied from this URI, and its path is computed as follows: \u003c/p\u003e \u003col type\u003da\u003e \u003cli\u003e\u003cp\u003e If the given URI\u0027s path is absolute then the new URI\u0027s path is taken from the given URI. \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e Otherwise the given URI\u0027s path is relative, and so the new URI\u0027s path is computed by resolving the path of the given URI against the path of this URI.  This is done by concatenating all but the last segment of this URI\u0027s path, if any, with the given URI\u0027s path and then normalizing the result as if by invoking the  {@link #normalize() normalize} method. \u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003c/li\u003e \u003c/ol\u003e \u003cp\u003e The result of this method is absolute if, and only if, either this URI is absolute or the given URI is absolute.  \u003c/p\u003e\n * @param uri  The URI to be resolved against this URI\n * @return The resulting URI\n * @throws NullPointerException If \u003ctt\u003euri\u003c/tt\u003e is \u003ctt\u003enull\u003c/tt\u003e\n */\n","tf":{"freq":{"last":1,"segment":1,"normal":3,"foo":1,"type":1,"copi":1,"scheme":2,"given":14,"refer":1,"relat":1,"taken":2,"undefin":1,"href":1,"nbsp":2,"follow":1,"except":1,"consist":1,"invok":1,"done":1,"concaten":1,"resolv":6,"absolut":5,"uri":2,"queri":2,"frag":1,"http":1,"pointer":1,"comput":2,"otherwis":3,"result":3,"defin":1,"allow":1,"link":1,"www":1,"use":1,"org":1,"rfc":2,"txt":1,"author":4,"opaqu":1,"name":1,"path":11,"fragment":4,"hierarch":1,"repres":1,"standalon":1,"equal":1,"section":1,"empti":1,"ietf":1,"either":1,"compon":7,"base":1,"alreadi":1,"method":3,"manner":1,"construct":2},"maxFreq":14,"totalTerms":117},"loc":3}