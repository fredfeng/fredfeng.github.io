{"id":12480,"className":"java.net.URL","methodName":"URL","signature":"\u003cjava.net.URL: void URL(java.lang.String,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Creates a URL from the specified \u003ccode\u003eprotocol\u003c/code\u003e name, \u003ccode\u003ehost\u003c/code\u003e name, and \u003ccode\u003efile\u003c/code\u003e name. The default port for the specified protocol is used. \u003cp\u003e This method is equivalent to calling the four-argument constructor with the arguments being \u003ccode\u003eprotocol\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003e-1\u003c/code\u003e, and \u003ccode\u003efile\u003c/code\u003e. No validation of the inputs is performed by this constructor.\n * @param protocol   the name of the protocol to use.\n * @param host       the name of the host.\n * @param file       the file on the host.\n * @exception MalformedURLException  if an unknown protocol is specified.\n * @see java.net.URL#URL(java.lang.String,java.lang.String,int,java.lang.String)\n */\n","tf":{"freq":{"port":1,"call":1,"valid":1,"lexcept":1,"use":2,"perform":1,"net":1,"lang":3,"specifi":3,"equival":1,"file":4,"name":5,"four":1,"constructor":2,"argument":2,"protocol":6,"except":1,"host":5,"creat":1,"unknown":1,"input":1,"malform":1,"string":3,"method":1,"java":4},"maxFreq":6,"totalTerms":53},"loc":3}