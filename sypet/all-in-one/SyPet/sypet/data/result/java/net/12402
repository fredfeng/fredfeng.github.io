{"id":12402,"className":"java.net.DatagramSocket","methodName":"setSoTimeout","signature":"\u003cjava.net.DatagramSocket: void setSoTimeout(int)\u003e","javadoc":"/** \n * Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a call to receive() for this DatagramSocket will block for only this amount of time.  If the timeout expires, a \u003cB\u003ejava.net.SocketTimeoutException\u003c/B\u003e is raised, though the DatagramSocket is still valid.  The option \u003cB\u003emust\u003c/B\u003e be enabled prior to entering the blocking operation to have effect.  The timeout must be \u003e 0. A timeout of zero is interpreted as an infinite timeout.\n * @param timeout the specified timeout in milliseconds.\n * @throws SocketException if there is an error in the underlying protocol, such as an UDP error.\n * @since   JDK1.1\n * @see #getSoTimeout()\n */\n","tf":{"freq":{"call":1,"valid":1,"interpret":1,"block":2,"zero":2,"net":1,"must":2,"though":1,"prior":1,"specifi":2,"amount":1,"expir":1,"infinit":1,"time":1,"rais":1,"oper":1,"millisecond":2,"socket":4,"option":2,"protocol":1,"except":2,"error":2,"enabl":2,"enter":1,"receiv":1,"still":1,"non":1,"datagram":2,"effect":1,"disabl":1,"will":1,"java":1,"timeout":11},"maxFreq":11,"totalTerms":56},"loc":5}