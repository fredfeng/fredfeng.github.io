{"id":12107,"className":"java.net.Socket","methodName":"Socket","signature":"\u003cjava.net.Socket: void Socket(java.net.Proxy)\u003e","javadoc":"/** \n * Creates an unconnected socket, specifying the type of proxy, if any, that should be used regardless of any other settings. \u003cP\u003e If there is a security manager, its \u003ccode\u003echeckConnect\u003c/code\u003e method is called with the proxy host address and port number as its arguments. This could result in a SecurityException. \u003cP\u003e Examples: \u003cUL\u003e \u003cLI\u003e\u003ccode\u003eSocket s \u003d new Socket(Proxy.NO_PROXY);\u003c/code\u003e will create a plain socket ignoring any other proxy configuration.\u003c/LI\u003e \u003cLI\u003e\u003ccode\u003eSocket s \u003d new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(\"socks.mydom.com\", 1080)));\u003c/code\u003e will create a socket connecting through the specified SOCKS proxy server.\u003c/LI\u003e \u003c/UL\u003e\n * @param proxy a {@link java.net.Proxy Proxy} object specifying what kindof proxying should be used.\n * @throws IllegalArgumentException if the proxy is of an invalid typeor \u003ccode\u003enull\u003c/code\u003e.\n * @throws SecurityException if a security manager is present andpermission to connect to the proxy is denied.\n * @see java.net.ProxySelector\n * @see java.net.Proxy\n * @since   1.5\n */\n","tf":{"freq":{"selector":1,"unconnect":1,"port":1,"call":1,"result":1,"com":1,"connect":3,"link":1,"use":2,"object":1,"net":3,"type":2,"specifi":3,"invalid":1,"mydom":1,"socket":9,"plain":1,"deni":1,"regardless":1,"argument":2,"ignor":1,"except":3,"host":1,"check":1,"proxi":15,"creat":3,"manag":2,"number":1,"typeor":1,"illeg":1,"sock":1,"present":1,"andpermiss":1,"configur":1,"secur":4,"address":2,"inet":1,"exampl":1,"will":2,"java":3,"server":1,"method":1,"kindof":1},"maxFreq":15,"totalTerms":86},"loc":34}