{"id":11963,"className":"java.net.DatagramPacket","methodName":"DatagramPacket","signature":"\u003cjava.net.DatagramPacket: void DatagramPacket(byte[],int,int,java.net.SocketAddress)\u003e","javadoc":"/** \n * Constructs a datagram packet for sending packets of length \u003ccode\u003elength\u003c/code\u003e with offset \u003ccode\u003eioffset\u003c/code\u003eto the specified port number on the specified host. The \u003ccode\u003elength\u003c/code\u003e argument must be less than or equal to \u003ccode\u003ebuf.length\u003c/code\u003e.\n * @param buf      the packet data.\n * @param offset   the packet data offset.\n * @param length   the packet data length.\n * @param address  the destination socket address.\n * @throws IllegalArgumentException if address type is not supported\n * @see java.net.InetAddress\n * @since 1.4\n */\n","tf":{"freq":{"port":1,"send":1,"data":3,"net":1,"type":1,"must":1,"specifi":2,"ioffset":1,"length":6,"socket":1,"offset":3,"less":1,"argument":2,"except":1,"host":1,"support":1,"number":1,"equal":1,"illeg":1,"datagram":2,"address":4,"inet":1,"java":1,"construct":1,"packet":6,"buf":2,"destin":1},"maxFreq":6,"totalTerms":48},"loc":4}