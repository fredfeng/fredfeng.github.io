{"id":11934,"className":"java.net.InetAddress","methodName":"getLocalHost","signature":"\u003cjava.net.InetAddress: java.net.InetAddress getLocalHost()\u003e","javadoc":"/** \n * Returns the address of the local host. This is achieved by retrieving the name of the host from the system, then resolving that name into an \u003ccode\u003eInetAddress\u003c/code\u003e. \u003cP\u003eNote: The resolved address may be cached for a short period of time. \u003c/P\u003e \u003cp\u003eIf there is a security manager, its \u003ccode\u003echeckConnect\u003c/code\u003e method is called with the local host name and \u003ccode\u003e-1\u003c/code\u003e as its arguments to see if the operation is allowed. If the operation is not allowed, an InetAddress representing the loopback address is returned.\n * @return     the address of the local host.\n * @exception UnknownHostException  if the local host name could notbe resolved into an address.\n * @see SecurityManager#checkConnect\n * @see java.net.InetAddress#getByName(java.lang.String)\n */\n","tf":{"freq":{"call":1,"notb":1,"connect":2,"allow":2,"net":1,"lang":1,"time":1,"loopback":1,"oper":2,"name":5,"note":1,"argument":1,"except":2,"may":1,"host":7,"check":2,"repres":1,"manag":2,"resolv":3,"unknown":1,"cach":1,"period":1,"achiev":1,"system":1,"secur":2,"address":8,"inet":3,"retriev":1,"string":1,"java":2,"method":1,"local":5},"maxFreq":8,"totalTerms":65},"loc":49}