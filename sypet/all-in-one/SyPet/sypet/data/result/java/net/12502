{"id":12502,"className":"java.net.URL","methodName":"openConnection","signature":"\u003cjava.net.URL: java.net.URLConnection openConnection(java.net.Proxy)\u003e","javadoc":"/** \n * Same as  {@link #openConnection()}, except that the connection will be made through the specified proxy; Protocol handlers that do not support proxing will ignore the proxy parameter and make a normal connection. Invoking this method preempts the system\u0027s default ProxySelector settings.\n * @param proxy the Proxy through which this connectionwill be made. If direct connection is desired, Proxy.NO_PROXY should be specified.\n * @return     a \u003ccode\u003eURLConnection\u003c/code\u003e to the URL.\n * @exception IOException  if an I/O exception occurs.\n * @exception SecurityException if a security manager is presentand the caller doesn\u0027t have permission to connect to the proxy.\n * @exception IllegalArgumentException will be thrown if proxy is null,or proxy has the wrong type\n * @exception UnsupportedOperationException if the subclass thatimplements the protocol handler doesn\u0027t support this method.\n * @see java.net.URL#URL(java.lang.String,java.lang.String,int,java.lang.String)\n * @see java.net.URLConnection\n * @see java.net.URLStreamHandler#openConnection(java.net.URL,java.net.Proxy)\n * @since      1.5\n */\n","tf":{"freq":{"caller":1,"selector":1,"unsupport":1,"connect":7,"link":1,"normal":1,"made":2,"net":5,"type":1,"desir":1,"lang":3,"specifi":2,"open":3,"lstream":1,"oper":1,"permiss":1,"lconnect":2,"argument":1,"prox":1,"direct":1,"thrown":1,"protocol":2,"except":10,"ignor":1,"support":2,"proxi":10,"manag":1,"invok":1,"paramet":1,"illeg":1,"presentand":1,"preempt":1,"system":1,"secur":2,"string":3,"connectionwil":1,"subclass":1,"will":3,"java":8,"thatimpl":1,"wrong":1,"method":2,"make":1,"occur":1,"handler":3},"maxFreq":10,"totalTerms":97},"loc":18}