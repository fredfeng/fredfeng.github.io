{"id":12481,"className":"java.net.URL","methodName":"URL","signature":"\u003cjava.net.URL: void URL(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eURL\u003c/code\u003e object from the specified \u003ccode\u003eprotocol\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003eport\u003c/code\u003e number, \u003ccode\u003efile\u003c/code\u003e, and \u003ccode\u003ehandler\u003c/code\u003e. Specifying a \u003ccode\u003eport\u003c/code\u003e number of \u003ccode\u003e-1\u003c/code\u003e indicates that the URL should use the default port for the protocol. Specifying a \u003ccode\u003ehandler\u003c/code\u003e of \u003ccode\u003enull\u003c/code\u003e indicates that the URL should use a default stream handler for the protocol, as outlined for: java.net.URL#URL(java.lang.String, java.lang.String, int, java.lang.String) \u003cp\u003eIf the handler is not null and there is a security manager, the security manager\u0027s \u003ccode\u003echeckPermission\u003c/code\u003e method is called with a \u003ccode\u003eNetPermission(\"specifyStreamHandler\")\u003c/code\u003e permission. This may result in a SecurityException. No validation of the inputs is performed by this constructor.\n * @param protocol   the name of the protocol to use.\n * @param host       the name of the host.\n * @param port       the port number on the host.\n * @param file       the file on the host\n * @param handler    the stream handler for the URL.\n * @exception MalformedURLException  if an unknown protocol is specified.\n * @exception SecurityException if a security manager exists and its \u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow specifying a stream handler explicitly.\n * @see java.lang.System#getProperty(java.lang.String)\n * @see java.net.URL#setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)\n * @see java.net.URLStreamHandler\n * @see java.net.URLStreamHandlerFactory#createURLStreamHandler(java.lang.String)\n * @see SecurityManager#checkPermission\n * @see java.net.NetPermission\n */\n","tf":{"freq":{"port":5,"valid":1,"result":1,"call":1,"stream":4,"allow":1,"outlin":1,"lexcept":1,"use":3,"perform":1,"object":1,"net":8,"lang":6,"specifi":6,"lstream":5,"indic":2,"factori":3,"file":3,"name":2,"permiss":6,"exist":1,"constructor":1,"except":4,"protocol":6,"may":1,"host":5,"check":3,"creat":2,"manag":4,"number":3,"unknown":1,"system":1,"malform":1,"input":1,"secur":6,"explicit":1,"string":5,"java":12,"method":2,"properti":1,"handler":13},"maxFreq":13,"totalTerms":135},"loc":49}