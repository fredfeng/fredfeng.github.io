{"id":12288,"className":"java.net.URI","methodName":"URI","signature":"\u003cjava.net.URI: void URI(java.lang.String,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Constructs a URI from the given components. \u003cp\u003e A component may be left undefined by passing \u003ctt\u003enull\u003c/tt\u003e. \u003cp\u003e This constructor first builds a URI in string form using the given components as follows:  \u003c/p\u003e \u003col\u003e \u003cli\u003e\u003cp\u003e Initially, the result string is empty.  \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e If a scheme is given then it is appended to the result, followed by a colon character (\u003ctt\u003e\u0027:\u0027\u003c/tt\u003e).  \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e If a scheme-specific part is given then it is appended.  Any character that is not a \u003ca href\u003d\"#legal-chars\"\u003elegal URI character\u003c/a\u003e is \u003ca href\u003d\"#quote\"\u003equoted\u003c/a\u003e.  \u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e Finally, if a fragment is given then a hash character (\u003ctt\u003e\u0027#\u0027\u003c/tt\u003e) is appended to the string, followed by the fragment. Any character that is not a legal URI character is quoted.  \u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e \u003cp\u003e The resulting URI string is then parsed in order to create the new URI instance as if by invoking the  {@link #URI(String)} constructor;this may cause a  {@link URISyntaxException} to be thrown.  \u003c/p\u003e\n * @param scheme    Scheme name\n * @param ssp       Scheme-specific part\n * @param fragment  Fragment\n * @throws URISyntaxException If the URI string constructed from the given components violates RFC\u0026nbsp;2396\n */\n","tf":{"freq":{"legal":3,"result":3,"link":2,"use":1,"colon":1,"violat":1,"build":1,"order":1,"given":6,"scheme":5,"ssp":1,"name":1,"left":1,"initi":1,"undefin":1,"fragment":4,"quot":3,"href":2,"nbsp":1,"constructor":2,"follow":3,"append":3,"thrown":1,"except":2,"may":2,"form":1,"creat":1,"hash":1,"charact":6,"invok":1,"instanc":1,"pass":1,"empti":1,"specif":2,"isyntax":2,"caus":1,"compon":4,"string":6,"construct":2,"part":2,"pars":1,"first":1},"maxFreq":6,"totalTerms":86},"loc":6}