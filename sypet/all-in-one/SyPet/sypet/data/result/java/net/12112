{"id":12112,"className":"java.net.Socket","methodName":"Socket","signature":"\u003cjava.net.Socket: void Socket(java.lang.String,int,boolean)\u003e","javadoc":"/** \n * Creates a stream socket and connects it to the specified port number on the named host. \u003cp\u003e If the specified host is \u003ctt\u003enull\u003c/tt\u003e it is the equivalent of specifying the address as \u003ctt\u003e {@link java.net.InetAddress#getByName InetAddress.getByName}(null)\u003c/tt\u003e. In other words, it is equivalent to specifying an address of the loopback interface. \u003c/p\u003e \u003cp\u003e If the stream argument is \u003ccode\u003etrue\u003c/code\u003e, this creates a stream socket. If the stream argument is \u003ccode\u003efalse\u003c/code\u003e, it creates a datagram socket. \u003cp\u003e If the application has specified a server socket factory, that factory\u0027s \u003ccode\u003ecreateSocketImpl\u003c/code\u003e method is called to create the actual socket implementation. Otherwise a \"plain\" socket is created. \u003cp\u003e If there is a security manager, its \u003ccode\u003echeckConnect\u003c/code\u003e method is called with the host address and \u003ccode\u003eport\u003c/code\u003e as its arguments. This could result in a SecurityException. \u003cp\u003e If a UDP socket is used, TCP/IP related socket options will not apply.\n * @param host     the host name, or \u003ccode\u003enull\u003c/code\u003e for the loopback address.\n * @param port     the port number.\n * @param stream   a \u003ccode\u003eboolean\u003c/code\u003e indicating whether this isa stream socket or a datagram socket.\n * @exception IOException  if an I/O error occurs when creating the socket.\n * @exception SecurityException  if a security manager exists and its\u003ccode\u003echeckConnect\u003c/code\u003e method doesn\u0027t allow the operation.\n * @exception IllegalArgumentException if the port parameter is outsidethe specified range of valid port values, which is between 0 and 65535, inclusive.\n * @see java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory)\n * @see java.net.SocketImpl\n * @see java.net.SocketImplFactory#createSocketImpl()\n * @see SecurityManager#checkConnect\n * @deprecated Use DatagramSocket instead for UDP transport.\n */\n","tf":{"freq":{"fals":1,"deprec":1,"outsideth":1,"whether":1,"specifi":6,"equival":2,"oper":1,"rang":1,"relat":1,"socket":20,"option":1,"argument":4,"except":7,"host":5,"creat":8,"number":2,"appli":1,"inet":2,"will":1,"word":1,"port":6,"otherwis":1,"valid":1,"call":2,"result":1,"stream":6,"connect":4,"allow":1,"link":1,"use":2,"net":5,"applic":1,"inclus":1,"loopback":2,"indic":1,"transport":1,"factori":5,"name":4,"isa":1,"valu":1,"plain":1,"exist":1,"impl":6,"check":3,"error":1,"manag":3,"paramet":1,"true":1,"illeg":1,"datagram":3,"secur":5,"address":6,"instead":1,"actual":1,"server":1,"java":5,"method":3,"occur":1},"maxFreq":20,"totalTerms":158},"loc":5}