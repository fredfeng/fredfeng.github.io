{"id":12458,"className":"java.net.CookieHandler","methodName":"get","signature":"\u003cjava.net.CookieHandler: java.util.Map\u003cjava.lang.String,java.util.List\u003cjava.lang.String\u003e\u003e get(java.net.URI,java.util.Map)\u003e","javadoc":"/** \n * Gets all the applicable cookies from a cookie cache for the specified uri in the request header. \u003cP\u003eThe  {@code URI} passed as an argument specifies the intended use forthe cookies. In particular the scheme should reflect whether the cookies will be sent over http, https or used in another context like javascript. The host part should reflect either the destination of the cookies or their origin in the case of javascript.\u003c/P\u003e \u003cP\u003eIt is up to the implementation to take into account the  {@code URI} andthe cookies attributes and security settings to determine which ones should be returned.\u003c/P\u003e \u003cP\u003eHTTP protocol implementers should make sure that this method is called after all request headers related to choosing cookies are added, and before the request is sent.\u003c/P\u003e\n * @param uri a \u003ccode\u003eURI\u003c/code\u003e representing the intended use for thecookies\n * @param requestHeaders - a Map from request headerfield names to lists of field values representing the current request headers\n * @return an immutable map from state management headers, withfield names \"Cookie\" or \"Cookie2\" to a list of cookies containing state information\n * @throws IOException if an I/O error occurs\n * @throws IllegalArgumentException if either argument is null\n * @see #put(URI,Map)\n */\n","tf":{"freq":{"forth":1,"thecooki":1,"particular":1,"whether":1,"specifi":2,"sent":2,"scheme":1,"request":6,"relat":1,"sure":1,"argument":3,"except":2,"host":1,"immut":1,"like":1,"uri":2,"header":5,"inform":1,"http":1,"contain":1,"determin":1,"will":1,"withfield":1,"make":1,"call":1,"put":1,"one":1,"state":2,"cooki":10,"use":3,"anoth":1,"applic":1,"headerfield":1,"attribut":1,"name":2,"current":1,"map":3,"choos":1,"valu":1,"https":1,"javascript":2,"protocol":1,"error":1,"repres":2,"manag":1,"origin":1,"list":2,"cach":1,"illeg":1,"pass":1,"field":1,"either":2,"secur":1,"take":1,"context":1,"account":1,"ad":1,"method":1,"intend":2,"part":1,"reflect":2,"andth":1,"occur":1,"destin":1},"maxFreq":10,"totalTerms":100},"loc":0}