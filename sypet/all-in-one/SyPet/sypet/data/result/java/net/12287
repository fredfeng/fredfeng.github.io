{"id":12287,"className":"java.net.URI","methodName":"URI","signature":"\u003cjava.net.URI: void URI(java.lang.String,java.lang.String,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * Constructs a hierarchical URI from the given components. \u003cp\u003e A component may be left undefined by passing \u003ctt\u003enull\u003c/tt\u003e. \u003cp\u003e This convenience constructor works as if by invoking the seven-argument constructor as follows: \u003cblockquote\u003e\u003ctt\u003e new\u0026nbsp; {@link #URI(String,String,String,int,String,String,String) URI}(scheme,\u0026nbsp;null,\u0026nbsp;host,\u0026nbsp;-1,\u0026nbsp;path,\u0026nbsp;null,\u0026nbsp;fragment); \u003c/tt\u003e\u003c/blockquote\u003e\n * @param scheme    Scheme name\n * @param host      Host name\n * @param path      Path\n * @param fragment  Fragment\n * @throws URISyntaxException If the URI string constructed from the given components violates RFC\u0026nbsp;2396\n */\n","tf":{"freq":{"link":1,"violat":1,"given":2,"scheme":3,"blockquot":2,"name":2,"path":3,"left":1,"undefin":1,"fragment":3,"conveni":1,"constructor":2,"follow":1,"nbsp":8,"work":1,"argument":1,"hierarch":1,"except":1,"may":1,"host":3,"invok":1,"pass":1,"isyntax":1,"seven":1,"compon":3,"string":7,"construct":2},"maxFreq":8,"totalTerms":55},"loc":3}