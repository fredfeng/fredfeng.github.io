{"id":12162,"className":"java.net.ServerSocket","methodName":"ServerSocket","signature":"\u003cjava.net.ServerSocket: void ServerSocket(int,int,java.net.InetAddress)\u003e","javadoc":"/** \n * Create a server with the specified port, listen backlog, and local IP address to bind to.  The \u003ci\u003ebindAddr\u003c/i\u003e argument can be used on a multi-homed host for a ServerSocket that will only accept connect requests to one of its addresses. If \u003ci\u003ebindAddr\u003c/i\u003e is null, it will default accepting connections on any/all local addresses. The port must be between 0 and 65535, inclusive. A port number of \u003ccode\u003e0\u003c/code\u003e means that the port number is automatically allocated, typically from an ephemeral port range. This port number can then be retrieved by calling {@link #getLocalPort getLocalPort}. \u003cP\u003eIf there is a security manager, this method calls its \u003ccode\u003echeckListen\u003c/code\u003e method with the \u003ccode\u003eport\u003c/code\u003e argument as its argument to ensure the operation is allowed. This could result in a SecurityException. The \u003ccode\u003ebacklog\u003c/code\u003e argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. The value provided should be greater than \u003ccode\u003e0\u003c/code\u003e. If it is less than or equal to \u003ccode\u003e0\u003c/code\u003e, then an implementation specific default will be used. \u003cP\u003e\n * @param port  the port number, or \u003ccode\u003e0\u003c/code\u003e to use a portnumber that is automatically allocated.\n * @param backlog requested maximum length of the queue of incomingconnections.\n * @param bindAddr the local InetAddress the server will bind to\n * @throws SecurityException if a security manager exists andits \u003ccode\u003echeckListen\u003c/code\u003e method doesn\u0027t allow the operation.\n * @throws IOException if an I/O error occurs when opening the socket.\n * @exception IllegalArgumentException if the port parameter is outsidethe specified range of valid port values, which is between 0 and 65535, inclusive.\n * @see SocketOptions\n * @see SocketImpl\n * @see SecurityManager#checkListen\n * @since   JDK1.1\n */\n","tf":{"freq":{"queue":1,"greater":1,"altogth":1,"accept":2,"outsideth":1,"particular":1,"addr":3,"andit":1,"must":1,"specifi":2,"open":1,"oper":2,"ephemer":1,"rang":2,"request":3,"exact":1,"socket":6,"option":1,"argument":5,"ignor":1,"except":5,"host":1,"creat":1,"number":5,"provid":1,"backlog":3,"inet":1,"maximum":3,"will":4,"multi":1,"alloc":2,"port":13,"valid":1,"home":1,"call":2,"result":1,"connect":3,"allow":2,"one":1,"link":1,"typic":1,"use":3,"portnumb":1,"automat":2,"ensur":1,"inclus":2,"semant":1,"length":2,"choos":1,"mean":1,"valu":2,"exist":1,"listen":4,"less":1,"pend":1,"may":2,"impl":1,"error":1,"check":3,"manag":3,"paramet":2,"equal":1,"illeg":1,"impos":1,"incomingconnect":1,"specif":2,"secur":5,"address":4,"retriev":1,"server":4,"method":3,"local":5,"bind":5,"occur":1},"maxFreq":13,"totalTerms":159},"loc":17}