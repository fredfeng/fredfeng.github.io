{"id":11933,"className":"java.net.InetAddress","methodName":"getByAddress","signature":"\u003cjava.net.InetAddress: java.net.InetAddress getByAddress(byte[])\u003e","javadoc":"/** \n * Returns an \u003ccode\u003eInetAddress\u003c/code\u003e object given the raw IP address . The argument is in network byte order: the highest order byte of the address is in \u003ccode\u003egetAddress()[0]\u003c/code\u003e. \u003cp\u003e This method doesn\u0027t block, i.e. no reverse name service lookup is performed. \u003cp\u003e IPv4 address byte array must be 4 bytes long and IPv6 byte array must be 16 bytes long\n * @param addr the raw IP address in network byte order\n * @return  an InetAddress object created from the raw IP address.\n * @exception UnknownHostException  if IP address is of illegal length\n * @since 1.4\n */\n","tf":{"freq":{"raw":3,"ipv":2,"highest":1,"servic":1,"block":1,"perform":1,"addr":1,"object":2,"lookup":1,"network":2,"must":2,"revers":1,"order":3,"given":1,"name":1,"length":1,"argument":1,"except":2,"host":1,"creat":1,"unknown":1,"illeg":1,"address":10,"inet":2,"method":1,"array":2},"maxFreq":10,"totalTerms":46},"loc":3}