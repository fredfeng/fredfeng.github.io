{"id":11952,"className":"java.net.ResponseCache","methodName":"get","signature":"\u003cjava.net.ResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)\u003e","javadoc":"/** \n * Retrieve the cached response based on the requesting uri, request method and request headers. Typically this method is called by the protocol handler before it sends out the request to get the network resource. If a cached response is returned, that resource is used instead.\n * @param uri a \u003ccode\u003eURI\u003c/code\u003e used to reference the requestednetwork resource\n * @param rqstMethod a \u003ccode\u003eString\u003c/code\u003e representing the requestmethod\n * @param rqstHeaders - a Map from request headerfield names to lists of field values representing the current request headers\n * @return a \u003ccode\u003eCacheResponse\u003c/code\u003e instance if availablefrom cache, or null otherwise\n * @throws IOException if an I/O error occurs\n * @throws IllegalArgumentException if any one of the arguments is null\n * @see java.net.URLConnection#setUseCaches(boolean)\n * @see java.net.URLConnection#getUseCaches()\n * @see java.net.URLConnection#setDefaultUseCaches(boolean)\n * @see java.net.URLConnection#getDefaultUseCaches()\n */\n","tf":{"freq":{"otherwis":1,"call":1,"send":1,"one":1,"typic":1,"use":6,"net":4,"network":1,"headerfield":1,"resourc":3,"refer":1,"availablefrom":1,"name":1,"request":6,"rqst":2,"current":1,"map":1,"valu":1,"lconnect":4,"argument":2,"requestednetwork":1,"except":2,"protocol":1,"error":1,"respons":3,"repres":2,"list":1,"cach":8,"illeg":1,"uri":2,"header":3,"instanc":1,"field":1,"retriev":1,"string":1,"base":1,"instead":1,"requestmethod":1,"java":4,"method":3,"occur":1,"handler":1},"maxFreq":8,"totalTerms":81},"loc":0}