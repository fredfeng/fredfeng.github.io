{"id":12208,"className":"java.net.SocketOptions","methodName":"getOption","signature":"\u003cjava.net.SocketOptions: java.lang.Object getOption(int)\u003e","javadoc":"/** \n * Fetch the value of an option. Binary options will return java.lang.Boolean(true) if enabled, java.lang.Boolean(false) if disabled, e.g.: \u003cBR\u003e\u003cPRE\u003e SocketImpl s; ... Boolean noDelay \u003d (Boolean)(s.getOption(TCP_NODELAY)); if (noDelay.booleanValue()) { // true if TCP_NODELAY is enabled... ... } \u003c/PRE\u003e \u003cP\u003e For options that take a particular type as a parameter, getOption(int) will return the parameter\u0027s value, else it will return java.lang.Boolean(false): \u003cPRE\u003e Object o \u003d s.getOption(SO_LINGER); if (o instanceof Integer) { System.out.print(\"Linger time is \" + ((Integer)o).intValue()); } else { // the true type of o is java.lang.Boolean(false); } \u003c/PRE\u003e\n * @param optID an \u003ccode\u003eint\u003c/code\u003e identifying the option to fetch\n * @return the value of the option\n * @throws SocketException if the socket is closed\n * @throws SocketException if \u003cI\u003eoptID\u003c/I\u003e is unknown along theprotocol stack (including the SocketImpl)\n * @see #setOption(int,java.lang.Object)\n */\n","tf":{"freq":{"fals":3,"binari":1,"particular":1,"identifi":1,"object":2,"type":2,"lang":5,"close":1,"time":1,"linger":1,"socket":5,"valu":5,"along":1,"opt":2,"option":10,"fetch":2,"except":2,"includ":1,"impl":2,"enabl":2,"paramet":2,"true":3,"unknown":1,"theprotocol":1,"els":2,"print":1,"system":1,"disabl":1,"take":1,"will":3,"java":5,"delay":2,"stack":1,"integ":2},"maxFreq":10,"totalTerms":76},"loc":0}