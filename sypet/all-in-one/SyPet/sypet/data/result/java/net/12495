{"id":12495,"className":"java.net.URL","methodName":"equals","signature":"\u003cjava.net.URL: boolean equals(java.lang.Object)\u003e","javadoc":"/** \n * Compares this URL for equality with another object.\u003cp\u003e If the given object is not a URL then this method immediately returns \u003ccode\u003efalse\u003c/code\u003e.\u003cp\u003e Two URL objects are equal if they have the same protocol, reference equivalent hosts, have the same port number on the host, and the same file and fragment of the file.\u003cp\u003e Two hosts are considered equivalent if both host names can be resolved into the same IP addresses; else if either host name can\u0027t be resolved, the host names must be equal without regard to case; or both host names equal to null.\u003cp\u003e Since hosts comparison requires name resolution, this operation is a blocking operation. \u003cp\u003e Note: The defined behavior for \u003ccode\u003eequals\u003c/code\u003e is known to be inconsistent with virtual hosting in HTTP.\n * @param obj   the URL to compare against.\n * @return  \u003ccode\u003etrue\u003c/code\u003e if the objects are the same;\u003ccode\u003efalse\u003c/code\u003e otherwise.\n */\n","tf":{"freq":{"otherwis":1,"virtual":1,"fals":2,"port":1,"inconsist":1,"defin":1,"behavior":1,"block":1,"object":4,"anoth":1,"consid":1,"must":1,"resolut":1,"requir":1,"given":1,"oper":2,"equival":2,"refer":1,"file":2,"name":5,"immedi":1,"fragment":1,"note":1,"protocol":1,"host":9,"true":1,"resolv":2,"regard":1,"equal":6,"number":1,"without":1,"comparison":1,"els":1,"two":2,"either":1,"address":1,"obj":1,"method":1,"known":1,"compar":2},"maxFreq":9,"totalTerms":67},"loc":7}