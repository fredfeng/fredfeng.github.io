{"id":12290,"className":"java.net.URI","methodName":"parseServerAuthority","signature":"\u003cjava.net.URI: java.net.URI parseServerAuthority()\u003e","javadoc":"/** \n * Attempts to parse this URI\u0027s authority component, if defined, into user-information, host, and port components. \u003cp\u003e If this URI\u0027s authority component has already been recognized as being server-based then it will already have been parsed into user-information, host, and port components.  In this case, or if this URI has no authority component, this method simply returns this URI. \u003cp\u003e Otherwise this method attempts once more to parse the authority component into user-information, host, and port components, and throws an exception describing why the authority component could not be parsed in that way. \u003cp\u003e This method is provided because the generic URI syntax specified in \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2396.txt\"\u003eRFC\u0026nbsp;2396\u003c/a\u003e cannot always distinguish a malformed server-based authority from a legitimate registry-based authority.  It must therefore treat some instances of the former as instances of the latter.  The authority component in the URI string \u003ctt\u003e\"//foo:bar\"\u003c/tt\u003e, for example, is not a legal server-based authority but it is legal as a registry-based authority. \u003cp\u003e In many common situations, for example when working URIs that are known to be either URNs or URLs, the hierarchical URIs being used will always be server-based.  They therefore must either be parsed as such or treated as an error.  In these cases a statement such as \u003cblockquote\u003e \u003ctt\u003eURI \u003c/tt\u003e\u003ci\u003eu\u003c/i\u003e\u003ctt\u003e \u003d new URI(str).parseServerAuthority();\u003c/tt\u003e \u003c/blockquote\u003e \u003cp\u003e can be used to ensure that \u003ci\u003eu\u003c/i\u003e always refers to a URI that, if it has an authority component, has a server-based authority with proper user-information, host, and port components.  Invoking this method also ensures that if the authority could not be parsed in that way then an appropriate diagnostic message can be issued based upon the exception that is thrown. \u003c/p\u003e\n * @return  A URI whose authority field has been parsedas a server-based authority\n * @throws URISyntaxException If the authority component of this URI is defined but cannot be parsed as a server-based authority according to RFC\u0026nbsp;2396\n */\n","tf":{"freq":{"foo":1,"situat":1,"must":2,"specifi":1,"refer":1,"blockquot":2,"diagnost":1,"proper":1,"recogn":1,"href":1,"nbsp":2,"work":1,"mani":1,"thrown":1,"except":3,"host":4,"whose":1,"invok":1,"alway":3,"describ":1,"registri":2,"provid":1,"instanc":2,"statement":1,"inform":4,"syntax":1,"malform":1,"str":1,"parseda":1,"http":1,"will":2,"distinguish":1,"known":1,"bar":1,"upon":1,"treat":2,"generic":1,"otherwis":1,"attempt":2,"port":4,"legal":2,"defin":2,"simpli":1,"legitim":1,"common":1,"www":1,"use":2,"way":2,"former":1,"therefor":2,"org":1,"issu":1,"rfc":2,"txt":1,"ensur":2,"author":19,"latter":1,"hierarch":1,"error":1,"messag":1,"accord":1,"ietf":1,"field":1,"either":2,"isyntax":1,"compon":12,"appropri":1,"string":1,"base":10,"exampl":2,"method":4,"server":9,"alreadi":2,"also":1,"pars":9,"user":4},"maxFreq":19,"totalTerms":167},"loc":10}