{"id":24576,"className":"java.text.BreakIterator","methodName":"next","signature":"\u003cjava.text.BreakIterator: int next(int)\u003e","javadoc":"/** \n * Returns the nth boundary from the current boundary. If either the first or last text boundary has been reached, it returns \u003ccode\u003eBreakIterator.DONE\u003c/code\u003e and the current position is set to either the first or last text boundary depending on which one is reached. Otherwise, the iterator\u0027s current position is set to the new boundary. For example, if the iterator\u0027s current position is the mth text boundary and three more boundaries exist from the current boundary to the last text boundary, the next(2) call will return m + 2. The new text position is set to the (m + 2)th text boundary. A next(4) call would return \u003ccode\u003eBreakIterator.DONE\u003c/code\u003e and the last text boundary would become the new text position.\n * @param n which boundary to return.  A value of 0does nothing.  Negative values move to previous boundaries and positive values move to later boundaries.\n * @return The character index of the nth boundary from the current positionor \u003ccode\u003eBreakIterator.DONE\u003c/code\u003e if either first or last text boundary has been reached.\n */\n","tf":{"freq":{"otherwis":1,"call":2,"last":5,"next":3,"one":1,"mth":1,"reach":3,"becom":1,"current":6,"three":1,"nth":2,"noth":1,"valu":3,"exist":1,"move":2,"index":1,"text":9,"previous":1,"charact":1,"later":1,"depend":1,"either":3,"positionor":1,"exampl":1,"will":1,"negat":1,"iter":5,"posit":6,"first":3,"boundari":16},"maxFreq":16,"totalTerms":84},"loc":0}