{"id":24629,"className":"java.text.AttributedString","methodName":"AttributedString","signature":"\u003cjava.text.AttributedString: void AttributedString(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator.Attribute[])\u003e","javadoc":"/** \n * Constructs an AttributedString instance with the subrange of the given attributed text represented by AttributedCharacterIterator.  Only attributes that match the given attributes will be incorporated into the instance. If the given range produces an empty text, all attributes will be discarded. Note that any attributes wrapped by an Annotation object are discarded for a subrange of the original attribute range.\n * @param text The text for this attributed string.\n * @param beginIndex Index of the first character of the range.\n * @param endIndex Index of the character following the last characterof the range.\n * @param attributes Specifies attributes to be extractedfrom the text. If null is specified, all available attributes will be used.\n * @exception NullPointerException if \u003ccode\u003etext\u003c/code\u003e is null.\n * @exception IllegalArgumentException if the subrange given bybeginIndex and endIndex is out of the text range.\n * @see java.text.Annotation\n */\n","tf":{"freq":{"last":1,"incorpor":1,"use":1,"extractedfrom":1,"object":1,"discard":2,"specifi":2,"attribut":13,"given":4,"rang":5,"annot":2,"characterof":1,"end":2,"note":1,"follow":1,"argument":1,"wrap":1,"except":4,"text":8,"index":6,"charact":3,"repres":1,"origin":1,"avail":1,"produc":1,"illeg":1,"instanc":2,"empti":1,"begin":1,"subrang":3,"bybegin":1,"string":3,"will":3,"pointer":1,"java":1,"match":1,"construct":1,"iter":1,"first":1},"maxFreq":13,"totalTerms":86},"loc":74}