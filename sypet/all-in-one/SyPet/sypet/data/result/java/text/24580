{"id":24580,"className":"java.text.BreakIterator","methodName":"preceding","signature":"\u003cjava.text.BreakIterator: int preceding(int)\u003e","javadoc":"/** \n * Returns the last boundary preceding the specified character offset. If the specified offset equals to the first text boundary, it returns \u003ccode\u003eBreakIterator.DONE\u003c/code\u003e and the iterator\u0027s current position is unchanged. Otherwise, the iterator\u0027s current position is set to the returned boundary. The value returned is always less than the offset or the value \u003ccode\u003eBreakIterator.DONE\u003c/code\u003e.\n * @param offset the characater offset to begin scanning.\n * @return The last boundary before the specified offset or\u003ccode\u003eBreakIterator.DONE\u003c/code\u003e if the first text boundary is passed in as the offset.\n * @exception IllegalArgumentException if the specified offset is less thanthe first text boundary or greater than the last text boundary.\n * @since 1.2\n */\n","tf":{"freq":{"otherwis":1,"characat":1,"greater":1,"last":3,"specifi":4,"current":2,"valu":2,"offset":8,"thanth":1,"less":2,"argument":1,"text":4,"except":2,"unchang":1,"charact":1,"alway":1,"equal":1,"illeg":1,"begin":1,"pass":1,"preced":2,"scan":1,"iter":5,"posit":2,"first":3,"boundari":7},"maxFreq":8,"totalTerms":59},"loc":9}