{"id":24795,"className":"java.text.MessageFormat","methodName":"format","signature":"\u003cjava.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])\u003e","javadoc":"/** \n * Creates a MessageFormat with the given pattern and uses it to format the given arguments. This is equivalent to \u003cblockquote\u003e \u003ccode\u003e(new  {@link #MessageFormat(String) MessageFormat}(pattern)). {@link #format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition) format}(arguments, new StringBuffer(), null).toString()\u003c/code\u003e \u003c/blockquote\u003e\n * @exception IllegalArgumentException if the pattern is invalid,or if an argument in the \u003ccode\u003earguments\u003c/code\u003e array is not of the type expected by the format element(s) that use it.\n */\n","tf":{"freq":{"argument":5,"element":1,"except":2,"text":1,"creat":1,"messag":3,"link":2,"use":2,"object":1,"format":8,"type":1,"illeg":1,"lang":2,"expect":1,"field":1,"buffer":2,"invalid":1,"given":2,"pattern":3,"equival":1,"blockquot":2,"string":4,"java":3,"posit":1,"array":1},"maxFreq":8,"totalTerms":52},"loc":4}