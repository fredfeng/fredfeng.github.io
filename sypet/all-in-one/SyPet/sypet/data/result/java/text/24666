{"id":24666,"className":"java.text.DateFormat","methodName":"format","signature":"\u003cjava.text.DateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)\u003e","javadoc":"/** \n * Formats a Date into a date/time string.\n * @param date a Date to be formatted into a date/time string.\n * @param toAppendTo the string buffer for the returning date/time string.\n * @param fieldPosition keeps track of the position of the fieldwithin the returned string. On input: an alignment field, if desired. On output: the offsets of the alignment field. For example, given a time text \"1996.07.10 AD at 15:08:56 PDT\", if the given fieldPosition is DateFormat.YEAR_FIELD, the begin index and end index of fieldPosition will be set to 0 and 4, respectively. Notice that if the same time field appears more than once in a pattern, the fieldPosition will be set for the first occurrence of that time field. For instance, formatting a Date to the time string \"1 PM PDT (Pacific Daylight Time)\" using the pattern \"h a z (zzzz)\" and the alignment field DateFormat.TIMEZONE_FIELD, the begin index and end index of fieldPosition will be set to 5 and 8, respectively, for the first occurrence of the timezone pattern character \u0027z\u0027.\n * @return the string buffer passed in as toAppendTo, with formatted text appended.\n */\n","tf":{"freq":{"appear":1,"timezon":1,"use":1,"date":9,"desir":1,"notic":1,"fieldwithin":1,"occurr":2,"buffer":2,"time":8,"given":2,"zzzz":1,"offset":1,"end":2,"append":3,"text":2,"index":4,"charact":1,"align":3,"track":1,"format":7,"pass":1,"instanc":1,"begin":2,"field":10,"input":1,"pattern":3,"string":7,"exampl":1,"will":3,"output":1,"first":2,"posit":6,"daylight":1,"respect":2,"pacif":1,"keep":1},"maxFreq":10,"totalTerms":97},"loc":0}