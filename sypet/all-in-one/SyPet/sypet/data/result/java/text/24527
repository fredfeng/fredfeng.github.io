{"id":24527,"className":"java.text.DecimalFormat","methodName":"DecimalFormat","signature":"\u003cjava.text.DecimalFormat: void DecimalFormat(java.lang.String)\u003e","javadoc":"/** \n * Creates a DecimalFormat using the given pattern and the symbols for the default locale. This is a convenient way to obtain a DecimalFormat when internationalization is not the main concern. \u003cp\u003e To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getNumberInstance. These factories will return the most appropriate sub-class of NumberFormat for a given locale.\n * @param pattern A non-localized pattern string.\n * @exception NullPointerException if \u003ccode\u003epattern\u003c/code\u003e is null\n * @exception IllegalArgumentException if the given pattern is invalid.\n * @see java.text.NumberFormat#getInstance\n * @see java.text.NumberFormat#getNumberInstance\n * @see java.text.NumberFormat#getCurrencyInstance\n * @see java.text.NumberFormat#getPercentInstance\n */\n","tf":{"freq":{"sub":1,"percent":1,"concern":1,"currenc":1,"way":1,"use":2,"decim":3,"invalid":1,"given":4,"factori":2,"internation":1,"conveni":1,"argument":1,"text":4,"except":4,"symbol":1,"standard":1,"creat":1,"number":8,"format":10,"illeg":1,"main":1,"instanc":5,"non":1,"obtain":2,"pattern":5,"appropri":1,"string":1,"will":1,"pointer":1,"java":4,"method":1,"local":4},"maxFreq":10,"totalTerms":77},"loc":5}