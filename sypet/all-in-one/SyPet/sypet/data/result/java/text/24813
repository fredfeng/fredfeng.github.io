{"id":24813,"className":"java.text.Bidi","methodName":"Bidi","signature":"\u003cjava.text.Bidi: void Bidi(java.text.AttributedCharacterIterator)\u003e","javadoc":"/** \n * Create Bidi from the given paragraph of text. \u003cp\u003e The RUN_DIRECTION attribute in the text, if present, determines the base direction (left-to-right or right-to-left).  If not present, the base direction is computes using the Unicode Bidirectional Algorithm, defaulting to left-to-right if there are no strong directional characters in the text.  This attribute, if present, must be applied to all the text in the paragraph. \u003cp\u003e The BIDI_EMBEDDING attribute in the text, if present, represents embedding level information.  Negative values from -1 to -62 indicate overrides at the absolute value of the level.  Positive values from 1 to 62 indicate embeddings.  Where values are zero or not defined, the base embedding level as determined by the base direction is assumed. \u003cp\u003e The NUMERIC_SHAPING attribute in the text, if present, converts European digits to other decimal digits before running the bidi algorithm.  This attribute, if present, must be applied to all the text in the paragraph.\n * @param paragraph a paragraph of text with optional character and paragraph attribute information\n * @see java.awt.font.TextAttribute#BIDI_EMBEDDING\n * @see java.awt.font.TextAttribute#NUMERIC_SHAPING\n * @see java.awt.font.TextAttribute#RUN_DIRECTION\n */\n","tf":{"freq":{"defin":1,"paragraph":6,"convert":1,"use":1,"run":1,"decim":1,"zero":1,"must":2,"algorithm":2,"attribut":9,"level":3,"indic":2,"given":1,"valu":4,"left":3,"right":3,"option":1,"direct":4,"text":11,"assum":1,"creat":1,"charact":2,"repres":1,"font":3,"absolut":1,"embed":3,"digit":2,"inform":2,"present":6,"bidi":3,"awt":3,"appli":2,"european":1,"strong":1,"determin":2,"base":4,"unicod":1,"comput":1,"java":3,"negat":1,"posit":1,"bidirect":1},"maxFreq":11,"totalTerms":103},"loc":8}