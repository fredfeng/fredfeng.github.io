{"id":24599,"className":"java.text.FieldPosition","methodName":"FieldPosition","signature":"\u003cjava.text.FieldPosition: void FieldPosition(java.text.Format$Field,int)\u003e","javadoc":"/** \n * Creates a \u003ccode\u003eFieldPosition\u003c/code\u003e object for the given field. The field is identified by an attribute constant from one of the \u003ccode\u003eField\u003c/code\u003e subclasses as well as an integer field ID defined by the \u003ccode\u003eFormat\u003c/code\u003e subclasses. \u003ccode\u003eFormat\u003c/code\u003e subclasses that are aware of \u003ccode\u003eField\u003c/code\u003e should give precedence to \u003ccode\u003eattribute\u003c/code\u003e and ignore \u003ccode\u003efieldID\u003c/code\u003e if \u003ccode\u003eattribute\u003c/code\u003e is not null. However, older \u003ccode\u003eFormat\u003c/code\u003e subclasses may not be aware of \u003ccode\u003eField\u003c/code\u003e and rely on \u003ccode\u003efieldID\u003c/code\u003e. If the field has no corresponding integer constant, \u003ccode\u003efieldID\u003c/code\u003e should be -1.\n * @param attribute Format.Field constant identifying a field\n * @param fieldID integer constantce identifying a field\n * @since 1.4\n */\n","tf":{"freq":{"defin":1,"may":1,"ignor":1,"constant":3,"give":1,"creat":1,"correspond":1,"one":1,"identifi":3,"format":4,"object":1,"well":1,"reli":1,"field":16,"preced":1,"attribut":4,"given":1,"older":1,"awar":2,"subclass":4,"howev":1,"posit":2,"integ":3,"constantc":1},"maxFreq":16,"totalTerms":56},"loc":4}