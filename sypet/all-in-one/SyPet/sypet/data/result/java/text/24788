{"id":24788,"className":"java.text.MessageFormat","methodName":"setFormatsByArgumentIndex","signature":"\u003cjava.text.MessageFormat: void setFormatsByArgumentIndex(java.text.Format[])\u003e","javadoc":"/** \n * Sets the formats to use for the values passed into \u003ccode\u003eformat\u003c/code\u003e methods or returned from \u003ccode\u003eparse\u003c/code\u003e methods. The indices of elements in \u003ccode\u003enewFormats\u003c/code\u003e correspond to the argument indices used in the previously set pattern string. The order of formats in \u003ccode\u003enewFormats\u003c/code\u003e thus corresponds to the order of elements in the \u003ccode\u003earguments\u003c/code\u003e array passed to the \u003ccode\u003eformat\u003c/code\u003e methods or the result array returned by the \u003ccode\u003eparse\u003c/code\u003e methods. \u003cp\u003e If an argument index is used for more than one format element in the pattern string, then the corresponding new format is used for all such format elements. If an argument index is not used for any format element in the pattern string, then the corresponding new format is ignored. If fewer formats are provided than needed, then only the formats for argument indices less than \u003ccode\u003enewFormats.length\u003c/code\u003e are replaced.\n * @param newFormats the new formats to use\n * @exception NullPointerException if \u003ccode\u003enewFormats\u003c/code\u003e is null\n * @since 1.4\n */\n","tf":{"freq":{"need":1,"result":1,"correspond":4,"one":1,"use":6,"indic":3,"order":2,"length":1,"valu":1,"less":1,"argument":6,"element":5,"except":2,"index":3,"ignor":1,"previous":1,"thus":1,"format":18,"provid":1,"pass":2,"pattern":3,"replac":1,"string":3,"pointer":1,"fewer":1,"method":4,"pars":2,"array":2},"maxFreq":18,"totalTerms":78},"loc":8}