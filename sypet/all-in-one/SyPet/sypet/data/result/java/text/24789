{"id":24789,"className":"java.text.MessageFormat","methodName":"setFormats","signature":"\u003cjava.text.MessageFormat: void setFormats(java.text.Format[])\u003e","javadoc":"/** \n * Sets the formats to use for the format elements in the previously set pattern string. The order of formats in \u003ccode\u003enewFormats\u003c/code\u003e corresponds to the order of format elements in the pattern string. \u003cp\u003e If more formats are provided than needed by the pattern string, the remaining ones are ignored. If fewer formats are provided than needed, then only the first \u003ccode\u003enewFormats.length\u003c/code\u003e formats are replaced. \u003cp\u003e Since the order of format elements in a pattern string often changes during localization, it is generally better to use the {@link #setFormatsByArgumentIndex setFormatsByArgumentIndex}method, which assumes an order of formats corresponding to the order of elements in the \u003ccode\u003earguments\u003c/code\u003e array passed to the \u003ccode\u003eformat\u003c/code\u003e methods or the result array returned by the \u003ccode\u003eparse\u003c/code\u003e methods.\n * @param newFormats the new formats to use\n * @exception NullPointerException if \u003ccode\u003enewFormats\u003c/code\u003e is null\n */\n","tf":{"freq":{"need":2,"result":1,"correspond":2,"one":1,"link":1,"use":3,"order":5,"length":1,"argument":3,"element":4,"except":2,"index":2,"ignor":1,"assum":1,"previous":1,"format":18,"provid":2,"general":1,"pass":1,"remain":1,"pattern":4,"often":1,"better":1,"string":4,"replac":1,"pointer":1,"fewer":1,"method":3,"chang":1,"local":1,"pars":1,"first":1,"array":2},"maxFreq":18,"totalTerms":75},"loc":9}