{"id":24528,"className":"java.text.DecimalFormat","methodName":"DecimalFormat","signature":"\u003cjava.text.DecimalFormat: void DecimalFormat(java.lang.String,java.text.DecimalFormatSymbols)\u003e","javadoc":"/** \n * Creates a DecimalFormat using the given pattern and symbols. Use this constructor when you need to completely customize the behavior of the format. \u003cp\u003e To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getInstance or getCurrencyInstance. If you need only minor adjustments to a standard format, you can modify the format returned by a NumberFormat factory method.\n * @param pattern a non-localized pattern string\n * @param symbols the set of symbols to be used\n * @exception NullPointerException if any of the given arguments is null\n * @exception IllegalArgumentException if the given pattern is invalid\n * @see java.text.NumberFormat#getInstance\n * @see java.text.NumberFormat#getNumberInstance\n * @see java.text.NumberFormat#getCurrencyInstance\n * @see java.text.NumberFormat#getPercentInstance\n * @see java.text.DecimalFormatSymbols\n */\n","tf":{"freq":{"need":2,"percent":1,"minor":1,"behavior":1,"currenc":2,"use":4,"decim":3,"invalid":1,"given":4,"factori":2,"adjust":1,"custom":1,"complet":1,"constructor":1,"argument":2,"text":5,"except":4,"symbol":4,"standard":2,"creat":1,"number":7,"format":13,"illeg":1,"instanc":6,"non":1,"obtain":1,"pattern":4,"string":1,"modifi":1,"pointer":1,"java":5,"method":2,"local":2},"maxFreq":13,"totalTerms":88},"loc":5}