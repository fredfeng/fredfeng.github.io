{"id":24994,"className":"java.text.NumberFormat","methodName":"format","signature":"\u003cjava.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)\u003e","javadoc":"/** \n * Formats a number and appends the resulting text to the given string buffer. The number can be of any subclass of  {@link java.lang.Number}. \u003cp\u003e This implementation extracts the number\u0027s value using {@link java.lang.Number#longValue()} for all integral type values thatcan be converted to \u003ccode\u003elong\u003c/code\u003e without loss of information, including \u003ccode\u003eBigInteger\u003c/code\u003e values with a {@link java.math.BigInteger#bitLength() bit length} of less than 64,and  {@link java.lang.Number#doubleValue()} for all other types. Itthen calls {@link #format(long,java.lang.StringBuffer,java.text.FieldPosition)}or  {@link #format(double,java.lang.StringBuffer,java.text.FieldPosition)}. This may result in loss of magnitude information and precision for \u003ccode\u003eBigInteger\u003c/code\u003e and \u003ccode\u003eBigDecimal\u003c/code\u003e values.\n * @param number     the number to format\n * @param toAppendTo the \u003ccode\u003eStringBuffer\u003c/code\u003e to which the formattedtext is to be appended\n * @param pos        On input: an alignment field, if desired.On output: the offsets of the alignment field.\n * @return           the value passed in as \u003ccode\u003etoAppendTo\u003c/code\u003e\n * @exception IllegalArgumentException if \u003ccode\u003enumber\u003c/code\u003e isnull or not an instance of \u003ccode\u003eNumber\u003c/code\u003e.\n * @exception NullPointerException if \u003ccode\u003etoAppendTo\u003c/code\u003e or\u003ccode\u003epos\u003c/code\u003e is null\n * @exception ArithmeticException if rounding is needed with roundingmode being set to RoundingMode.UNNECESSARY\n * @see java.text.FieldPosition\n */\n","tf":{"freq":{"need":1,"integr":1,"arithmet":1,"round":2,"type":2,"desir":1,"pos":2,"buffer":4,"given":1,"isnul":1,"precis":1,"itthen":1,"argument":1,"append":5,"text":4,"except":6,"align":2,"number":10,"format":5,"without":1,"extract":1,"instanc":1,"inform":2,"bit":2,"input":1,"subclass":1,"pointer":1,"big":4,"output":1,"posit":3,"result":2,"call":1,"loss":2,"link":6,"convert":1,"use":1,"decim":1,"lang":5,"formattedtext":1,"mode":1,"roundingmod":1,"length":2,"valu":7,"offset":1,"less":1,"may":1,"includ":1,"magnitud":1,"illeg":1,"pass":1,"math":1,"field":5,"thatcan":1,"string":4,"java":9,"integ":3},"maxFreq":10,"totalTerms":130},"loc":13}