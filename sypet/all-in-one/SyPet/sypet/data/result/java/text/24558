{"id":24558,"className":"java.text.DecimalFormat","methodName":"applyLocalizedPattern","signature":"\u003cjava.text.DecimalFormat: void applyLocalizedPattern(java.lang.String)\u003e","javadoc":"/** \n * Apply the given pattern to this Format object.  The pattern is assumed to be in a localized notation. A pattern is a short-hand specification for the various formatting properties. These properties can also be changed individually through the various setter methods. \u003cp\u003e There is no limit to integer digits set by this routine, since that is the typical end-user desire; use setMaximumInteger if you want to set a real value. For negative numbers, use a second pattern, separated by a semicolon \u003cP\u003eExample \u003ccode\u003e\"#,#00.0#\"\u003c/code\u003e -\u003e 1,234.56 \u003cP\u003eThis means a minimum of 2 integer digits, 1 fraction digit, and a maximum of 2 fraction digits. \u003cp\u003eExample: \u003ccode\u003e\"#,#00.0#;(#,#00.0#)\"\u003c/code\u003e for negatives in parentheses. \u003cp\u003eIn negative patterns, the minimum and maximum counts are ignored; these are presumed to be set in the positive pattern.\n * @exception NullPointerException if \u003ccode\u003epattern\u003c/code\u003e is null\n * @exception IllegalArgumentException if the given pattern is invalid.\n */\n","tf":{"freq":{"second":1,"count":1,"desir":1,"parenthes":1,"invalid":1,"given":2,"limit":1,"argument":1,"presum":1,"ignor":1,"except":4,"number":1,"format":2,"digit":4,"appli":2,"separ":1,"maximum":3,"routin":1,"pointer":1,"negat":3,"properti":2,"posit":1,"minimum":2,"typic":1,"use":2,"object":1,"hand":1,"real":1,"setter":1,"mean":1,"various":2,"valu":1,"end":1,"want":1,"individu":1,"fraction":2,"assum":1,"illeg":1,"notat":1,"specif":1,"pattern":9,"semicolon":1,"exampl":2,"method":1,"chang":1,"local":2,"user":1,"integ":3,"also":1},"maxFreq":9,"totalTerms":79},"loc":3}