{"id":25044,"className":"java.text.spi.NumberFormatProvider","methodName":"getIntegerInstance","signature":"\u003cjava.text.spi.NumberFormatProvider: java.text.NumberFormat getIntegerInstance(java.util.Locale)\u003e","javadoc":"/** \n * Returns a new \u003ccode\u003eNumberFormat\u003c/code\u003e instance which formats integer values for the specified locale. The returned number format is configured to round floating point numbers to the nearest integer using half-even rounding (see  {@link java.math.RoundingMode#HALF_EVEN HALF_EVEN}) for formatting, and to parse only the integer part of an input string (see  {@link java.text.NumberFormat#isParseIntegerOnly isParseIntegerOnly}).\n * @param locale the desired locale\n * @exception NullPointerException if \u003ccode\u003elocale\u003c/code\u003e is null\n * @exception IllegalArgumentException if \u003ccode\u003elocale\u003c/code\u003e isn\u0027tone of the locales returned from {@link java.util.spi.LocaleServiceProvider#getAvailableLocales() getAvailableLocales()}.\n * @return a number format for integer values\n * @see java.text.NumberFormat#getIntegerInstance(java.util.Locale)\n */\n","tf":{"freq":{"servic":1,"link":3,"use":1,"half":1,"round":3,"desir":1,"specifi":1,"mode":1,"spi":1,"valu":2,"argument":1,"tone":1,"except":4,"text":2,"avail":2,"number":6,"format":7,"provid":1,"illeg":1,"nearest":1,"instanc":3,"math":1,"point":1,"configur":1,"input":1,"string":1,"pointer":1,"even":1,"java":5,"local":10,"part":1,"integ":8,"pars":3,"util":2},"maxFreq":10,"totalTerms":80},"loc":0}