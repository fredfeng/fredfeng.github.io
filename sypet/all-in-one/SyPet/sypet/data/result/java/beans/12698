{"id":12698,"className":"java.beans.Expression","methodName":"getValue","signature":"\u003cjava.beans.Expression: java.lang.Object getValue()\u003e","javadoc":"/** \n * If the value property of this instance is not already set, this method dynamically finds the method with the specified methodName on this target with these arguments and calls it. The result of the method invocation is first copied into the value property of this expression and then returned as the result of \u003ccode\u003egetValue\u003c/code\u003e. If the value property was already set, either by a call to \u003ccode\u003esetValue\u003c/code\u003e or a previous call to \u003ccode\u003egetValue\u003c/code\u003e then the value property is returned without either looking up or calling the method. \u003cp\u003e The value property of an \u003ccode\u003eExpression\u003c/code\u003e is set to a unique private (non-\u003ccode\u003enull\u003c/code\u003e) value by default and this value is used as an internal indication that the method has not yet been called. A return value of \u003ccode\u003enull\u003c/code\u003e replaces this default value in the same way that any other value would, ensuring that expressions are never evaluated more than once. \u003cp\u003e See the \u003ccode\u003eexcecute\u003c/code\u003e method for details on how methods are chosen using the dynamic types of the target and arguments.\n * @see Statement#execute\n * @see #setValue\n * @return The result of applying this method to these arguments.\n */\n","tf":{"freq":{"call":5,"result":3,"detail":1,"way":1,"use":2,"chosen":1,"type":1,"express":3,"copi":1,"ensur":1,"specifi":1,"uniqu":1,"indic":1,"name":1,"valu":15,"find":1,"dynam":2,"argument":3,"look":1,"previous":1,"evalu":1,"without":1,"invoc":1,"instanc":1,"non":1,"statement":1,"appli":1,"excecut":1,"never":1,"either":2,"replac":1,"intern":1,"target":2,"method":9,"alreadi":2,"properti":5,"execut":1,"first":1,"yet":1},"maxFreq":15,"totalTerms":80},"loc":6}