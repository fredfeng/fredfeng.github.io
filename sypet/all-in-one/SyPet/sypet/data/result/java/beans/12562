{"id":12562,"className":"java.beans.EventSetDescriptor","methodName":"EventSetDescriptor","signature":"\u003cjava.beans.EventSetDescriptor: void EventSetDescriptor(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)\u003e","javadoc":"/** \n * Creates an \u003cTT\u003eEventSetDescriptor\u003c/TT\u003e assuming that you are following the most simple standard design pattern where a named event \u0026quot;fred\u0026quot; is (1) delivered as a call on the single method of interface FredListener, (2) has a single argument of type FredEvent, and (3) where the FredListener may be registered with a call on an addFredListener method of the source component and removed with a call on a removeFredListener method.\n * @param sourceClass  The class firing the event.\n * @param eventSetName  The programmatic name of the event.  E.g. \u0026quot;fred\u0026quot;.Note that this should normally start with a lower-case character.\n * @param listenerType  The target interface that eventswill get delivered to.\n * @param listenerMethodName  The method that will get called when the event getsdelivered to its target listener interface.\n * @exception IntrospectionException if an exception occurs duringintrospection.\n */\n","tf":{"freq":{"call":4,"introspect":1,"lower":1,"programmat":1,"simpl":1,"descriptor":2,"singl":2,"normal":1,"type":2,"add":1,"getsdeliv":1,"fred":7,"event":8,"name":4,"regist":1,"quot":4,"listen":7,"note":1,"duringintrospect":1,"follow":1,"argument":1,"except":3,"may":1,"assum":1,"standard":1,"charact":1,"creat":1,"eventswil":1,"remov":2,"fire":1,"pattern":1,"compon":1,"start":1,"will":1,"target":2,"deliv":2,"method":5,"sourc":2,"design":1,"occur":1},"maxFreq":8,"totalTerms":81},"loc":19}