{"id":12606,"className":"java.beans.VetoableChangeSupport","methodName":"fireVetoableChange","signature":"\u003cjava.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)\u003e","javadoc":"/** \n * Fires a property change event to listeners that have been registered to track updates of all properties or a property with the specified name. \u003cp\u003e Any listener can throw a  {@code PropertyVetoException} to veto the update.If one of the listeners vetoes the update, this method passes a new \"undo\"  {@code PropertyChangeEvent} that reverts to the old valueto all listeners that already confirmed this update and throws the  {@code PropertyVetoException} again.\u003cp\u003e No event is fired if the given event\u0027s old and new values are equal and non-null.\n * @param event  the {@code PropertyChangeEvent} to be fired\n * @throws PropertyVetoException if one of listeners vetoes the property update\n */\n","tf":{"freq":{"old":2,"vetoabl":1,"undo":1,"one":2,"specifi":1,"given":1,"revert":1,"event":6,"name":1,"regist":1,"valu":1,"listen":5,"valueto":1,"except":3,"veto":6,"track":1,"equal":1,"fire":4,"non":1,"pass":1,"updat":5,"method":1,"alreadi":1,"properti":9,"chang":4,"confirm":1},"maxFreq":9,"totalTerms":62},"loc":46}