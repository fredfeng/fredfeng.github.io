{"id":12645,"className":"java.beans.Statement","methodName":"execute","signature":"\u003cjava.beans.Statement: void execute()\u003e","javadoc":"/** \n * The  {@code execute} method finds a method whose name is the sameas the  {@code methodName} property, and invokes the method onthe target. When the target\u0027s class defines many methods with the given name the implementation should choose the most specific method using the algorithm specified in the Java Language Specification (15.11). The dynamic class of the target and arguments are used in place of the compile-time type information and, like the {@link java.lang.reflect.Method} class itself, conversion betweenprimitive values and their associated wrapper classes is handled internally. \u003cp\u003e The following method types are handled as special cases: \u003cul\u003e \u003cli\u003e Static methods may be called by using a class object as the target. \u003cli\u003e The reserved method name \"new\" may be used to call a class\u0027s constructor as if all classes defined static \"new\" methods. Constructor invocations are typically considered  {@code Expression}s rather than  {@code Statement}s as they return a value. \u003cli\u003e The method names \"get\" and \"set\" defined in the  {@link java.util.List}interface may also be applied to array instances, mapping to the static methods of the same name in the  {@code Array} class.\u003c/ul\u003e\n * @throws NullPointerException if the value of the {@code target} or{@code methodName} property is {@code null}\n * @throws NoSuchMethodException if a matching method is not found\n * @throws SecurityException if a security manager exists andit denies the method invocation\n * @throws Exception that is thrown by the invoked method\n * @see java.lang.reflect.Method\n */\n","tf":{"freq":{"languag":1,"betweenprimit":1,"andit":1,"type":2,"specifi":1,"time":1,"given":1,"wrapper":1,"place":1,"deni":1,"dynam":1,"follow":1,"argument":1,"mani":1,"thrown":1,"except":4,"whose":1,"invok":2,"onth":1,"like":1,"invoc":2,"instanc":1,"statement":1,"inform":1,"appli":1,"pointer":1,"match":1,"properti":2,"execut":2,"util":1,"array":2,"compil":1,"defin":3,"call":2,"link":2,"convers":1,"typic":1,"use":4,"object":1,"express":1,"lang":2,"consid":1,"algorithm":1,"associ":1,"reserv":1,"name":7,"map":1,"rather":1,"choos":1,"valu":3,"exist":1,"find":1,"constructor":2,"may":3,"manag":1,"list":1,"handl":2,"samea":1,"specif":2,"secur":2,"target":5,"intern":1,"java":4,"method":19,"special":1,"also":1,"reflect":2,"found":1},"maxFreq":19,"totalTerms":125},"loc":3}