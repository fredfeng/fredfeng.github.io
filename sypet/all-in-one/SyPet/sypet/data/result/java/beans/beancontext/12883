{"id":12883,"className":"java.beans.beancontext.BeanContextServices","methodName":"revokeService","signature":"\u003cjava.beans.beancontext.BeanContextServices: void revokeService(java.lang.Class,java.beans.beancontext.BeanContextServiceProvider,boolean)\u003e","javadoc":"/** \n * BeanContextServiceProviders wishing to remove a currently registered service from this context may do so via invocation of this method. Upon revocation of the service, the \u003ccode\u003eBeanContextServices\u003c/code\u003e fires a \u003ccode\u003eBeanContextServiceRevokedEvent\u003c/code\u003e to its list of currently registered \u003ccode\u003eBeanContextServiceRevokedListeners\u003c/code\u003e and \u003ccode\u003eBeanContextServicesListeners\u003c/code\u003e.\n * @param serviceClass the service to revoke from this BeanContextServices\n * @param serviceProvider the BeanContextServiceProvider associated withthis particular service that is being revoked\n * @param revokeCurrentServicesNow a value of \u003ccode\u003etrue\u003c/code\u003eindicates an exceptional circumstance where the \u003ccode\u003eBeanContextServiceProvider\u003c/code\u003e or \u003ccode\u003eBeanContextServices\u003c/code\u003e wishes to immediately terminate service to all currently outstanding references to the specified service.\n */\n","tf":{"freq":{"via":1,"revoc":1,"wish":2,"servic":19,"particular":1,"revok":6,"specifi":1,"indic":1,"refer":1,"associ":1,"event":1,"current":4,"regist":2,"immedi":1,"valu":1,"listen":2,"except":1,"may":1,"outstand":1,"bean":9,"remov":1,"true":1,"circumst":1,"list":1,"provid":4,"invoc":1,"fire":1,"termin":1,"now":1,"context":10,"method":1,"withthi":1,"upon":1},"maxFreq":19,"totalTerms":82},"loc":0}