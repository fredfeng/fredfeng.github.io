{"id":12620,"className":"java.beans.EventHandler","methodName":"create","signature":"\u003cjava.beans.EventHandler: T create(java.lang.Class,java.lang.Object,java.lang.String,java.lang.String)\u003e","javadoc":"/** \n * / Creates an implementation of \u003ccode\u003elistenerInterface\u003c/code\u003e in which \u003cem\u003eall\u003c/em\u003e of the methods pass the value of the event expression, \u003ccode\u003eeventPropertyName\u003c/code\u003e, to the final method in the statement, \u003ccode\u003eaction\u003c/code\u003e, which is applied to the \u003ccode\u003etarget\u003c/code\u003e. This method is implemented by calling the more general, implementation of the \u003ccode\u003ecreate\u003c/code\u003e method with the \u003ccode\u003elistenerMethodName\u003c/code\u003e taking the value \u003ccode\u003enull\u003c/code\u003e. Refer to {@link java.beans.EventHandler#create(Class,Object,String,String) the general version of create} for a complete description ofthe \u003ccode\u003eaction\u003c/code\u003e and \u003ccode\u003eeventPropertyName\u003c/code\u003e parameters. \u003cp\u003e To create an \u003ccode\u003eActionListener\u003c/code\u003e that sets the the text of a \u003ccode\u003eJLabel\u003c/code\u003e to the text value of the \u003ccode\u003eJTextField\u003c/code\u003e source of the incoming event, you can use the following code: \u003cblockquote\u003e \u003cpre\u003e EventHandler.create(ActionListener.class, label, \"text\", \"source.text\"); \u003c/pre\u003e \u003c/blockquote\u003e This is equivalent to the following code: \u003cblockquote\u003e \u003cpre\u003e //Equivalent code using an inner class instead of EventHandler. new ActionListener() { public void actionPerformed(ActionEvent event) { label.setText(((JTextField)(event.getSource())).getText()); } }; \u003c/pre\u003e \u003c/blockquote\u003e\n * @param listenerInterface the listener interface to create a proxy for\n * @param target the object that will perform the action\n * @param action the name of a (possibly qualified) property or method onthe target\n * @param eventPropertyName the (possibly qualified) name of a readable property of the incoming event\n * @return an object that implements \u003ccode\u003elistenerInterface\u003c/code\u003e\n * @throws NullPointerException if \u003ccode\u003elistenerInterface\u003c/code\u003e is null\n * @throws NullPointerException if \u003ccode\u003etarget\u003c/code\u003e is null\n * @throws NullPointerException if \u003ccode\u003eaction\u003c/code\u003e is null\n * @see #create(Class,Object,String,String,String)\n */\n","tf":{"freq":{"inner":1,"possibl":2,"perform":2,"refer":1,"equival":2,"event":12,"blockquot":4,"action":10,"follow":2,"except":3,"text":6,"creat":9,"descript":1,"onth":1,"label":2,"statement":1,"appli":1,"will":1,"pointer":3,"sourc":3,"properti":5,"incom":2,"call":1,"readabl":1,"link":1,"jlabel":1,"use":2,"object":4,"express":1,"version":1,"name":6,"ofth":1,"valu":3,"listen":9,"complet":1,"bean":1,"proxi":1,"paramet":1,"general":2,"pass":1,"field":2,"jtext":2,"take":1,"pre":4,"string":5,"target":4,"instead":1,"java":1,"method":6,"qualifi":2,"handler":3},"maxFreq":12,"totalTerms":143},"loc":3}